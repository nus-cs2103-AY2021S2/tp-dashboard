[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W15-1/tp/actions)","lastModifiedDate":"2021-02-26"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W15-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W15-1/tp)","lastModifiedDate":"2021-02-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"![Ui](docs/images/Ui2.png)","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"### RemindMe","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"RemindMe is a desktop app designed to help School of Computing students better manage their workload","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"and take control of their work life. ","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"For the detailed documentation of this project, check out our **[product website](https://nus-cs2103-ay2021s2.github.io/tp/)**.","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"### Value Proposition","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"* Adding of modules, and assignments and exams that belong to each module.","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"* Adding of general events to keep track of non-school related tasks.","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"* Adding of friends to keep track of their birthdays.","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"* Provides calendar view to help users visualise your schedule.","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"* Ability to plan your schedules with ease.","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"* Reminder pop-up box to remind you of upcoming deadlines and tasks within the next 3 days.","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"### Acknowledgement","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5).","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"markuz5116":1,"Hzxin":6,"jellymias":11,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"run {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"    archiveName \u003d \u0027RemindMe.jar\u0027","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"markuz5116":4,"Hzxin":4,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"### Michael Ong","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"\u003cimg src\u003d\"images/maikongeh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"[[github](https://github.com/maikongeh)]","lastModifiedDate":"2021-02-26"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"[[portfolio](team/maikongeh.md)]","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"* Responsibility: Testing","lastModifiedDate":"2021-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"### Huang Zhenxin","lastModifiedDate":"2021-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"\u003cimg src\u003d\"images/hzxin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"[[github](http://github.com/Hzxin)]","lastModifiedDate":"2021-02-22"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"[[portfolio](team/hzxin.md)]","lastModifiedDate":"2021-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"* Role: Integration","lastModifiedDate":"2021-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"### Jeremias Shae","lastModifiedDate":"2021-02-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"\u003cimg src\u003d\"images/jellymias.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"[[github](http://github.com/jellymias)]","lastModifiedDate":"2021-02-25"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"[[portfolio](team/jellymias.md)]","lastModifiedDate":"2021-02-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"* Responsibilities: Documentation, Testing","lastModifiedDate":"2021-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"### Chiang Kee Woon Jonathan","lastModifiedDate":"2021-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"\u003cimg src\u003d\"images/banchiang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"[[github](http://github.com/banchiang)]","lastModifiedDate":"2021-02-26"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"[[portfolio](team/banchiang.md)]","lastModifiedDate":"2021-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"* Responsibilities: Code Quality checking","lastModifiedDate":"2021-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"### Marcus Ong","lastModifiedDate":"2021-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"\u003cimg src\u003d\"images/markuz5116.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"[[github](http://github.com/markuz5116)]","lastModifiedDate":"2021-02-24"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"[[portfolio](team/markuz5116.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"* Role: Team Lead","lastModifiedDate":"2021-02-24"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"* Responsibilities: Deliverables and Deadlines","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"markuz5116":6,"Hzxin":5,"jellymias":5,"banchiang":5,"maikongeh":6,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"RemindMe Developer Guide","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"RemindMe is a reminder application that features a combination of a list and a calendar. RemindMe makes use of both ","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"Graphical User Interface(GUI) and Command Line Input(CLI). ","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"The target users for RemindMe are National University of Singapore(NUS) School of Computing (SOC) students. SOC students","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"can enjoy the benefits of CLI and GUI, which is not common in reminder applications in the current market. Users can use","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"RemindMe to store their modules, assignments, exams, contacts and general events. RemindMe aims to reorganise students\u0027 ","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"hectic lives and solve specific needs of SOC students.","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"The main audience for the RemindMe\u0027s developer guide are future developers who wanted to further understand RemindMe\u0027s ","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"inner workings. The developer guide explains the overall structure of RemindMe and the general workflow of RemindMe.","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"The developer guide also explains how specific implementations work, specifically add, find, delete, edit, and calendar.","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"The developer guide describes the team\u0027s motive for creating RemindMe, and the user stories used when creating RemindMe.","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"## Table of Contents","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"* **[1. Setting up, getting started](#1-setting-up-getting-started)**","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"* **[2. Design](#2-design)**","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    * **[2.1 Architecture](#2.1-architecture)**","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    * **[2.2 UI component](#2.2-UI-component)**","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    * **[2.3 Logic component](#2.3-Logic-component)**","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"    * **[2.4 Model component](#2.4-Model-component)**","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"    * **[2.5 Storage component](#2.5-Storage-component)**","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"    * **[2.6 Common classes](#2.6-Common-classes)**","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"* **[3. Implementation](#3-implementation)**","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    * **[3.1 Add feature](#31-add-feature)**","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    * **[3.2 Find feature](#32-find-feature)**","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    * **[3.3 Delete assignment](#33-delete-feature)**","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    * **[3.4 Edit assignment](#34-edit-feature)**","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    * **[3.5 Calendar feature](#35-calendar-feature)**","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"* **[4. Documentation, logging, testing and dev-ops](#4-documentation-logging-testing-configuration-dev-ops)**","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"* **[5. Effort](#5-effort)**","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"* **[Appendix-requirements](#appendix-requirements)**","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"    * **[Product scope](#Product-scope)**","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"    * **[User stories](#User-stories)**","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"    * **[Use cases](#Use cases)**","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"    * **[Non Functional Requirements](#Non-functional-Requirements)**","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"    * **[Glossary](#Glossary)**","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"* **[Appendix-instructions-for-manual-testing](#appendix-instructions-for-manual-testing)**","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"    * **[Launch](#Launch)**","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"    * **[Testing commands](#Testing-commands)**","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"    * **[Saving data](#saving-data)**","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"## **1. Setting up, getting started**","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"## **2. Design**","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"### 2.1 Architecture","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"![ArchitectureDiagram](images/ArchitectureDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-CS2103T-W15-1/tp/tree/master/docs/diagrams/) folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":" Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103T-W15-1/tp/blob/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":" and [`MainApp`](https://github.com/AY2021S2-CS2103T-W15-1/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"[**`Commons`**](#26-common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"* [**`UI`**](#22-ui-component): The UI of the App.","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"* [**`Logic`**](#23-logic-component): The command executor.","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"* [**`Model`**](#24-model-component): Holds the data of the App in memory.","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"* [**`Storage`**](#25-storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class, which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"![Sequence diagram of the logic Component](images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"### 2.2 UI component","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-W15-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"Hzxin"},"content":"The `panels` and `cards` packages contain respective list panels and cards for `Module`, `Person` and `GeneralEvent`. While","lastModifiedDate":"2021-04-08"},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":"the `calendar` package contains `CalendarBox`, `UpcomingSchedules` and other relevant UI classes that help build the `CalendarWindow`. ","lastModifiedDate":"2021-04-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"Hzxin"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-CS2103T-W15-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-W15-1/tp/blob/master/src/main/resources/view/MainWindow2.fxml)","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"Hzxin"},"content":"### 2.3 Logic component","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"Hzxin"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-W15-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Hzxin"},"content":"1. `Logic` uses the `RemindMeParser` class to parse the user command.","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"clear m/\")` API call.","lastModifiedDate":"2021-04-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"markuz5116"},"content":"![Interactions Inside the Logic Component for the `clear m/` Command](images/ClearFeatureSequenceDiagram.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"Hzxin"},"content":"### 2.4 Model component","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"Hzxin"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-CS2103T-W15-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Hzxin"},"content":"* stores the RemindMe data.","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"Hzxin"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` `ObservableList\u003cModule\u003e` or `ObservableList\u003cGeneralEvent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The details of `Module`, `Assignment`, `Exam`, `Person` and `GeneralEvent` are omitted for greater readability of the diagram.","lastModifiedDate":"2021-04-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Hzxin"},"content":"### 2.5 Storage component","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"Hzxin"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-W15-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"Hzxin"},"content":"* can save the RemindMe data in json format and read it back.","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"Hzxin"},"content":"* CalendarStorage is accessed by UI component which is no indicated in the diagram.","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"Hzxin"},"content":"### 2.6 Common classes","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"Hzxin"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"Hzxin"},"content":"## **3. Implementation**","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"markuz5116"},"content":"This section describes some noteworthy details on how certain features are implemented. \u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":181,"author":{"gitId":"markuz5116"},"content":"The features are:","lastModifiedDate":"2021-04-10"},{"lineNumber":182,"author":{"gitId":"markuz5116"},"content":"* **[Add Feature](#31-add-feature)**","lastModifiedDate":"2021-04-10"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"* **[Find Feature](#32-find-feature)**","lastModifiedDate":"2021-04-10"},{"lineNumber":184,"author":{"gitId":"markuz5116"},"content":"* **[Delete Feature](#33-delete-feature)**","lastModifiedDate":"2021-04-10"},{"lineNumber":185,"author":{"gitId":"markuz5116"},"content":"* **[Edit Feature](#34-edit-feature)**","lastModifiedDate":"2021-04-10"},{"lineNumber":186,"author":{"gitId":"markuz5116"},"content":"* **[Calendar Feature](#35-calendar-feature)**","lastModifiedDate":"2021-04-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"### 3.1 Add Feature","lastModifiedDate":"2021-04-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"Hzxin"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"markuz5116"},"content":"The proposed add implementation is facilitated by `ModelManager`, which extends `Model`. `ModelManager` contains FilteredList of each entity:","lastModifiedDate":"2021-04-10"},{"lineNumber":193,"author":{"gitId":"jellymias"},"content":"* Persons","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"* Modules","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"jellymias"},"content":"* General Events","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"jellymias"},"content":"Given below is an example usage scenario and how the find mechanism behaves at each step. Input: `add m/CS2103T`","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"Hzxin"},"content":"**Step 1:** Your input is parsed into `RemindMeParser` using the `parseCommand` method.","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":201,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"Hzxin"},"content":"**Step 2:** Based on the command word of your input (i.e., `add`), an AddCommandParser will be used.","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"Hzxin"},"content":"**Step 3:** In `AddCommandParser#parseCommand`, your input will be tokenized using `ArgumentTokenizer`. `ArgumentTokenizer` uses your input, then searches for the prefixes and returns the `ArgumentMultimap`.","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":211,"author":{"gitId":"Hzxin"},"content":"**Step 4**: Using the `ArgumentMultimap` checks the prefixes in your input and returns the respective `AddCommandParser`.","lastModifiedDate":"2021-03-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":213,"author":{"gitId":"Hzxin"},"content":"    Module: `m/`: `AddModuleCommandPaser`","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"Hzxin"},"content":"    Person: `n/`: `AddPersonCommandParser`","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"Hzxin"},"content":"    General Event: `g/`: `AddGeneralEventParser`  ","lastModifiedDate":"2021-03-25"},{"lineNumber":216,"author":{"gitId":"jellymias"},"content":"    if it is an unknown prefix, `parseCommand` will throw a ParseException and returns a `AddMessageUsage`. Since the input is `m/`, `AddModuleCommandPaser` will be returned.","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"Hzxin"},"content":"**Step 5**: In `AddModuleCommandPaser`, `AddModuleCommandPaser#parse` is called. Again `ArgumentMultimap` is created using `ArgumentTokenizer` but only with `Module` prefix: `m/`. The class diagram shows the Parser class diagram when passing your input into the appropriate `AddModuleCommand`.","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"jellymias"},"content":"![AddCommandParserClassDiagram](images/AddCommandParserClassDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"Hzxin"},"content":"**Step 6:** The `parse` method does a few checks:","lastModifiedDate":"2021-03-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":229,"author":{"gitId":"jellymias"},"content":"* If there isn\u0027t the `PREFIX`: `m/` present, or the preamble of the `PREFIX` is not empty, or your search input after the `PREFIX` is whitespaces, then `parse` method will throw `ParseException` and returns a `AddMessageUsage` for `Module`.","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"jellymias"},"content":"* Else your inputs is used to create a `title` which is then used to create a `module`.","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":232,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":234,"author":{"gitId":"Hzxin"},"content":"**Step 7:** `AddModuleCommand` is executed:","lastModifiedDate":"2021-03-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":236,"author":{"gitId":"jellymias"},"content":"* Using the `module` as an input, the `Model#hasModule` method checks if the given `module` is a duplicate or not. If it is, it will throw `CommandException` and return a `MESSAGE_DUPLICATE_MODULE`.","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"jellymias"},"content":"* Else, using the `module` as an input, the `Model#addModule` method is called, and adds the `module` to the `UniqueModuleList` in `RemindMe`.","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":241,"author":{"gitId":"Hzxin"},"content":"**Step 8:** The `CommandResult` is logged in the `logger` and using `resultDisplay#setFeedacktoUser`, returning `resultDisplay`. Using `resultDisplay#setText` shows the `CommandResult` in the `GUI`.","lastModifiedDate":"2021-03-25"},{"lineNumber":242,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":243,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":245,"author":{"gitId":"jellymias"},"content":"The following sequence diagram shows how the find operation works:","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"jellymias"},"content":"![AddSequenceDiagram](images/AddSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"markuz5116"},"content":"### 3.2 Find Feature","lastModifiedDate":"2021-04-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":252,"author":{"gitId":"markuz5116"},"content":"This section shows how find feature is implemented in RemindMe. It will describe the logic flow of RemindMe step by step. ","lastModifiedDate":"2021-04-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":254,"author":{"gitId":"Hzxin"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":256,"author":{"gitId":"markuz5116"},"content":"The proposed find implementation is facilitated by `ModelManager`, which extends `Model`. `ModelManager` contains FilteredList of each entity:","lastModifiedDate":"2021-04-10"},{"lineNumber":257,"author":{"gitId":"markuz5116"},"content":"* Persons","lastModifiedDate":"2021-03-23"},{"lineNumber":258,"author":{"gitId":"markuz5116"},"content":"* Modules","lastModifiedDate":"2021-03-23"},{"lineNumber":259,"author":{"gitId":"markuz5116"},"content":"* General Events","lastModifiedDate":"2021-03-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":261,"author":{"gitId":"markuz5116"},"content":"Given below is an example usage scenario and how the find mechanism behaves at each step. Input: `find m/CS2101`","lastModifiedDate":"2021-03-23"},{"lineNumber":262,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":263,"author":{"gitId":"Hzxin"},"content":"**Step 1:** Your input is parsed into `RemindMeParser` using the `parseCommand` method.","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":265,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":266,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":267,"author":{"gitId":"Hzxin"},"content":"**Step 2:** Based on the command word of your input (i.e., `find`), a FindCommandParser will be used.","lastModifiedDate":"2021-03-25"},{"lineNumber":268,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":269,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":270,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":271,"author":{"gitId":"markuz5116"},"content":"**Step 3:** In `FindCommandParser#parseCommand`, your input will be tokenized using `ArgumentTokenizer`. ","lastModifiedDate":"2021-04-09"},{"lineNumber":272,"author":{"gitId":"markuz5116"},"content":"`ArgumentTokenizer` uses your input, then searches for the prefixes and returns the `ArgumentMultimap`.","lastModifiedDate":"2021-04-09"},{"lineNumber":273,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":274,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":275,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":276,"author":{"gitId":"Hzxin"},"content":"**Step 4:** Using the `ArgumentMultimap` checks the prefixes in your input and returns the respective `FindCommandParser`.","lastModifiedDate":"2021-03-25"},{"lineNumber":277,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":278,"author":{"gitId":"Hzxin"},"content":"    Module: `m/`: `FindModuleCommandPaser`","lastModifiedDate":"2021-03-25"},{"lineNumber":279,"author":{"gitId":"Hzxin"},"content":"    Person: `n/`: `FindPersonCommandParser`","lastModifiedDate":"2021-03-25"},{"lineNumber":280,"author":{"gitId":"Hzxin"},"content":"    General Event: `g/`: `FindGeneralEventParser`  ","lastModifiedDate":"2021-03-25"},{"lineNumber":281,"author":{"gitId":"markuz5116"},"content":"    if it is an unknown prefix, `parseCommand` will throw a ParseException and returns a `FindMessageUsage`. ","lastModifiedDate":"2021-04-09"},{"lineNumber":282,"author":{"gitId":"markuz5116"},"content":"    Since the input is `m/`, `FindModuleCommandPaser` will be returned.","lastModifiedDate":"2021-04-09"},{"lineNumber":283,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":284,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":285,"author":{"gitId":"markuz5116"},"content":"**Step 5:** In `FindModuleCommandPaser`, `FindModuleCommandPaser#parse` is called. Again `ArgumentMultimap` is created ","lastModifiedDate":"2021-04-09"},{"lineNumber":286,"author":{"gitId":"markuz5116"},"content":"using `ArgumentTokenizer` but only with `Module` prefix: `m/`. The class diagram shows the Parser class diagram when ","lastModifiedDate":"2021-04-09"},{"lineNumber":287,"author":{"gitId":"markuz5116"},"content":"passing your input into the appropriate `FindModuleCommand`.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":288,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":289,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":290,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":291,"author":{"gitId":"Hzxin"},"content":"**Step 6:** The `parse` method does a few checks:","lastModifiedDate":"2021-03-25"},{"lineNumber":292,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":293,"author":{"gitId":"markuz5116"},"content":"* If there isn\u0027t the `PREFIX`: ","lastModifiedDate":"2021-04-09"},{"lineNumber":294,"author":{"gitId":"markuz5116"},"content":"    * `m/` present, or ","lastModifiedDate":"2021-04-09"},{"lineNumber":295,"author":{"gitId":"markuz5116"},"content":"    * the preamble of the `PREFIX` is not empty, or ","lastModifiedDate":"2021-04-09"},{"lineNumber":296,"author":{"gitId":"markuz5116"},"content":"    * your search input after the `PREFIX` is whitespaces, ","lastModifiedDate":"2021-04-09"},{"lineNumber":297,"author":{"gitId":"markuz5116"},"content":"  * then `parse` method will throw `ParseException` and returns a `FindMessageUsage` for `Module`.","lastModifiedDate":"2021-04-09"},{"lineNumber":298,"author":{"gitId":"markuz5116"},"content":"* Else your inputs is split into individual keywords, and contained as a `List of keywords`.","lastModifiedDate":"2021-03-23"},{"lineNumber":299,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":300,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":301,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":302,"author":{"gitId":"Hzxin"},"content":"**Step 7:** The keywords will be stored in `TitleContainsKeywordsPredicate` as a `predicate`, then stored in `FindModuleCommand`.","lastModifiedDate":"2021-03-25"},{"lineNumber":303,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":304,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":305,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":306,"author":{"gitId":"Hzxin"},"content":"**Step 8:** `FindModuleCommand` is executed:","lastModifiedDate":"2021-03-25"},{"lineNumber":307,"author":{"gitId":"markuz5116"},"content":"* Using the `predicate`, the `Model#updateFilteredModuleList` is called with `predicate` as input.","lastModifiedDate":"2021-03-23"},{"lineNumber":308,"author":{"gitId":"markuz5116"},"content":"* Using the `FilteredList\u003cModule\u003e#setPredicate` returns the filtered list of modules with titles matching to any of the ","lastModifiedDate":"2021-04-09"},{"lineNumber":309,"author":{"gitId":"markuz5116"},"content":"  `keywords` as a `CommandResult`.","lastModifiedDate":"2021-04-09"},{"lineNumber":310,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":311,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":312,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":313,"author":{"gitId":"markuz5116"},"content":"**Step 9:** The `CommandResult` is logged in the `logger` and using `resultDisplay#setFeedacktoUser`, returning ","lastModifiedDate":"2021-04-09"},{"lineNumber":314,"author":{"gitId":"markuz5116"},"content":"`resultDisplay`. Using `resultDisplay#setText` shows the `CommandResult` in the `GUI`.","lastModifiedDate":"2021-04-09"},{"lineNumber":315,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":316,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":317,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":318,"author":{"gitId":"markuz5116"},"content":"The following sequence diagram shows how the find operation works:","lastModifiedDate":"2021-03-23"},{"lineNumber":319,"author":{"gitId":"markuz5116"},"content":"![FindSequenceDiagram](images/findcommand/FindSequenceDiagram.png)\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":320,"author":{"gitId":"markuz5116"},"content":"*[Find Sequence Diagram for `find m/CS2101`]*","lastModifiedDate":"2021-04-09"},{"lineNumber":321,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":322,"author":{"gitId":"markuz5116"},"content":"The following activity diagram summarizes what happens when a user executes a `find m/CS2101` command:\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":323,"author":{"gitId":"markuz5116"},"content":"![FindActivityDiagram](images/findcommand/FindActivityDiagram.png)\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":324,"author":{"gitId":"markuz5116"},"content":"*[Find Activity Diagram for `find m/CS2101`]*","lastModifiedDate":"2021-04-09"},{"lineNumber":325,"author":{"gitId":"markuz5116"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":326,"author":{"gitId":"markuz5116"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"markuz5116"},"content":"### 3.3 Delete Feature","lastModifiedDate":"2021-04-10"},{"lineNumber":329,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":330,"author":{"gitId":"Hzxin"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":331,"author":{"gitId":"maikongeh"},"content":"RemindMe is able to delete an existing `Assignment` in an existing `Module`","lastModifiedDate":"2021-03-24"},{"lineNumber":332,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":333,"author":{"gitId":"maikongeh"},"content":"The diagram below shows the relationships between `DeleteAssignmentCommand` and `DeleteAssignmentCommandParser` under ","lastModifiedDate":"2021-03-24"},{"lineNumber":334,"author":{"gitId":"maikongeh"},"content":"the `Logic` component and the relationship between `Module` and `Assignment` under the `Model` component.","lastModifiedDate":"2021-03-24"},{"lineNumber":335,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":337,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":338,"author":{"gitId":"maikongeh"},"content":"The following example usage scenario describes how the delete mechanism behaves at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":339,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":340,"author":{"gitId":"maikongeh"},"content":"    Assuming RemindMe has a Module named CS2103. This Module contains a AssignmentList that stores","lastModifiedDate":"2021-03-24"},{"lineNumber":341,"author":{"gitId":"maikongeh"},"content":"    a list of Assignmnets:","lastModifiedDate":"2021-03-24"},{"lineNumber":342,"author":{"gitId":"maikongeh"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":343,"author":{"gitId":"maikongeh"},"content":"    [D] Assigment1 due on  01/01/2021 2359","lastModifiedDate":"2021-03-24"},{"lineNumber":344,"author":{"gitId":"maikongeh"},"content":"    [X] Assignment2 due on 05/05/2022 2359","lastModifiedDate":"2021-03-24"},{"lineNumber":345,"author":{"gitId":"maikongeh"},"content":"    [D] Assignment3 due on 25/03/1021 2359","lastModifiedDate":"2021-03-24"},{"lineNumber":346,"author":{"gitId":"maikongeh"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":347,"author":{"gitId":"Hzxin"},"content":"**Step 1:** The user launches the RemindMe application, `LogicManager` and `RemindMeParser` will be initialized.","lastModifiedDate":"2021-03-25"},{"lineNumber":348,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":349,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":350,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":351,"author":{"gitId":"Hzxin"},"content":"**Step 2:** The user executes `delete m/CS2103 a/3` to delete the assignment at `Index` 3 from the `AssignmentList` of","lastModifiedDate":"2021-03-25"},{"lineNumber":352,"author":{"gitId":"maikongeh"},"content":"the `Module` CS2103. This invokes the method `LogicManager#execute(String)` which then invokes the ","lastModifiedDate":"2021-03-24"},{"lineNumber":353,"author":{"gitId":"maikongeh"},"content":"`RemindMeParser#parseCommand(String)` method.","lastModifiedDate":"2021-03-24"},{"lineNumber":354,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":355,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":356,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":357,"author":{"gitId":"Hzxin"},"content":"**Step 3:** RemindMeParser will parse the command word `delete` and will create a DeleteCommandParser. The ","lastModifiedDate":"2021-03-25"},{"lineNumber":358,"author":{"gitId":"maikongeh"},"content":"DeleteCommandParser will tokenize the prefixes and will choose to create a deleteAssignmentCommandParser to parse","lastModifiedDate":"2021-03-24"},{"lineNumber":359,"author":{"gitId":"maikongeh"},"content":"the `Title` CS2103 and `Index` 3.","lastModifiedDate":"2021-03-24"},{"lineNumber":360,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":361,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":362,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":363,"author":{"gitId":"Hzxin"},"content":"**Step 4:** The `DeleteAssignmentCommandParser` will create a new `DeleteAssignmentCommand` with the `Title` CS203 and ","lastModifiedDate":"2021-03-25"},{"lineNumber":364,"author":{"gitId":"maikongeh"},"content":"`Index` 3 and return it back to the LogicManager.","lastModifiedDate":"2021-03-24"},{"lineNumber":365,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":366,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":367,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":368,"author":{"gitId":"Hzxin"},"content":"**Step 5:** The `DeleteAssignmentCommand` verifies whether the target `Module` exist in the `FilteredModuleList` ","lastModifiedDate":"2021-03-25"},{"lineNumber":369,"author":{"gitId":"maikongeh"},"content":"and whether an assignment exists at `Index` 3. If either fails, `DeleteAssignmentCommand` will throw a CommandException.","lastModifiedDate":"2021-03-24"},{"lineNumber":370,"author":{"gitId":"maikongeh"},"content":"If not, it will invoke the method `Module#deleteAssignment(Index)` which removes the assignment at `Index` 3 from the ","lastModifiedDate":"2021-03-24"},{"lineNumber":371,"author":{"gitId":"maikongeh"},"content":"`AssignmentList`","lastModifiedDate":"2021-03-24"},{"lineNumber":372,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":373,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":374,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":375,"author":{"gitId":"Hzxin"},"content":"**Step 6:** A `CommandResult` will be created with a successful message if the user inputs are valid","lastModifiedDate":"2021-03-25"},{"lineNumber":376,"author":{"gitId":"maikongeh"},"content":"and returned to `LogicManager`.","lastModifiedDate":"2021-03-24"},{"lineNumber":377,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":378,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":379,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":380,"author":{"gitId":"Hzxin"},"content":"**Step 7:** Lastly, `LogicManager` saves the updated RemindMe.","lastModifiedDate":"2021-03-25"},{"lineNumber":381,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":382,"author":{"gitId":"maikongeh"},"content":"The above process is shown in the following sequence diagram:","lastModifiedDate":"2021-03-24"},{"lineNumber":383,"author":{"gitId":"Hzxin"},"content":"![DeleteFeatureSequenceDiagram](images/DeleteFeatureSequenceDiagram.png)  ","lastModifiedDate":"2021-03-25"},{"lineNumber":384,"author":{"gitId":"Hzxin"},"content":"*[Delete Sequence Diagram for `delete m/CS2103 a/3`]*","lastModifiedDate":"2021-04-10"},{"lineNumber":385,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":386,"author":{"gitId":"maikongeh"},"content":"The following activity diagram summarises the general workflow for the Delete Command:","lastModifiedDate":"2021-03-24"},{"lineNumber":387,"author":{"gitId":"Hzxin"},"content":"![DeleteFeatureActivityDiagram](images/DeleteFeatureActivityDiagram.png) ","lastModifiedDate":"2021-03-25"},{"lineNumber":388,"author":{"gitId":"Hzxin"},"content":"*[Delete Activity Diagram for `delete m/CS2103 a/3`]* ","lastModifiedDate":"2021-04-10"},{"lineNumber":389,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":390,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":391,"author":{"gitId":"markuz5116"},"content":"### 3.4 Edit Feature","lastModifiedDate":"2021-04-10"},{"lineNumber":392,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":393,"author":{"gitId":"Hzxin"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":394,"author":{"gitId":"Hzxin"},"content":"RemindMe is capable of editing an existing `assignment`. ","lastModifiedDate":"2021-03-23"},{"lineNumber":395,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":396,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":397,"author":{"gitId":"Hzxin"},"content":"Below is a class diagram to show the relationship between `EditAssignmentCommand and EditAssignmentCommandParser` under ","lastModifiedDate":"2021-03-23"},{"lineNumber":398,"author":{"gitId":"Hzxin"},"content":"the `Logic` component and the relationship between `Module` and `Assignment` under the `Model` component.","lastModifiedDate":"2021-03-23"},{"lineNumber":399,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":400,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":401,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":402,"author":{"gitId":"Hzxin"},"content":"![EditFeatureClassDiagram](images/EditFeatureClassDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":403,"author":{"gitId":"Hzxin"},"content":"*[Edit Feature Class Diagram]* ","lastModifiedDate":"2021-04-10"},{"lineNumber":404,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":405,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":406,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":407,"author":{"gitId":"Hzxin"},"content":"Given below is an example usage scenario and how the edit mechanism behaves at each step.","lastModifiedDate":"2021-03-23"},{"lineNumber":408,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":409,"author":{"gitId":"Hzxin"},"content":"     Assuming RemindMe already has a Module named CS2103 and an Assignment Tut1 with time 01/01/2021 2359 stored.","lastModifiedDate":"2021-03-23"},{"lineNumber":410,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":411,"author":{"gitId":"Hzxin"},"content":"**Step 1:** The user launches the RemindMe application, `LogicManager` and `RemindMeParser` will be initialized.","lastModifiedDate":"2021-03-25"},{"lineNumber":412,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":413,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":414,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":415,"author":{"gitId":"Hzxin"},"content":"**Step 2:** The user executes `edit m/CS2103 a/1 d/Tut2` to edit the description of the first assignment","lastModifiedDate":"2021-03-25"},{"lineNumber":416,"author":{"gitId":"Hzxin"},"content":"in the CS2103 module. This invokes the method `LogicManager#execute(String)` which then invokes the","lastModifiedDate":"2021-03-23"},{"lineNumber":417,"author":{"gitId":"Hzxin"},"content":" `RemindedParser#parseCommand(String)` method.","lastModifiedDate":"2021-03-23"},{"lineNumber":418,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":419,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":420,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":421,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":422,"author":{"gitId":"Hzxin"},"content":"**Step 3:** RemindMeParser will then create `EditCommandParser` (omitted in the sequence diagram)","lastModifiedDate":"2021-04-09"},{"lineNumber":423,"author":{"gitId":"Hzxin"},"content":"which detects the edit conditions and calls `EditAssignmentCommandParser` ","lastModifiedDate":"2021-03-23"},{"lineNumber":424,"author":{"gitId":"Hzxin"},"content":"to parse inputs according to the format specified.","lastModifiedDate":"2021-03-23"},{"lineNumber":425,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":426,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":427,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":428,"author":{"gitId":"Hzxin"},"content":"**Step 4:** The `EditAssignmentCommandParser` will create a new `EditAssignmentCommand` ","lastModifiedDate":"2021-03-25"},{"lineNumber":429,"author":{"gitId":"Hzxin"},"content":"with the given module `CS2103` , the given index `1`, the description `Tut2` and a null ","lastModifiedDate":"2021-03-23"},{"lineNumber":430,"author":{"gitId":"Hzxin"},"content":"date and return it back to `LogicManager`.","lastModifiedDate":"2021-03-23"},{"lineNumber":431,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":432,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":433,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":434,"author":{"gitId":"Hzxin"},"content":"**Step 5:** `LogicManager` calls the `EditAssignmentCommand#execute(Model)` method ","lastModifiedDate":"2021-03-25"},{"lineNumber":435,"author":{"gitId":"maikongeh"},"content":"which then verifies whether the target module and assignment exists and whether","lastModifiedDate":"2021-03-24"},{"lineNumber":436,"author":{"gitId":"markuz5116"},"content":" the edited content is valid, e.g. same content.","lastModifiedDate":"2021-04-10"},{"lineNumber":437,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":438,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":439,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":440,"author":{"gitId":"Hzxin"},"content":"**step 6:** The `Model` calls `RemindMe#editAssignment(Module, index, Description)` method which retrieves","lastModifiedDate":"2021-03-25"},{"lineNumber":441,"author":{"gitId":"maikongeh"},"content":"the module to edit from the `UniqueModuleList` ,retrieves and update the assignment and place the","lastModifiedDate":"2021-03-24"},{"lineNumber":442,"author":{"gitId":"maikongeh"},"content":"module back to the list. ","lastModifiedDate":"2021-03-24"},{"lineNumber":443,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":444,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":445,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":446,"author":{"gitId":"Hzxin"},"content":"**Step 7:** A `CommandResult` will be created with a successful message if the user inputs are valid","lastModifiedDate":"2021-03-25"},{"lineNumber":447,"author":{"gitId":"maikongeh"},"content":"and returned to `LogicManager`.","lastModifiedDate":"2021-03-24"},{"lineNumber":448,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":449,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":450,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":451,"author":{"gitId":"Hzxin"},"content":"**Step 8:** Lastly, `LogicManager` saves the updated RemindMe.","lastModifiedDate":"2021-03-25"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":453,"author":{"gitId":"Hzxin"},"content":"    Note: An EditAssignmentCommand can either change the description or date of an assignment, not both.","lastModifiedDate":"2021-03-25"},{"lineNumber":454,"author":{"gitId":"Hzxin"},"content":"    ","lastModifiedDate":"2021-03-23"},{"lineNumber":455,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":457,"author":{"gitId":"Hzxin"},"content":"The above process is shown in the following sequence diagram:","lastModifiedDate":"2021-03-25"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":459,"author":{"gitId":"Hzxin"},"content":"![EditFeatureSequenceDiagram](images/EditFeatureSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":460,"author":{"gitId":"Hzxin"},"content":"*[Edit Feature Sequence Diagram for `edit m/CS2103 a/1 d/Tut2`]* ","lastModifiedDate":"2021-04-10"},{"lineNumber":461,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":463,"author":{"gitId":"Hzxin"},"content":"Below is the separate sequence diagram for editAssignment(m, 1 , Tut2):","lastModifiedDate":"2021-04-09"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":465,"author":{"gitId":"Hzxin"},"content":"![EditFeatureSequenceDiagram1](images/EditFeatureSequenceDiagram1.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":466,"author":{"gitId":"Hzxin"},"content":"*[Edit Feature Sequence Diagram for `editAssignment(m, 1, Tut2)`]* ","lastModifiedDate":"2021-04-10"},{"lineNumber":467,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":469,"author":{"gitId":"Hzxin"},"content":"The following activity diagram summarises the general workflow for the Edit Command:","lastModifiedDate":"2021-03-25"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":471,"author":{"gitId":"Hzxin"},"content":"![EditFeatureActivityDiagram](images/EditFeatureActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":472,"author":{"gitId":"Hzxin"},"content":"*[Edit Feature Activity Diagram for `edit m/CS2103 a/1 d/Tut2`]* ","lastModifiedDate":"2021-04-10"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":475,"author":{"gitId":"markuz5116"},"content":"### 3.5 Calendar Feature","lastModifiedDate":"2021-04-10"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":477,"author":{"gitId":"Hzxin"},"content":"#### Implementation","lastModifiedDate":"2021-03-25"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":479,"author":{"gitId":"banchiang"},"content":"![CalendarSequenceDiagram2](images/CalendarSequenceDiagram2.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":480,"author":{"gitId":"Hzxin"},"content":"*[Calendar Feature Sequence Diagram]* ","lastModifiedDate":"2021-04-10"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":482,"author":{"gitId":"Hzxin"},"content":"**Given below is an example of how the calendar UI is created.**","lastModifiedDate":"2021-03-25"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":484,"author":{"gitId":"Hzxin"},"content":"**Step1:** `CalendarWindow` will be created at the start of the program.","lastModifiedDate":"2021-03-25"},{"lineNumber":485,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":486,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":487,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":488,"author":{"gitId":"Hzxin"},"content":"**Step2:** `CalendarWindow` will then call itself `CalendarWindow#loadCalendar` to load the details into the calendar.","lastModifiedDate":"2021-03-25"},{"lineNumber":489,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":490,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":491,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":492,"author":{"gitId":"Hzxin"},"content":"**Step3:** In the `loadCalendar` method,  to ensure that the details inside calendar are the latest, ","lastModifiedDate":"2021-03-25"},{"lineNumber":493,"author":{"gitId":"banchiang"},"content":"the method will then call `CalendarStorage#refreshStorage` to update the storage for the calendar.","lastModifiedDate":"2021-03-23"},{"lineNumber":494,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":495,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":496,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":497,"author":{"gitId":"Hzxin"},"content":"**Step4:** In the `refreshStorage` method, calendar storage will be cleared first by calling `CalendarStorage#clear`","lastModifiedDate":"2021-03-25"},{"lineNumber":498,"author":{"gitId":"banchiang"},"content":"and then the details about events are retrieved from RemindMe model by calling `RemindMe#getFilteredPersonList`","lastModifiedDate":"2021-03-23"},{"lineNumber":499,"author":{"gitId":"banchiang"},"content":", `RemindMe#getFilteredModuleList` and `RemindMe#getFilteredEventList`.","lastModifiedDate":"2021-03-23"},{"lineNumber":500,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":501,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":502,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":503,"author":{"gitId":"banchiang"},"content":"**Step5:** With calendar storage updated, the `CalendarWindow` will then store events to each respective day `CalendarWindow#loadCalendar`","lastModifiedDate":"2021-04-10"},{"lineNumber":504,"author":{"gitId":"banchiang"},"content":"and then the calendar will be ready to be displayed as a GUI. ","lastModifiedDate":"2021-04-10"},{"lineNumber":505,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":506,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"banchiang"},"content":"![CalendarSequenceDiagram1](images/CalendarSequenceDiagram1.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":509,"author":{"gitId":"Hzxin"},"content":"*[Calendar Command Sequence Diagram]*","lastModifiedDate":"2021-04-10"},{"lineNumber":510,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":511,"author":{"gitId":"banchiang"},"content":"Given below is an example usage scenario and how the calendar mechanism behaves at each step.  Input: `calendar`.","lastModifiedDate":"2021-03-23"},{"lineNumber":512,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":513,"author":{"gitId":"Hzxin"},"content":"**Step 1.** Your input is parsed into `RemindMeParser` using the `parseCommand` method.","lastModifiedDate":"2021-03-25"},{"lineNumber":514,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":515,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":516,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":517,"author":{"gitId":"Hzxin"},"content":"**Step 2:** Based on the command word of your input (i.e., `calendar`), a `CalendarCommand` will be created.","lastModifiedDate":"2021-03-25"},{"lineNumber":518,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":519,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":520,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":521,"author":{"gitId":"Hzxin"},"content":"**Step 3:** `CalendarCommand` is executed, and that will set boolean `showCalendar` to be true, the boolean is then ","lastModifiedDate":"2021-03-25"},{"lineNumber":522,"author":{"gitId":"banchiang"},"content":"pushed to `MainWindow` to call `MainWindow#handleCalendar` to show the `CalendarWindow`.","lastModifiedDate":"2021-03-23"},{"lineNumber":523,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":524,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":525,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":526,"author":{"gitId":"Hzxin"},"content":"**Step 4:** `CalendarWindow` loaded by its fxml file and called `CalendarWindow#show` to show its shown ","lastModifiedDate":"2021-03-25"},{"lineNumber":527,"author":{"gitId":"Hzxin"},"content":"as a pop-up window for you.","lastModifiedDate":"2021-03-25"},{"lineNumber":528,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":529,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":530,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":533,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":535,"author":{"gitId":"Hzxin"},"content":"## **4. Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2021-03-25"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":537,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2021-03-24"},{"lineNumber":538,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2021-03-24"},{"lineNumber":539,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2021-03-24"},{"lineNumber":540,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2021-03-24"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2021-03-24"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":543,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-24"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":545,"author":{"gitId":"markuz5116"},"content":"## **5. Effort**","lastModifiedDate":"2021-04-10"},{"lineNumber":546,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":547,"author":{"gitId":"markuz5116"},"content":"RemindMe is an enhancement on Addressbook 3(AB3). While AB3 only stores and mutate persons, RemindMe deals with Modules, ","lastModifiedDate":"2021-04-10"},{"lineNumber":548,"author":{"gitId":"markuz5116"},"content":"Contacts, General Events, Assignments, Birthday and Exams. Assignments and Exams are directly related to Modules, where Modules have","lastModifiedDate":"2021-04-10"},{"lineNumber":549,"author":{"gitId":"markuz5116"},"content":"Assignments and Exams. ","lastModifiedDate":"2021-04-10"},{"lineNumber":550,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":551,"author":{"gitId":"markuz5116"},"content":"As RemindMe deals with multiple entity types, the parsers for RemindMe needs to parse new and different entries and inputs. ","lastModifiedDate":"2021-04-10"},{"lineNumber":552,"author":{"gitId":"markuz5116"},"content":"RemindMe also needs new ways to store and display the entries, ensuring that RemindMe still maintains a fresh and clear ","lastModifiedDate":"2021-04-10"},{"lineNumber":553,"author":{"gitId":"markuz5116"},"content":"GUI, compared to AB3.","lastModifiedDate":"2021-04-10"},{"lineNumber":554,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":555,"author":{"gitId":"markuz5116"},"content":"Birthday has a date while Assignment, Exam, and General Event contain a date time. RemindMe makes use of the date time ","lastModifiedDate":"2021-04-10"},{"lineNumber":556,"author":{"gitId":"markuz5116"},"content":"to show a reminder when RemindMe starts up. Therefore, RemindMe has to be able to parse date and time into the respective ","lastModifiedDate":"2021-04-10"},{"lineNumber":557,"author":{"gitId":"markuz5116"},"content":"entities and ensure they are of the right format. ","lastModifiedDate":"2021-04-10"},{"lineNumber":558,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":559,"author":{"gitId":"markuz5116"},"content":"Moreover, RemindMe has a calendar which is able to differentiate all entries in RemindMe based on the dates and time.","lastModifiedDate":"2021-04-10"},{"lineNumber":560,"author":{"gitId":"markuz5116"},"content":"Assignments in Modules has a checkbox to indicate whether an assignment is done or not. This adds a new logic into RemindMe, ","lastModifiedDate":"2021-04-10"},{"lineNumber":561,"author":{"gitId":"markuz5116"},"content":"compared to AB3, and additional GUI. ","lastModifiedDate":"2021-04-10"},{"lineNumber":562,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":563,"author":{"gitId":"markuz5116"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-10"},{"lineNumber":564,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":565,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"banchiang"},"content":"* has a need to manage exams, assignments and events deadlines","lastModifiedDate":"2021-04-07"},{"lineNumber":572,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"Hzxin"},"content":"* tend to forget upcoming events/exams","lastModifiedDate":"2021-02-26"},{"lineNumber":574,"author":{"gitId":"banchiang"},"content":"* is reasonably comfortable using CLI and GUI apps","lastModifiedDate":"2021-04-07"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"banchiang"},"content":"**Value proposition**: Manage deadlines and events in list and calendar view format to remind forgetful users.","lastModifiedDate":"2021-04-07"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"Hzxin"},"content":"| `* * *`  | new user                                   | see instructions help page     | refer to help page when I forget how to use the App |","lastModifiedDate":"2021-02-26"},{"lineNumber":586,"author":{"gitId":"markuz5116"},"content":"| `* * *`  | user                                       | exit the App                   | use other applications on my computer |","lastModifiedDate":"2021-04-08"},{"lineNumber":587,"author":{"gitId":"banchiang"},"content":"| `* * *`  | student taking a module                    | add module                     | keep track of the module exams, assignments |","lastModifiedDate":"2021-04-07"},{"lineNumber":588,"author":{"gitId":"banchiang"},"content":"| `* * *`  | student having assignments                 | add assignments to module      | keep track of the assignment deadline |","lastModifiedDate":"2021-04-07"},{"lineNumber":589,"author":{"gitId":"banchiang"},"content":"| `* * *`  | student having exams                       | add exams to module            | keep track of the exam start time |","lastModifiedDate":"2021-04-07"},{"lineNumber":590,"author":{"gitId":"banchiang"},"content":"| `* * *`  | user with friends                          | add person and their birthday  | keep track of birthday and wish them happy birthday promptly |","lastModifiedDate":"2021-04-07"},{"lineNumber":591,"author":{"gitId":"banchiang"},"content":"| `* * *`  | user                                       | add general events             | keep track of events happening outside school curriculum |","lastModifiedDate":"2021-04-07"},{"lineNumber":592,"author":{"gitId":"banchiang"},"content":"| `* * *`  | student                                    | edit a module                  | adjust module name if module name changes |","lastModifiedDate":"2021-04-07"},{"lineNumber":593,"author":{"gitId":"banchiang"},"content":"| `* * *`  | student                                    | edit a assignment              | can adjust schedule when there is a change of plan |","lastModifiedDate":"2021-04-07"},{"lineNumber":594,"author":{"gitId":"banchiang"},"content":"| `* * *`  | student                                    | edit a exam                    | can adjust schedule when there is a change of plan |","lastModifiedDate":"2021-04-07"},{"lineNumber":595,"author":{"gitId":"banchiang"},"content":"| `* * *`  | user                                       | edit a person and birthday     | fine tune person name and birthday according |","lastModifiedDate":"2021-04-07"},{"lineNumber":596,"author":{"gitId":"banchiang"},"content":"| `* * *`  | user                                       | edit a general event           | adjust schedule when there is a change of plan |","lastModifiedDate":"2021-04-07"},{"lineNumber":597,"author":{"gitId":"markuz5116"},"content":"| `* * *`  | student                                    | delete a module                | I can remove a module I do not require |","lastModifiedDate":"2021-04-08"},{"lineNumber":598,"author":{"gitId":"markuz5116"},"content":"| `* * *`  | student                                    | delete a assignment            | I can remove an assignment once it\u0027s done |","lastModifiedDate":"2021-04-08"},{"lineNumber":599,"author":{"gitId":"markuz5116"},"content":"| `* * *`  | student                                    | delete a exam                  | I can remove an exam after I completed it |","lastModifiedDate":"2021-04-08"},{"lineNumber":600,"author":{"gitId":"markuz5116"},"content":"| `* * *`  | user                                       | delete a person and birthday   | I can remove a person I am no longer close to |","lastModifiedDate":"2021-04-08"},{"lineNumber":601,"author":{"gitId":"markuz5116"},"content":"| `* * *`  | user                                       | delete a general event         | I can remove an event that is already over |","lastModifiedDate":"2021-04-08"},{"lineNumber":602,"author":{"gitId":"banchiang"},"content":"| `* * `   | student                                    | find a module                  | quickly locate details for module |","lastModifiedDate":"2021-04-07"},{"lineNumber":603,"author":{"gitId":"banchiang"},"content":"| `* * `   | user                                       | find a person                  | quickly locate details for person |","lastModifiedDate":"2021-04-07"},{"lineNumber":604,"author":{"gitId":"banchiang"},"content":"| `* * `   | user                                       | find a general event           | quickly locate details for event |","lastModifiedDate":"2021-04-07"},{"lineNumber":605,"author":{"gitId":"markuz5116"},"content":"| `* * `   | user                                       | see all entries after finding command | I can have a big picture of all my entries |","lastModifiedDate":"2021-04-08"},{"lineNumber":606,"author":{"gitId":"banchiang"},"content":"| `* * `   | student                                    | mark my assignments as done    | identify if assignments are done or not |","lastModifiedDate":"2021-04-07"},{"lineNumber":607,"author":{"gitId":"banchiang"},"content":"| `* * `   | user                                       | clear App                      | quickly delete all details in App |","lastModifiedDate":"2021-04-07"},{"lineNumber":608,"author":{"gitId":"banchiang"},"content":"| `* * `   | student                                    | clear modules                  | quickly delete all details for modules |","lastModifiedDate":"2021-04-07"},{"lineNumber":609,"author":{"gitId":"banchiang"},"content":"| `* * `   | user                                       | clear contacts                 | quickly delete all details for person |","lastModifiedDate":"2021-04-07"},{"lineNumber":610,"author":{"gitId":"banchiang"},"content":"| `* * `   | user                                       | clear general events           | quickly delete all details for events |","lastModifiedDate":"2021-04-07"},{"lineNumber":611,"author":{"gitId":"Hzxin"},"content":"| `* *`    | user                                       | view events in a calendar view | to have a better sense of the upcoming events |","lastModifiedDate":"2021-02-26"},{"lineNumber":612,"author":{"gitId":"banchiang"},"content":"| `* *`    | forgetful student                          | be reminded about upcoming events | respond to upcoming events accordingly |  ","lastModifiedDate":"2021-04-07"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"Hzxin"},"content":"(For all use cases below, the **System** is the `RemindMe` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-28"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"markuz5116"},"content":"Use Cases:\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":621,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 1: View Help](#Use-Case-1:-view-help)**","lastModifiedDate":"2021-04-10"},{"lineNumber":622,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 2: Exit](#Use-Case-2:-exit)**","lastModifiedDate":"2021-04-10"},{"lineNumber":623,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 3: Add Module](#Use-Case-3:-add-module)**","lastModifiedDate":"2021-04-10"},{"lineNumber":624,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 4: Add Assignment](#Use-Case-4:-add-assignment)**","lastModifiedDate":"2021-04-10"},{"lineNumber":625,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 5: Add Exam](#Use-Case-5:-add-exam)**","lastModifiedDate":"2021-04-10"},{"lineNumber":626,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 6: Add Person and Birthday](#Use-Case-6:-Add-Person-and-Birthday)**","lastModifiedDate":"2021-04-10"},{"lineNumber":627,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 7: Add General Events](#Use-Case-7:-add-general-events)**","lastModifiedDate":"2021-04-10"},{"lineNumber":628,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 8: Edit Module](#Use-Case-8:-edit-module)**","lastModifiedDate":"2021-04-10"},{"lineNumber":629,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 9: Edit Assignment](#Use-Case-9:-edit-assignment)**","lastModifiedDate":"2021-04-10"},{"lineNumber":630,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 10: Edit Exam](#Use-Case-10:-edit-exam)**","lastModifiedDate":"2021-04-10"},{"lineNumber":631,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 11: Edit Person](#Use-Case-11:-edit-person)**","lastModifiedDate":"2021-04-10"},{"lineNumber":632,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 12: Edit General Event](#Use-Case-12:-edit-general-event)**","lastModifiedDate":"2021-04-10"},{"lineNumber":633,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 13: Delete Module](#Use-Case-13:-delete-module)**","lastModifiedDate":"2021-04-10"},{"lineNumber":634,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 14: Delete Assignment](#Use-Case-14:-delete-assignment)**","lastModifiedDate":"2021-04-10"},{"lineNumber":635,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 15: Delete Exam](#Use-Case-15:-delete-exam)**","lastModifiedDate":"2021-04-10"},{"lineNumber":636,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 16: Delete Person](#Use-Case-16:-delete-person)**","lastModifiedDate":"2021-04-10"},{"lineNumber":637,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 17: Delete General Event](#Use-Case-17:-delete-general-event)**","lastModifiedDate":"2021-04-10"},{"lineNumber":638,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 18: Find Module](#Use-Case-18:-find-module)**","lastModifiedDate":"2021-04-10"},{"lineNumber":639,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 19: Find Person](#Use-Case-19:-find-person)**","lastModifiedDate":"2021-04-10"},{"lineNumber":640,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 20: Find General Event](#Use-Case-20:-find-general-event)**","lastModifiedDate":"2021-04-10"},{"lineNumber":641,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 21: List](#Use-Case-21:-list)**","lastModifiedDate":"2021-04-10"},{"lineNumber":642,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 22: Mark Assignment as Done](#Use-Case-22:-Mark-Assignment-as-Done)**","lastModifiedDate":"2021-04-10"},{"lineNumber":643,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 23: Clear App](#Use-Case-23:-clear-app)**","lastModifiedDate":"2021-04-10"},{"lineNumber":644,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 24: Clear Modules](#Use-Case-24:-clear-modules)**","lastModifiedDate":"2021-04-10"},{"lineNumber":645,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 25: Clear Contacts](#Use-Case-25:-clear-contacts)**","lastModifiedDate":"2021-04-10"},{"lineNumber":646,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 26: Clear Events](#Use-Case-26:-clear-events)**","lastModifiedDate":"2021-04-10"},{"lineNumber":647,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 27: View Calendar](#Use-Case-27:-View-Calendar)**","lastModifiedDate":"2021-04-10"},{"lineNumber":648,"author":{"gitId":"markuz5116"},"content":"* **[Use Case 28: Reminder](#Use-Case-28:-Reminder)**","lastModifiedDate":"2021-04-10"},{"lineNumber":649,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":650,"author":{"gitId":"markuz5116"},"content":"### Use Case 1: View Help","lastModifiedDate":"2021-04-10"},{"lineNumber":651,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":652,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":653,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":654,"author":{"gitId":"banchiang"},"content":"1. User enters the command to view help.","lastModifiedDate":"2021-04-07"},{"lineNumber":655,"author":{"gitId":"banchiang"},"content":"2. System shows help and url to copy to user guide webpage for more in depth help.","lastModifiedDate":"2021-04-07"},{"lineNumber":656,"author":{"gitId":"banchiang"},"content":"   \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":657,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":658,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":659,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":660,"author":{"gitId":"banchiang"},"content":"* 1a. System detects an error in formatting of command.","lastModifiedDate":"2021-04-07"},{"lineNumber":661,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":662,"author":{"gitId":"banchiang"},"content":"      \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":663,"author":{"gitId":"banchiang"},"content":"      ","lastModifiedDate":"2021-04-07"},{"lineNumber":664,"author":{"gitId":"markuz5116"},"content":"### Use Case 2: Exit","lastModifiedDate":"2021-04-10"},{"lineNumber":665,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":666,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-02-26"},{"lineNumber":667,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":668,"author":{"gitId":"banchiang"},"content":"1. User enters the command to exit system.","lastModifiedDate":"2021-04-07"},{"lineNumber":669,"author":{"gitId":"banchiang"},"content":"2. System exits by closing all relevant GUI.","lastModifiedDate":"2021-04-07"},{"lineNumber":670,"author":{"gitId":"banchiang"},"content":"   \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":671,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":672,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-02-26"},{"lineNumber":673,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":674,"author":{"gitId":"banchiang"},"content":"* 1a. System detects an error in formatting of command.","lastModifiedDate":"2021-04-07"},{"lineNumber":675,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display error message.","lastModifiedDate":"2021-02-26"},{"lineNumber":676,"author":{"gitId":"banchiang"},"content":"      \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":677,"author":{"gitId":"banchiang"},"content":"      ","lastModifiedDate":"2021-02-26"},{"lineNumber":678,"author":{"gitId":"markuz5116"},"content":"### Use Case 3: Add Module","lastModifiedDate":"2021-04-10"},{"lineNumber":679,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":680,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":681,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":682,"author":{"gitId":"banchiang"},"content":"1. User enters command to add a module.","lastModifiedDate":"2021-04-07"},{"lineNumber":683,"author":{"gitId":"banchiang"},"content":"2. System adds module and displays module info.","lastModifiedDate":"2021-04-07"},{"lineNumber":684,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":685,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":686,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":687,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":688,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":689,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":690,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":691,"author":{"gitId":"banchiang"},"content":"* 1b. System detects that module is present in system.","lastModifiedDate":"2021-04-07"},{"lineNumber":692,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display duplicate module error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":693,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.      ","lastModifiedDate":"2021-04-07"},{"lineNumber":694,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":695,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":696,"author":{"gitId":"markuz5116"},"content":"### Use Case 4: Add Assignment","lastModifiedDate":"2021-04-10"},{"lineNumber":697,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":698,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":699,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":700,"author":{"gitId":"banchiang"},"content":"1. User enters command to add an assignment for a module.","lastModifiedDate":"2021-04-07"},{"lineNumber":701,"author":{"gitId":"banchiang"},"content":"2. System adds assignment and displays assignments info.","lastModifiedDate":"2021-04-07"},{"lineNumber":702,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":703,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":704,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":705,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":706,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":707,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":708,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":709,"author":{"gitId":"banchiang"},"content":"* 1b. System detects that module for assignment is not present in the system.","lastModifiedDate":"2021-04-07"},{"lineNumber":710,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display module missing error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":711,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":712,"author":{"gitId":"banchiang"},"content":"* 1c. System detects that assignment is present in the module.","lastModifiedDate":"2021-04-07"},{"lineNumber":713,"author":{"gitId":"banchiang"},"content":"    * 1c1. System display duplicate assignment error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":714,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":715,"author":{"gitId":"banchiang"},"content":"    ","lastModifiedDate":"2021-04-07"},{"lineNumber":716,"author":{"gitId":"markuz5116"},"content":"### Use Case 5: Add Exam","lastModifiedDate":"2021-04-10"},{"lineNumber":717,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":718,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":719,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":720,"author":{"gitId":"banchiang"},"content":"1. User enters command to add an exam for a module.","lastModifiedDate":"2021-04-07"},{"lineNumber":721,"author":{"gitId":"banchiang"},"content":"2. System adds exam and displays exam info.","lastModifiedDate":"2021-04-07"},{"lineNumber":722,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":723,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":724,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":725,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":726,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":727,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":728,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":729,"author":{"gitId":"markuz5116"},"content":"* 1b. System detects that module for the exam is not present in the system.","lastModifiedDate":"2021-04-10"},{"lineNumber":730,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display module missing error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":731,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":732,"author":{"gitId":"banchiang"},"content":"* 1c. System detects that exam is present in the module.","lastModifiedDate":"2021-04-07"},{"lineNumber":733,"author":{"gitId":"banchiang"},"content":"    * 1c1. System display duplicate exam error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":734,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":735,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":736,"author":{"gitId":"markuz5116"},"content":"### Use Case 6: Add Person and Birthday","lastModifiedDate":"2021-04-10"},{"lineNumber":737,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":738,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":739,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":740,"author":{"gitId":"banchiang"},"content":"1. User enters command to add a person and his/her birthday.","lastModifiedDate":"2021-04-07"},{"lineNumber":741,"author":{"gitId":"banchiang"},"content":"2. System adds person with his/her birthday and displays person info.","lastModifiedDate":"2021-04-07"},{"lineNumber":742,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":743,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":744,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":745,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":746,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":747,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":748,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":749,"author":{"gitId":"banchiang"},"content":"* 1b. System detects that person is present in system.","lastModifiedDate":"2021-04-07"},{"lineNumber":750,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display duplicate person error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":751,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.      ","lastModifiedDate":"2021-04-07"},{"lineNumber":752,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":753,"author":{"gitId":"markuz5116"},"content":"### Use Case 7: Add General Events","lastModifiedDate":"2021-04-10"},{"lineNumber":754,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":755,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":756,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":757,"author":{"gitId":"banchiang"},"content":"1. User enters command to add a general event.","lastModifiedDate":"2021-04-07"},{"lineNumber":758,"author":{"gitId":"markuz5116"},"content":"2. System adds the general event and displays general event info.","lastModifiedDate":"2021-04-10"},{"lineNumber":759,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":760,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":761,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":762,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":763,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":764,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":765,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":766,"author":{"gitId":"banchiang"},"content":"* 1b. System detects that general event is present in system.","lastModifiedDate":"2021-04-07"},{"lineNumber":767,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display duplicate event error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":768,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends. ","lastModifiedDate":"2021-04-07"},{"lineNumber":769,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":770,"author":{"gitId":"markuz5116"},"content":"### Use Case 8: Edit Module","lastModifiedDate":"2021-04-10"},{"lineNumber":771,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":772,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":773,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":774,"author":{"gitId":"banchiang"},"content":"1. User enters command to edit a module.","lastModifiedDate":"2021-04-07"},{"lineNumber":775,"author":{"gitId":"banchiang"},"content":"2. System edits module and displays edited module info.","lastModifiedDate":"2021-04-07"},{"lineNumber":776,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":777,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":778,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":779,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":780,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":781,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":782,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":783,"author":{"gitId":"markuz5116"},"content":"* 1b. System detects index in command to locate the module is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":784,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display module missing/invalid input error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":785,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends. ","lastModifiedDate":"2021-04-10"},{"lineNumber":786,"author":{"gitId":"banchiang"},"content":" ","lastModifiedDate":"2021-04-07"},{"lineNumber":787,"author":{"gitId":"markuz5116"},"content":"### Use Case 9: Edit Assignment","lastModifiedDate":"2021-04-10"},{"lineNumber":788,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":789,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":790,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":791,"author":{"gitId":"banchiang"},"content":"1. User enters command to edit an assignment for a module.","lastModifiedDate":"2021-04-07"},{"lineNumber":792,"author":{"gitId":"banchiang"},"content":"2. System edits assignment and displays edited assignment info.","lastModifiedDate":"2021-04-07"},{"lineNumber":793,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":794,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":795,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":796,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":797,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":798,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":799,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends. ","lastModifiedDate":"2021-04-07"},{"lineNumber":800,"author":{"gitId":"banchiang"},"content":"* 1b. System detects index in command to locate assignment is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":801,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display assignment missing/invalid input error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":802,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends. ","lastModifiedDate":"2021-04-10"},{"lineNumber":803,"author":{"gitId":"banchiang"},"content":"        ","lastModifiedDate":"2021-04-07"},{"lineNumber":804,"author":{"gitId":"markuz5116"},"content":"### Use Case 10: Edit Exam","lastModifiedDate":"2021-04-10"},{"lineNumber":805,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":806,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":807,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":808,"author":{"gitId":"banchiang"},"content":"1. User enters command to edit an exam for a module.","lastModifiedDate":"2021-04-07"},{"lineNumber":809,"author":{"gitId":"banchiang"},"content":"2. System edits exam and displays edited exam info.","lastModifiedDate":"2021-04-07"},{"lineNumber":810,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":811,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":812,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":813,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":814,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":815,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":816,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":817,"author":{"gitId":"markuz5116"},"content":"* 1b. System detects index in command to locate the exam is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":818,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display exam missing/invalid input error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":819,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.      ","lastModifiedDate":"2021-04-10"},{"lineNumber":820,"author":{"gitId":"banchiang"},"content":"    ","lastModifiedDate":"2021-04-07"},{"lineNumber":821,"author":{"gitId":"markuz5116"},"content":"### Use Case 11: Edit Person","lastModifiedDate":"2021-04-10"},{"lineNumber":822,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":823,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":824,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":825,"author":{"gitId":"banchiang"},"content":"1. User enters command to edit the person/birthday.","lastModifiedDate":"2021-04-10"},{"lineNumber":826,"author":{"gitId":"banchiang"},"content":"2. System edits person and displays edited person info.","lastModifiedDate":"2021-04-10"},{"lineNumber":827,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":828,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":829,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":830,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":831,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":832,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":833,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":834,"author":{"gitId":"markuz5116"},"content":"* 1b. System detects index in command to locate the person is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":835,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display person missing error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":836,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.      ","lastModifiedDate":"2021-04-10"},{"lineNumber":837,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":838,"author":{"gitId":"markuz5116"},"content":"### Use Case 12: Edit General Event","lastModifiedDate":"2021-04-10"},{"lineNumber":839,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":840,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":841,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":842,"author":{"gitId":"banchiang"},"content":"1. User enters command to edit a general event.","lastModifiedDate":"2021-04-07"},{"lineNumber":843,"author":{"gitId":"markuz5116"},"content":"2. System edits the general event and displays edited event info.","lastModifiedDate":"2021-04-10"},{"lineNumber":844,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":845,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":846,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":847,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":848,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":849,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":850,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends. ","lastModifiedDate":"2021-04-07"},{"lineNumber":851,"author":{"gitId":"markuz5116"},"content":"* 1b. System detects index in command to locate the event is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":852,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display event missing/invalid input error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":853,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-10"},{"lineNumber":854,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":855,"author":{"gitId":"markuz5116"},"content":"### Use Case 13: Delete Module","lastModifiedDate":"2021-04-10"},{"lineNumber":856,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":857,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":858,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":859,"author":{"gitId":"banchiang"},"content":"1. User enters command to delete a module.","lastModifiedDate":"2021-04-07"},{"lineNumber":860,"author":{"gitId":"banchiang"},"content":"2. System deletes module and displays deleted module info.","lastModifiedDate":"2021-04-07"},{"lineNumber":861,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":862,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":863,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":864,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":865,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":866,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":867,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":868,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":869,"author":{"gitId":"markuz5116"},"content":"### Use Case 14: Delete Assignment","lastModifiedDate":"2021-04-10"},{"lineNumber":870,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":871,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-02-26"},{"lineNumber":872,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":873,"author":{"gitId":"banchiang"},"content":"1. User enters command to delete an assignment for a module.","lastModifiedDate":"2021-04-07"},{"lineNumber":874,"author":{"gitId":"banchiang"},"content":"2. System deletes assignment and displays deleted assignment info.","lastModifiedDate":"2021-04-07"},{"lineNumber":875,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":876,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-02-26"},{"lineNumber":877,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-02-26"},{"lineNumber":878,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":879,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":880,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":881,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":882,"author":{"gitId":"banchiang"},"content":"* 1b. System detects index in command to locate assignment is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":883,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display assignment missing/invalid input error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":884,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends. ","lastModifiedDate":"2021-04-10"},{"lineNumber":885,"author":{"gitId":"banchiang"},"content":"        ","lastModifiedDate":"2021-04-07"},{"lineNumber":886,"author":{"gitId":"markuz5116"},"content":"### Use Case 15: Delete Exam","lastModifiedDate":"2021-04-10"},{"lineNumber":887,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":888,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":889,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":890,"author":{"gitId":"banchiang"},"content":"1. User enters command to delete an exam for a module.","lastModifiedDate":"2021-04-07"},{"lineNumber":891,"author":{"gitId":"banchiang"},"content":"2. System deletes exam and displays deleted exam info.","lastModifiedDate":"2021-04-07"},{"lineNumber":892,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":893,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":894,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":895,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":896,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":897,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":898,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":899,"author":{"gitId":"markuz5116"},"content":"* 1b. System detects index in command to locate the exam is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":900,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display exam missing/invalid input error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":901,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.      ","lastModifiedDate":"2021-04-10"},{"lineNumber":902,"author":{"gitId":"banchiang"},"content":"    ","lastModifiedDate":"2021-04-07"},{"lineNumber":903,"author":{"gitId":"markuz5116"},"content":"### Use Case 16: Delete Person","lastModifiedDate":"2021-04-10"},{"lineNumber":904,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":905,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":906,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":907,"author":{"gitId":"banchiang"},"content":"1. User enters command to delete a person.","lastModifiedDate":"2021-04-07"},{"lineNumber":908,"author":{"gitId":"banchiang"},"content":"2. System deletes person and displays deleted person info.","lastModifiedDate":"2021-04-07"},{"lineNumber":909,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":910,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":911,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":912,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":913,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":914,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":915,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends. ","lastModifiedDate":"2021-04-07"},{"lineNumber":916,"author":{"gitId":"markuz5116"},"content":"* 1b. System detects index in command to locate the person is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":917,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display person missing/invalid input error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":918,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.    ","lastModifiedDate":"2021-04-10"},{"lineNumber":919,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":920,"author":{"gitId":"markuz5116"},"content":"### Use Case 17: Delete General Event","lastModifiedDate":"2021-04-10"},{"lineNumber":921,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":922,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":923,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":924,"author":{"gitId":"banchiang"},"content":"1. User enters command to delete a general event.","lastModifiedDate":"2021-04-07"},{"lineNumber":925,"author":{"gitId":"markuz5116"},"content":"2. System deletes the general event and displays deleted event info.","lastModifiedDate":"2021-04-10"},{"lineNumber":926,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":927,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":928,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":929,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":930,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":931,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":932,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends. ","lastModifiedDate":"2021-04-07"},{"lineNumber":933,"author":{"gitId":"markuz5116"},"content":"* 1b. System detects index in command to locate the event is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":934,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display event missing/invalid input error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":935,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-10"},{"lineNumber":936,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":937,"author":{"gitId":"markuz5116"},"content":"### Use Case 18: Find Module","lastModifiedDate":"2021-04-10"},{"lineNumber":938,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":939,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":940,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":941,"author":{"gitId":"banchiang"},"content":"1. User enters command to find a module with keyword.","lastModifiedDate":"2021-04-07"},{"lineNumber":942,"author":{"gitId":"banchiang"},"content":"2. System display modules found by the keyword.","lastModifiedDate":"2021-04-07"},{"lineNumber":943,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":944,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":945,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":946,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":947,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":948,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":949,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":950,"author":{"gitId":"banchiang"},"content":" ","lastModifiedDate":"2021-04-07"},{"lineNumber":951,"author":{"gitId":"markuz5116"},"content":"### Use Case 19: Find Person","lastModifiedDate":"2021-04-10"},{"lineNumber":952,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":953,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":954,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":955,"author":{"gitId":"banchiang"},"content":"1. User enters command to find a person with keyword.","lastModifiedDate":"2021-04-07"},{"lineNumber":956,"author":{"gitId":"banchiang"},"content":"2. System display person found by the keyword.","lastModifiedDate":"2021-04-07"},{"lineNumber":957,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":958,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":959,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":960,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":961,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":962,"author":{"gitId":"banchiang"},"content":" * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":963,"author":{"gitId":"banchiang"},"content":"     \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":964,"author":{"gitId":"banchiang"},"content":" ","lastModifiedDate":"2021-04-07"},{"lineNumber":965,"author":{"gitId":"markuz5116"},"content":"### Use Case 20: Find General Event","lastModifiedDate":"2021-04-10"},{"lineNumber":966,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":967,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":968,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":969,"author":{"gitId":"markuz5116"},"content":"1. User enters command to find a general event with the user\u0027s keywords.","lastModifiedDate":"2021-04-10"},{"lineNumber":970,"author":{"gitId":"markuz5116"},"content":"2. System display the general event found by the keyword.","lastModifiedDate":"2021-04-10"},{"lineNumber":971,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":972,"author":{"gitId":"banchiang"},"content":" ","lastModifiedDate":"2021-04-07"},{"lineNumber":973,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":974,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":975,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":976,"author":{"gitId":"banchiang"},"content":"  * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":977,"author":{"gitId":"banchiang"},"content":"      \u003cbr\u003e Use case ends.    ","lastModifiedDate":"2021-02-26"},{"lineNumber":978,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":979,"author":{"gitId":"markuz5116"},"content":"### Use Case 21: List","lastModifiedDate":"2021-04-10"},{"lineNumber":980,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":981,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-02-26"},{"lineNumber":982,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":983,"author":{"gitId":"banchiang"},"content":"1. User enters list command.","lastModifiedDate":"2021-04-07"},{"lineNumber":984,"author":{"gitId":"markuz5116"},"content":"2. System display full list for modules, persons and events.","lastModifiedDate":"2021-04-10"},{"lineNumber":985,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":986,"author":{"gitId":"banchiang"},"content":" ","lastModifiedDate":"2021-02-26"},{"lineNumber":987,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-02-26"},{"lineNumber":988,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":989,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":990,"author":{"gitId":"banchiang"},"content":"  * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":991,"author":{"gitId":"banchiang"},"content":"      \u003cbr\u003e Use case ends.    ","lastModifiedDate":"2021-02-26"},{"lineNumber":992,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":993,"author":{"gitId":"markuz5116"},"content":"### Use Case 22: Mark Assignment as Done","lastModifiedDate":"2021-04-10"},{"lineNumber":994,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":995,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-02-26"},{"lineNumber":996,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":997,"author":{"gitId":"banchiang"},"content":"1. User enters command to mark an existing assignment as done.","lastModifiedDate":"2021-04-07"},{"lineNumber":998,"author":{"gitId":"banchiang"},"content":"2. System marks assignment as done and displays assignment info.","lastModifiedDate":"2021-04-07"},{"lineNumber":999,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1000,"author":{"gitId":"banchiang"},"content":" ","lastModifiedDate":"2021-02-26"},{"lineNumber":1001,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-02-26"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1003,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":1004,"author":{"gitId":"banchiang"},"content":"  * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":1005,"author":{"gitId":"banchiang"},"content":"      \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1006,"author":{"gitId":"banchiang"},"content":"* 1b. System detects index in command to locate assignment is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":1007,"author":{"gitId":"banchiang"},"content":"    * 1b1. System display assignment missing/invalid input error message.","lastModifiedDate":"2021-04-10"},{"lineNumber":1008,"author":{"gitId":"banchiang"},"content":"    \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-10"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1010,"author":{"gitId":"markuz5116"},"content":"### Use Case 23: Clear App","lastModifiedDate":"2021-04-10"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1012,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1014,"author":{"gitId":"banchiang"},"content":"1. User enters command to clear App.","lastModifiedDate":"2021-04-07"},{"lineNumber":1015,"author":{"gitId":"banchiang"},"content":"2. System clears the App.","lastModifiedDate":"2021-04-07"},{"lineNumber":1016,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":1017,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-02-26"},{"lineNumber":1018,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1020,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":1021,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":1022,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1024,"author":{"gitId":"markuz5116"},"content":"### Use Case 24: Clear Modules","lastModifiedDate":"2021-04-10"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1026,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-02-26"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1028,"author":{"gitId":"banchiang"},"content":"1. User enters command to clear modules.","lastModifiedDate":"2021-04-07"},{"lineNumber":1029,"author":{"gitId":"banchiang"},"content":"2. System clear modules and displays empty module list.","lastModifiedDate":"2021-04-07"},{"lineNumber":1030,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1031,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-02-26"},{"lineNumber":1032,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-02-26"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1034,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":1035,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":1036,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1037,"author":{"gitId":"banchiang"},"content":" ","lastModifiedDate":"2021-02-26"},{"lineNumber":1038,"author":{"gitId":"markuz5116"},"content":"### Use Case 25: Clear Contacts","lastModifiedDate":"2021-04-10"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1040,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-02-26"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1042,"author":{"gitId":"banchiang"},"content":"1. User enters command to clear contacts (person).","lastModifiedDate":"2021-04-07"},{"lineNumber":1043,"author":{"gitId":"banchiang"},"content":"2. System clear contacts and displays empty person list.","lastModifiedDate":"2021-04-07"},{"lineNumber":1044,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1045,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-02-26"},{"lineNumber":1046,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-02-26"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1048,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":1049,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":1050,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1052,"author":{"gitId":"markuz5116"},"content":"### Use Case 26: Clear Events","lastModifiedDate":"2021-04-10"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1054,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1056,"author":{"gitId":"banchiang"},"content":"1. User enters command to clear general events.","lastModifiedDate":"2021-04-07"},{"lineNumber":1057,"author":{"gitId":"banchiang"},"content":"2. System clear general events and displays empty event list.","lastModifiedDate":"2021-04-07"},{"lineNumber":1058,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":1059,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-07"},{"lineNumber":1060,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-04-07"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1062,"author":{"gitId":"banchiang"},"content":"* 1a. System detects formatting error in command.","lastModifiedDate":"2021-04-07"},{"lineNumber":1063,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display formatting error message.","lastModifiedDate":"2021-04-07"},{"lineNumber":1064,"author":{"gitId":"banchiang"},"content":"        \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1066,"author":{"gitId":"markuz5116"},"content":"### Use Case 27: View Calendar","lastModifiedDate":"2021-04-10"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1068,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-02-26"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1070,"author":{"gitId":"banchiang"},"content":"1. User enters the command to view calendar.","lastModifiedDate":"2021-04-07"},{"lineNumber":1071,"author":{"gitId":"banchiang"},"content":"2. System shows calendar.","lastModifiedDate":"2021-04-07"},{"lineNumber":1072,"author":{"gitId":"banchiang"},"content":"   \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1074,"author":{"gitId":"banchiang"},"content":"**Extensions:**","lastModifiedDate":"2021-02-26"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1076,"author":{"gitId":"banchiang"},"content":"* 1a. System detects an error in formatting of command.","lastModifiedDate":"2021-02-26"},{"lineNumber":1077,"author":{"gitId":"banchiang"},"content":"    * 1a1. System display error message.","lastModifiedDate":"2021-02-26"},{"lineNumber":1078,"author":{"gitId":"banchiang"},"content":"      \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1079,"author":{"gitId":"banchiang"},"content":" ","lastModifiedDate":"2021-02-26"},{"lineNumber":1080,"author":{"gitId":"markuz5116"},"content":"### Use Case 28: Reminder","lastModifiedDate":"2021-04-10"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1082,"author":{"gitId":"banchiang"},"content":"**MSS:**","lastModifiedDate":"2021-04-07"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1084,"author":{"gitId":"banchiang"},"content":"1. User starts the system.","lastModifiedDate":"2021-04-07"},{"lineNumber":1085,"author":{"gitId":"banchiang"},"content":"2. System shows upcoming events as a reminder.","lastModifiedDate":"2021-04-07"},{"lineNumber":1086,"author":{"gitId":"banchiang"},"content":"   \u003cbr\u003e Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1088,"author":{"gitId":"markuz5116"},"content":"### Non Functional Requirements","lastModifiedDate":"2021-04-10"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1091,"author":{"gitId":"markuz5116"},"content":"2.  Should be able to hold up to 1000 persons and tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-02-24"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":1093,"author":{"gitId":"markuz5116"},"content":"4.  RemindMe should be able to respond within one seconds.","lastModifiedDate":"2021-02-24"},{"lineNumber":1094,"author":{"gitId":"markuz5116"},"content":"5.  RemindMe should be usable by novice who has no prior experience with coding.","lastModifiedDate":"2021-02-24"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1098,"author":{"gitId":"markuz5116"},"content":"Term | Meaning","lastModifiedDate":"2021-04-08"},{"lineNumber":1099,"author":{"gitId":"markuz5116"},"content":"---|---","lastModifiedDate":"2021-04-08"},{"lineNumber":1100,"author":{"gitId":"markuz5116"},"content":"**Mainstream OS** | Windows, Linux, Unix, OS-X.","lastModifiedDate":"2021-04-08"},{"lineNumber":1101,"author":{"gitId":"markuz5116"},"content":"**Module** | A school module consisting of module name/module id. ","lastModifiedDate":"2021-04-08"},{"lineNumber":1102,"author":{"gitId":"markuz5116"},"content":"**Examination** | Consists of a start time and date which it occurs on under a relevant module.","lastModifiedDate":"2021-04-08"},{"lineNumber":1103,"author":{"gitId":"markuz5116"},"content":"**Event** | Consists of a start time and date which it occurs on.","lastModifiedDate":"2021-04-08"},{"lineNumber":1104,"author":{"gitId":"markuz5116"},"content":"**Assignment** | Consists of a deadline under a relevant module.","lastModifiedDate":"2021-04-08"},{"lineNumber":1105,"author":{"gitId":"markuz5116"},"content":"**GUI** | Graphic User Interface, the visible interface the user sees for the application.","lastModifiedDate":"2021-04-08"},{"lineNumber":1106,"author":{"gitId":"markuz5116"},"content":"**FilteredList** | List of entries that can take a predicate and show entries that is tested true by the predicated.","lastModifiedDate":"2021-04-10"},{"lineNumber":1107,"author":{"gitId":"markuz5116"},"content":"**Tokenize** | Splits the user\u0027s inputs based on the prefixes for RemindMe.","lastModifiedDate":"2021-04-10"},{"lineNumber":1108,"author":{"gitId":"markuz5116"},"content":"**Prefix** | Prefixes used by RemindMe to parse user\u0027s input. \u003cbr\u003ePrefixes used by RemindMe are `m/`, `a/`, `e/`, `n/`, `b/`, `g/`, `by/` and `on/`.","lastModifiedDate":"2021-04-10"},{"lineNumber":1109,"author":{"gitId":"markuz5116"},"content":"**Preamble** | Text before the first prefix ","lastModifiedDate":"2021-04-10"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1122,"author":{"gitId":"banchiang"},"content":"### Launch","lastModifiedDate":"2021-04-09"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1126,"author":{"gitId":"banchiang"},"content":"   1. Download the latest [jar](https://github.com/AY2021S2-CS2103T-W15-1/tp/releases) file and copy into an empty folder","lastModifiedDate":"2021-04-09"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1128,"author":{"gitId":"markuz5116"},"content":"   2. Double-click the jar file Expected: Shows the GUI for RemindMe.","lastModifiedDate":"2021-04-10"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1130,"author":{"gitId":"banchiang"},"content":"   3. Test the following commands according to the flow.","lastModifiedDate":"2021-04-09"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1132,"author":{"gitId":"banchiang"},"content":"### Testing commands","lastModifiedDate":"2021-04-09"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1134,"author":{"gitId":"banchiang"},"content":"**Testing Person commands**","lastModifiedDate":"2021-04-09"},{"lineNumber":1135,"author":{"gitId":"banchiang"},"content":"   1. Add a person. Test case: `add n/Benson b/30/09/1997 t/friends`. Benson will be added into the contacts list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":1137,"author":{"gitId":"banchiang"},"content":"   2. Edit a person. Test case: `edit 1 n/Benson b/30/09/1997`. Benson will be updated in the contacts list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1138,"author":{"gitId":"banchiang"},"content":"      ","lastModifiedDate":"2021-04-09"},{"lineNumber":1139,"author":{"gitId":"banchiang"},"content":"**Testing Module commands**","lastModifiedDate":"2021-04-09"},{"lineNumber":1140,"author":{"gitId":"banchiang"},"content":"   1. Add a module. Test case: `add m/CS1101`. CS1101 will be added into the module list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1141,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1142,"author":{"gitId":"banchiang"},"content":"   2. Edit a module. Test case: `edit 1 m/CS1101S`. CS1101 will be renamed to CS1101S in module list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1143,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1144,"author":{"gitId":"banchiang"},"content":"   3. One can explore adding assignments/exams by referring to the [user guide](https://ay2021s2-cs2103t-w15-1.github.io/tp/UserGuide.html#table-of-contents).","lastModifiedDate":"2021-04-09"},{"lineNumber":1145,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1146,"author":{"gitId":"banchiang"},"content":"**Testing General Event commands**","lastModifiedDate":"2021-04-09"},{"lineNumber":1147,"author":{"gitId":"banchiang"},"content":"   1. Add a general event. Test case: `add g/School contest on/10/10/2021 1200`. School contest will be added into the event list. ","lastModifiedDate":"2021-04-09"},{"lineNumber":1148,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1149,"author":{"gitId":"banchiang"},"content":"   2. Edit a general event. Test case: `edit 1 on/01/04/2021 1200` School contest date will be edited in the event list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1150,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1151,"author":{"gitId":"banchiang"},"content":"**Testing finding command**","lastModifiedDate":"2021-04-09"},{"lineNumber":1152,"author":{"gitId":"banchiang"},"content":"   1. Find the person. Test case: `find n/Benson`. Benson will be shown in the contact list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1153,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1154,"author":{"gitId":"banchiang"},"content":"   2. Find modules. Test case: `find m/CS1101S` CS1101S will be shown in the module list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1155,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1156,"author":{"gitId":"banchiang"},"content":"   3. Find event. Test case: `find g/School contest`. School contest will be shown in the event list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1157,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1158,"author":{"gitId":"banchiang"},"content":"**Testing Calendar**","lastModifiedDate":"2021-04-09"},{"lineNumber":1159,"author":{"gitId":"banchiang"},"content":"   1. Try opening the calendar. Test case: `calendar`. A calendar window (GUI) will pop up.","lastModifiedDate":"2021-04-09"},{"lineNumber":1160,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1161,"author":{"gitId":"banchiang"},"content":"   2. Try clicking the `\u003c` `\u003e` `today` buttons to see if the calendar moves.","lastModifiedDate":"2021-04-09"},{"lineNumber":1162,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1163,"author":{"gitId":"banchiang"},"content":"   3. Click on a date with events to see event for the day on the left panel of the calendar window (GUI).","lastModifiedDate":"2021-04-09"},{"lineNumber":1164,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-09"},{"lineNumber":1165,"author":{"gitId":"banchiang"},"content":"**Test delete commands**","lastModifiedDate":"2021-04-09"},{"lineNumber":1166,"author":{"gitId":"banchiang"},"content":"   1. Delete a person. Test case: `delete 1`. Benson will be deleted from the contacts list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1168,"author":{"gitId":"banchiang"},"content":"   2. Delete a module. Test case: `delete m/CS1101S`. CS1101S will be deleted from the contacts list.","lastModifiedDate":"2021-04-09"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1170,"author":{"gitId":"markuz5116"},"content":"   3. Delete an event. Test case: `delete g/1` School contest will be deleted from the event list.","lastModifiedDate":"2021-04-10"},{"lineNumber":1171,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1172,"author":{"gitId":"markuz5116"},"content":"**Test clear commands**\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":1173,"author":{"gitId":"markuz5116"},"content":"   1. Clear all contacts. Test case: `clear n/`. All contacts should be removed from RemindMe. The contacts\u0027 section in ","lastModifiedDate":"2021-04-10"},{"lineNumber":1174,"author":{"gitId":"markuz5116"},"content":"      RemindMe is empty.","lastModifiedDate":"2021-04-10"},{"lineNumber":1175,"author":{"gitId":"markuz5116"},"content":"      ","lastModifiedDate":"2021-04-10"},{"lineNumber":1176,"author":{"gitId":"markuz5116"},"content":"   2. Clears all modules. Test case: `clear m/`. All modules should be removed. RemindMe\u0027s module section should be empty.","lastModifiedDate":"2021-04-10"},{"lineNumber":1177,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1178,"author":{"gitId":"markuz5116"},"content":"   3. Clears all events. Test case: `clear g/`. All events should be removed. RemindMe\u0027s event section should be blank.","lastModifiedDate":"2021-04-10"},{"lineNumber":1179,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":1180,"author":{"gitId":"markuz5116"},"content":"   4. Clears RemindMe. Test case: `clear`. RemindMe is cleared completely.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":1181,"author":{"gitId":"markuz5116"},"content":"      (Ensure that RemindMe has some entries in it.) ","lastModifiedDate":"2021-04-10"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1185,"author":{"gitId":"banchiang"},"content":"   1. Dealing with missing data files","lastModifiedDate":"2021-04-10"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":1187,"author":{"gitId":"banchiang"},"content":"   Prerequisites:","lastModifiedDate":"2021-04-10"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":1189,"author":{"gitId":"banchiang"},"content":"   Remove the remindMe.json file from the folder with name \u0027data\u0027 in the same directory as your remindMe.jar file.","lastModifiedDate":"2021-04-10"},{"lineNumber":1190,"author":{"gitId":"banchiang"},"content":"   Ensure that the data folder is empty.","lastModifiedDate":"2021-04-10"},{"lineNumber":1191,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-10"},{"lineNumber":1192,"author":{"gitId":"banchiang"},"content":"   Test case: Launch ClientBook","lastModifiedDate":"2021-04-10"},{"lineNumber":1193,"author":{"gitId":"banchiang"},"content":"   ","lastModifiedDate":"2021-04-10"},{"lineNumber":1194,"author":{"gitId":"banchiang"},"content":"   Expected: ClientBook launches and loads the data of the sample contacts.","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"markuz5116":216,"Hzxin":252,"jellymias":12,"banchiang":445,"maikongeh":35,"-":234}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-02-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"RemindMe User Guide v1.4","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"This user guide provides [start-up](#2-quick-start) instructions as well as detailed descriptions and usage of","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"all the [features](#3-features) in the RemindMe app. You can also access the product website [here](https://ay2021s2-cs2103t-w15-1.github.io/tp/).","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-02-22"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"## Table of Contents","lastModifiedDate":"2021-02-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"* **[1. Introduction](#1-introduction)**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"* **[2. Quick Start](#2-quick-start)**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"* **[3. Features](#3-features)**","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    * **[3.1 Viewing Help: `help`](#31-viewing-help-help)**","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    * **[3.2 Adding: `add`](#32-adding-add)**","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"      * [3.2.1 Adding a person](#321-adding-a-person)","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"      * [3.2.2 Adding a module](#322-adding-a-module)","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"      * [3.2.3 Adding an assignment](#323-adding-an-assignment)","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"      * [3.2.4 Adding an exam](#324-adding-an-exam)","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"      * [3.2.5 Adding a general event](#325-adding-a-general-event)","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    * **[3.3 Editing: `edit`](#33-editing-edit)**","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"      * [3.3.1 Editing a person](#331-editing-a-person)","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"      * [3.3.2 Editing a module](#332-editing-a-module)","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"      * [3.3.3 Editing an assignment](#333-editing-an-assignment)","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"      * [3.3.4 Editing an exam](#334-editing-an-exam)","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"      * [3.3.5 Editing a general event](#335-editing-a-general-event)","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    * **[3.4 Finding: `find`](#34-finding-find)**","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"      * [3.4.1 Finding persons](#341-finding-persons-n)","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"      * [3.4.2 Finding modules](#342-finding-modules-m)  ","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"      * [3.4.3 Finding general events](#343-finding-general-events-g)","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"    * **[3.5 Listing all entries](#35-listing-all-entries-list)**","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"    * **[3.6 Marking as done `done`](#36-marking-as-done-done)**","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"    * **[3.7 Deleting: `delete`](#37-deleting-delete)**","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"      * [3.7.1 Deleting a person](#371-deleting-a-person)","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"      * [3.7.2 Deleting a module](#372-deleting-a-module)","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"      * [3.7.3 Deleting an assignment](#373-deleting-an-assignment)","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"      * [3.7.4 Deleting an exam](#374-deleting-an-exam)","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"      * [3.7.5 Deleting a general event](#375-deleting-a-general-event)  ","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"    * **[3.8 Clearing: `clear`](#38-clearing-clear)**","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"      * [3.8.1 Clearing RemindMe](#381-clearing-remindme)","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"      * [3.8.2 Clearing all persons](#382-clearing-all-persons)","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"      * [3.8.3 Clearing all modules](#383-clearing-all-modules)","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"      * [3.8.4 Clearing all general events](#384-clearing-all-general-events)  ","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"    * **[3.9 Viewing calendar: `calendar`](#39-viewing-calendar-calendar-c)**","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"    * **[3.10 Saving the data](#310-saving-the-data)**","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"    * **[3.11 Reminder window](#311-reminder-window)**","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"    * **[3.12 Exiting the program: `exit`](#312-exiting-the-program-exit-e)**","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"* **[FAQ](#4-faq)**","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"* **[Command summary](#5-command-summary)**","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"## 1. Introduction","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"Thank you for downloading RemindMe! We really appreciate that you chose to trust us to take care of your scheduling","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"needs! RemindMe aims to help School of Computing students manage their work, assignments, submissions and exams. We want","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"to help you take back control of YOUR life.","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"RemindMe visualises the tasks of our users using a combination of a list and a calendar to help you plan your time","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"the best way that works for you!","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"We also use a Command-Line Interface, so that all the fast-fingered SOC students can use RemindMe quickly and","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"comfortably. For those of you who prefer to use a mouse, we have also integrated GUI into our interface! We hope that ","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"having this flexibility will allow you to use RemindMe in the way you are most comfortable with! ","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"Start scheduling a better work life with RemindMe [here](#2-quick-start)!","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-27"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"## 2. Quick Start","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"1. Ensure you have Java `11` or above installed on your computer. You can download Java `11` via [link.](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html)","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"   * Set-up tutorial:","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"        * [Windows user](https://java.tutorials24x7.com/blog/how-to-install-java-11-on-windows)","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"        * [Mac user](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-macos.html#GUID-2FE451B0-9572-4E38-A1A5-568B77B146DE)","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"        * [Linux user](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-linux-platforms.html#GUID-737A84E4-2EFF-4D38-8E60-3E29D1B884B8)","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"2. Download the latest `RemindMe.jar` from our [GitHub release page](https://github.com/AY2021S2-CS2103T-W15-1/tp/releases).","lastModifiedDate":"2021-04-06"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"Copy the file to the folder you want to use as the home folder for your RemindMe.","lastModifiedDate":"2021-02-22"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"Double click the file to start the app. ","lastModifiedDate":"2021-02-22"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"3. Alternatively, you can use the command line to run RemindMe. ","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"   Open your command line by searching cmd in your desktop search bar. Next, navigate to the folder with RemindMe. ","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"Type in `java -jar RemindMe.jar` in the command box and press Enter to execute it.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"The following windows should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"   ![Ui](./images/Ui2.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"   *[Start up image of RemindMe]*","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e   ","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"4. Press start to proceed to the main window as shown below.\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"   ![UiMainWindow](images/UiMainWindow.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"   *[Main Window of RemindMe]*","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e         ","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"5. Type a command in the command box and press enter on the keyboard to execute it. \u003cbr\u003e ","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"   For example typing `help` and pressing enter will open the help window.","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e   ","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"6. Some example commands you can try:","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"   * `add m/CS2103`: Adds a module named \"CS2103\".","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"     ","lastModifiedDate":"2021-02-24"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"   * `calendar`: Displays the calendar complete with your assignment deadlines, exam dates, friends\u0027 birthdays, and event dates.","lastModifiedDate":"2021-04-09"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"     ","lastModifiedDate":"2021-02-24"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"   * `exit`: Exits the app.","lastModifiedDate":"2021-04-08"},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e   ","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"7. Refer to [Section 3: Features](#3-features) for specific usage details of each command.","lastModifiedDate":"2021-04-09"},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"8. Use `clear` to remove the sample inputs and start adding your own!","lastModifiedDate":"2021-04-09"},{"lineNumber":127,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"Hzxin"},"content":"## 3. Features","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"markuz5116"},"content":"Examples used in RemindMe are interconnected. Therefore, you can follow along and gain a deeper insight into how each","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"markuz5116"},"content":"feature works!","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"Hzxin"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"markuz5116"},"content":"* Words in `UPPER_CASE` are the parameters you supply.\u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"markuz5116"},"content":"  For example: In `add m/MODULE`, `MODULE` is a parameter you provide, such as `add m/CS2103`.","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Hzxin"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":145,"author":{"gitId":"markuz5116"},"content":"  For example: In `add n/NAME b/BIRTHDAY [t/TAG]`, the `TAG` parameter is optional. ","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"  Therefore, both `add n/Alice b/23/03/2021 t/friends` and `add n/Alice b/23/03/2021` are valid.","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":"* Items in curly braces mean you can only choose to apply one of the given parameters.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"  For example: In `edit INDEX {g/NEW DESCRIPTION on/NEW DATE}`, either `g/NEW DESCRIPTION` or `on/NEW DATE` is supplied.","lastModifiedDate":"2021-04-09"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"  Therefore, both `edit 1 g/Project meeting` and `edit 1 on/24/05/2021 2100` are valid.","lastModifiedDate":"2021-04-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":152,"author":{"gitId":"markuz5116"},"content":"* Items with `...` after them can be used multiple times.\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"  For example: `[t/TAG...]` can be used more than once!\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"  Therefore, `add n/Bob b/10/12/2000 t/friend t/colleague` is valid.","lastModifiedDate":"2021-04-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"* `DATE-TIME` should follow format day/month/year hour minutes: `DD/MM/YYYY HHMM`.","lastModifiedDate":"2021-04-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"**Tips:**\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":160,"author":{"gitId":"markuz5116"},"content":"* `Commnands` are case-insensitive.\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"    For example: `ADD` and `add` are both valid.","lastModifiedDate":"2021-04-06"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":164,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"RemindMe will not accept multiple parameters if it only takes in one!\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"Commands that do not take in parameters (such as `help` and `exit`) ignore extraneous parameters, except `clear`.\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":"For example: If you input `help 123`, RemindMe will return the result of the `help` function.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"markuz5116"},"content":"Parameters must follow the order given.\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"For example: `add b/BIRTHDAY n/NAME` is not allowed.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"If you have the [calendar window](#39-viewing-calendar-calendar-c) open while adding/editing/deleting/clearing events, ","lastModifiedDate":"2021-04-09"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":"it will not be automatically reflected on the calendar window. You would need to click on the **refresh button** to refresh the calendar. ","lastModifiedDate":"2021-04-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":177,"author":{"gitId":"banchiang"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":178,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":179,"author":{"gitId":"banchiang"},"content":"![refreshButton](images/refreshbutton.png)","lastModifiedDate":"2021-04-04"},{"lineNumber":180,"author":{"gitId":"banchiang"},"content":"*[refresh button to refresh calendar]*","lastModifiedDate":"2021-04-04"},{"lineNumber":181,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":182,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":184,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":185,"author":{"gitId":"Hzxin"},"content":"### 3.1 Viewing Help: `help`","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"jellymias"},"content":"The help function shows the URL to the user guide for RemindMe, which you are currently reading!","lastModifiedDate":"2021-04-09"},{"lineNumber":187,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"![help message](images/helpMessage.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"markuz5116"},"content":"*[Image of RemindMe\u0027s help message]*","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":194,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":195,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":196,"author":{"gitId":"Hzxin"},"content":"### 3.2 Adding: `add`","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"markuz5116"},"content":"This section explains how to add entries into your RemindMe. ","lastModifiedDate":"2021-04-01"},{"lineNumber":198,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"Hzxin"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"markuz5116"},"content":"* The adding of an assignment/exam requires the related module to be added first.","lastModifiedDate":"2021-04-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":204,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":206,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":207,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":208,"author":{"gitId":"markuz5116"},"content":"Duplicate entries are not allowed. Example:\u003cbr\u003e ","lastModifiedDate":"2021-04-07"},{"lineNumber":209,"author":{"gitId":"jellymias"},"content":"People with the same name.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":210,"author":{"gitId":"jellymias"},"content":"Modules with the same title.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":211,"author":{"gitId":"jellymias"},"content":"Assignments with the same description and date and time in the same module.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":212,"author":{"gitId":"jellymias"},"content":"Exams with the same date and time for the same module.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":213,"author":{"gitId":"jellymias"},"content":"General events with the same description and date and time. ","lastModifiedDate":"2021-04-09"},{"lineNumber":214,"author":{"gitId":"Hzxin"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":216,"author":{"gitId":"markuz5116"},"content":"You can add:","lastModifiedDate":"2021-04-02"},{"lineNumber":217,"author":{"gitId":"markuz5116"},"content":"* [3.2.1 Adding a person](#321-adding-a-person)","lastModifiedDate":"2021-04-02"},{"lineNumber":218,"author":{"gitId":"markuz5116"},"content":"* [3.2.2 Adding a module](#322-adding-a-module)","lastModifiedDate":"2021-04-02"},{"lineNumber":219,"author":{"gitId":"markuz5116"},"content":"* [3.2.3 Adding an assignment](#323-adding-an-assignment)","lastModifiedDate":"2021-04-02"},{"lineNumber":220,"author":{"gitId":"markuz5116"},"content":"* [3.2.4 Adding an exam](#324-adding-an-exam)","lastModifiedDate":"2021-04-02"},{"lineNumber":221,"author":{"gitId":"markuz5116"},"content":"* [3.2.5 Adding a general event](#325-adding-a-general-event)","lastModifiedDate":"2021-04-02"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":223,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":224,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"markuz5116"},"content":"#### 3.2.1 Adding a person","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"markuz5116"},"content":"Using the add feature, you can add your friends to RemindMe and let RemindMe remind you of their birthdays. ","lastModifiedDate":"2021-04-01"},{"lineNumber":228,"author":{"gitId":"jellymias"},"content":"You can also add tags for them to accentuate your relationship with them!","lastModifiedDate":"2021-04-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":230,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":232,"author":{"gitId":"jellymias"},"content":"**Note:**","lastModifiedDate":"2021-04-09"},{"lineNumber":233,"author":{"gitId":"markuz5116"},"content":"* `BIRTHDAY` follows format day/month/year: `DD/MM/YYYY`.","lastModifiedDate":"2021-04-01"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":235,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"markuz5116"},"content":"Command: `add n/NAME b/BIRTHDAY [t/TAG...]`","lastModifiedDate":"2021-04-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":239,"author":{"gitId":"markuz5116"},"content":"Example:","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"Hzxin"},"content":"* `add n/Alice b/22/10/1999`","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"Hzxin"},"content":"* `add n/Benson b/30/09/1997 t/friends`","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":243,"author":{"gitId":"markuz5116"},"content":"Expected Result:\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"markuz5116"},"content":"![Expected Result for Adding Persons](./images/addcommand/addpersonexpectedresult.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":245,"author":{"gitId":"markuz5116"},"content":"*[Result from adding Alice and Benson]*","lastModifiedDate":"2021-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":247,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":248,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":249,"author":{"gitId":"Hzxin"},"content":"#### 3.2.2 Adding a module","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"markuz5116"},"content":"You can add modules that you are taking with their respective titles. Subsequently, you can add the corresponding","lastModifiedDate":"2021-04-01"},{"lineNumber":251,"author":{"gitId":"markuz5116"},"content":"assignments and exams for each module. Now, you can distinguish the assignments and exams for each module, easily ","lastModifiedDate":"2021-04-01"},{"lineNumber":252,"author":{"gitId":"markuz5116"},"content":"keeping track of your workload.","lastModifiedDate":"2021-04-01"},{"lineNumber":253,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":254,"author":{"gitId":"markuz5116"},"content":"Command: `add m/MODULE`","lastModifiedDate":"2021-04-01"},{"lineNumber":255,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":256,"author":{"gitId":"Hzxin"},"content":"Example:","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"markuz5116"},"content":"* `add m/CS1101`","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"markuz5116"},"content":"* `add m/CS1203`","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":260,"author":{"gitId":"Hzxin"},"content":"Result expected:","lastModifiedDate":"2021-03-24"},{"lineNumber":261,"author":{"gitId":"markuz5116"},"content":"* `New module added: CS1101`","lastModifiedDate":"2021-03-28"},{"lineNumber":262,"author":{"gitId":"markuz5116"},"content":"* `New module added: CS1203`","lastModifiedDate":"2021-03-28"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":264,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":266,"author":{"gitId":"Hzxin"},"content":"#### 3.2.3 Adding an assignment","lastModifiedDate":"2021-03-24"},{"lineNumber":267,"author":{"gitId":"jellymias"},"content":"Now, let\u0027s add an assignment to the module. Don\u0027t forget that you need to specify the deadline when ","lastModifiedDate":"2021-04-09"},{"lineNumber":268,"author":{"gitId":"jellymias"},"content":"adding your assignment to RemindMe. ","lastModifiedDate":"2021-04-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":270,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":271,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":272,"author":{"gitId":"markuz5116"},"content":"**Note:**","lastModifiedDate":"2021-04-08"},{"lineNumber":273,"author":{"gitId":"markuz5116"},"content":"* The deadline follows the `DATE-TIME` format.","lastModifiedDate":"2021-04-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":277,"author":{"gitId":"jellymias"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":278,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":279,"author":{"gitId":"jellymias"},"content":"The module provided MUST already exist in RemindMe.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":280,"author":{"gitId":"jellymias"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":281,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":282,"author":{"gitId":"markuz5116"},"content":"Command: `add m/MODULE a/ASSIGNMENT by/DEADLINE`","lastModifiedDate":"2021-04-01"},{"lineNumber":283,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":284,"author":{"gitId":"Hzxin"},"content":"Example:","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"Hzxin"},"content":"* `add m/CS2101 a/Essay 1 by/01/01/2021 2359`","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":287,"author":{"gitId":"Hzxin"},"content":"Result expected:","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"Hzxin"},"content":"* `New assignment added: Essay 1 due: 01/01/2021 2359`","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":290,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":291,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":292,"author":{"gitId":"Hzxin"},"content":"#### 3.2.4 Adding an exam","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"jellymias"},"content":"Next, let\u0027s add an exam to a module.","lastModifiedDate":"2021-04-09"},{"lineNumber":294,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":295,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":296,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":297,"author":{"gitId":"markuz5116"},"content":"**Note:**","lastModifiedDate":"2021-04-08"},{"lineNumber":298,"author":{"gitId":"markuz5116"},"content":"* The exam\u0027s date-time follows the `DATE-TIME` format.","lastModifiedDate":"2021-04-08"},{"lineNumber":299,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":300,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":301,"author":{"gitId":"jellymias"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":302,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":303,"author":{"gitId":"jellymias"},"content":"The module provided MUST already exist in RemindMe","lastModifiedDate":"2021-04-09"},{"lineNumber":304,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":305,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":306,"author":{"gitId":"markuz5116"},"content":"Command: `add m/MODULE e/DATE-TIME`","lastModifiedDate":"2021-04-01"},{"lineNumber":307,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":308,"author":{"gitId":"Hzxin"},"content":"Example:","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"Hzxin"},"content":"* `add m/CS2101 e/01/01/2021 2359`","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":311,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":312,"author":{"gitId":"markuz5116"},"content":"**Results after the examples from 3.2.2 to 3.2.4:**","lastModifiedDate":"2021-04-01"},{"lineNumber":313,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":314,"author":{"gitId":"markuz5116"},"content":"![Result For Adding Modules](./images/addcommand/addtypicalmoduleresult.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":315,"author":{"gitId":"markuz5116"},"content":"*[Result of adding the modules and their respective assignments and exams]*","lastModifiedDate":"2021-04-01"},{"lineNumber":316,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":317,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":318,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":319,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":320,"author":{"gitId":"Hzxin"},"content":"#### 3.2.5 Adding a general event","lastModifiedDate":"2021-03-24"},{"lineNumber":321,"author":{"gitId":"markuz5116"},"content":"Outside of school work, we all have other activities that require reminders, such as meeting up with your friends or a ","lastModifiedDate":"2021-04-01"},{"lineNumber":322,"author":{"gitId":"jellymias"},"content":"doctor\u0027s appointment. You can add these activities to RemindMe as general events!","lastModifiedDate":"2021-04-09"},{"lineNumber":323,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":324,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":325,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":326,"author":{"gitId":"markuz5116"},"content":"**Note:**","lastModifiedDate":"2021-04-01"},{"lineNumber":327,"author":{"gitId":"markuz5116"},"content":"* The date and time of your events follow the `DATE-TIME` format.","lastModifiedDate":"2021-04-01"},{"lineNumber":328,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":329,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":330,"author":{"gitId":"jellymias"},"content":"    ","lastModifiedDate":"2021-02-25"},{"lineNumber":331,"author":{"gitId":"markuz5116"},"content":"Command: `add g/GENERAL EVENT on/DATE-TIME`","lastModifiedDate":"2021-04-01"},{"lineNumber":332,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":333,"author":{"gitId":"Hzxin"},"content":"Example:","lastModifiedDate":"2021-03-02"},{"lineNumber":334,"author":{"gitId":"Hzxin"},"content":"* `add g/School contest on/10/10/2021 1200`","lastModifiedDate":"2021-03-24"},{"lineNumber":335,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"Hzxin"},"content":"Result expected:","lastModifiedDate":"2021-03-24"},{"lineNumber":337,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":338,"author":{"gitId":"markuz5116"},"content":"![Result For Adding Event](./images/addcommand/addeventexpectedresult.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":339,"author":{"gitId":"markuz5116"},"content":"*[Result for adding the school event]*","lastModifiedDate":"2021-04-01"},{"lineNumber":340,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":341,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":342,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":343,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":344,"author":{"gitId":"Hzxin"},"content":"### 3.3 Editing: `edit`","lastModifiedDate":"2021-03-24"},{"lineNumber":345,"author":{"gitId":"jellymias"},"content":"If you created an entry wrongly, you don\u0027t have to delete it! With RemindMe\u0027s edit function, you can edit anything, ","lastModifiedDate":"2021-04-09"},{"lineNumber":346,"author":{"gitId":"markuz5116"},"content":"saving you the hassle of deleting and recreating an entry just because of a tiny mistake. ","lastModifiedDate":"2021-04-01"},{"lineNumber":347,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":348,"author":{"gitId":"Hzxin"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":349,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":350,"author":{"gitId":"Hzxin"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":351,"author":{"gitId":"markuz5116"},"content":"* The edited content must not be blank.","lastModifiedDate":"2021-03-28"},{"lineNumber":352,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":353,"author":{"gitId":"Hzxin"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":354,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":355,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":356,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":357,"author":{"gitId":"jellymias"},"content":"Editing of an entry should not result in duplicates.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":358,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":359,"author":{"gitId":"jellymias"},"content":"Target entries for editing MUST exist in RemindMe.","lastModifiedDate":"2021-04-09"},{"lineNumber":360,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":361,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":362,"author":{"gitId":"markuz5116"},"content":"You can edit:","lastModifiedDate":"2021-04-01"},{"lineNumber":363,"author":{"gitId":"markuz5116"},"content":"* [3.3.1 Editing a person](#331-editing-a-person)","lastModifiedDate":"2021-04-01"},{"lineNumber":364,"author":{"gitId":"markuz5116"},"content":"* [3.3.2 Editing a module](#332-editing-a-module)","lastModifiedDate":"2021-04-01"},{"lineNumber":365,"author":{"gitId":"markuz5116"},"content":"* [3.3.3 Editing an assignment](#333-editing-an-assignment)","lastModifiedDate":"2021-04-01"},{"lineNumber":366,"author":{"gitId":"markuz5116"},"content":"* [3.3.4 Editing an exam](#334-editing-an-exam)","lastModifiedDate":"2021-04-01"},{"lineNumber":367,"author":{"gitId":"markuz5116"},"content":"* [3.3.5 Editing a general event](#335-editing-a-general-event)","lastModifiedDate":"2021-04-01"},{"lineNumber":368,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":369,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":370,"author":{"gitId":"markuz5116"},"content":"    ","lastModifiedDate":"2021-04-02"},{"lineNumber":371,"author":{"gitId":"Hzxin"},"content":"#### 3.3.1 Editing a person","lastModifiedDate":"2021-03-24"},{"lineNumber":372,"author":{"gitId":"markuz5116"},"content":"You can update your friend\u0027s identity, either changing their name, their birthday or their tags.","lastModifiedDate":"2021-04-01"},{"lineNumber":373,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":374,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":375,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":376,"author":{"gitId":"markuz5116"},"content":"**Tip:**\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":377,"author":{"gitId":"markuz5116"},"content":"* You can find the contact you would want to change first with RemindMe\u0027s `find`, ","lastModifiedDate":"2021-04-01"},{"lineNumber":378,"author":{"gitId":"markuz5116"},"content":"  such that you can easily update the existing details.","lastModifiedDate":"2021-04-01"},{"lineNumber":379,"author":{"gitId":"markuz5116"},"content":"  ","lastModifiedDate":"2021-04-06"},{"lineNumber":380,"author":{"gitId":"markuz5116"},"content":"* You can use `t/` to remove all tags on the person you are editing!","lastModifiedDate":"2021-04-06"},{"lineNumber":381,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":382,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":383,"author":{"gitId":"markuz5116"},"content":"Command: `edit INDEX n/NEW NAME [b/NEW BIRTHDAY] [t/NEW TAG]`","lastModifiedDate":"2021-04-06"},{"lineNumber":384,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":386,"author":{"gitId":"Hzxin"},"content":"* `edit 1 n/Jason`","lastModifiedDate":"2021-03-24"},{"lineNumber":387,"author":{"gitId":"markuz5116"},"content":"* `edit 2 n/Benson b/30/09/1997`","lastModifiedDate":"2021-03-28"},{"lineNumber":388,"author":{"gitId":"markuz5116"},"content":"* `edit 2 n/Benson t/enemy`","lastModifiedDate":"2021-03-28"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":390,"author":{"gitId":"Hzxin"},"content":"Results expected:","lastModifiedDate":"2021-03-28"},{"lineNumber":391,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":392,"author":{"gitId":"markuz5116"},"content":"![Edit Persons Result](./images/editcommand/editpersonresult.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":393,"author":{"gitId":"markuz5116"},"content":"*[Result of editing Alice to Jason and updating Benson\u0027s birthday and tag]*","lastModifiedDate":"2021-04-01"},{"lineNumber":394,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":396,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":398,"author":{"gitId":"Hzxin"},"content":"#### 3.3.2 Editing a module","lastModifiedDate":"2021-03-24"},{"lineNumber":399,"author":{"gitId":"markuz5116"},"content":"You can update your modules\u0027 titles with the edit function. ","lastModifiedDate":"2021-04-01"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":401,"author":{"gitId":"markuz5116"},"content":"Command: `edit INDEX m/NEW MODULE TITLE`","lastModifiedDate":"2021-04-01"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"Hzxin"},"content":"* `edit 1 m/CS2106`","lastModifiedDate":"2021-03-24"},{"lineNumber":405,"author":{"gitId":"markuz5116"},"content":"* `edit 2 m/Software Engineering`","lastModifiedDate":"2021-03-28"},{"lineNumber":406,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":407,"author":{"gitId":"Hzxin"},"content":"Results expected:","lastModifiedDate":"2021-03-24"},{"lineNumber":408,"author":{"gitId":"Hzxin"},"content":"* `Module edited: CS2106`","lastModifiedDate":"2021-03-24"},{"lineNumber":409,"author":{"gitId":"markuz5116"},"content":"* `Module edited: Software Engineering`","lastModifiedDate":"2021-03-28"},{"lineNumber":410,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":411,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":412,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":413,"author":{"gitId":"Hzxin"},"content":"#### 3.3.3 Editing an assignment","lastModifiedDate":"2021-03-24"},{"lineNumber":414,"author":{"gitId":"jellymias"},"content":"Did an assignment\u0027s deadline get postponed? You can update the assignment\u0027s deadline using the edit function. ","lastModifiedDate":"2021-04-09"},{"lineNumber":415,"author":{"gitId":"jellymias"},"content":"You can change the assignment description as well if you made an error while entering it!","lastModifiedDate":"2021-04-09"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":417,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":418,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":419,"author":{"gitId":"jellymias"},"content":"Only one of the inputs in the curly braces can be used for a single edit assignment command.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":420,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":421,"author":{"gitId":"jellymias"},"content":"The target module and assignment MUST exist in RemindMe.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":422,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":424,"author":{"gitId":"jellymias"},"content":"Command: `edit m/MODULE a/ASSIGNMENT INDEX {d/NEW DESCRIPTION by/NEW DEADLINE}`","lastModifiedDate":"2021-04-09"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":426,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-02"},{"lineNumber":427,"author":{"gitId":"markuz5116"},"content":"* `edit m/Software Engineering a/1 d/Update UG`","lastModifiedDate":"2021-03-28"},{"lineNumber":428,"author":{"gitId":"markuz5116"},"content":"* `edit m/Software Engineering a/1 by/27/04/2021 1900`","lastModifiedDate":"2021-03-28"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"markuz5116"},"content":"Result expected:","lastModifiedDate":"2021-03-25"},{"lineNumber":431,"author":{"gitId":"markuz5116"},"content":"* `Assignment edited: Update UG due: 23/03/2021 2359 [ ]`","lastModifiedDate":"2021-04-01"},{"lineNumber":432,"author":{"gitId":"markuz5116"},"content":"* `Assignment edited: Update UG due: 27/04/2021 1900 [ ]`","lastModifiedDate":"2021-04-01"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":436,"author":{"gitId":"Hzxin"},"content":"#### 3.3.4 Editing an exam","lastModifiedDate":"2021-03-24"},{"lineNumber":437,"author":{"gitId":"markuz5116"},"content":"You can also change the date of the exam in a module.","lastModifiedDate":"2021-04-01"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":439,"author":{"gitId":"jellymias"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":440,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":441,"author":{"gitId":"jellymias"},"content":"The target module and exam MUST exist in RemindMe.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":442,"author":{"gitId":"jellymias"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":443,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":444,"author":{"gitId":"markuz5116"},"content":"Command: `edit m/MODULE e/EXAM INDEX on/NEW DATE-TIME`","lastModifiedDate":"2021-04-01"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":446,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":447,"author":{"gitId":"markuz5116"},"content":"* `edit m/CS2106 e/1 on/04/05/2021 1400`","lastModifiedDate":"2021-03-28"},{"lineNumber":448,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":449,"author":{"gitId":"markuz5116"},"content":"Result expected:","lastModifiedDate":"2021-03-25"},{"lineNumber":450,"author":{"gitId":"Hzxin"},"content":"* `Exam edited: Exam is on: 04/05/2021 1400`","lastModifiedDate":"2021-03-24"},{"lineNumber":451,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":452,"author":{"gitId":"markuz5116"},"content":"**Final result for editing module, assignments, and exams:**","lastModifiedDate":"2021-04-01"},{"lineNumber":453,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":454,"author":{"gitId":"markuz5116"},"content":"![Edited modules](./images/editcommand/editmoduleresult.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":455,"author":{"gitId":"markuz5116"},"content":"*[Results for editing the respective modules, assignments, and exams]*","lastModifiedDate":"2021-04-01"},{"lineNumber":456,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":457,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":458,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":460,"author":{"gitId":"Hzxin"},"content":"#### 3.3.5 Editing a general event","lastModifiedDate":"2021-03-24"},{"lineNumber":461,"author":{"gitId":"markuz5116"},"content":"You can also update the name and date-time of your general events.","lastModifiedDate":"2021-04-01"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":463,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":465,"author":{"gitId":"jellymias"},"content":"Only one of the inputs in the curly braces can be used for a single edit general event command.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":466,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":468,"author":{"gitId":"jellymias"},"content":"Command: `edit INDEX {g/NEW DESCRIPTION on/NEW DATE}`","lastModifiedDate":"2021-04-09"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":470,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":471,"author":{"gitId":"markuz5116"},"content":"* `edit 1 g/FOC logs meeting`","lastModifiedDate":"2021-03-28"},{"lineNumber":472,"author":{"gitId":"Hzxin"},"content":"* `edit 1 on/01/04/2021 0001`","lastModifiedDate":"2021-03-24"},{"lineNumber":473,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":474,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":475,"author":{"gitId":"markuz5116"},"content":"![Edit Event](./images/editcommand/editeventresult.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":476,"author":{"gitId":"markuz5116"},"content":"*[Results for editing the general event]*","lastModifiedDate":"2021-04-01"},{"lineNumber":477,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":479,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"Hzxin"},"content":"### 3.4 Finding: `find`","lastModifiedDate":"2021-03-24"},{"lineNumber":482,"author":{"gitId":"jellymias"},"content":"As you use RemindMe, you will have more and more entries. It can become difficult to look for specific entries. ","lastModifiedDate":"2021-04-09"},{"lineNumber":483,"author":{"gitId":"jellymias"},"content":"Luckily, RemindMe has a way to look for them. Using the find function, where RemindMe will show you entries","lastModifiedDate":"2021-04-09"},{"lineNumber":484,"author":{"gitId":"markuz5116"},"content":"those matching the keywords you provide!","lastModifiedDate":"2021-04-01"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"Hzxin"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"Hzxin"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":489,"author":{"gitId":"markuz5116"},"content":"* Only whole words are matched.","lastModifiedDate":"2021-04-01"},{"lineNumber":490,"author":{"gitId":"markuz5116"},"content":"* Entries matching at least one of the keywords will be returned.","lastModifiedDate":"2021-03-28"},{"lineNumber":491,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"markuz5116"},"content":"**Tips:**\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":493,"author":{"gitId":"markuz5116"},"content":"* The order of keywords doesn\u0027t matter. Hence, you can list all keywords the entry you are looking for contains.","lastModifiedDate":"2021-04-01"},{"lineNumber":494,"author":{"gitId":"jellymias"},"content":"* All find operations are case-insensitive, so capitalisation doesn\u0027t matter!","lastModifiedDate":"2021-04-09"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":496,"author":{"gitId":"Hzxin"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":498,"author":{"gitId":"markuz5116"},"content":"You can find:","lastModifiedDate":"2021-04-01"},{"lineNumber":499,"author":{"gitId":"markuz5116"},"content":"* [3.4.1 Finding persons](#341-finding-persons-n)","lastModifiedDate":"2021-04-01"},{"lineNumber":500,"author":{"gitId":"markuz5116"},"content":"* [3.4.2 Finding modules](#342-finding-modules-m)  ","lastModifiedDate":"2021-04-01"},{"lineNumber":501,"author":{"gitId":"markuz5116"},"content":"* [3.4.3 Finding general events](#343-finding-general-events-g)","lastModifiedDate":"2021-04-01"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":503,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":505,"author":{"gitId":"markuz5116"},"content":"#### 3.4.1 Finding persons: `n/`","lastModifiedDate":"2021-03-28"},{"lineNumber":506,"author":{"gitId":"markuz5116"},"content":"You can search your contacts whose names contain any of the given keywords.  ","lastModifiedDate":"2021-04-01"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":508,"author":{"gitId":"Hzxin"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":510,"author":{"gitId":"Hzxin"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":511,"author":{"gitId":"Hzxin"},"content":"* Only the names are matched to the keywords","lastModifiedDate":"2021-03-24"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":513,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":515,"author":{"gitId":"markuz5116"},"content":"Command: `find n/KEYWORD [MORE KEYWORDS...]`  ","lastModifiedDate":"2021-04-08"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"markuz5116"},"content":"Example:","lastModifiedDate":"2021-03-28"},{"lineNumber":518,"author":{"gitId":"markuz5116"},"content":"* `find n/jason`","lastModifiedDate":"2021-04-01"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":520,"author":{"gitId":"Hzxin"},"content":"Expected Result:","lastModifiedDate":"2021-03-28"},{"lineNumber":521,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":522,"author":{"gitId":"markuz5116"},"content":"![Find Person Example](./images/findcommand/findperson.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":523,"author":{"gitId":"markuz5116"},"content":"*[Result for `find n/jason`]*","lastModifiedDate":"2021-04-01"},{"lineNumber":524,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":526,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":527,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"markuz5116"},"content":"#### 3.4.2 Finding modules: `m/`","lastModifiedDate":"2021-03-28"},{"lineNumber":529,"author":{"gitId":"markuz5116"},"content":"You can look up your modules based on their titles as well.","lastModifiedDate":"2021-04-01"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"Hzxin"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"Hzxin"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":534,"author":{"gitId":"Hzxin"},"content":"* Only the module titles are matched to the keywords","lastModifiedDate":"2021-03-24"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"Hzxin"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":537,"author":{"gitId":"Hzxin"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":538,"author":{"gitId":"markuz5116"},"content":"Command: `find m/KEYWORD [MORE KEYWORDS...]`  ","lastModifiedDate":"2021-04-08"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"Hzxin"},"content":"Examples: ","lastModifiedDate":"2021-02-27"},{"lineNumber":541,"author":{"gitId":"markuz5116"},"content":"* `find m/CS1101`  ","lastModifiedDate":"2021-03-28"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"Hzxin"},"content":"Expected Result:","lastModifiedDate":"2021-03-28"},{"lineNumber":544,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":545,"author":{"gitId":"markuz5116"},"content":"![Find Module Example](./images/findcommand/findcs1101.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":546,"author":{"gitId":"markuz5116"},"content":"*[Result for `find m/CS1101`]*","lastModifiedDate":"2021-04-01"},{"lineNumber":547,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":548,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":549,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":550,"author":{"gitId":"markuz5116"},"content":"  ","lastModifiedDate":"2021-03-28"},{"lineNumber":551,"author":{"gitId":"markuz5116"},"content":"#### 3.4.3 Finding general events: `g/`","lastModifiedDate":"2021-03-28"},{"lineNumber":552,"author":{"gitId":"markuz5116"},"content":"You can find the general events that match with your keywords too! ","lastModifiedDate":"2021-04-01"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"Hzxin"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"Hzxin"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":557,"author":{"gitId":"Hzxin"},"content":"* Only the descriptions of the general events are matched to the keywords","lastModifiedDate":"2021-03-24"},{"lineNumber":558,"author":{"gitId":"markuz5116"},"content":"    ","lastModifiedDate":"2021-02-24"},{"lineNumber":559,"author":{"gitId":"Hzxin"},"content":"\u003c/div\u003e    ","lastModifiedDate":"2021-03-24"},{"lineNumber":560,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":561,"author":{"gitId":"markuz5116"},"content":"Command: `find g/KEYWORD [MORE KEYWORDS...]`  ","lastModifiedDate":"2021-04-08"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"Hzxin"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":564,"author":{"gitId":"markuz5116"},"content":"* `find g/FOC`  ","lastModifiedDate":"2021-03-28"},{"lineNumber":565,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":566,"author":{"gitId":"Hzxin"},"content":"Expected Result:","lastModifiedDate":"2021-03-28"},{"lineNumber":567,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":568,"author":{"gitId":"markuz5116"},"content":"![Find Event](./images/findcommand/findevent.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":569,"author":{"gitId":"markuz5116"},"content":"*[Result for `find g/FOC`]*","lastModifiedDate":"2021-04-01"},{"lineNumber":570,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":571,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":572,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"markuz5116"},"content":"### 3.5 Listing all entries: `list`","lastModifiedDate":"2021-04-01"},{"lineNumber":575,"author":{"gitId":"markuz5116"},"content":"After you find your specific tasks, you now want to view all your entries. You can use RemindMe\u0027s list function to show ","lastModifiedDate":"2021-04-01"},{"lineNumber":576,"author":{"gitId":"markuz5116"},"content":"everything in RemindMe.","lastModifiedDate":"2021-04-01"},{"lineNumber":577,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":578,"author":{"gitId":"markuz5116"},"content":"Command: `list`","lastModifiedDate":"2021-04-01"},{"lineNumber":579,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":580,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":581,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":582,"author":{"gitId":"markuz5116"},"content":"### 3.6 Marking as done: `done`","lastModifiedDate":"2021-04-01"},{"lineNumber":583,"author":{"gitId":"jellymias"},"content":"When you complete your assignments, you can mark them as done to keep track of completed work. ","lastModifiedDate":"2021-04-09"},{"lineNumber":584,"author":{"gitId":"jellymias"},"content":"If you need to refine your assignments further, you can remove the done status by calling `done` again!","lastModifiedDate":"2021-04-09"},{"lineNumber":585,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":586,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":587,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":588,"author":{"gitId":"markuz5116"},"content":"**Note:**\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":589,"author":{"gitId":"markuz5116"},"content":"* You can only mark assignments as done. ","lastModifiedDate":"2021-04-01"},{"lineNumber":590,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":591,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"jellymias"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":594,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":595,"author":{"gitId":"jellymias"},"content":"The target module and assignment MUST exist in RemindMe.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":596,"author":{"gitId":"jellymias"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":597,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":598,"author":{"gitId":"markuz5116"},"content":"Command: `done m/MODULE a/INDEX`","lastModifiedDate":"2021-04-01"},{"lineNumber":599,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":600,"author":{"gitId":"markuz5116"},"content":"Example:","lastModifiedDate":"2021-03-28"},{"lineNumber":601,"author":{"gitId":"markuz5116"},"content":"*  `done m/Software Engineering a/1`","lastModifiedDate":"2021-03-28"},{"lineNumber":602,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":603,"author":{"gitId":"Hzxin"},"content":"Expected Result:","lastModifiedDate":"2021-03-28"},{"lineNumber":604,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":605,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":606,"author":{"gitId":"markuz5116"},"content":"![Mark Assignment as done example](./images/donecommand/doneassignment.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":607,"author":{"gitId":"markuz5116"},"content":"*[Result for marking assignment 1 in Software Engineering as done.]*","lastModifiedDate":"2021-04-01"},{"lineNumber":608,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":609,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":610,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":611,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"markuz5116"},"content":"### 3.7 Deleting: `delete`","lastModifiedDate":"2021-04-01"},{"lineNumber":613,"author":{"gitId":"markuz5116"},"content":"When you do not need your entries anymore, you can delete them using RemindMe\u0027s delete function.","lastModifiedDate":"2021-04-01"},{"lineNumber":614,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":615,"author":{"gitId":"jellymias"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":617,"author":{"gitId":"jellymias"},"content":"The index provided must be a valid index for the desired entry.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":618,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":620,"author":{"gitId":"markuz5116"},"content":"You can delete:","lastModifiedDate":"2021-04-01"},{"lineNumber":621,"author":{"gitId":"markuz5116"},"content":"* [3.7.1 Deleting a person](#371-deleting-a-person)","lastModifiedDate":"2021-04-01"},{"lineNumber":622,"author":{"gitId":"markuz5116"},"content":"* [3.7.2 Deleting a module](#372-deleting-a-module)","lastModifiedDate":"2021-04-01"},{"lineNumber":623,"author":{"gitId":"markuz5116"},"content":"* [3.7.3 Deleting an assignment](#373-deleting-an-assignment)","lastModifiedDate":"2021-04-01"},{"lineNumber":624,"author":{"gitId":"markuz5116"},"content":"* [3.7.4 Deleting an exam](#374-deleting-an-exam)","lastModifiedDate":"2021-04-01"},{"lineNumber":625,"author":{"gitId":"markuz5116"},"content":"* [3.7.5 Deleting a general event](#375-deleting-a-general-event)","lastModifiedDate":"2021-04-01"},{"lineNumber":626,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":627,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)    ","lastModifiedDate":"2021-04-02"},{"lineNumber":628,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":629,"author":{"gitId":"markuz5116"},"content":"#### 3.7.1 Deleting a person","lastModifiedDate":"2021-04-01"},{"lineNumber":630,"author":{"gitId":"markuz5116"},"content":"You can remove a person from your RemindMe, but hopefully, you won\u0027t need to use it :)","lastModifiedDate":"2021-04-01"},{"lineNumber":631,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":632,"author":{"gitId":"markuz5116"},"content":"Command: `delete INDEX`  ","lastModifiedDate":"2021-04-01"},{"lineNumber":633,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":634,"author":{"gitId":"Hzxin"},"content":"Examples:","lastModifiedDate":"2021-03-24"},{"lineNumber":635,"author":{"gitId":"Hzxin"},"content":"* `delete 1`  ","lastModifiedDate":"2021-03-24"},{"lineNumber":636,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":637,"author":{"gitId":"Hzxin"},"content":"Expected Result:","lastModifiedDate":"2021-03-28"},{"lineNumber":638,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":639,"author":{"gitId":"markuz5116"},"content":"![Delete Person Example](./images/deletecommand/deletealice.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":640,"author":{"gitId":"markuz5116"},"content":"*[Result for deleting Jason which is the first person in the contact list.]*","lastModifiedDate":"2021-04-01"},{"lineNumber":641,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":642,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":643,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":644,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":645,"author":{"gitId":"markuz5116"},"content":"#### 3.7.2 Deleting a module","lastModifiedDate":"2021-04-01"},{"lineNumber":646,"author":{"gitId":"markuz5116"},"content":"Once you have completed a module, you can delete it from RemindMe as a final goodbye!","lastModifiedDate":"2021-04-01"},{"lineNumber":647,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":648,"author":{"gitId":"markuz5116"},"content":"Command: `delete m/MODULE`","lastModifiedDate":"2021-04-01"},{"lineNumber":649,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":650,"author":{"gitId":"Hzxin"},"content":"Example:","lastModifiedDate":"2021-03-24"},{"lineNumber":651,"author":{"gitId":"markuz5116"},"content":"* `delete m/CS1101`  ","lastModifiedDate":"2021-04-01"},{"lineNumber":652,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":653,"author":{"gitId":"Hzxin"},"content":"Expected Result:","lastModifiedDate":"2021-03-28"},{"lineNumber":654,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":655,"author":{"gitId":"markuz5116"},"content":"![Delete Module Example](./images/deletecommand/deletemodule.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":656,"author":{"gitId":"markuz5116"},"content":"*[Result for deleting CS1101.]*","lastModifiedDate":"2021-04-01"},{"lineNumber":657,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":658,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":659,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":660,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":661,"author":{"gitId":"markuz5116"},"content":"#### 3.7.3 Deleting an assignment","lastModifiedDate":"2021-04-01"},{"lineNumber":662,"author":{"gitId":"jellymias"},"content":"When you have completed an assignment and do not need it anymore, you can remove it from RemindMe to reduce clutter!","lastModifiedDate":"2021-04-09"},{"lineNumber":663,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":664,"author":{"gitId":"markuz5116"},"content":"Command: `delete m/MODULE a/INDEX`","lastModifiedDate":"2021-04-01"},{"lineNumber":665,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":666,"author":{"gitId":"Hzxin"},"content":"Example:","lastModifiedDate":"2021-03-24"},{"lineNumber":667,"author":{"gitId":"markuz5116"},"content":"* `delete m/Software Engineering a/1`","lastModifiedDate":"2021-04-01"},{"lineNumber":668,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":669,"author":{"gitId":"Hzxin"},"content":"Expected Result:","lastModifiedDate":"2021-03-28"},{"lineNumber":670,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":671,"author":{"gitId":"markuz5116"},"content":"![Delete Assignment Example](./images/deletecommand/deleteassignment.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":672,"author":{"gitId":"markuz5116"},"content":"*[Result for deleting assignment Update UG in Software Engineering]*","lastModifiedDate":"2021-04-01"},{"lineNumber":673,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":674,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":675,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":676,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":677,"author":{"gitId":"markuz5116"},"content":"#### 3.7.4 Deleting an exam","lastModifiedDate":"2021-04-01"},{"lineNumber":678,"author":{"gitId":"markuz5116"},"content":"After an exam, you can delete it from RemindMe to celebrate that the exam is over!","lastModifiedDate":"2021-04-01"},{"lineNumber":679,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":680,"author":{"gitId":"markuz5116"},"content":"Command: `delete m/MODULE e/INDEX`","lastModifiedDate":"2021-04-01"},{"lineNumber":681,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":682,"author":{"gitId":"markuz5116"},"content":"Example: ","lastModifiedDate":"2021-03-28"},{"lineNumber":683,"author":{"gitId":"markuz5116"},"content":"* `delete m/CS2106 e/1`","lastModifiedDate":"2021-03-28"},{"lineNumber":684,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":685,"author":{"gitId":"Hzxin"},"content":"Expected Result:","lastModifiedDate":"2021-03-28"},{"lineNumber":686,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":687,"author":{"gitId":"markuz5116"},"content":"![Delete Exam Example](./images/deletecommand/deleteexam.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":688,"author":{"gitId":"markuz5116"},"content":"*[Result for deleting the first exam in CS2106.]*","lastModifiedDate":"2021-04-01"},{"lineNumber":689,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":690,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":691,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":692,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":693,"author":{"gitId":"markuz5116"},"content":"#### 3.7.5 Deleting a general event","lastModifiedDate":"2021-04-01"},{"lineNumber":694,"author":{"gitId":"jellymias"},"content":"When a general event is over, you can remove it from RemindMe as well!","lastModifiedDate":"2021-04-09"},{"lineNumber":695,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":696,"author":{"gitId":"markuz5116"},"content":"Command: `delete g/INDEX`","lastModifiedDate":"2021-04-01"},{"lineNumber":697,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":698,"author":{"gitId":"Hzxin"},"content":"Example:","lastModifiedDate":"2021-03-24"},{"lineNumber":699,"author":{"gitId":"markuz5116"},"content":"* `delete g/1`","lastModifiedDate":"2021-03-28"},{"lineNumber":700,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":701,"author":{"gitId":"Hzxin"},"content":"Expected Result:","lastModifiedDate":"2021-03-28"},{"lineNumber":702,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":703,"author":{"gitId":"markuz5116"},"content":"![Delete Event Example](./images/deletecommand/deleteevent.png)\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":704,"author":{"gitId":"markuz5116"},"content":"*[Result for deleting the first general event in the list.]*","lastModifiedDate":"2021-04-01"},{"lineNumber":705,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":706,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":707,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":708,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":709,"author":{"gitId":"markuz5116"},"content":"### 3.8 Clearing `clear`","lastModifiedDate":"2021-04-01"},{"lineNumber":710,"author":{"gitId":"markuz5116"},"content":"This section shows features that deals with the clearing of entries in the RemindMe app.  ","lastModifiedDate":"2021-04-01"},{"lineNumber":711,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":712,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":713,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":714,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":715,"author":{"gitId":"jellymias"},"content":"All cleared data cannot be recovered.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":716,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":717,"author":{"gitId":"markuz5116"},"content":"Although the tags used for clearing person, modules, and general events are optional, they are needed to remove only ","lastModifiedDate":"2021-04-07"},{"lineNumber":718,"author":{"gitId":"jellymias"},"content":"that specific component of RemindMe. Otherwise, RemindMe will clear all entries stored.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":719,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":720,"author":{"gitId":"jellymias"},"content":"All clear commands must follow the exact usage as shown below. Additional inputs after prefixes will cause the command ","lastModifiedDate":"2021-04-09"},{"lineNumber":721,"author":{"gitId":"jellymias"},"content":"to fail.\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":722,"author":{"gitId":"Hzxin"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":723,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":724,"author":{"gitId":"markuz5116"},"content":"You can clear:","lastModifiedDate":"2021-04-01"},{"lineNumber":725,"author":{"gitId":"markuz5116"},"content":"* [3.8.1 Clearing RemindMe](#381-clearing-remindme)","lastModifiedDate":"2021-04-01"},{"lineNumber":726,"author":{"gitId":"markuz5116"},"content":"* [3.8.2 Clearing all persons](#382-clearing-all-persons)","lastModifiedDate":"2021-04-01"},{"lineNumber":727,"author":{"gitId":"markuz5116"},"content":"* [3.8.3 Clearing all modules](#383-clearing-all-modules)","lastModifiedDate":"2021-04-01"},{"lineNumber":728,"author":{"gitId":"markuz5116"},"content":"* [3.8.4 Clearing all general events](#384-clearing-all-general-events)","lastModifiedDate":"2021-04-01"},{"lineNumber":729,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":730,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":731,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":732,"author":{"gitId":"markuz5116"},"content":"#### 3.8.1 Clearing RemindMe  ","lastModifiedDate":"2021-04-01"},{"lineNumber":733,"author":{"gitId":"markuz5116"},"content":"You can start with a brand new RemindMe.","lastModifiedDate":"2021-04-01"},{"lineNumber":734,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":735,"author":{"gitId":"markuz5116"},"content":"Command: `clear`","lastModifiedDate":"2021-04-01"},{"lineNumber":736,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":737,"author":{"gitId":"markuz5116"},"content":"#### 3.8.2 Clearing all persons","lastModifiedDate":"2021-04-01"},{"lineNumber":738,"author":{"gitId":"markuz5116"},"content":"You can remove all contacts in RemindMe.  ","lastModifiedDate":"2021-04-01"},{"lineNumber":739,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":740,"author":{"gitId":"markuz5116"},"content":"Command: `clear n/`","lastModifiedDate":"2021-04-06"},{"lineNumber":741,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":742,"author":{"gitId":"markuz5116"},"content":"#### 3.8.3 Clearing all modules","lastModifiedDate":"2021-04-01"},{"lineNumber":743,"author":{"gitId":"markuz5116"},"content":"You can remove all modules in RemindMe.  ","lastModifiedDate":"2021-04-01"},{"lineNumber":744,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":745,"author":{"gitId":"markuz5116"},"content":"Command: `clear m/`","lastModifiedDate":"2021-04-06"},{"lineNumber":746,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":747,"author":{"gitId":"markuz5116"},"content":"#### 3.8.4 Clearing all general events","lastModifiedDate":"2021-04-01"},{"lineNumber":748,"author":{"gitId":"markuz5116"},"content":"You can clear all general events in RemindMe.","lastModifiedDate":"2021-04-01"},{"lineNumber":749,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":750,"author":{"gitId":"markuz5116"},"content":"Command: `clear g/`","lastModifiedDate":"2021-04-06"},{"lineNumber":751,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":752,"author":{"gitId":"markuz5116"},"content":"**If you followed along, your RemindMe should be empty. Now let\u0027s start using RemindMe to remind you!**\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":753,"author":{"gitId":"markuz5116"},"content":"The following features are more ways for you to view your tasks in RemindMe.","lastModifiedDate":"2021-04-01"},{"lineNumber":754,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":755,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":756,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":757,"author":{"gitId":"markuz5116"},"content":"### 3.9 Viewing calendar `calendar` `C`","lastModifiedDate":"2021-04-01"},{"lineNumber":758,"author":{"gitId":"Hzxin"},"content":"There are 3 ways to check out the calendar.","lastModifiedDate":"2021-03-24"},{"lineNumber":759,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":760,"author":{"gitId":"jellymias"},"content":"1. You can type `calendar` in the command box as shown below.","lastModifiedDate":"2021-04-09"},{"lineNumber":761,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":762,"author":{"gitId":"Hzxin"},"content":"![calendar1](images/Calendar1.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":763,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":764,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":765,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":766,"author":{"gitId":"Hzxin"},"content":"2. Alternatively, you may type shortcut `C` in the command box as shown below.","lastModifiedDate":"2021-03-28"},{"lineNumber":767,"author":{"gitId":"markuz5116"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":768,"author":{"gitId":"Hzxin"},"content":"![calendar2](images/Calendar2.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":769,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":770,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":771,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":772,"author":{"gitId":"Hzxin"},"content":"3. You may also click on the drop out calendar menu.","lastModifiedDate":"2021-03-28"},{"lineNumber":773,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":774,"author":{"gitId":"Hzxin"},"content":"![calendar3](images/Calendar3.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":775,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":776,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":777,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":778,"author":{"gitId":"Hzxin"},"content":"The calendar window as shown below will be displayed.","lastModifiedDate":"2021-03-28"},{"lineNumber":779,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":780,"author":{"gitId":"Hzxin"},"content":"![calendarwindow](images/calendarwindow.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":781,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":782,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":783,"author":{"gitId":"jellymias"},"content":"You may navigate through the months by clicking the left arrow button `\u003c` or right arrow button `\u003e` ","lastModifiedDate":"2021-04-09"},{"lineNumber":784,"author":{"gitId":"banchiang"},"content":"on the top right of the calendar window. Additionally, you may click on the `today` button ","lastModifiedDate":"2021-04-06"},{"lineNumber":785,"author":{"gitId":"jellymias"},"content":"to go back to the current month.","lastModifiedDate":"2021-04-09"},{"lineNumber":786,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":787,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**\u003cbr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":788,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":789,"author":{"gitId":"jellymias"},"content":"Please refresh the calendar with the `refresh` button whenever you update assignments/exams/birthdays/general events  ","lastModifiedDate":"2021-04-09"},{"lineNumber":790,"author":{"gitId":"jellymias"},"content":"while the calendar window is still open.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":791,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":792,"author":{"gitId":"jellymias"},"content":"The calendar window does not automatically update the changes when you update assignments/exams/birthdays/general events ","lastModifiedDate":"2021-04-09"},{"lineNumber":793,"author":{"gitId":"jellymias"},"content":"in the main window.","lastModifiedDate":"2021-04-09"},{"lineNumber":794,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":795,"author":{"gitId":"banchiang"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":796,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":797,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":798,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":799,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":800,"author":{"gitId":"Hzxin"},"content":"\u003cdiv class\u003d\"page-break-before\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"markuz5116"},"content":"### 3.10 Saving the data","lastModifiedDate":"2021-04-01"},{"lineNumber":803,"author":{"gitId":"jellymias"},"content":"Saving of data is automatic by the application whenever you enter a command into RemindMe.","lastModifiedDate":"2021-04-09"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":806,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":807,"author":{"gitId":"markuz5116"},"content":"### 3.11 Reminder window","lastModifiedDate":"2021-04-01"},{"lineNumber":808,"author":{"gitId":"jellymias"},"content":"A reminder will automatically pop up at the start of RemindMe, so that you are reminded of your upcoming assignments","lastModifiedDate":"2021-04-09"},{"lineNumber":809,"author":{"gitId":"jellymias"},"content":"and events in the next 3 days!","lastModifiedDate":"2021-04-09"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"markuz5116"},"content":"![Ui](images/Ui2.png)","lastModifiedDate":"2021-04-01"},{"lineNumber":812,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":813,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":814,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":815,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":816,"author":{"gitId":"markuz5116"},"content":"### 3.12 Exiting the program `exit` `E`","lastModifiedDate":"2021-04-01"},{"lineNumber":817,"author":{"gitId":"Hzxin"},"content":"There are 3 ways to exit the application. ","lastModifiedDate":"2021-03-24"},{"lineNumber":818,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":819,"author":{"gitId":"jellymias"},"content":"1. You can type `exit` in the command box as shown below.","lastModifiedDate":"2021-04-09"},{"lineNumber":820,"author":{"gitId":"markuz5116"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":821,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":822,"author":{"gitId":"Hzxin"},"content":"![exit1](images/exit1.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":823,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":824,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":825,"author":{"gitId":"jellymias"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":826,"author":{"gitId":"jellymias"},"content":"2. You can also type `E` in the command box as a shortcut as shown below.","lastModifiedDate":"2021-04-09"},{"lineNumber":827,"author":{"gitId":"markuz5116"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":828,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":829,"author":{"gitId":"Hzxin"},"content":"![exit2](images/exit2.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":830,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":831,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":832,"author":{"gitId":"jellymias"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":833,"author":{"gitId":"jellymias"},"content":"3. Lastly, you may simply click the `X` button in the top right-hand corner of the","lastModifiedDate":"2021-04-09"},{"lineNumber":834,"author":{"gitId":"Hzxin"},"content":"application to exit the program.","lastModifiedDate":"2021-03-24"},{"lineNumber":835,"author":{"gitId":"markuz5116"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":836,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":837,"author":{"gitId":"Hzxin"},"content":"![exit3](images/exit3.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":840,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":841,"author":{"gitId":"Hzxin"},"content":"\u003cdiv class\u003d\"page-break-before\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":842,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":843,"author":{"gitId":"Hzxin"},"content":"## 4. FAQ","lastModifiedDate":"2021-03-24"},{"lineNumber":844,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":845,"author":{"gitId":"markuz5116"},"content":"**Q: Can I add an assignment/exam first before the module?**\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":846,"author":{"gitId":"markuz5116"},"content":"A: No, you need to add a module first.","lastModifiedDate":"2021-04-06"},{"lineNumber":847,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":848,"author":{"gitId":"markuz5116"},"content":"**Q: Can I add multiple modules with the same name?**\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":849,"author":{"gitId":"Hzxin"},"content":"A: No, modules must have unique names to identify them.","lastModifiedDate":"2021-03-24"},{"lineNumber":850,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":851,"author":{"gitId":"markuz5116"},"content":"**Q: How do I clear away all my data?**\u003cbr\u003e ","lastModifiedDate":"2021-04-01"},{"lineNumber":852,"author":{"gitId":"markuz5116"},"content":"A: You can use the [`clear` command](#38-clearing-clear).","lastModifiedDate":"2021-04-01"},{"lineNumber":853,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":854,"author":{"gitId":"jellymias"},"content":"**Q: When I close RemindMe\u0027s main window, will other windows close?**\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":855,"author":{"gitId":"markuz5116"},"content":"A: Yes, do take note that if you close the main application, other windows will close as well.","lastModifiedDate":"2021-04-01"},{"lineNumber":856,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":857,"author":{"gitId":"markuz5116"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-04-02"},{"lineNumber":858,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":859,"author":{"gitId":"markuz5116"},"content":"## 5. Command Summary  ","lastModifiedDate":"2021-04-06"},{"lineNumber":860,"author":{"gitId":"markuz5116"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":861,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":862,"author":{"gitId":"markuz5116"},"content":"**Note:**","lastModifiedDate":"2021-04-06"},{"lineNumber":863,"author":{"gitId":"markuz5116"},"content":"* The format for `BIRTHDAY` is `DD/MM/YYYY`. ","lastModifiedDate":"2021-04-06"},{"lineNumber":864,"author":{"gitId":"markuz5116"},"content":"* The format for `DATE-TIME` is `DD/MM/YYYY HHMM`.","lastModifiedDate":"2021-04-06"},{"lineNumber":865,"author":{"gitId":"jellymias"},"content":"* Items in square brackets are optional.","lastModifiedDate":"2021-04-09"},{"lineNumber":866,"author":{"gitId":"jellymias"},"content":"* Items in curly braces means you must choose only one of the given inputs.","lastModifiedDate":"2021-04-09"},{"lineNumber":867,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":868,"author":{"gitId":"markuz5116"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":870,"author":{"gitId":"jellymias"},"content":"Action | Description | Format ","lastModifiedDate":"2021-04-09"},{"lineNumber":871,"author":{"gitId":"jellymias"},"content":"----|-------------|----------","lastModifiedDate":"2021-04-09"},{"lineNumber":872,"author":{"gitId":"jellymias"},"content":"**Add**\u003cbr\u003e | Adds an entry to RemindMe | Add a person \u003cbr\u003e *`add n/NAME b/BIRTHDAY [T/TAG...]`* \u003cbr\u003e\u003cbr\u003e Add a module \u003cbr\u003e *`add m/MODULE`* \u003cbr\u003e\u003cbr\u003e Add an assignment \u003cbr\u003e *`add m/MODULE a/ASSIGNMENT by/DATE-TIME`* \u003cbr\u003e\u003cbr\u003e Add an exam \u003cbr\u003e *`add m/MODULE e/DATE-TIME`* \u003cbr\u003e\u003cbr\u003e Add an event \u003cbr\u003e *`add g/GENERALEVENT on/DATE-TIME`* \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":873,"author":{"gitId":"jellymias"},"content":"**Edit**\u003cbr\u003e | Edits an entry in RemindMe | Edit a person \u003cbr\u003e *`edit INDEX n/NEW NAME [b/NEW BIRTHDAY] [T/NEW TAG...]`* \u003cbr\u003e\u003cbr\u003e Edit a module \u003cbr\u003e *`edit INDEX m/NEW MODULE TITLE`* \u003cbr\u003e\u003cbr\u003e Edit an assignment \u003cbr\u003e  *`edit m/MODULE a/INDEX {d/NEW DESCRIPTION by/NEW DATE-TIME}`* \u003cbr\u003e\u003cbr\u003e Edit an exam \u003cbr\u003e *`edit m/MODULE e/INDEX on/NEW DATE-TIME`* \u003cbr\u003e\u003cbr\u003e Edit an event \u003cbr\u003e *`edit INDEX {g/NEW DESCRIPTION on/NEW DATE-TIME}`* \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":874,"author":{"gitId":"jellymias"},"content":"**Find**\u003cbr\u003e | Finds entries in RemindMe | Find persons \u003cbr\u003e *`find n/KEYWORD [MORE KEYWORDS...]`* \u003cbr\u003e\u003cbr\u003e Find modules \u003cbr\u003e *`find m/KEYWORD [MORE KEYWORDS...]`* \u003cbr\u003e\u003cbr\u003e Find general events \u003cbr\u003e *`find g/KEYWORD [MORE KEYWORDS...]`* \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":875,"author":{"gitId":"jellymias"},"content":"**List** | Lists all entries in RemindMe | `list`","lastModifiedDate":"2021-04-09"},{"lineNumber":876,"author":{"gitId":"jellymias"},"content":"**Delete**\u003cbr\u003e | Deletes an entry from RemindMe | Delete a person \u003cbr\u003e *`delete INDEX`* \u003cbr\u003e\u003cbr\u003e Delete a module \u003cbr\u003e *`delete m/MODULE`* \u003cbr\u003e\u003cbr\u003e Delete an assignment \u003cbr\u003e *`delete m/MODULE a/INDEX`* \u003cbr\u003e\u003cbr\u003e Delete an exam \u003cbr\u003e *`delete m/MODULE e/INDEX`*\u003cbr\u003e\u003cbr\u003e Delete a general event \u003cbr\u003e *`delete g/INDEX`*\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":877,"author":{"gitId":"jellymias"},"content":"**Clear**\u003cbr\u003e | Clears entries from RemindMe | Clear RemindMe \u003cbr\u003e *`clear`*\u003cbr\u003e\u003cbr\u003e Clear persons \u003cbr\u003e *`clear n/`* \u003cbr\u003e\u003cbr\u003e Clear modules \u003cbr\u003e *`clear m/`* \u003cbr\u003e\u003cbr\u003e Clear general events \u003cbr\u003e *`clear g/`*","lastModifiedDate":"2021-04-09"},{"lineNumber":878,"author":{"gitId":"jellymias"},"content":"**Help** | Shows the URL to the User Guide | `help` ","lastModifiedDate":"2021-04-09"},{"lineNumber":879,"author":{"gitId":"jellymias"},"content":"**Calendar** | Displays the calender | `calendar`/`C`","lastModifiedDate":"2021-04-09"},{"lineNumber":880,"author":{"gitId":"jellymias"},"content":"**Exit** | Closes RemindMe | `exit`/`E` ","lastModifiedDate":"2021-04-09"},{"lineNumber":881,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":882,"author":{"gitId":"Hzxin"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"markuz5116":379,"jellymias":119,"Hzxin":242,"banchiang":20,"-":122}},{"path":"docs/diagrams/AddCommandParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"package logic {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"package Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"Class AddModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"Class AddCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"Class CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"package Parser {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"Class RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"Class AddCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"Class AddModuleCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"Class LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"LogicManager .left.|\u003e Logic","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"LogicManager --\u003e\"1\" RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"RemindMeParser .left.\u003e AddCommandParser: creates \u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"AddModuleCommandParser ..\u003e AddModuleCommand : creates \u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"AddModuleCommandParser -up-|\u003e AddCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"AddCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"AddModuleCommand -up-|\u003e AddCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"AddCommand -up-|\u003e Command","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"LogicManager .left.\u003e CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"jellymias":49}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"participant \":RemindMeParser\" as RemindMeParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"participant \":AddModuleCommandParser\" as AddModuleCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"participant \":AddModuleCommand\" as AddModuleCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"participant \"module:Module\" as Module MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"[-\u003e LogicManager : execute(\"add m/CS2103T\")","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"LogicManager -\u003e RemindMeParser : parseCommand(\"add m/CS2103T\")","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"activate RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"create AddCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"RemindMeParser -\u003e AddCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"activate AddCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"create AddModuleCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"AddCommandParser -\u003e AddModuleCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"activate AddModuleCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"create AddModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"AddModuleCommandParser -\u003e AddModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"activate AddModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"create Module","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"AddModuleCommand -\u003e Module","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"activate Module","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"Module -\u003e AddModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"deactivate Module","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"AddModuleCommand --\u003e AddModuleCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"deactivate AddModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"AddModuleCommandParser --\u003e AddCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"deactivate AddModuleCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"AddCommandParser --\u003e RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"deactivate AddCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"RemindMeParser --\u003e LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"deactivate RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"LogicManager -\u003e AddModuleCommand: execute(model)","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"activate AddModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"AddModuleCommand -\u003e Model: addModule(module)","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"Model --\u003e AddModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"AddModuleCommand --\u003e LogicManager: commandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"deactivate AddModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"jellymias":68}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"user -[USER_COLOR]\u003e ui : \"delete m/2103 a/1\"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete m/2103 a/1\")","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"logic -[LOGIC_COLOR]\u003e model : getModule(2103)","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"model -[MODEL_COLOR]\u003e model : deleteAssignment(1)","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveRemindMe(remindMe)","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Hzxin":6,"-":33}},{"path":"docs/diagrams/CalendarSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"participant \":RemindMeParser\" as RemindMeParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"participant \":CalendarCommand\" as CalendarCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"box Ui  UI_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"participant \":CalendarWindow\" as CalendarWindow UI_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"[-\u003e LogicManager : execute(\"calendar\")","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"LogicManager -\u003e RemindMeParser : parseCommand(\"calendar\")","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"activate RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"create CalendarCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"RemindMeParser -\u003e CalendarCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"activate CalendarCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"CalendarCommand --\u003e RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"deactivate CalendarCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"RemindMeParser --\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"deactivate RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"LogicManager -\u003e CalendarCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"activate CalendarCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"CalendarCommand --\u003e LogicManager :","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"deactivate CalendarCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"destroy CalendarCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"LogicManager -\u003e MainWindow :","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"activate MainWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"MainWindow -\u003e CalendarWindow : handleCalendar()","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"activate CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"CalendarWindow -\u003e CalendarWindow : show()","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"activate CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"CalendarWindow --\u003e CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"deactivate CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"CalendarWindow --\u003e MainWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"deactivate CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"MainWindow --\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"deactivate MainWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"banchiang":59}},{"path":"docs/diagrams/CalendarSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"box Ui  UI_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"participant \":CalendarWindow\" as CalendarWindow UI_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"participant \":CalendarStorage\" as CalendarStorage STORAGE_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"participant \":RemindMe\" as RemindMe MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"[-\u003e CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"activate CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"CalendarWindow -\u003e CalendarWindow : loadCalendar()","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"activate CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"CalendarWindow -\u003e CalendarStorage : refreshStorage()","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"activate CalendarStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"CalendarStorage -\u003e CalendarStorage : clear()","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"activate CalendarStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"CalendarStorage --\u003e CalendarStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"deactivate CalendarStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"CalendarStorage -\u003e RemindMe : getFilteredPersonList()","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"activate RemindMe","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"RemindMe --\u003e CalendarStorage","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"deactivate RemindMe","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"CalendarStorage -\u003e RemindMe : getFilteredModuleList()","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"activate RemindMe","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"RemindMe --\u003e CalendarStorage","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"deactivate RemindMe","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"CalendarStorage -\u003e RemindMe : getFilteredEventList()","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"activate RemindMe","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"RemindMe --\u003e CalendarStorage","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"deactivate RemindMe","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"CalendarStorage --\u003e CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"deactivate CalendarStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"CalendarWindow --\u003e CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"deactivate CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"[\u003c-- CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"deactivate CalendarWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"banchiang":56}},{"path":"docs/diagrams/ClearFeatureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"@startuml","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"!include style.puml","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"participant \":RemindMeParser\" as RemindMeParser LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"participant \":ClearCommandParser\" as ClearCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"participant \"d:ClearModulesCommand\" as ClearModulesCommand LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"end box","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"end box","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"[-\u003e LogicManager : execute(\"clear m/\")","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"activate LogicManager","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"LogicManager -\u003e RemindMeParser : parseCommand(\"clear m/\")","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"activate RemindMeParser","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"create ClearCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"RemindMeParser -\u003e ClearCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"activate ClearCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"ClearCommandParser -\u003e RemindMeParser","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"deactivate ClearCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"RemindMeParser -\u003e ClearCommandParser : parse(\"m/\")","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"activate ClearCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"create ClearModulesCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"ClearCommandParser -\u003e ClearModulesCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"activate ClearModulesCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"ClearModulesCommand -\u003e ClearCommandParser : d","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"deactivate ClearModulesCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"ClearCommandParser --\u003e RemindMeParser : d","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"deactivate ClearCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"RemindMeParser --\u003e LogicManager : d","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"deactivate RemindMeParser","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"LogicManager -\u003e ClearModulesCommand : execute()","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"activate ClearModulesCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"ClearModulesCommand -\u003e Model : resetModules()","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"activate Model","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"Model -\u003e ClearModulesCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"deactivate Model","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"create CommandResult","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"ClearModulesCommand -\u003e CommandResult","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"activate CommandResult","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"CommandResult --\u003e ClearModulesCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"ClearModulesCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"deactivate ClearModulesCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"@enduml","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"markuz5116":63}},{"path":"docs/diagrams/DeleteFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"start","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":":User executes command;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":":Check input;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"if() then ([user input is valid])","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    :Create delete command;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"    :find the targeted module;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    if() then ([if module exists])","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"        :Find the target assignment in the module;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"        if() then ([assignment exists)","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"                : Retrieve the module from the uniqueModuleList in the model;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"                : Delete the assignment from the module AssignmentList;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"                : show successful command result;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        else([assignment does not exist])","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"            : show error message to user;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"        endif","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    else([if module does not exist])","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"        :Show error message to user;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    endif","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"else([user input is invalid])","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    :Show error message to user;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"endif","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"stop","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"maikongeh":25}},{"path":"docs/diagrams/DeleteFeatureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"@startuml","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"!include style.puml","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"participant \":RemindMeParser\" as RemindMeParser LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"participant \":DeleteAssignmentCommandParser\" as DeleteAssignmentCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"participant \"d:DeleteAssignmentCommand\" as DeleteAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"end box","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"box Storage","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"participant \":Storage\" as Storage","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"end box","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"participant \":RemindMe\" as RemindMe MODEL_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"participant \":Module\" as Module MODEL_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"end box","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"[-\u003e LogicManager : execute(\"delete m/CS2103 a/1\")","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"activate LogicManager","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"LogicManager -\u003e RemindMeParser : parseCommand(\"delete m/CS2103 a/1\")","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"activate RemindMeParser","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"create DeleteCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"RemindMeParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"DeleteCommandParser --\u003e RemindMeParser","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"RemindMeParser -\u003e DeleteCommandParser : parseCommand(\"m/CS2103 a/1\")1\")","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"create DeleteAssignmentCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"DeleteCommandParser -\u003e DeleteAssignmentCommandParser : parse(\"m/CS2103 a/1\")","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"activate DeleteAssignmentCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"create DeleteAssignmentCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"DeleteAssignmentCommandParser -\u003e DeleteAssignmentCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"activate DeleteAssignmentCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"DeleteAssignmentCommand --\u003e DeleteAssignmentCommandParser : d","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"deactivate DeleteAssignmentCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"DeleteAssignmentCommandParser --\u003e DeleteCommandParser : d","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"deactivate DeleteAssignmentCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"DeleteCommandParser --\u003e RemindMeParser : d","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"DeleteCommandParser -[hidden]-\u003e RemindMeParser","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"RemindMeParser --\u003e LogicManager : d","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"deactivate RemindMeParser","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"LogicManager -\u003e DeleteAssignmentCommand : execute()","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"activate DeleteAssignmentCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"DeleteAssignmentCommand -\u003e Model : getFilteredModuleList()","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"activate Model","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"Model --\u003e DeleteAssignmentCommand : filteredModuleList","lastModifiedDate":"2021-04-09"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"deactivate Model","lastModifiedDate":"2021-04-09"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"DeleteAssignmentCommand -\u003e Module : getModule(\"CS2103\")","lastModifiedDate":"2021-04-09"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"activate Module","lastModifiedDate":"2021-04-09"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"Module -\u003e Module : deleteAssignment(1)","lastModifiedDate":"2021-04-09"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"activate Module","lastModifiedDate":"2021-04-09"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"deactivate Module","lastModifiedDate":"2021-04-09"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"deactivate Module","lastModifiedDate":"2021-04-09"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"create CommandResult","lastModifiedDate":"2021-04-09"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"DeleteAssignmentCommand -\u003e CommandResult","lastModifiedDate":"2021-04-09"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"activate CommandResult","lastModifiedDate":"2021-04-09"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"CommandResult --\u003e DeleteAssignmentCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-09"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"DeleteAssignmentCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-09"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"deactivate DeleteAssignmentCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"LogicManager --\u003e Storage : saveRemindMe()","lastModifiedDate":"2021-04-09"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"activate Storage","lastModifiedDate":"2021-04-09"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"Storage --\u003e LogicManager","lastModifiedDate":"2021-04-09"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"deactivate Storage","lastModifiedDate":"2021-04-09"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-09"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-09"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"@enduml","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"markuz5116":98}},{"path":"docs/diagrams/EditFeatureActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"start","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":":User executes command;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"if() then ([user input is valid])","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"    :Create edit command to find targeted Module and Assignment;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"    if() then ([if module exists])","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"        if() then ([assignment exists)","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"            if () then ([content is valid to edit])","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"                : change the corresponding assignment and module and place it back to UniqueModuleList;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"                : show successful command result;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"            else([content is invalid to edit])","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"                : show error message to user;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"            endif","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"        else([assignment does not exist])","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"            : show error message to user;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"        endif","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    else([if module does not exist])","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        :Show error message to user;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    endif","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"else([user input is invalid])","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    :Show error message to user;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"endif","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"stop","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Hzxin":28}},{"path":"docs/diagrams/EditFeatureClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"package logic {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"package Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"Class EditAssignmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"Class EditCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"Class CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"package Parser {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"Class RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"Class EditCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"Class EditAssignmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"Class LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"package Model{","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"Class Module","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"Class AssignmentList","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"Class Assignment","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"Class \"{abstract}\\nEvent\" as Event","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"Class Description","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"Module --\u003e\"1\" AssignmentList","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"Assignment -up-\u003e Event","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"Assignment --\u003e\"1\" Description","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"AssignmentList --\u003e\"0..*\" Assignment","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"LogicManager .left.|\u003e Logic","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"LogicManager --\u003e\"1\" RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"RemindMeParser .left.\u003e EditCommandParser: creates \u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommandParser ..\u003e EditAssignmentCommand : creates \u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommandParser -up-|\u003e EditCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"EditCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommand -up-|\u003e EditCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"EditCommand -up-|\u003e Command","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"Command .right.\u003e Model","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"LogicManager .left.\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Hzxin":65}},{"path":"docs/diagrams/EditFeatureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"participant \":RemindMeParser\" as RemindMeParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"participant EditAssignmentCommandParser as EditAssignmentCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"participant \"command:EditAssignmentCommand\" as EditAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"box Storage","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"participant \":Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"participant \":RemindMe\" as RemindMe MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"[-\u003e LogicManager : execute(\"edit m/CS2103 a/1 d/Tut2\")","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"LogicManager -\u003e RemindMeParser : parseCommand(\"edit m/CS2103 a/1 d/Tut2\")","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"activate RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"create EditAssignmentCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"RemindMeParser -\u003e EditAssignmentCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"activate EditAssignmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommandParser --\u003e RemindMeParser","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"RemindMeParser -\u003e EditAssignmentCommandParser : parse(\"m/CS2103 a/1 d/Tut2\")","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommandParser --\u003e RemindMeParser : command","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"deactivate EditAssignmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommandParser -[hidden]-\u003e RemindMeParser","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"destroy EditAssignmentCommandParser","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"RemindMeParser --\u003e LogicManager : command","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"deactivate RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"LogicManager -\u003e EditAssignmentCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"activate EditAssignmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommand -\u003e Model : getModule(CS2103)","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"activate Model","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"Model --\u003e EditAssignmentCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommand -\u003e Model : editAssignment(m, 1, Tut2)","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"ref over Model, RemindMe : editAssignment(m, 1, Tut2)","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"Model --\u003e EditAssignmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"deactivate Model","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"create CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommand -\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"activate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"CommandResult --\u003e EditAssignmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"EditAssignmentCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"deactivate EditAssignmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"LogicManager -\u003e Storage : saveRemindMe()","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"activate Storage","lastModifiedDate":"2021-04-09"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"Storage --\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"deactivate Storage","lastModifiedDate":"2021-04-09"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Hzxin":74}},{"path":"docs/diagrams/EditFeatureSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"@startuml","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"!include style.puml","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"participant \":RemindMe\" as RemindMe MODEL_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"participant \":Module\" as Module MODEL_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"participant \":AssignmentList\" as AssignmentList MODEL_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"participant \":UniqueModuleList\" as UniqueModuleList MODEL_COLOR","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"end Box","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"group sd editAssignment(m, 1, Tut2) [editAssignment]","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    activate Model","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    activate RemindMe","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    Model -\u003e RemindMe : editAssignment(m, 1, Tut2)","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    create UniqueModuleList","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    RemindMe -\u003e UniqueModuleList : getModule(m)","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    activate UniqueModuleList","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    create Module","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    UniqueModuleList --\u003e Module : module","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    activate Module","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    Module --\u003e RemindMe : module","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    RemindMe -\u003e Module : editAssignment(0, Tut2)","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    create AssignmentList","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    Module -\u003e AssignmentList : editAssignment()","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    activate AssignmentList","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    AssignmentList --\u003e Module : editedModule","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    deactivate AssignmentList","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    Module --\u003e RemindMe : editedModule","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    deactivate Module","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    RemindMe -\u003e UniqueModuleList : setModules(module, editedModule)","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    UniqueModuleList --\u003e RemindMe","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    deactivate UniqueModuleList","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    RemindMe --\u003e Model","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"end","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"@enduml","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"Hzxin":43}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"Class RemindMeParser","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"LogicManager --\u003e\"1\" RemindMeParser","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"RemindMeParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Hzxin":3,"-":59}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"Interface ReadOnlyRemindMe \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"Class RemindMe","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"Class ReadOnlyRemindMe","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Package Person {","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"package Module {","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"Class Assignment","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"Class Exam","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"Class Module","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"Class UniqueModuleList","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"Package GeneralEvent {","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"Class UniqueGeneralEventList","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"Class GeneralEvent","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"RemindMe .right.|\u003e ReadOnlyRemindMe","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"ModelManager o--\u003e \"1\" RemindMe","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"RemindMe *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"RemindMe *--\u003e \"1\" UniqueModuleList","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"RemindMe *--\u003e \"1\" UniqueGeneralEventList","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniquePersonList o--\u003e \"*\" Person","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"UniqueModuleList o--\u003e \"*\" Module","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"UniqueGeneralEventList o--\u003e \"o\" GeneralEvent","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"Module *--\u003e \"0..*\" Exam","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"Module *--\u003e \"0..*\" Assignment","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ModelManager -----\u003e\" ~* filtered list\" Person","lastModifiedDate":"2021-01-14"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"ModelManager -----\u003e \" ~* filtered list\" Module","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"ModelManager -----\u003e \" ~* filtered list\" GeneralEvent","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Hzxin":29,"-":36}},{"path":"docs/diagrams/OverallFindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"participant \":RemindMeParser\" as RemindMeParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"participant \":FindModuleCommand\" as FindModuleCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"participant \"predicate:TitleContainsKeywordsPredicate\" as TitleContainsKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"[-\u003e LogicManager : execute(find m/CS2101)]","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"LogicManager -\u003e RemindMeParser : parseCommand(find m/CS2101)","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"activate RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"create TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"RemindMeParser -\u003e TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"activate TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"TitleContainsKeywordsPredicate --\u003e RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"deactivate TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"create FindModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"RemindMeParser -\u003e FindModuleCommand : predicate","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"activate FindModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"FindModuleCommand --\u003e RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"deactivate FindModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"RemindMeParser --\u003e LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"deactivate RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"LogicManager -\u003e FindModuleCommand: execute(model)","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"activate FindModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"FindModuleCommand -\u003e Model: updateFilteredModuleList(predicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"Model --\u003e FindModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"FindModuleCommand --\u003e LogicManager: commandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"deactivate FindModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"markuz5116":51}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"Interface RemindMeStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"Class JsonRemindMeStorage","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"Class CalendarStorage","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"StorageManager o--\u003e RemindMeStorage","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"JsonRemindMeStorage .left.|\u003e RemindMeStorage","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"JsonRemindMeStorage .down.\u003e JsonSerializableRemindMe","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"JsonSerializableRemindMe .right.\u003e JsonAdaptedPerson","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"JsonSerializableRemindMe .down.\u003e JsonAdaptedModule","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"JsonSerializableRemindMe .left.\u003e JsonAdaptedGeneralEvent","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"JsonAdaptedModule .right.\u003e JsonAdaptedAssignment","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"JsonAdaptedModule .down.\u003e JsonAdaptedExam","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"JsonAdaptedPerson .right.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Hzxin":12,"-":17}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"Class ReminderWindow","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"package panels {","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"package calendar{","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"package cards {","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"MainWindow *-down-\u003e panels","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"MainWindow -down-\u003e calendar","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"MainWindow --\u003e ReminderWindow","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"panels --|\u003e UiPart","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"ReminderWindow --|\u003e UiPart","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"cards --|\u003e UiPart","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"calendar --|\u003e UiPart","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"cards .left.\u003e Model","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"panels -down-\u003e cards","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"calendar -[hidden]left- cards","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"calendar -[hidden]left- ReminderWindow","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"ReminderWindow -[hidden]right- panels","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"ReminderWindow -[hidden]right- calendar","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"panels -[hidden]left- HelpWindow","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Hzxin":29,"-":52}},{"path":"docs/diagrams/findcommand/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"@startuml","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"start","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":":User executes command;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":":RemindMeParser parses input;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"if () then ([user input is valid])","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"  :TitleContainsKeywordsPredicate is","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"  created using user inputs;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"  :FindModuleCommand is created","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"  with TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"  :ResultDisplay is created when","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"  FindModuleCommand is executed;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"else ([user input is invalid])])","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"  :ResultDisplay is created","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"  with the error message;","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"endif","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":":resultDisplay is shown in GUI to user;","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"stop","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"@enduml","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"markuz5116":32}},{"path":"docs/diagrams/findcommand/FindCommandParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"!include ../style.puml","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"package Logic {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"Class FindModuleCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"Class \"{abstract}\\nFindCommand\" as FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"package Parser {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"Class RemindMeParser","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"Class FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"Class FindModuleCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"Class LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"HiddenOutside ..\u003e LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"LogicManager .left.|\u003e Logic","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"LogicManager --\u003e\"1\" RemindMeParser: creates \u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"RemindMeParser .left.\u003e\"1\" FindModuleCommandParser: creates \u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"FindModuleCommandParser ..\u003e FindModuleCommand : creates \u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"FindModuleCommandParser -up-|\u003e FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"FindCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"FindModuleCommand -up-|\u003e FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"markuz5116":35}},{"path":"docs/diagrams/findcommand/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"!include ../style.puml","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"participant \":RemindMeParser\" as RemindMeParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"participant \":FindModuleCommandParser\" as FindModuleCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"participant \":FindModuleCommand\" as FindModuleCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"participant \"predicate:TitleContainsKeywordsPredicate\" as TitleContainsKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"[-\u003e LogicManager : execute(find m/CS2101)]","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"LogicManager -\u003e RemindMeParser : parseCommand(find m/CS2101)","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"activate RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"create FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"RemindMeParser -\u003e FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"activate FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"create FindModuleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"FindCommandParser -\u003e FindModuleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"activate FindModuleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"create TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"FindModuleCommandParser -\u003e TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"activate TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"TitleContainsKeywordsPredicate --\u003e FindModuleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"deactivate TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"create FindModuleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"FindModuleCommandParser -\u003e FindModuleCommand : predicate","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"activate FindModuleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"FindModuleCommand --\u003e FindModuleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"deactivate FindModuleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"FindModuleCommandParser --\u003e FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"deactivate FindModuleCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"FindCommandParser --\u003e RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"RemindMeParser --\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"deactivate RemindMeParser","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"LogicManager -\u003e FindModuleCommand: execute(model)","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"activate FindModuleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"FindModuleCommand -\u003e Model: updateFilteredModuleList(predicate)","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"Model --\u003e FindModuleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"FindModuleCommand --\u003e LogicManager: commandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"deactivate FindModuleCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"[\u003c-- LogicManager : commandResult","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"markuz5116":67}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"title: RemindMe","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W15-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W15-1/tp/actions)","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W15-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W15-1/tp)","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"![Ui](images/Ui2.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"**RemindMe is a desktop app designed to help School of Computing students better manage their workload","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"  and take control of their work life.**","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"* If you are interested in using RemindMe, head over to the [_Start-up_ section of the **User Guide**](UserGuide.html#2-quick-start).","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"* If you are interested about developing RemindMe, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Hzxin":9,"-":11}},{"path":"docs/team/banchiang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"layout: page","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"title: Chiang Kee Woon Jonathan\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"## Introduction","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"This page serves to document my contributions ","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"to the project RemindMe under NUS module CS2103T in AY20/21 semester 2.","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"## Project: RemindMe","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"RemindMe is a desktop application for keeping track of user events and deadlines, optimised for use via Command Line","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"Interface(CLI) while still having the benefits of a Graphic User Interface(GUI).","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"RemindMe allows students to always be aware of exams and events deadline as there will be reminder pop-ups and calendar","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"for students to see! It is written in Java, and has about 17k LOC contributed.","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"Given below are my contributions to the project","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"* **New feature**: Added a functional calendar for RemindMe calendar window (GUI) (Pull request [\\#91](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/91))","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    * Justification: This allows users to be able view events they have in a calendar format.","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    * Highlights: Require understanding of referenced code and only implementing necessary lines for current calendar. ","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    * Credits: Referred to the codes from https://github.com/AY2021S1-CS2103-W14-1/tp.","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     ","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"* **New feature**: Added a storage specifically for calendar. (Pull request [\\#119](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/119))","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    * Justification: Only event related data are required from the storage for the calendar.","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    Therefore, a `calendarStorage` is implemented to retrieve such information from the storage and store it separately.","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    ","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"* **New feature**: Added a super class `event` for events (assignments/modules/birthday/general events) (Pull request [\\#119](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/119))","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    * Justification: The entities mentioned all belong under the idea of an event. Additionally, we wanted to make","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    a super class such that `calendarStorage` can store it with more convenience under a `EventList`.","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"* **New feature**: Added a list view of events for a day in the calendar (GUI) (Pull request [\\#236](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/236))","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    * Justification: Allows users to click on date box in calendar and see a list of events for that day.","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    * Highlights: Require understanding of referenced code and only implementing necessary lines for the list view. ","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    * Credits: Referred to the codes from https://github.com/AY2021S1-CS2103T-T12-3/tp for the design.","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    ","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"* **Bug Fixing**:","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"    * Fix bug for calendar window not updated when add/edit/delete of events. ","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    (Issue [\\#269](https://github.com/AY2021S2-CS2103T-W15-1/tp/issues/269), ","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    Pull request [\\#298](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/298))","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    * Fix bug for out of window texts and truncated names for GUI.","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    (Issue [\\#249](https://github.com/AY2021S2-CS2103T-W15-1/tp/issues/249), Issue [\\#284](https://github.com/AY2021S2-CS2103T-W15-1/tp/issues/284),","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     Pull request [\\#330](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/330)) ","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"* **Testing**:","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    * Add test files for add commands (Pull request [\\#311](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/311))","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    * Add test files for parsers for add commands (Pull request[\\#349](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/349))","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"* **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dbanchiang\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dbanchiang\u0026tabRepo\u003dAY2021S2-CS2103T-W15-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d)","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    * User guide: ","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        * Added documentation for `calendar`,`exit`, saving data and FAQ section. (Pull request [\\#171](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/171))","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"    * Developer guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        * Added documentation of implementation of `calendar` (Pull request [\\#188](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/188)","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        * Added documentation of user stories and use cases (Pull request [\\#318](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/318)))","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        ","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"* **Community**:","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"    * Highlighted CI build macos-latest crashing in github (Issue [\\#281](https://github.com/nus-cs2103-AY2021S2/forum/issues/281))","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"banchiang":59}},{"path":"docs/team/hzxin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"---","lastModifiedDate":"2021-02-22"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"layout: page","lastModifiedDate":"2021-02-22"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"title: Huang Zhenxin\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-22"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"---","lastModifiedDate":"2021-02-22"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"## Introduction","lastModifiedDate":"2021-02-22"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"This page serves to document my contributions to the project RemindMe under NUS module CS2103T in AY20/21 semester 2.","lastModifiedDate":"2021-02-22"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"## Project: RemindMe","lastModifiedDate":"2021-02-22"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"RemindMe is a desktop application for keeping track of user events and deadlines, optimised for use via Command Line ","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"Interface(CLI) while still having the benefits of a Graphic User Interface(GUI).","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"RemindMe allows students to always be aware of exams and events deadline as there will be reminder pop-ups and calendar","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"for students to see! ","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"It is written in Java, and has about 17 kLOC contributed.","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e ","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"* **New Feature**: Added the Reminder Window to show deadlines/events happening in the next 3 days","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    * What it does: A automatic pop-up reminder window to show the deadlines/events happening in next 3 days.","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    * Justification: This feature improves RemindMe as a reminder application and enhance the ability of RemindMe to inform users of the more recent/urgent deadlines/events.","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    * Highlights: This feature works closely with storage and analyze the date and time to provide the range of deadlines/events to be selected for display. The UI of the Reminder is designed to be attractive as well.","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    ","lastModifiedDate":"2021-02-25"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e    ","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    ","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"* **New Feature**: Added the ability to save modules and general events in JSON.","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    * What it does: Allows modules and general events to be saved locally to a JSON.","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    * Justifications: It is important the modules and assignment that a user adds to RemindMe is properly saved and can be referred next time RemindMe runs. The contents saved should not take too much space of the JSON file. Also, RemindMe should be able to read all the relevant information such as exams and assignments from the saved modules when starting.","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    * Highlights: Create Json adapted classes for Assignment and Exam to be placed in Module when storing.","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"* **New Feature**: Added the Calendar window and command to open the Calendar window.","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    * What it does: A calendar with a summary of deadlines/events on a particular date.","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    * Justifications: It is important users get to view their schedules in a more straight forward and clear way with our calendar view.","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    * Highlights: Attractive and clear UI of calendar for better visualization. ","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"     ","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"* **New Feature**: Added multi-tabs to separate Modules/Contacts/Events and provide list views for these tabs. ","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    * What it does: Separation of the module List, contact List and event List navigated by GUI tab or with the respective CLI command.","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    * Justification: This feature is important to RemindMe as users might be overwhelmed and get confused by too much information if it is not separated. ","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"    * Highlights: There are two ways to switch tabs. 1. Manual switching with mouse click. 2. Automatic switching when relevant commands are entered.","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"* **Code contributed**: My code contribution to RemindMe can be found via [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dW15-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dHzxin\u0026tabRepo\u003dAY2021S2-CS2103T-W15-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"* **Project management**:","lastModifiedDate":"2021-02-25"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"    * Managed releases and milestones `v1.2` - `v1.4` (4 releases/milestones) on GitHub","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-25"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"    * Adding of test cases to the entire Storage package. [\\#157](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/157) [\\#232](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/232)","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"    * Improving and customize the UI of the main window and creating the RemindMe logo. [\\#58](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/58) [\\#110](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/110) [\\#127](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/127) [\\#148](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/148) [\\#219](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/219) ","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    * Integrate done status of assignment into the storage. [\\#203](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/203)","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-25"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"    * User Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"        * Added Table of contents, introduction, start-up and documentation about the Add feature. [\\#25](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/25) [\\#166](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/166/files)","lastModifiedDate":"2021-04-09"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        * Improving the format and readability of UG. [\\#47](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/47) [#194](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/194/files) [\\#213](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/213)","lastModifiedDate":"2021-04-09"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"        * Improving command summary table. [\\#212](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/212)","lastModifiedDate":"2021-04-09"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"  ","lastModifiedDate":"2021-04-09"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"        * Added documentations for Target user profile, value proposition, and user stories. [\\#36](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/36)","lastModifiedDate":"2021-04-09"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"        * Update implementations of EditFeature with details explanations and UML diagrams. [\\#187](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/187)","lastModifiedDate":"2021-04-09"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"        * Update and change class diagrams for the UI component and Model component. [\\#332](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/332/files)","lastModifiedDate":"2021-04-09"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"* **Community**:","lastModifiedDate":"2021-02-25"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#158](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/158) [\\#176](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/176)","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"Hzxin":82}},{"path":"docs/team/jellymias.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"layout: page","lastModifiedDate":"2021-02-25"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"title: Jeremias Shae\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"## Project: RemindMe","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"---","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"## Overview","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"RemindMe is a desktop application for keeping track of user events and deadlines, optimised for use via Command Line","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"Interface(CLI) while still having the benefits of a Graphic User Interface(GUI).","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"RemindMe allows students to always be aware of exams and events deadline as there will be reminder pop-ups and calendar","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"for students to see!","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"It is written in Java, and has about 17 kLOC contributed.","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"* **New Feature**: Added modules, assignments, exams and general events.","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    * What it does: allows the user to manage their tasks in terms of modules, assignments, exams and general events.","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    * Justification: This feature improves RemindMe significantly as it allows the user to create, delete, edit and find entries","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"      that are better categorised to accentuate the nature of their tasks and events.","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    * Highlights: This enhancement affects all existing commands, as well as the storage structure of RemindMe. It required the","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"      need to add the various classes, with methods that integrate them to commands, parsers and storage.","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    * Credits: *{AddressBook3\u0027s Person and AddressBook3\u0027s AddressBook}*","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    ","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"* **New Feature**: Added the ability to edit modules, assignments, exams and general events.","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    * What it does: allows the user to edit details of modules, assignments, exams and general events in RemindMe.","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    * Justification: This feature improves RemindMe significantly as it allows the user to make changes to their entries in RemindMe","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"      without having to delete and recreate entries. This provides a convenient way to rectify mistakes made.","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    * Highlights: This enhancement affects the existing edit command, which could only edit persons. It required the need to add in a parser for edit commands","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"      to differentiate between editing persons, modules, assignments, exams and general events. Therefore, this implementation required adding of new classes and a change in the logic of RemindMe.","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    * Credits: *{AddressBook3\u0027s Parser and AddressBook3\u0027s EditPersonCommand}*","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"* **New Feature**: Added the ability to add modules, assignments, exams and general events.","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    * What it does: allows the user to add modules, assignments, exams and general events in RemindMe.","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    * Justification: This feature improves RemindMe significantly as it allows the user to add entries of different natures to RemindMe","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"      with proper categorisation. This provides a convenient way to view the different types of tasks that the user has.","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    * Highlights: This enhancement affects the existing add command, which could only add persons. It required the need to add in a parser for add commands","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"      to differentiate between adding persons, modules, assignments, exams and general events. Therefore, this implementation required adding of new classes and a change in the logic of RemindMe.","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    * Credits: *{AddressBook3\u0027s Parser and AddressBook3\u0027s AddPersonCommand}*","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dw15-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026since\u003d2021-02-19\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djellymias\u0026tabRepo\u003dAY2021S2-CS2103T-W15-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"* **Project management**:","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    * Managed releases `v1.2` - `v1.4` (4 releases) on GitHub","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"    * Wrote additional tests for new features (Pull requests [\\#217](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/217),","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"      [\\#220](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/220), [\\#221](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/221),","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"      [\\#231](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/231), [\\#313](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/313),","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"      [\\#314](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/314), [\\#319](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/319),","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"      [\\#320](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/320), [\\#323](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/323))","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"    * User Guide:","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        * Added documentations for the features `add`, `delete` and `edit` [\\#32](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/32), [\\#179](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/179)","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        * Updated introduction [\\#321](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/321)","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        * Added warnings to all relevant features [\\#333](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/333)","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"        * Final polishing of User Guide [\\#333](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/333), [\\#334](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/334)","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        * Add implementation details of the `add` feature.","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"    ","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"jellymias":63}},{"path":"docs/team/maikongeh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"layout: page","lastModifiedDate":"2021-02-26"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"title: Michael\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"## Project: RemindMe","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"RemindMe is a desktop application for keeping track of user events and deadlines, optimised for use via Command Line ","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"Interface(CLI) while still having the benefits of a Graphic User Interface(GUI).","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"RemindMe allows students to always be aware of exams and events deadline as there will be reminder pop-ups and calendar","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"for students to see!","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-26"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"* **New Feature**: Upcoming","lastModifiedDate":"2021-02-26"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"  * What it does: NIL","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":" ","lastModifiedDate":"2021-02-26"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-26"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"* **Project management**:","lastModifiedDate":"2021-02-26"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"  * Managed releases `v1.3` - `v1.5rc` [EXAMPLE-","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-26"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"  ","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"  * User Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"    * Added documentation for the features `list assignments` and `list evetns` [\\#72]()","lastModifiedDate":"2021-02-26"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"    * NIL","lastModifiedDate":"2021-02-26"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    ","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"* **Community**:","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"* **Tools**:","lastModifiedDate":"2021-02-26"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"maikongeh":37}},{"path":"docs/team/markuz5116.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"layout: page","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"title: Marcus Ong\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"## Project: RemindMe","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"---","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"## Overview","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"RemindMe is a desktop application for keeping track of user events and deadlines, optimised for use via Command Line ","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"Interface(CLI) while still having the benefits of a Graphic User Interface(GUI).","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"RemindMe allows students to always be aware of exams and events deadline as there will be reminder pop-ups and calendar","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"for students to see! ","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"It is written in Java, and has about 17 kLOC contributed.","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"## Summary of Contributions","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"* **New Feature**: Added the ability to find modules and general events.","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    * What it does: allows the user to search for specific modules and general events in RemindMe.","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    * Justification: This feature improves RemindMe significantly because a user can make numerous entries into RemindMe, ","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"      and the app provides a convenient way to search for the specific entries the user wants.","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    * Highlights: This enhancement affects existing find command, which only searched for persons and commands to be added","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"      in the future. It required the need to add in a parser for find commands to differentiate between finding persons,","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"      modules and events. Therefore, this implementation required adding of new classes and a change in the logic of RemindMe.","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    * Credits: *{AddressBook3\u0027s Parser and AddressBook3\u0027s FindPersonCommand}*","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"  ","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dw15-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026since\u003d2021-02-19\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dmarkuz5116\u0026tabRepo\u003dAY2021S2-CS2103T-W15-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"* **Project management**:","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"    * Managed releases `v1.2` - `v1.4` (4 releases) on GitHub","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"    ","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"    * Wrote additional tests for new features (Pull requests [\\#118](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/118),","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"      [\\#129](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/129), [\\#131](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/131),","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"      [\\#132](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/132), [\\#201](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/201),","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"      [\\#215](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/215), [\\#228](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/228),","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"      [\\#247](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/247), [\\#317](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/317)) ","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    * Added respective clear command for modules, persons and events. This allows the users to clear only one component ","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"      of RemindMe, rather than the whole of RemindMe. (Pull requests [\\#145](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/145),","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"      [\\#152](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/152))","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"      ","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"    * User Guide:","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        * Added documentations for the features `clear` and `find` [\\#169](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/169) ","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        * Added relevant images for sample inputs [\\#240](https://github.com/AY2021S2-CS2103T-W15-1/tp/pull/240)","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        * Add implementation details of the `find` feature.","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"markuz5116":49}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"Hzxin"},"content":"Simply add the following to [`seedu.address.ui.cards.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-04-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Hzxin":1,"-":393}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"When working on RemindMe, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\"","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"markuz5116":1,"Hzxin":1,"-":98}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"#Mon Mar 15 20:53:15 SGT 2021","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.2.1-all.zip","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"maikongeh":3,"-":3}},{"path":"gradlew.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"@if \"%DEFBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2018-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\"","lastModifiedDate":"2019-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2018-05-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markuz5116":1,"-":83}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"import seedu.address.storage.JsonRemindMeStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"import seedu.address.storage.RemindMeStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing RemindMe \"","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"                + \"]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        RemindMeStorage remindMeStorage \u003d new JsonRemindMeStorage(userPrefs.getRemindMeFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"        storage \u003d new StorageManager(remindMeStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s RemindMe and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"     * The data from the sample RemindMe will be used instead if {@code storage}\u0027s remindMe is not found,","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"     * or an empty remindMe will be used instead if errors occur when reading {@code storage}\u0027s RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"        Optional\u003cReadOnlyRemindMe\u003e remindMeOptional;","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"        ReadOnlyRemindMe initialData;","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"            remindMeOptional \u003d storage.readRemindMe();","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"            if (!remindMeOptional.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"                logger.info(\"Data file not found. Will be starting with a sample RemindMe\");","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"            initialData \u003d remindMeOptional.orElseGet(SampleDataUtil::getSampleRemindMe);","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"            storage.saveRemindMe(initialData);","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty \"","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"                    + \"RemindMe\");","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"            initialData \u003d new RemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty \"","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"                    + \"RemindMe\");","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"            initialData \u003d new RemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty \"","lastModifiedDate":"2021-03-19"},{"lineNumber":159,"author":{"gitId":"markuz5116"},"content":"                    + \"RemindMe\");","lastModifiedDate":"2021-03-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"markuz5116"},"content":"        logger.info(\"Starting RemindMe \" + MainApp.VERSION);","lastModifiedDate":"2021-03-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"Hzxin"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping RemindMe ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markuz5116":15,"Hzxin":13,"-":160}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    private static final double DEFAULT_HEIGHT \u003d 780;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    private static final double DEFAULT_WIDTH \u003d 840;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hzxin":2,"-":77}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    private static final String LOG_FILE \u003d \"remindMe.log\";","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markuz5116":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX \u003d \"The assignment index provided is invalid\";","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_INVALID_EXAM_DISPLAYED_INDEX \u003d \"The exam index provided is invalid\";","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_INVALID_GENERAL_EVENT_DISPLAYED_INDEX \u003d \"The general event \"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"            + \"index provided is invalid\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_MODULE_LISTED_OVERVIEW \u003d \"%1$d modules listed!\";","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_INVALID_MODULE_TITLE \u003d \"The module title provided does not exist\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markuz5116":2,"maikongeh":5,"-":12}},{"path":"src/main/java/seedu/address/commons/util/CalendarUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import java.util.Locale;","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":" * Utility methods for calendar.","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"public class CalendarUtil {","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"     * Converts string formatted time from calendar box to local date.","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"     * @param formattedTime String format of time from calendar box.","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * @return","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    public static LocalDate calendarTextToDate(String formattedTime) {","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        DateTimeFormatter df \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"                .parseCaseInsensitive().appendPattern(\"MMM d yyyy\").toFormatter(Locale.ENGLISH);","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"        return LocalDate.parse(formattedTime, df);","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"banchiang":23}},{"path":"src/main/java/seedu/address/commons/util/LocalDateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"public class LocalDateTimeUtil {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    public static final String DATE_TIME_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"            \"DateTime should be a valid date and time in the format of dd/MM/yyyy HH:mm. e.g. 29/11/2020 23:59\";","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    public static final DateTimeFormatter DATETIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu HHmm\")","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"            .withResolverStyle(ResolverStyle.SMART);","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\")","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"            .withResolverStyle(ResolverStyle.SMART);","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     * Returns true if a given string is a valid dateTime number.","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"     * @param test the string value to be put to test.","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"     * @return true if the test string is valid and false otherwise","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"            LocalDateTime.parse(test, DATETIME_FORMATTER);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"     * Returns true if a given string is a valid date number.","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"     * @param test the string value to be put to test.","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"     * @return true if the test string is valid and false otherwise","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"            LocalDate.parse(test, DATE_FORMATTER);","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Hzxin":54}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"     * Returns the RemindMe.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"     * @see seedu.address.model.Model#getRemindMe()","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"    ReadOnlyRemindMe getRemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    /** Returns an unmodifiable view of the filtered list of modules */","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    /** Returns an unmodifiable view of the filtered list of general events */","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    ObservableList\u003cGeneralEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"     * Returns the user prefs\u0027 remindME file path.","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    Path getRemindMeFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"markuz5116":2,"banchiang":4,"Hzxin":11,"-":44}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.parser.RemindMeParser;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    private final RemindMeParser remindMeParser;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        remindMeParser \u003d new RemindMeParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        Command command \u003d remindMeParser.parseCommand(commandText);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"            storage.saveRemindMe(model.getRemindMe());","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"    public ReadOnlyRemindMe getRemindMe() {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        return model.getRemindMe();","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"        return model.getFilteredModuleList();","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"    public ObservableList\u003cGeneralEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"    public Path getRemindMeFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"        return model.getRemindMeFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"markuz5116":2,"banchiang":9,"Hzxin":15,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/CalendarCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"public class CalendarCommand extends Command {","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    public static final String COMMAND_WORD \u003d \"calendar\";","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"    public static final String COMMAND_CHAR \u003d \"c\";","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    public static final String SHOWING_CALENDAR \u003d \"Opened Calendar window.\";","lastModifiedDate":"2021-03-04"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        return new CommandResult(SHOWING_CALENDAR, false,","lastModifiedDate":"2021-03-04"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"                true, false);","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"markuz5116":1,"Hzxin":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    /** Calendar window should be shown to the user. */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    private final boolean showCalendar;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        this.showCalendar \u003d false;","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showCalendar,","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"                         boolean exit) {","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        this.showCalendar \u003d showCalendar;","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"    public boolean isShowCalendar() {","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        return showCalendar;","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hzxin":19,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"    public static final String COMMAND_CHAR \u003d \"e\";","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting RemindMe as requested ...\";","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"markuz5116":1,"Hzxin":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"    public static final String COMMAND_CHAR \u003d \"h\";","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markuz5116":1,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MODULES;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":" * Lists all persons in the RemindMe to the user.","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all entries\";","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"        model.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markuz5116":5,"Hzxin":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/ToggleDoneAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.AssignmentList;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"public class ToggleDoneAssignmentCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_DONE_TOGGLE_SUCCESS \u003d \"Assignment updated done status: %1$s\";","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"            \"Command: \" + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"            + \"Assignment: add m/TITLE a/INDEX\";","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_EMPTY_ASSIGNMENTLIST \u003d \"Assignment list is empty\";","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    private final Title moduleTitle;","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"    private final Index assignmentIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"     * creates new DeleteAssignmentCommand object","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    public ToggleDoneAssignmentCommand(Title moduleTitle, Index assignmentIndex) {","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"        requireAllNonNull(moduleTitle, assignmentIndex);","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        this.moduleTitle \u003d moduleTitle;","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        this.assignmentIndex \u003d assignmentIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        //check for Title","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        Module moduleToCheck \u003d new Module(moduleTitle);","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        if (!listContainsModule(lastShownList, moduleToCheck)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_TITLE);","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"        int indexOfModule \u003d getIndex(lastShownList, moduleToCheck);","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"        Module moduleToGet \u003d lastShownList.get(indexOfModule);","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"        AssignmentList assignmentList \u003d moduleToGet.getAssignments();","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        if (assignmentList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(MESSAGE_EMPTY_ASSIGNMENTLIST);","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"        if (assignmentIndex.getZeroBased() \u003e\u003d assignmentList.size()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"        Assignment assignmentToToggleDoneStatus \u003d moduleToGet.getAssignment(assignmentIndex.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"        model.toggleDoneStatusForAssignment(moduleToGet, assignmentIndex.getZeroBased());","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_TOGGLE_SUCCESS, assignmentToToggleDoneStatus));","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"     * Checks whether the module title matches any in the moduleList","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"    public boolean listContainsModule(List\u003cModule\u003e moduleList, Module moduleCheck) {","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"        boolean hasSameModule \u003d false;","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"            if (moduleCheck.isSameModule(moduleList.get(i))) {","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"                hasSameModule \u003d true;","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"        return hasSameModule;","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"     * Gets Index of module in moduleList with same title as input module","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"    public int getIndex(List\u003cModule\u003e moduleList, Module moduleCheck) {","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"            if (moduleCheck.isSameModule(moduleList.get(i))) {","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"                index \u003d i;","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"        return index;","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"                || (other instanceof ToggleDoneAssignmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 moduleTitle.equals(((ToggleDoneAssignmentCommand) other).moduleTitle)","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 assignmentIndex.equals(((ToggleDoneAssignmentCommand) other).assignmentIndex)); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"markuz5116":5,"Hzxin":2,"maikongeh":94}},{"path":"src/main/java/seedu/address/logic/commands/addcommand/AddAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"public class AddAssignmentCommand extends AddCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"            \"Missing necessary prefixes: m/, a/, and by/\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"            + \"Assignment: add m/TITLE a/DESCRIPTION by/DEADLINE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"            + \"Example: add m/MOD1 a/ASSGN1 by/03/02/2021 2359\";","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New assignment added: %1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_DUPLICATE_ASSIGNMENT \u003d \"This assignment already exists in the module\";","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_MODULE_NOT_FOUND \u003d \"Module for assignment has to be \"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"            + \"created first\";","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    private final Module target;","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    private final Assignment toAdd;","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    public AddAssignmentCommand(Module module, Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        target \u003d module;","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        toAdd \u003d assignment;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        if (!model.hasModule(target)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"            throw new CommandException(MESSAGE_MODULE_NOT_FOUND);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        if (model.hasAssignment(target, toAdd)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ASSIGNMENT);","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        model.addAssignment(target, toAdd);","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"            return true;","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        if (other instanceof AddAssignmentCommand) {","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"            AddAssignmentCommand aac \u003d (AddAssignmentCommand) other;","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"            Module otherModule \u003d aac.target;","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"            Assignment otherAssignment \u003d aac.toAdd;","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"            return target.isSameModule(otherModule) \u0026\u0026 toAdd.isSameAssignment(otherAssignment);","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        return false;","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":12,"jellymias":41,"banchiang":14}},{"path":"src/main/java/seedu/address/logic/commands/addcommand/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"public abstract class AddCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command: \" + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"            + \"Person: add n/NAME b/BIRTHDAY [t/TAG...]\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"            + \"Module: add m/TITLE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"            + \"Assignment: add m/TITLE a/DESCRIPTION by/DEADLINE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"            + \"Exam: add m/TITLE e/EXAM DATE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"            + \"Event: add g/EVENT DESCRIPTION on/EVENT DATE\";","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"markuz5116":14}},{"path":"src/main/java/seedu/address/logic/commands/addcommand/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"            \"Missing necessary prefixes: g/ and on/\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"            + \"Event: add g/EVENT DESCRIPTION on/EVENT DATE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"            + \"Example: add g/EVENT on/03/02/2021 2359\";","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in your calendar.\";","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    private final GeneralEvent toAdd;","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    public AddEventCommand(GeneralEvent event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        toAdd \u003d event;","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        assert toAdd !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"                || (other instanceof AddEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd));","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"markuz5116":5,"jellymias":44}},{"path":"src/main/java/seedu/address/logic/commands/addcommand/AddExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"public class AddExamCommand extends AddCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"            \"Missing necessary prefixes: m/ and e/\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"            + \"Exam: add m/MODULE e/EXAM DATE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"            + \"Example: add m/MOD1 e/03/01/2021 1230\";","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New exam added: %1$s\";","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_DUPLICATE_EXAM \u003d \"This exam already exists at this date\";","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_MODULE_NOT_FOUND \u003d \"Module for exam has to be created \"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"            + \"first\";","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    private final Module target;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    private final Exam toAdd;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"     * Creates an AddExamComamnd to add the specified {@code Exam}.","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    public AddExamCommand(Module module, Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(module, exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        target \u003d module;","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        toAdd \u003d exam;","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"     * Executes the AddExamComamnd get add an {@code Exam} into RemindMe.","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"     * @return The CommandResult for the success of the command.","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"     * @throws CommandException when the exam to add is already in RemindMe.","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        assert target !\u003d null \u0026\u0026 toAdd !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        if (!model.hasModule(target)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"            throw new CommandException(MESSAGE_MODULE_NOT_FOUND);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        if (model.hasExam(target, toAdd)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EXAM);","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        model.addExam(target, toAdd);","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"     * Checks whether {@code other} is of the same Command and Exam.","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"     * @param other other Object to compare with this.","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"     * @return true if they are similar, else false.","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"                || (other instanceof AddExamCommand)","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"                \u0026\u0026 target.equals(((AddExamCommand) other).target)","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 toAdd.equals(((AddExamCommand) other).toAdd);","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":65,"jellymias":8,"banchiang":1}},{"path":"src/main/java/seedu/address/logic/commands/addcommand/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"public class AddModuleCommand extends AddCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"            \"Missing necessary prefixes: m/\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"            + \"Module: add m/MODULE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"            + \"Example: add m/MOD1\";","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New module added: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in RemindMe\";","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    private final Module toAdd;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"     * Creates an AddModuleCommand to add the specified {@code Module}.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    public AddModuleCommand(Module module) {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        toAdd \u003d module;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        if (model.hasModule(toAdd)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        model.addModule(toAdd);","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"                || (other instanceof AddModuleCommand)","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 toAdd.equals(((AddModuleCommand) other).toAdd);","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"markuz5116":48}},{"path":"src/main/java/seedu/address/logic/commands/addcommand/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":" * Adds a person to the RemindMe.","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"public class AddPersonCommand extends AddCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"            \"Missing necessary prefixes: n/ and b/\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"            + \"Person: add n/NAME b/BIRTHDAY [t/TAG...]\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"            + \"Example: add n/Bob b/19/12/2000 t/friend\";","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the RemindMe\";","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markuz5116":12,"Hzxin":1,"-":38}},{"path":"src/main/java/seedu/address/logic/commands/clearcommand/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.clearcommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":" * Clears RemindMe.","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command: \" + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"            + \"Person: clear n/\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"            + \"Module: clear m/\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"            + \"Event: clear g/\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"            + \"RemindMe: clear\";","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"RemindMe is cleared!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        model.setRemindMe(new RemindMe());","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"markuz5116":29}},{"path":"src/main/java/seedu/address/logic/commands/clearcommand/ClearEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.clearcommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":" * Clears general events in RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"public class ClearEventsCommand extends ClearCommand {","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d \"After g/, it should be empty!\";","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"General events have been cleared\";","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"        model.resetEvents();","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"markuz5116":23}},{"path":"src/main/java/seedu/address/logic/commands/clearcommand/ClearModulesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.clearcommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":" * Clears the modules in RemindMe.","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"public class ClearModulesCommand extends ClearCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d \"After m/, it should be empty!\";","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Modules have been cleared!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"        model.resetModules();","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"markuz5116":23}},{"path":"src/main/java/seedu/address/logic/commands/clearcommand/ClearPersonsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.clearcommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":" * Clears contacts in RemindMe.","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"public class ClearPersonsCommand extends ClearCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d \"After n/, it should be empty!\";","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All persons have been cleared!\";","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"        model.resetPersons();","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"markuz5116":23}},{"path":"src/main/java/seedu/address/logic/commands/deletecommand/DeleteAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.AssignmentList;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":" * Deletes a person identified using it\u0027s displayed index from the remind Me.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"public class DeleteAssignmentCommand extends DeleteCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_DELETE_ASSIGNMENT_SUCCESS \u003d \"Deleted Assignment: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_EMPTY_ASSIGNMENTLIST \u003d \"Assignment list is empty\";","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    private final Title moduleTitle;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    private final Index assignmentIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"     * creates new DeleteAssignmentCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"    public DeleteAssignmentCommand(Title moduleTitle, Index assignmentIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        requireAllNonNull(moduleTitle, assignmentIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        this.moduleTitle \u003d moduleTitle;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        this.assignmentIndex \u003d assignmentIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        //check for Title","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        Module moduleToCheck \u003d new Module(moduleTitle);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        if (!listContainsModule(lastShownList, moduleToCheck)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_TITLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        int indexOfModule \u003d getIndex(lastShownList, moduleToCheck);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        Module moduleToGet \u003d lastShownList.get(indexOfModule);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        AssignmentList assignmentList \u003d moduleToGet.getAssignments();","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"        if (assignmentList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(MESSAGE_EMPTY_ASSIGNMENTLIST);","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        if (assignmentIndex.getZeroBased() \u003e\u003d assignmentList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"        Assignment assignmentToDelete \u003d moduleToGet.getAssignment(assignmentIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        model.deleteAssignment(moduleToGet, assignmentToDelete);","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ASSIGNMENT_SUCCESS, assignmentToDelete));","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"     * Checks whether the module title matches any in the moduleList","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"    public boolean listContainsModule(List\u003cModule\u003e moduleList, Module moduleCheck) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"        boolean hasSameModule \u003d false;","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"            if (moduleCheck.isSameModule(moduleList.get(i))) {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"                hasSameModule \u003d true;","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"        return hasSameModule;","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"     * Gets Index of module in moduleList with same title as input module","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"    public int getIndex(List\u003cModule\u003e moduleList, Module moduleCheck) {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"            if (moduleCheck.isSameModule(moduleList.get(i))) {","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"                index \u003d i;","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"        return index;","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"                || (other instanceof DeleteAssignmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 moduleTitle.equals(((DeleteAssignmentCommand) other).moduleTitle)","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 assignmentIndex.equals(((DeleteAssignmentCommand) other).assignmentIndex)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":1,"banchiang":1,"Hzxin":1,"jellymias":1,"maikongeh":91}},{"path":"src/main/java/seedu/address/logic/commands/deletecommand/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command: \" + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"            + \"Person: delete INDEX\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"            + \"Module: delete m/TITLE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"            + \"Assignment: delete m/TITLE a/INDEX\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"            + \"Exam: delete m/TITLE e/INDEX\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"            + \"Event: delete g/INDEX\";","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":6,"banchiang":1,"maikongeh":8}},{"path":"src/main/java/seedu/address/logic/commands/deletecommand/DeleteExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.ExamList;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":" * Deletes a person identified using it\u0027s displayed index from the remindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"public class DeleteExamCommand extends DeleteCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_DELETE_EXAM_SUCCESS \u003d \"Deleted Exam: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_EMPTY_EXAMLIST \u003d \"Exam list is empty\";","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    private final Title moduleTitle;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    private final Index examIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"     * creates new DeleteAssignmentCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    public DeleteExamCommand(Title moduleTitle, Index examIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        requireAllNonNull(moduleTitle, examIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        this.moduleTitle \u003d moduleTitle;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        this.examIndex \u003d examIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        //check for Title","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        Module moduleToCheck \u003d new Module(moduleTitle);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        if (!listContainsModule(lastShownList, moduleToCheck)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_TITLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        int indexOfModule \u003d getIndex(lastShownList, moduleToCheck);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        Module moduleToGet \u003d lastShownList.get(indexOfModule);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"        ExamList examList \u003d moduleToGet.getExams();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"        if (examList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(MESSAGE_EMPTY_EXAMLIST);","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"        if (examIndex.getZeroBased() \u003e\u003d examList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EXAM_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        Exam examToDelete \u003d moduleToGet.getExam(examIndex.getZeroBased());","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        model.deleteExam(moduleToGet, examToDelete);","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EXAM_SUCCESS, examToDelete));","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"     * Checks whether the module title matches any in the moduleList","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"    public boolean listContainsModule(List\u003cModule\u003e moduleList, Module moduleCheck) {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        boolean hasSameModule \u003d false;","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"            if (moduleCheck.isSameModule(moduleList.get(i))) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"                hasSameModule \u003d true;","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"        return hasSameModule;","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"     * Gets Index of module in moduleList with same title as input module","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"    public int getIndex(List\u003cModule\u003e moduleList, Module moduleCheck) {","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"            if (moduleCheck.isSameModule(moduleList.get(i))) {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"                index \u003d i;","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"        return index;","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"                || (other instanceof DeleteExamCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 moduleTitle.equals(((DeleteExamCommand) other).moduleTitle)","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 examIndex.equals(((DeleteExamCommand) other).examIndex)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":1,"banchiang":1,"Hzxin":1,"jellymias":3,"maikongeh":90}},{"path":"src/main/java/seedu/address/logic/commands/deletecommand/DeleteGeneralEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":" * Deletes a person identified using it\u0027s displayed index from the remindMe.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"public class DeleteGeneralEventCommand extends DeleteCommand {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_GENERAL_EVENT_SUCCESS \u003d \"Deleted General Event: %1$s\";","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_EMPTY_EVENTLIST \u003d \"Event list is empty\";","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    public DeleteGeneralEventCommand(Index targetIndex) {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        List\u003cGeneralEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(MESSAGE_EMPTY_EVENTLIST);","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GENERAL_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        GeneralEvent eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        return new CommandResult(String.format(MESSAGE_GENERAL_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"                || (other instanceof DeleteGeneralEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteGeneralEventCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"maikongeh":49}},{"path":"src/main/java/seedu/address/logic/commands/deletecommand/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":" * Deletes a person identified using it\u0027s displayed index from the remindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"public class DeleteModuleCommand extends DeleteCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_DELETE_MODULE_SUCCESS \u003d \"Deleted Module: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_EMPTY_MODULELIST \u003d \"Module list is empty\";","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    private final Title moduleTitle;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    public DeleteModuleCommand(Title moduleTitle) {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"        this.moduleTitle \u003d moduleTitle;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(MESSAGE_EMPTY_MODULELIST);","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        //check for Title","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        Module moduleToCheck \u003d new Module(moduleTitle);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"        if (!listContainsModule(lastShownList, moduleToCheck)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_TITLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        int indexOfModule \u003d getIndex(lastShownList, moduleToCheck);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        Module moduleToDelete \u003d lastShownList.get(indexOfModule);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        model.deleteModule(moduleToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MODULE_SUCCESS, moduleToDelete));","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"     * Checks whether the module title matches any in the moduleList","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"     * @param moduleList","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"     * @param moduleCheck","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"     * @return","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"    public boolean listContainsModule(List\u003cModule\u003e moduleList, Module moduleCheck) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        boolean hasSameModule \u003d false;","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"            if (moduleCheck.isSameModule(moduleList.get(i))) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"                hasSameModule \u003d true;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"        return hasSameModule;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"     * Gets Index of module in moduleList with same title as input module","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"     * @param moduleList","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"     * @param moduleCheck","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"     * @return","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"    public int getIndex(List\u003cModule\u003e moduleList, Module moduleCheck) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"        for (int i \u003d 0; i \u003c moduleList.size(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"            if (moduleCheck.isSameModule(moduleList.get(i))) {","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"                index \u003d i;","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"        return index;","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"                || (other instanceof DeleteModuleCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 moduleTitle.equals(((DeleteModuleCommand) other).moduleTitle)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":1,"banchiang":1,"Hzxin":1,"maikongeh":81}},{"path":"src/main/java/seedu/address/logic/commands/deletecommand/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":" * Deletes a person identified using it\u0027s displayed index from the remindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"public class DeletePersonCommand extends DeleteCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_EMPTY_PERSONLIST \u003d \"Contact list is empty\";","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"            throw new CommandException(MESSAGE_EMPTY_PERSONLIST);","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markuz5116":1,"banchiang":1,"Hzxin":1,"maikongeh":8,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/editcommand/EditAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"public class EditAssignmentCommand extends EditCommand {","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"            \"Missing necessary prefixes: m/, a/, and [d/ or by/]\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"            + \"At least d/ or by/ must be used.\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"            + \"Assignment: edit m/TITLE a/INDEX [d/DESCRIPTION or by/DEADLINE]\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"            + \"Example: edit m/MOD1 a/1 by/03/02/2021 2359\";","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Assignment edited: %1$s\";","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_NO_MODULE \u003d \"This module does not exists in RemindMe\";","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_NO_ASSIGNMENT \u003d \"This module does not contain any assignment at this index.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"The input given does not change anything!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_TWO_CHANGES \u003d \"Only one field can be changed at a time.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_NO_VALID_CHANGES \u003d \"Please input a valid edit.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_DUPLICATE_ASSIGNMENT \u003d \"This assignment already exists in RemindMe.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    private final Module module;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    private final int toEditIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    private final Description descriptionEdit;","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    private final LocalDateTime dateEdit;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"     * Creates an EditModuleCommand to edit the specified {@code Module}.","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    public EditAssignmentCommand(Module module, int index, Description description, LocalDateTime date) {","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        toEditIndex \u003d index;","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        descriptionEdit \u003d description;","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        dateEdit \u003d date;","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        if (!model.hasModule(module)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_MODULE);","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        if (!model.hasAssignment(module, toEditIndex)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_ASSIGNMENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        Module targetMod \u003d model.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"        Assignment target \u003d targetMod.getAssignment(toEditIndex - 1);","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        boolean hasSameDescription \u003d target.description.equals(descriptionEdit);","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"        boolean hasSameDeadline \u003d target.deadline.equals(dateEdit);","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        if (hasSameDescription || hasSameDeadline) {","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"        if (!isNull(descriptionEdit) \u0026\u0026 !isNull(dateEdit)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_TWO_CHANGES);","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"        if (isNull(descriptionEdit) \u0026\u0026 isNull(dateEdit)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_VALID_CHANGES);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        if (isNull(descriptionEdit)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"            target \u003d target.setDeadline(dateEdit);","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"            if (model.hasAssignment(module, target)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_ASSIGNMENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"            model.editAssignment(module, toEditIndex, dateEdit);","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"        } else if (isNull(dateEdit)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"            target \u003d target.setDescription(descriptionEdit);","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"            if (model.hasAssignment(module, target)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_ASSIGNMENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"            model.editAssignment(module, toEditIndex, descriptionEdit);","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        Module editedMod \u003d model.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"        Assignment edited \u003d editedMod.getAssignment(toEditIndex - 1);","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, edited));","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"        if (!(other instanceof EditAssignmentCommand)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"        boolean dateIsNull \u003d isNull(dateEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"        boolean descriptionIsNull \u003d isNull(descriptionEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        boolean sameDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"        boolean sameDescription;","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"        if (dateIsNull) {","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"            sameDate \u003d isNull(((EditAssignmentCommand) other).dateEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"            sameDate \u003d dateEdit.equals(((EditAssignmentCommand) other).dateEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"        if (descriptionIsNull) {","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"            sameDescription \u003d isNull(((EditAssignmentCommand) other).descriptionEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"            sameDescription \u003d descriptionEdit.equals(((EditAssignmentCommand) other).descriptionEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"                || (other instanceof EditAssignmentCommand)","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 module.equals(((EditAssignmentCommand) other).module)","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 toEditIndex \u003d\u003d ((EditAssignmentCommand) other).toEditIndex","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 sameDate","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 sameDescription;","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"markuz5116":5,"jellymias":119}},{"path":"src/main/java/seedu/address/logic/commands/editcommand/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"public abstract class EditCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command: \" + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"            + \"Person: edit INDEX n/NAME [b/BIRTHDAY] [t/TAG ...]\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"            + \"Module: edit INDEX m/TITLE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"            + \"Assignment: edit m/TITLE a/INDEX d/DESCRIPTION OR by/DEADLINE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"            + \"Exam: edit m/TITLE e/INDEX on/EXAM DATE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"            + \"Event: edit INDEX g/DESCRIPTION OR on/EVENT DATE\";","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"markuz5116":6,"jellymias":8}},{"path":"src/main/java/seedu/address/logic/commands/editcommand/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"public class EditEventCommand extends EditCommand {","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"            \"Missing necessary prefixes: [g/ or on/]\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"            + \"One of g/ or on/ must be used.\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"            + \"Event: edit INDEX [d/DESCRIPTION OR on/EVENT DATE]\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"            + \"Example: edit 1 g/Meet up\";","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Event edited: %1$s\";","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_NO_EVENT \u003d \"This event does not exists in RemindMe\";","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_EDIT_BOTH_PARTS \u003d \"Please delete this event and add a new one instead!\";","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_NULL_EDIT \u003d \"Please input a valid edit!\";","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in RemindMe.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    private final int toEditIndex;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    private final Description eventEdit;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    private final LocalDateTime dateEdit;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     * Creates an EditModuleCommand to edit the specified {@code Module}.","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    public EditEventCommand(int index, Description description, LocalDateTime date) {","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        toEditIndex \u003d index;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        eventEdit \u003d description;","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        dateEdit \u003d date;","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        if (!model.hasEvent(toEditIndex)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_EVENT);","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        GeneralEvent target \u003d model.getEvent(toEditIndex);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        if (isNull(eventEdit) \u0026\u0026 !isNull(dateEdit)) {","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"            target \u003d target.setDate(dateEdit);","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"            if (model.hasEvent(target)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"            model.editEvent(toEditIndex, dateEdit);","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        } else if (isNull(dateEdit) \u0026\u0026 !isNull(eventEdit)) {","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"            target \u003d target.setDescription(eventEdit);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"            if (model.hasEvent(target)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"            model.editEvent(toEditIndex, eventEdit);","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        } else if (!isNull(eventEdit) \u0026\u0026 !isNull(dateEdit)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_EDIT_BOTH_PARTS);","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        } else {","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NULL_EDIT);","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"        GeneralEvent edited \u003d model.getEvent(toEditIndex);","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"        model.updateFilteredEventList(Model.PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, edited));","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"            return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        boolean dateIsNull \u003d isNull(dateEdit);","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"        boolean descriptionIsNull \u003d isNull(eventEdit);","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"        boolean sameDate;","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        boolean sameDescription;","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"        if (dateIsNull) {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"            sameDate \u003d isNull(((EditEventCommand) other).dateEdit);","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"            sameDate \u003d dateEdit.equals(((EditEventCommand) other).dateEdit);","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"        if (descriptionIsNull) {","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"            sameDescription \u003d isNull(((EditEventCommand) other).eventEdit);","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"            sameDescription \u003d eventEdit.equals(((EditEventCommand) other).eventEdit);","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"                || (other instanceof EditEventCommand)","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 toEditIndex \u003d\u003d ((EditEventCommand) other).toEditIndex","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 sameDate","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 sameDescription;","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"markuz5116":5,"jellymias":94}},{"path":"src/main/java/seedu/address/logic/commands/editcommand/EditExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"public class EditExamCommand extends EditCommand {","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"            \"Missing necessary prefixes: m/, e/, and on/\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"            + \"Exam: edit m/TITLE e/INDEX on/EXAM DATE\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"            + \"Example: edit m/MOD1 e/1 on/03/02/2021 2359\";","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Exam edited: %1$s\";","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_NO_MODULE \u003d \"This module does not exist in RemindMe\";","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_NO_EXAM \u003d \"This module does not contain any exam at this index.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"The input given does not change anything!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_NO_VALID_CHANGES \u003d \"Please input a valid edit.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_DUPLICATE_EXAM \u003d \"This exam already exists in RemindMe.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    private final Module module;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    private final int toEditIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    private final LocalDateTime edit;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     * Creates an EditModuleCommand to edit the specified {@code Module}.","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    public EditExamCommand(Module module, int index, LocalDateTime date) {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        toEditIndex \u003d index;","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        edit \u003d date;","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        if (!model.hasModule(module)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_MODULE);","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        if (!model.hasExam(module, toEditIndex)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_EXAM);","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"        Module targetMod \u003d model.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        Exam target \u003d targetMod.getExam(toEditIndex - 1);","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        boolean hasSameDate \u003d target.examDate.equals(edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        if (hasSameDate) {","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"        if (isNull(edit)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_VALID_CHANGES);","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"        target \u003d target.setDate(edit);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"        if (model.hasExam(module, target)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EXAM);","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"        model.editExam(module, toEditIndex, edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"        Module editedMod \u003d model.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"        Exam edited \u003d editedMod.getExam(toEditIndex - 1);","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, edited));","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"        if (!(other instanceof EditExamCommand)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"        boolean sameEdit;","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"        if (isNull(edit)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"            sameEdit \u003d isNull(((EditExamCommand) other).edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"            sameEdit \u003d edit.equals(((EditExamCommand) other).edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"                || other instanceof EditExamCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 module.equals(((EditExamCommand) other).module)","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 toEditIndex \u003d\u003d ((EditExamCommand) other).toEditIndex","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 sameEdit;","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"markuz5116":5,"jellymias":93}},{"path":"src/main/java/seedu/address/logic/commands/editcommand/EditModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"public class EditModuleCommand extends EditCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits a module in RemindMe.\"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"            + \"MODULE INDEX \"","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"            + PREFIX_MODULE + \"NEW MODULE TITLE\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"            + \"1 \"","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"            + PREFIX_MODULE + \"CS2103T\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Module edited: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_NO_MODULE \u003d \"This module does not exist in RemindMe\";","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in RemindMe\";","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    private final int toEdit;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    private final Title edit;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * Creates an EditModuleCommand to edit the specified {@code Module}.","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    public EditModuleCommand(int index, Title title) {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        toEdit \u003d index;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        edit \u003d title;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        if (!model.hasModule(toEdit)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_NO_MODULE);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new Module(edit);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        if (model.hasModule(target)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        model.editModule(toEdit, edit);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, edit));","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"                || (other instanceof EditModuleCommand)","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 edit.equals(((EditModuleCommand) other).edit)","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 toEdit \u003d\u003d ((EditModuleCommand) other).toEdit;","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"markuz5116":3,"jellymias":60}},{"path":"src/main/java/seedu/address/logic/commands/editcommand/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":" * Edits the details of an existing person in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"public class EditPersonCommand extends EditCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"            + \"Parameters: INDEX (must be a positive number) \"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"            + PREFIX_NAME + \"Bob\";","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the RemindMe.\";","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"        return new Person(updatedName, updatedBirthday, updatedTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"maikongeh"},"content":"        private Birthday birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":130,"author":{"gitId":"maikongeh"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"            return CollectionUtil.isAnyNonNull(name, tags);","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"maikongeh"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"maikongeh"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"maikongeh"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"maikongeh"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"maikongeh"},"content":"                    \u0026\u0026 getBirthday().equals(e.getBirthday())","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"markuz5116":7,"jellymias":2,"Hzxin":2,"maikongeh":12,"-":171}},{"path":"src/main/java/seedu/address/logic/commands/findcommand/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.findcommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"public abstract class FindCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command: \" + COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"            + \"Person: find n/NAME\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"            + \"Module: find m/TITLE\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"            + \"Event: find g/DESCRIPTION\";","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"markuz5116":12}},{"path":"src/main/java/seedu/address/logic/commands/findcommand/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.findcommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"public class FindEventCommand extends FindCommand {","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose description\"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"            + \"contains any of the specified keywords (case-insensitive)\"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"            + \"\\nand displays them as a \"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"            + \"list with index numbers.\\n\"","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"            + PREFIX_GENERAL_EVENT + \"KEYWORD [MORE KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"            + PREFIX_GENERAL_EVENT + \"chill\";","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    private final DescriptionContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    public FindEventCommand(DescriptionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        assert predicate !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"                model.getFilteredEventList().size()));","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        if (!(object instanceof FindEventCommand)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"            return false;","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        if (object \u003d\u003d this) {","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"            return true;","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        FindEventCommand otherEventCommand \u003d (FindEventCommand) object;","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        return predicate.equals(otherEventCommand.predicate);","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"markuz5116":50}},{"path":"src/main/java/seedu/address/logic/commands/findcommand/FindModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.findcommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"public class FindModuleCommand extends FindCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all modules whose names \"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"            + \"contain any of the specified keywords (case-insensitive) and displays them as a \"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"            + \"list with index numbers.\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"            + PREFIX_MODULE + \"KEYWORD [MORE KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"            + PREFIX_MODULE + \"CS2103\";","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    private final TitleContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    public FindModuleCommand(TitleContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        assert predicate !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        model.updateFilteredModuleList(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MODULE_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"                model.getFilteredModuleList().size()));","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        return object \u003d\u003d this","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"                || (object instanceof FindModuleCommand)","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 predicate.equals(((FindModuleCommand) object).predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"markuz5116":43}},{"path":"src/main/java/seedu/address/logic/commands/findcommand/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.findcommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":" * Finds and lists all persons in RemindMe whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"public class FindPersonCommand extends FindCommand {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"            + PREFIX_NAME + \"KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"            + PREFIX_NAME + \"alice bob charlie\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    public FindPersonCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"                || (other instanceof FindPersonCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 predicate.equals(((FindPersonCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"markuz5116":9,"Hzxin":1,"maikongeh":3,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        return values.size() !\u003d 1","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"                ? Optional.empty()","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"                : Optional.of(values.get(0));","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"markuz5116":3,"maikongeh":1,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.clearcommand.ClearCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.clearcommand.ClearEventsCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.clearcommand.ClearModulesCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.clearcommand.ClearPersonsCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":" * Parses input arguments and create ClearCommand object that clears the entire RemindMe, its","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":" * contacts, or its modules.","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"public class ClearCommandParser {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand and","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"     * returns a ClearCommand, ClearModulesCommand, or ClearPersonsCommand based on the input.","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        ClearCommand command;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MODULE,","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"                PREFIX_NAME, PREFIX_GENERAL_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        if (clearContactsCondition(argumentMultimap)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"            if (!argumentMultimap.getValue(PREFIX_NAME).equals(Optional.of(\"\"))) {","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"                throw new ParseException(ClearPersonsCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"            }","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"            command \u003d new ClearPersonsCommand();","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        } else if (clearModulesCondition(argumentMultimap)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"            if (!argumentMultimap.getValue(PREFIX_MODULE).equals(Optional.of(\"\"))) {","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"                throw new ParseException(ClearModulesCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"            }","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"            command \u003d new ClearModulesCommand();","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        } else if (clearEventsCondition(argumentMultimap)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"            if (!argumentMultimap.getValue(PREFIX_GENERAL_EVENT).equals(Optional.of(\"\"))) {","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"                throw new ParseException(ClearEventsCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"            }","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"            command \u003d new ClearEventsCommand();","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        } else if (clearRemindCondition(argumentMultimap)) {","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"            command \u003d new ClearCommand();","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"        } else {","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"                    ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        return command;","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"    private boolean clearModulesCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argumentMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"    private boolean clearContactsCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argumentMultimap, PREFIX_NAME)","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"    private boolean clearEventsCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argumentMultimap, PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"    private boolean clearRemindCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"        return !arePrefixesPresent(argumentMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 !arePrefixesPresent(argumentMultimap, PREFIX_NAME)","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 !arePrefixesPresent(argumentMultimap, PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"    protected static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"                                                Prefix... prefixes) {","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"markuz5116":85}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"    public static final Prefix PREFIX_EXAM \u003d new Prefix(\"e/\");","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    public static final Prefix PREFIX_ASSIGNMENT \u003d new Prefix(\"a/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"by/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    public static final Prefix PREFIX_GENERAL_EVENT \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"on/\");","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"markuz5116":2,"jellymias":5,"maikongeh":1,"-":11}},{"path":"src/main/java/seedu/address/logic/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"public interface CommandParser {","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"     * Parses the {@code args} in the user input and returns the corresponding Parser.","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    Command parseCommand(String args) throws ParseException;","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"jellymias":11}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Input is not a non-zero unsigned integer\";","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_INVALID_INDEX_1 \u003d \"Input for the \";","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    public static final String MESSAGE_INVALID_INDEX_2 \u003d \" prefix is not a non-zero unsigned integer.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"    private static final String LOCAL_DATE_TIME_CONSTRAINT \u003d \"DATE-TIME should be DD/MM/YYYY HHmm\";","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"     * trimmed.","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"    public static Index parseGeneralEventIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_1 + \"g/\"","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"                    + MESSAGE_INVALID_INDEX_2);","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"     * trimmed.","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"    public static Index parseAssignmentIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_1 + \"a/\"","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"                    + MESSAGE_INVALID_INDEX_2);","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"     * trimmed.","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"    public static Index parseExamIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-04-08"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_1 + \"e/\"","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"                    + MESSAGE_INVALID_INDEX_2);","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-19"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"     * Parses a {@code String deadline} into a {@code LocalDateTime}.","lastModifiedDate":"2021-03-09"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"    public static LocalDateTime parseDeadline(String deadline) {","lastModifiedDate":"2021-04-06"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":157,"author":{"gitId":"markuz5116"},"content":"            return LocalDateTime.parse(trimmedDeadline,","lastModifiedDate":"2021-04-06"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"markuz5116"},"content":"            return null;","lastModifiedDate":"2021-04-06"},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":"     * Parses a {@code String date} into a {@code LocalDateTime}.","lastModifiedDate":"2021-04-06"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-04-06"},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"     * returns null if the given {@code date} is invalid.","lastModifiedDate":"2021-04-07"},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":170,"author":{"gitId":"markuz5116"},"content":"    public static LocalDateTime parseEventDate(String date) {","lastModifiedDate":"2021-04-07"},{"lineNumber":171,"author":{"gitId":"jellymias"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-04-06"},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"        String trimmedDeadline \u003d date.trim();","lastModifiedDate":"2021-04-06"},{"lineNumber":173,"author":{"gitId":"jellymias"},"content":"        try {","lastModifiedDate":"2021-04-06"},{"lineNumber":174,"author":{"gitId":"markuz5116"},"content":"            return LocalDateTime.parse(trimmedDeadline,","lastModifiedDate":"2021-04-07"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-04-06"},{"lineNumber":176,"author":{"gitId":"jellymias"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-04-06"},{"lineNumber":177,"author":{"gitId":"markuz5116"},"content":"            return null;","lastModifiedDate":"2021-04-07"},{"lineNumber":178,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":179,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":180,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":181,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":182,"author":{"gitId":"markuz5116"},"content":"     * Parses a {@code String examDateInput} into {@code LocalDateTime}.","lastModifiedDate":"2021-03-09"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":184,"author":{"gitId":"markuz5116"},"content":"     * returns null if the {@code examDateIput} is of an invalid format.","lastModifiedDate":"2021-04-06"},{"lineNumber":185,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":186,"author":{"gitId":"markuz5116"},"content":"    public static LocalDateTime parseExamDate(String examDateInput) {","lastModifiedDate":"2021-04-06"},{"lineNumber":187,"author":{"gitId":"markuz5116"},"content":"        String trimmedExamDateInput \u003d examDateInput.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":189,"author":{"gitId":"markuz5116"},"content":"            return LocalDateTime.parse(trimmedExamDateInput, Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-04-06"},{"lineNumber":190,"author":{"gitId":"markuz5116"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-09"},{"lineNumber":191,"author":{"gitId":"markuz5116"},"content":"            return null;","lastModifiedDate":"2021-04-06"},{"lineNumber":192,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":194,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":195,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":196,"author":{"gitId":"banchiang"},"content":"     * Parses a {@code String examDateInput} into {@code LocalDateTime}.","lastModifiedDate":"2021-04-01"},{"lineNumber":197,"author":{"gitId":"banchiang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-04-01"},{"lineNumber":198,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":199,"author":{"gitId":"banchiang"},"content":"     * @throws ParseException if the {@code examDateIput} is of an invalid format.","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"banchiang"},"content":"    public static Birthday parseBirthday(String birthdayInput, String nameInput) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":202,"author":{"gitId":"banchiang"},"content":"        requireNonNull(birthdayInput);","lastModifiedDate":"2021-04-01"},{"lineNumber":203,"author":{"gitId":"banchiang"},"content":"        requireNonNull(nameInput);","lastModifiedDate":"2021-04-01"},{"lineNumber":204,"author":{"gitId":"banchiang"},"content":"        String trimmedBirthdayInput \u003d birthdayInput.trim();","lastModifiedDate":"2021-04-01"},{"lineNumber":205,"author":{"gitId":"banchiang"},"content":"        if (!Birthday.isValidBirthday(trimmedBirthdayInput)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":206,"author":{"gitId":"banchiang"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":207,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":208,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":209,"author":{"gitId":"banchiang"},"content":"        return new Birthday(birthdayInput, nameInput);","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":211,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":212,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":213,"author":{"gitId":"markuz5116"},"content":"     * Parses a {@code String titleInput} into a {@code Title}.","lastModifiedDate":"2021-03-10"},{"lineNumber":214,"author":{"gitId":"markuz5116"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-10"},{"lineNumber":215,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":216,"author":{"gitId":"markuz5116"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-10"},{"lineNumber":217,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":218,"author":{"gitId":"markuz5116"},"content":"    public static Title parseTitle(String titleInput) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":219,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(titleInput);","lastModifiedDate":"2021-03-10"},{"lineNumber":220,"author":{"gitId":"markuz5116"},"content":"        String trimmedTitle \u003d titleInput.trim();","lastModifiedDate":"2021-03-10"},{"lineNumber":221,"author":{"gitId":"jellymias"},"content":"        Title title;","lastModifiedDate":"2021-04-07"},{"lineNumber":222,"author":{"gitId":"jellymias"},"content":"        try {","lastModifiedDate":"2021-04-07"},{"lineNumber":223,"author":{"gitId":"jellymias"},"content":"            title \u003d new Title(trimmedTitle);","lastModifiedDate":"2021-04-07"},{"lineNumber":224,"author":{"gitId":"jellymias"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-04-07"},{"lineNumber":225,"author":{"gitId":"jellymias"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-07"},{"lineNumber":226,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":227,"author":{"gitId":"jellymias"},"content":"        return title;","lastModifiedDate":"2021-04-07"},{"lineNumber":228,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"markuz5116":35,"jellymias":52,"banchiang":17,"maikongeh":35,"-":90}},{"path":"src/main/java/seedu/address/logic/parser/RemindMeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import java.util.Locale;","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.logic.commands.CalendarCommand;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.ToggleDoneAssignmentCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.addcommand.AddCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.clearcommand.ClearCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.deletecommand.DeleteCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.editcommand.EditCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.addcommandparser.AddCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.deletecommandparser.DeleteCommandParser;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.editcommandparser.EditCommandParser;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.findcommandparser.FindCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"public class RemindMeParser {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\").toLowerCase(Locale.ROOT);","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"            return new AddCommandParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"            return new EditCommandParser().parseCommand(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"            return new DeleteCommandParser().parseCommand(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"        case ToggleDoneAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"            return new ToggleDoneAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        case CalendarCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        case CalendarCommand.COMMAND_CHAR:","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"            return new CalendarCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"            return new FindCommandParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"        case ExitCommand.COMMAND_CHAR:","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"        case HelpCommand.COMMAND_CHAR:","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markuz5116":9,"Hzxin":3,"banchiang":5,"jellymias":1,"maikongeh":10,"-":66}},{"path":"src/main/java/seedu/address/logic/parser/ToggleDoneAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.ToggleDoneAssignmentCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":" * Parses input arguments and creates new parseCommand Object","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"public class ToggleDoneAssignmentCommandParser {","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"     * Parses the {@code String} of arguments of a delete command","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"     * to execute the specific delete command","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"     * @param args","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"     * @return parseCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"     * @throws ParseException","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    public ToggleDoneAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_ASSIGNMENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"        if (toggleDoneAssignmentCondition(argMultimap)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"            Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE).get());","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_ASSIGNMENT).get());","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"            return new ToggleDoneAssignmentCommand(title, index);","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"                    ToggleDoneAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"     * returns true when arguments match input for toggleAssignment command","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"     * @param argMultimap","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"     * @return","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"    public boolean toggleDoneAssignmentCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"    protected static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"maikongeh":59}},{"path":"src/main/java/seedu/address/logic/parser/addcommandparser/AddAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddAssignmentCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":" * Parses input arguments and creates a new AddAssignmentCommand object","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"public class AddAssignmentCommandParser extends AddCommandParser implements Parser\u003cAddAssignmentCommand\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAssignmentCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * and returns an AddAssignmentCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    public AddAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_ASSIGNMENT, PREFIX_DEADLINE);","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT, PREFIX_DEADLINE)","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE)","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"                .filter(Title::isValidTitle)","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"                        String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"))));","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        Module module \u003d new Module(title);","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"                .getValue(PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"                .filter(Description::isValidDescription)","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(Assignment.DESCRIPTION_CONSTRAINTS)));","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"        LocalDateTime deadline \u003d argMultimap.getValue(PREFIX_DEADLINE)","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"                .map(ParserUtil::parseDeadline)","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(Assignment.DATE_CONSTRAINTS));","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        Tag tag \u003d new Tag(title.modTitle.replaceAll(\" \", \"\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        Assignment assignment \u003d new Assignment(description, deadline, tag);","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        return new AddAssignmentCommand(module, assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":18,"jellymias":39,"Hzxin":3}},{"path":"src/main/java/seedu/address/logic/parser/addcommandparser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.CommandParser;","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":" * Parses input arguments, identifies which Add Command it refers to and","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":" * creates the corresponding Add Command.","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"public class AddCommandParser implements CommandParser {","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"     * Parses the given {@code String} of arguments in the context of an Add Command","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     * and returns an Command object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        Command command;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_NAME, PREFIX_EXAM,","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"                                                    PREFIX_ASSIGNMENT, PREFIX_GENERAL_EVENT);","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        if (addModuleCondition(argMultimap)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"            command \u003d new AddModuleCommandParser().parse(args);","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        } else if (addAssigmentCondition(argMultimap)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"            command \u003d new AddAssignmentCommandParser().parse(args);","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        } else if (addExamCondition(argMultimap)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"            command \u003d new AddExamCommandParser().parse(args);","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        } else if (addPersonCondition(argMultimap)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"            command \u003d new AddPersonCommandParser().parse(args);","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        } else if (addEventCondition(argMultimap)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"            command \u003d new AddEventCommandParser().parse(args);","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"                    AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        return command;","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"    private boolean addModuleCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_EXAM);","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"    private boolean addAssigmentCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_EXAM);","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"    private boolean addExamCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_EXAM)","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT);","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"    private boolean addPersonCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"    private boolean addEventCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"    protected static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":41,"jellymias":29,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/addcommandparser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.addcommand.AddEventCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"public class AddEventCommandParser extends AddCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GENERAL_EVENT, PREFIX_DATE);","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GENERAL_EVENT, PREFIX_DATE)","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"                .filter(Description::isValidDescription)","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(GeneralEvent.DESCRIPTION_CONSTRAINT)));","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        LocalDateTime date \u003d (argMultimap.getValue(PREFIX_DATE)","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"                .map(ParserUtil::parseEventDate)","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(GeneralEvent.DATE_CONSTRAINT)));","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        assert description !\u003d null \u0026\u0026 date !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        GeneralEvent event \u003d new GeneralEvent(description, date);","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"markuz5116":7,"jellymias":42}},{"path":"src/main/java/seedu/address/logic/parser/addcommandparser/AddExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddExamCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"public class AddExamCommandParser extends AddCommandParser implements Parser\u003cAddExamCommand\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    public AddExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EXAM, PREFIX_MODULE);","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        boolean isPreamblePresent \u003d !argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        boolean isModulePrefixAbsent \u003d !arePrefixesPresent(argMultimap, PREFIX_EXAM);","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        boolean isExamPrefixAbsent \u003d !arePrefixesPresent(argMultimap, PREFIX_EXAM);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        if (isModulePrefixAbsent || isExamPrefixAbsent || isPreamblePresent) {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"                    AddExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE)","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"            .filter(Title::isValidTitle)","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"            .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"                    String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"))));","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        assert title !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        Module module \u003d new Module(title);","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        LocalDateTime examDate \u003d argMultimap.getValue(PREFIX_EXAM)","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"                .map(ParserUtil::parseExamDate)","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(Exam.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        assert examDate !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"        Tag tag \u003d new Tag(title.modTitle.replaceAll(\" \", \"\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        Exam exam \u003d new Exam(examDate, tag);","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        return new AddExamCommand(module, exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":41,"jellymias":10,"Hzxin":3}},{"path":"src/main/java/seedu/address/logic/parser/addcommandparser/AddModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddModuleCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":" * Parses input arguments and create a new AddModuleCommand object.","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"public class AddModuleCommandParser extends AddCommandParser implements Parser\u003cAddModuleCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the AddModuleCommand and","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"     * returns an AddModuleCommand object for execution.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    public AddModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_EXAM, PREFIX_ASSIGNMENT);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE)","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"                .filter(Title::isValidTitle)","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"                        String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"))));","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        Module module \u003d new Module(title);","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        return new AddModuleCommand(module);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"markuz5116":39}},{"path":"src/main/java/seedu/address/logic/parser/addcommandparser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddPersonCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"public class AddPersonCommandParser extends AddCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_BIRTHDAY, PREFIX_TAG);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        boolean isPreambleEmpty \u003d argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        boolean isNamePrefixPresent \u003d arePrefixesPresent(argMultimap, PREFIX_NAME);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"        boolean isBirthdayPrefixPresent \u003d arePrefixesPresent(argMultimap, PREFIX_BIRTHDAY);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        if (!isNamePrefixPresent || !isPreambleEmpty || !isBirthdayPrefixPresent) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"                    AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME)","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"            .filter(Name::isValidName)","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"            .orElseThrow(() -\u003e new ParseException(Name.MESSAGE_CONSTRAINTS)));","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        Birthday birthday \u003d ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY)","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"                        .filter(Birthday::isValidBirthday)","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"                        .orElseThrow(() -\u003e new ParseException(Birthday.MESSAGE_CONSTRAINTS)),","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"                name.fullName);","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        Person person \u003d new Person(name, birthday, tagList);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":24,"jellymias":30,"maikongeh":6}},{"path":"src/main/java/seedu/address/logic/parser/deletecommandparser/DeleteAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.parser.deletecommandparser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.deletecommand.DeleteAssignmentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":" *  Parses input arguments and creates new DeleteAssignmentCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"public class DeleteAssignmentCommandParser extends DeleteCommandParser implements Parser\u003cDeleteAssignmentCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAssignmentCommand","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"     * and returns an DeleteAssignmentCommand object for execution.","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    public DeleteAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_EXAM, PREFIX_ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE)","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"                .filter(Title::isValidTitle)","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"                        String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"))));","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        Index index \u003d ParserUtil.parseAssignmentIndex(argMultimap.getValue(PREFIX_ASSIGNMENT).get());","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        return new DeleteAssignmentCommand(title, index);","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":10,"banchiang":1,"maikongeh":29}},{"path":"src/main/java/seedu/address/logic/parser/deletecommandparser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.parser.deletecommandparser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.deletecommand.DeleteCommand;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.CommandParser;","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":" * Parses input arguments and creates new parseCommand Object","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"public class DeleteCommandParser implements CommandParser {","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"     * Parses the {@code String} of arguments of a delete command","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"     * to execute the specific delete command","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"        Command command;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_NAME, PREFIX_EXAM, PREFIX_ASSIGNMENT,","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"                        PREFIX_GENERAL_EVENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        if (deleteModuleCondition(argMultimap)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"            command \u003d new DeleteModuleCommandParser().parse(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        } else if (deleteAssignmentCondition(argMultimap)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"            command \u003d new DeleteAssignmentCommandParser().parse(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"        } else if (deleteExamCondition(argMultimap)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"            command \u003d new DeleteExamCommandParser().parse(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        } else if (deleteGeneralEventCondition(argMultimap)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"            command \u003d new DeleteGeneralEventCommandParser().parse(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        } else if (deletePersonCondition(argMultimap)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"            command \u003d new DeletePersonCommandParser().parse(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        return command;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"     * returns true when arguments match input for deleteModule command","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"    public boolean deleteModuleCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_EXAM)","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_GENERAL_EVENT);","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"     * returns true when arguments match input for deleteAssignment command","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"    public boolean deleteAssignmentCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_EXAM)","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_GENERAL_EVENT);","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"     * returns true when arguments match input for deleteExam command","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"    public boolean deleteExamCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_EXAM)","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_GENERAL_EVENT);","lastModifiedDate":"2021-04-08"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"     * returns true when arguments match input for deletePerson command","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"    public boolean deletePersonCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"        return !arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-04-08"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-04-08"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-04-08"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_EXAM);","lastModifiedDate":"2021-04-08"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":"     * returns true when arguments match input for deleteGeneralEvent command","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"    public boolean deleteGeneralEventCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-04-08"},{"lineNumber":103,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-04-08"},{"lineNumber":104,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_EXAM)","lastModifiedDate":"2021-04-08"},{"lineNumber":105,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"maikongeh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"maikongeh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"maikongeh"},"content":"    protected static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"maikongeh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":2,"jellymias":2,"maikongeh":113}},{"path":"src/main/java/seedu/address/logic/parser/deletecommandparser/DeleteExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.parser.deletecommandparser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.deletecommand.DeleteExamCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"public class DeleteExamCommandParser extends DeleteCommandParser implements Parser\u003cDeleteExamCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    public DeleteExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_EXAM, PREFIX_ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE)","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"                .filter(Title::isValidTitle)","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"                        String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\u0027\")","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"                )));","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"        Index index \u003d ParserUtil.parseExamIndex(argMultimap.getValue(PREFIX_EXAM).get());","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"        return new DeleteExamCommand(title, index);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":5,"banchiang":1,"maikongeh":25}},{"path":"src/main/java/seedu/address/logic/parser/deletecommandparser/DeleteGeneralEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.parser.deletecommandparser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.commands.deletecommand.DeleteGeneralEventCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"public class DeleteGeneralEventCommandParser extends DeleteCommandParser implements Parser\u003cDeleteGeneralEventCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteGeneralEventCommand","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"     * and returns a DeleteGeneralEventCommand object for execution.","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    public DeleteGeneralEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GENERAL_EVENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"        Index index \u003d ParserUtil.parseGeneralEventIndex(argMultimap.getValue(PREFIX_GENERAL_EVENT).get());","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"        return new DeleteGeneralEventCommand(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"markuz5116":4,"maikongeh":24}},{"path":"src/main/java/seedu/address/logic/parser/deletecommandparser/DeleteModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.parser.deletecommandparser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.deletecommand.DeleteModuleCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"public class DeleteModuleCommandParser extends DeleteCommandParser implements Parser\u003cDeleteModuleCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteModuleCommand","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"     * and returns a DeleteModuleCommand object for execution.","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    public DeleteModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_EXAM, PREFIX_ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE)","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"                .filter(Title::isValidTitle)","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"                        String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\")","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"                )));","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        return new DeleteModuleCommand(title);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":8,"banchiang":1,"maikongeh":30}},{"path":"src/main/java/seedu/address/logic/parser/deletecommandparser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.parser.deletecommandparser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.deletecommand.DeletePersonCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"public class DeletePersonCommandParser extends DeleteCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"        return new DeletePersonCommand(index);","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":2,"banchiang":1,"maikongeh":16}},{"path":"src/main/java/seedu/address/logic/parser/editcommandparser/EditAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditAssignmentCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":" * Parses input arguments and create a new EditAssignmentCommand object.","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"public class EditAssignmentCommandParser extends EditCommandParser implements Parser\u003cEditAssignmentCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAssignmentCommand and","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * returns an EditAssignmentCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    public EditAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_DEADLINE, PREFIX_ASSIGNMENT, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MODULE, PREFIX_ASSIGNMENT)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"                                                    EditAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE)","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"                .filter(Title::isValidTitle)","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"                        String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"))));","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        Module module \u003d new Module(title);","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_ASSIGNMENT).get());","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        int intIndex \u003d index.getOneBased();","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        Description descriptionEdit \u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"            descriptionEdit \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION)","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"                    .filter(Description::isValidDescription)","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"                    .orElseThrow(() -\u003e new ParseException(Description.MESSAGE_CONSTRAINTS)));","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DEADLINE)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"            dateEdit \u003d argMultimap.getValue(PREFIX_DEADLINE)","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"                    .map(ParserUtil::parseDeadline)","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"                    .orElseThrow(() -\u003e new ParseException(Assignment.DATE_CONSTRAINTS));","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        return new EditAssignmentCommand(module, intIndex, descriptionEdit, dateEdit);","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"markuz5116":11,"jellymias":55}},{"path":"src/main/java/seedu/address/logic/parser/editcommandparser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.CommandParser;","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":" * Parses input arguments, identifies which Edit Command it refers to and","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":" * creates the corresponding Edit Command.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"public class EditCommandParser implements CommandParser {","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * Parses the given {@code String} of arguments in the context of an Edit Command","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * and returns a Command object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        Command command;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_NAME, PREFIX_TAG,","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"                        PREFIX_GENERAL_EVENT, PREFIX_DATE, PREFIX_ASSIGNMENT, PREFIX_EXAM);","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        if (editModuleCondition(argMultimap)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"            command \u003d new EditModuleCommandParser().parse(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        } else if (editPersonCondition(argMultimap)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"            command \u003d new EditPersonCommandParser().parse(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        } else if (editEventCondition(argMultimap)) {","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"            command \u003d new EditEventCommandParser().parse(args);","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        } else if (editAssignmentCondition(argMultimap)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"            command \u003d new EditAssignmentCommandParser().parse(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        } else if (editExamCondition(argMultimap)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"            command \u003d new EditExamCommandParser().parse(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"                    EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        return command;","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"    private boolean editModuleCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"    private boolean editPersonCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_MODULE);","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"    private boolean editEventCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"        return (arePrefixesPresent(argMultimap, PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_DATE))","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 !argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"    private boolean editAssignmentCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"    private boolean editExamCondition(ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"        return arePrefixesPresent(argMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_EXAM)","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"    protected static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":1,"jellymias":95}},{"path":"src/main/java/seedu/address/logic/parser/editcommandparser/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditEventCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":" * Parses input arguments and create a new EditEventCommand object.","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"public class EditEventCommandParser extends EditCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEventCommand and","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"     * returns an EditEventCommand object for execution.","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GENERAL_EVENT, PREFIX_DATE);","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        Index index;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        index \u003d ParserUtil.parseGeneralEventIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        int intIndex \u003d index.getOneBased();","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        Description eventEdit \u003d null;","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d null;","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_GENERAL_EVENT)) {","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"            eventEdit \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"                .filter(Description::isValidDescription)","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(Description.MESSAGE_CONSTRAINTS)));","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DATE)) {","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"            dateEdit \u003d argMultimap.getValue(PREFIX_DATE)","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"                    .map(ParserUtil::parseEventDate)","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"                    .orElseThrow(() -\u003e new ParseException(GeneralEvent.DATE_CONSTRAINT));","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        return new EditEventCommand(intIndex, eventEdit, dateEdit);","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"markuz5116":7,"jellymias":43,"maikongeh":1}},{"path":"src/main/java/seedu/address/logic/parser/editcommandparser/EditExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditExamCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":" * Parses input arguments and create a new EditAssignmentCommand object.","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"public class EditExamCommandParser extends EditCommandParser implements Parser\u003cEditExamCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAssignmentCommand and","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * returns an EditAssignmentCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    public EditExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_EXAM, PREFIX_DATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MODULE, PREFIX_EXAM, PREFIX_DATE)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"                    EditExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE)","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"                .filter(Title::isValidTitle)","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"                        String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\")","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"                )));","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        Module module \u003d new Module(title);","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        Index index \u003d ParserUtil.parseExamIndex(argMultimap.getValue(PREFIX_EXAM).get());","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        int intIndex \u003d index.getOneBased();","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        LocalDateTime edit \u003d argMultimap.getValue(PREFIX_DATE)","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"                .map(ParserUtil::parseExamDate)","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(Exam.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"        return new EditExamCommand(module, intIndex, edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"markuz5116":8,"jellymias":47,"maikongeh":1}},{"path":"src/main/java/seedu/address/logic/parser/editcommandparser/EditModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditModuleCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":" * Parses input arguments and create a new EditModuleCommand object.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"public class EditModuleCommandParser extends EditCommandParser implements Parser\u003cEditModuleCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"     * Parses the given {@code String} of arguments in the context of the EditModuleCommand and","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     * returns an EditModuleCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    public EditModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        Index index;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"                    EditModuleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        int intIndex \u003d index.getOneBased();","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        Title edited \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_MODULE)","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"                .filter(Title::isValidTitle)","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"                .orElseThrow(() -\u003e new ParseException(","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"                        String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\")","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"                )));","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        return new EditModuleCommand(intIndex, edited);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":5,"jellymias":43}},{"path":"src/main/java/seedu/address/logic/parser/editcommandparser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditPersonCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"public class EditPersonCommandParser extends EditCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_BIRTHDAY, PREFIX_TAG);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"                    EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get(),","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"                    argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"markuz5116":8,"jellymias":8,"banchiang":2,"maikongeh":4,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/findcommandparser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.findcommandparser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.parser.CommandParser;","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"public class FindCommandParser implements CommandParser {","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of an Find Command and returns","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"     * a Command object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        Command command;","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_NAME, PREFIX_EXAM,","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"                PREFIX_ASSIGNMENT, PREFIX_GENERAL_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        if (findModuleCondition(argumentMultimap)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"            command \u003d new FindModuleCommandParser().parse(args);","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        } else if (findPersonCondition(argumentMultimap)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"            command \u003d new FindPersonCommandParser().parse(args);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        } else if (findEventCondition(argumentMultimap)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"            command \u003d new FindEventCommandParser().parse(args);","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"                    FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        return command;","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"    private boolean findModuleCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argumentMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argumentMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 !arePrefixesPresent(argumentMultimap, PREFIX_ASSIGNMENT)","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 !arePrefixesPresent(argumentMultimap, PREFIX_EXAM);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"    private boolean findEventCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argumentMultimap, PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"    private boolean findPersonCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        return arePrefixesPresent(argumentMultimap, PREFIX_NAME)","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"    protected static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap,","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"                                                Prefix... prefixes) {","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"markuz5116":67,"jellymias":2}},{"path":"src/main/java/seedu/address/logic/parser/findcommandparser/FindEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.findcommandparser;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindEventCommand;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"public class FindEventCommandParser extends FindCommandParser implements Parser\u003cFindEventCommand\u003e {","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the FindEventCommand and","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"     * returns a FindEventCommand object for execution.","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    public FindEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_GENERAL_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"        if (earlyExitCondition(argumentMultimap)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        String trimmedArgs \u003d argumentMultimap.getValue(PREFIX_GENERAL_EVENT).get().trim();","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"                    FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        String[] titleKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        return new FindEventCommand(new DescriptionContainsKeywordsPredicate(Arrays.asList(titleKeywords)));","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    private boolean earlyExitCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        return !arePrefixesPresent(argumentMultimap, PREFIX_GENERAL_EVENT)","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"                || !argumentMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"                || argumentMultimap.getValue(PREFIX_GENERAL_EVENT).isEmpty();","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"markuz5116":45}},{"path":"src/main/java/seedu/address/logic/parser/findcommandparser/FindModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.findcommandparser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindModuleCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"public class FindModuleCommandParser extends FindCommandParser implements Parser\u003cFindModuleCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the FindModuleCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"     * and returns a FindModuleCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    public FindModuleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MODULE);","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"        if (earlyExitCondition(argumentMultimap)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        String trimmedArgs \u003d argumentMultimap.getValue(PREFIX_MODULE).get().trim();","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"                    FindModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        String[] titleKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        return new FindModuleCommand(new TitleContainsKeywordsPredicate(Arrays.asList(titleKeywords)));","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    private boolean earlyExitCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        return !arePrefixesPresent(argumentMultimap, PREFIX_MODULE)","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"                || !argumentMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"                || argumentMultimap.getValue(PREFIX_MODULE).isEmpty();","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"markuz5116":45}},{"path":"src/main/java/seedu/address/logic/parser/findcommandparser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.findcommandparser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindPersonCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":" * Parses input arguments and creates a new FindPersonCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"public class FindPersonCommandParser extends FindCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"     * and returns a FindPersonCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"        if (earlyExitCondition(argumentMultimap)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        String trimmedArgs \u003d argumentMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        return new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"    private boolean earlyExitCondition(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        return !arePrefixesPresent(argumentMultimap, PREFIX_NAME)","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"                || !argumentMultimap.getPreamble().isEmpty()","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"                || argumentMultimap.getValue(PREFIX_NAME).isEmpty();","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"markuz5116":48}},{"path":"src/main/java/seedu/address/model/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":" * Represent an event that occurs.","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"public abstract class Event implements Comparable\u003cEvent\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    protected final Description description;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    protected final LocalDateTime dateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    protected final Tag tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"     * Constructs a new {@code Event}.","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * @param description Description of event.","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * @param dateTime Timing of event.","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     * @param tag Tag for event.","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    public Event(Description description, LocalDateTime dateTime, Tag tag) {","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        requireAllNonNull(description, dateTime, tag);","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        return description;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        return dateTime.toLocalDate();","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        return dateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        return dateTime.toLocalTime();","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    public Tag getTag() {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        return tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"    public int compareTo(Event otherEvent) {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        return dateTime.compareTo(otherEvent.dateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"    public abstract int hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"    public abstract String toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"banchiang":58,"Hzxin":11}},{"path":"src/main/java/seedu/address/model/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":" * A list specifically to store events.","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"public class EventList {","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    private ArrayList\u003cEvent\u003e events;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public EventList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"        this.events \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    public void add(Event e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        events.add(e);","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    public ArrayList\u003cEvent\u003e getEvents() {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"        return new ArrayList\u003c\u003e(events);","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        return events.isEmpty();","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    public void sort() {","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        Collections.sort(events);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        String displayString \u003d \"\";","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"        for (Event event : events) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"            String tagName \u003d event.getTag().tagName;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"            if (tagName.equals(\"Birthday\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"                displayString +\u003d ((Birthday) event).getDescription() + \": \" + event.toString() + \"\\n\";","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"                displayString +\u003d event.tag + \": \" + event.toString() + \"\\n\";","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        return displayString;","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"banchiang":27,"Hzxin":21}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    Predicate\u003cModule\u003e PREDICATE_SHOW_ALL_MODULES \u003d unused -\u003e true;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    Predicate\u003cGeneralEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"     * Returns the user prefs\u0027 remind me file path.","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    Path getRemindMeFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"     * Sets the user prefs\u0027 RemindMe file path.","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    void setRemindMeFilePath(Path remindMeFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"     * The person must exist in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"     * {@code person} must not already exist in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"     * {@code target} must exist in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"     * Returns true if a module with the same title, exams, and assignments as {@code module}","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"     * exists in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"    boolean hasModule(Module module);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"     * Returns true if there exists a module in the module list at {@code index}","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"    boolean hasModule(int index);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"     * Adds the given module.","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"     * {@code module} must not already exists in RemindMe.","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"    void addModule(Module module);","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"maikongeh"},"content":"     * Deletes the given module.","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"maikongeh"},"content":"     * The Module must exist in the RemindMe.","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"maikongeh"},"content":"    void deleteModule(Module target);","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"     * Gets the module with the same title as {@code module}","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"    Module getModule(Module module);","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"     * Gets the module at {@code index}","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"    Module getModule(int index);","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"     * Replaces the given person {@code target} with {@code editedMod}.","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"     * {@code target} must exist in the RemindMe.","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"     * The person identity of {@code editedMod} must not be the same as another existing person in the RemindMe.","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"    void setModule(Module target, Module editedMod);","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"     * Returns true if an assignment that has the same description and deadline","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":"     * as {@code assignment} exists in the same module.","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"    boolean hasAssignment(Module module, Assignment assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"     * Returns true if the {@code index} is within the size of the","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"     * assignment list in {@code module}","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"    boolean hasAssignment(Module module, int index);","lastModifiedDate":"2021-03-22"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":141,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"maikongeh"},"content":"     * Edits the given module at index","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"maikongeh"},"content":"    void editModule(int index, Title target);","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":147,"author":{"gitId":"maikongeh"},"content":"     * Deletes the target assignment","lastModifiedDate":"2021-04-04"},{"lineNumber":148,"author":{"gitId":"maikongeh"},"content":"     * @param module","lastModifiedDate":"2021-04-04"},{"lineNumber":149,"author":{"gitId":"maikongeh"},"content":"     * @param assignment","lastModifiedDate":"2021-04-04"},{"lineNumber":150,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":151,"author":{"gitId":"maikongeh"},"content":"    void deleteAssignment(Module module, Assignment assignment);","lastModifiedDate":"2021-04-04"},{"lineNumber":152,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":153,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":154,"author":{"gitId":"maikongeh"},"content":"     * Deletes the target general event","lastModifiedDate":"2021-04-04"},{"lineNumber":155,"author":{"gitId":"maikongeh"},"content":"     * @param generalEvent","lastModifiedDate":"2021-04-04"},{"lineNumber":156,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":157,"author":{"gitId":"maikongeh"},"content":"    void deleteGeneralEvent(GeneralEvent generalEvent);","lastModifiedDate":"2021-04-04"},{"lineNumber":158,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":159,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":160,"author":{"gitId":"maikongeh"},"content":"     * Deletes the target exam","lastModifiedDate":"2021-04-04"},{"lineNumber":161,"author":{"gitId":"maikongeh"},"content":"     * @param module","lastModifiedDate":"2021-04-04"},{"lineNumber":162,"author":{"gitId":"maikongeh"},"content":"     * @param exam","lastModifiedDate":"2021-04-04"},{"lineNumber":163,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":164,"author":{"gitId":"maikongeh"},"content":"    void deleteExam(Module module, Exam exam);","lastModifiedDate":"2021-04-04"},{"lineNumber":165,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":"     * Adds the given assignment.","lastModifiedDate":"2021-03-09"},{"lineNumber":168,"author":{"gitId":"jellymias"},"content":"     * {@code assignment} must not already exist in the module it is to be added to.","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":170,"author":{"gitId":"jellymias"},"content":"    void addAssignment(Module module, Assignment assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"jellymias"},"content":"     * Edits the description of the assignment at {@code index} in the {@code module} with the {@code edit}.","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"     * {@code module} must already exist in the remindMe and {@code index} must be a valid index.","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"jellymias"},"content":"    void editAssignment(Module module, int index, Description edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":177,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":178,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"jellymias"},"content":"     * Edits the deadline of the assignment at {@code index} in the {@code module} with the {@code edit}.","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"jellymias"},"content":"     * {@code module} must already exist in the remindMe and {@code index} must be a valid index.","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"jellymias"},"content":"    void editAssignment(Module module, int index, LocalDateTime edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":184,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":185,"author":{"gitId":"Hzxin"},"content":"     * Toggles the done status of the assignemnt at {@code index} in the {@code module}.","lastModifiedDate":"2021-04-06"},{"lineNumber":186,"author":{"gitId":"Hzxin"},"content":"     * {@code module} must already exist in the remindMe and {@code index} must be a valid index.","lastModifiedDate":"2021-04-06"},{"lineNumber":187,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":188,"author":{"gitId":"Hzxin"},"content":"    void toggleDoneStatusForAssignment(Module module, int index);","lastModifiedDate":"2021-04-06"},{"lineNumber":189,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":190,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":191,"author":{"gitId":"markuz5116"},"content":"     * Returns true if an exam with the same date and time as {@code module} exists in the","lastModifiedDate":"2021-03-10"},{"lineNumber":192,"author":{"gitId":"Hzxin"},"content":"     * RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"    boolean hasExam(Module module, Exam exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":196,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":197,"author":{"gitId":"jellymias"},"content":"     * Returns true if {@code index} is within the exam list of {@code module}.","lastModifiedDate":"2021-03-22"},{"lineNumber":198,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":199,"author":{"gitId":"jellymias"},"content":"    boolean hasExam(Module module, int index);","lastModifiedDate":"2021-03-22"},{"lineNumber":200,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":201,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":202,"author":{"gitId":"jellymias"},"content":"     * Edits the date of the exam at {@code index} in the {@code module} with the given {@code edit}","lastModifiedDate":"2021-03-22"},{"lineNumber":203,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":204,"author":{"gitId":"jellymias"},"content":"    void editExam(Module module, int index, LocalDateTime edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":205,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":206,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"markuz5116"},"content":"     * Adds the given exam.","lastModifiedDate":"2021-03-10"},{"lineNumber":208,"author":{"gitId":"markuz5116"},"content":"     * {@code exam} must not already exist in the module it is to be added to.","lastModifiedDate":"2021-03-10"},{"lineNumber":209,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":210,"author":{"gitId":"jellymias"},"content":"    void addExam(Module module, Exam exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":211,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":212,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":213,"author":{"gitId":"Hzxin"},"content":"     * Replaces remindMe data with the data in {@code remindMe}.","lastModifiedDate":"2021-03-15"},{"lineNumber":214,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":215,"author":{"gitId":"markuz5116"},"content":"    void setRemindMe(RemindMe remindMe);","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":217,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"markuz5116"},"content":"     * Clear RemindMe\u0027s modules.","lastModifiedDate":"2021-03-18"},{"lineNumber":219,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":220,"author":{"gitId":"markuz5116"},"content":"    void resetModules();","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":222,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":223,"author":{"gitId":"markuz5116"},"content":"     * Clear RemindMe\u0027s persons.","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"markuz5116"},"content":"    void resetPersons();","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":227,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":228,"author":{"gitId":"markuz5116"},"content":"     * Clear RemindMe\u0027s general events.","lastModifiedDate":"2021-03-19"},{"lineNumber":229,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":230,"author":{"gitId":"markuz5116"},"content":"    void resetEvents();","lastModifiedDate":"2021-03-19"},{"lineNumber":231,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":232,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":233,"author":{"gitId":"markuz5116"},"content":"     * Returns the RemindMe","lastModifiedDate":"2021-03-19"},{"lineNumber":234,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":235,"author":{"gitId":"markuz5116"},"content":"    ReadOnlyRemindMe getRemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":237,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":238,"author":{"gitId":"jellymias"},"content":"     * Returns true if an event with the same description and date as {@code event} exists in the","lastModifiedDate":"2021-03-19"},{"lineNumber":239,"author":{"gitId":"jellymias"},"content":"     * RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":240,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":241,"author":{"gitId":"jellymias"},"content":"    boolean hasEvent(GeneralEvent event);","lastModifiedDate":"2021-03-19"},{"lineNumber":242,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":243,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":244,"author":{"gitId":"jellymias"},"content":"     * Returns true if there exists an event in the event list at {@code index}","lastModifiedDate":"2021-03-20"},{"lineNumber":245,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":246,"author":{"gitId":"jellymias"},"content":"    boolean hasEvent(int index);","lastModifiedDate":"2021-03-20"},{"lineNumber":247,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":248,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":249,"author":{"gitId":"jellymias"},"content":"     * Adds the given event to RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":250,"author":{"gitId":"jellymias"},"content":"     * {@code event} must not already exist in RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":251,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":252,"author":{"gitId":"jellymias"},"content":"    void addEvent(GeneralEvent event);","lastModifiedDate":"2021-03-19"},{"lineNumber":253,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":254,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":255,"author":{"gitId":"jellymias"},"content":"     * Edits the given event at {@code index} with the given edit {@code edit}.","lastModifiedDate":"2021-03-20"},{"lineNumber":256,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":257,"author":{"gitId":"jellymias"},"content":"    void editEvent(int index, Description edit);","lastModifiedDate":"2021-03-20"},{"lineNumber":258,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":259,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":260,"author":{"gitId":"jellymias"},"content":"     * Edits the given event at {@code index} with the given edit {@code edit}.","lastModifiedDate":"2021-03-20"},{"lineNumber":261,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":262,"author":{"gitId":"jellymias"},"content":"    void editEvent(int index, LocalDateTime edit);","lastModifiedDate":"2021-03-20"},{"lineNumber":263,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":264,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":265,"author":{"gitId":"maikongeh"},"content":"     * Removes the given target event from model","lastModifiedDate":"2021-03-22"},{"lineNumber":266,"author":{"gitId":"maikongeh"},"content":"     * @param target","lastModifiedDate":"2021-03-22"},{"lineNumber":267,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":268,"author":{"gitId":"maikongeh"},"content":"    void deleteEvent(GeneralEvent target);","lastModifiedDate":"2021-03-22"},{"lineNumber":269,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":270,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":271,"author":{"gitId":"jellymias"},"content":"     * Gets the event at {@code index}.","lastModifiedDate":"2021-03-23"},{"lineNumber":272,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":273,"author":{"gitId":"jellymias"},"content":"    GeneralEvent getEvent(int index);","lastModifiedDate":"2021-03-23"},{"lineNumber":274,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":275,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":276,"author":{"gitId":"jellymias"},"content":"     * Replaces the given general event {@code target} with {@code editedEvent}.","lastModifiedDate":"2021-04-01"},{"lineNumber":277,"author":{"gitId":"jellymias"},"content":"     * {@code target} must exist in the RemindMe.","lastModifiedDate":"2021-04-01"},{"lineNumber":278,"author":{"gitId":"jellymias"},"content":"     * The description and date of {@code editedEvent} must not be the same as","lastModifiedDate":"2021-04-01"},{"lineNumber":279,"author":{"gitId":"jellymias"},"content":"     * another existing general event in the RemindMe.","lastModifiedDate":"2021-04-01"},{"lineNumber":280,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":281,"author":{"gitId":"jellymias"},"content":"    void setEvent(GeneralEvent target, GeneralEvent editedEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":282,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":283,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":284,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":285,"author":{"gitId":"markuz5116"},"content":"     * Updates the filter of the filtered module list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-12"},{"lineNumber":286,"author":{"gitId":"markuz5116"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-12"},{"lineNumber":287,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":288,"author":{"gitId":"markuz5116"},"content":"    void updateFilteredModuleList(Predicate\u003cModule\u003e predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":289,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":290,"author":{"gitId":"markuz5116"},"content":"    /** Returns an unmodifiable view of the filtered module list */","lastModifiedDate":"2021-03-12"},{"lineNumber":291,"author":{"gitId":"markuz5116"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2021-03-12"},{"lineNumber":292,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":293,"author":{"gitId":"markuz5116"},"content":"    void updateFilteredEventList(Predicate\u003cGeneralEvent\u003e predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":294,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":295,"author":{"gitId":"markuz5116"},"content":"    ObservableList\u003cGeneralEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-03-19"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"markuz5116":62,"jellymias":108,"Hzxin":19,"maikongeh":37,"-":70}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":" * Represents the in-memory model of the RemindMe data.","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    private final RemindMe remindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"    private final FilteredList\u003cModule\u003e filteredModules;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"    private final FilteredList\u003cGeneralEvent\u003e filteredEvents;","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"     * Initializes a ModelManager with the given RemindMe and userPrefs.","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    public ModelManager(ReadOnlyRemindMe remindMeApp,","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        requireAllNonNull(remindMeApp, userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        logger.fine(\"Initializing with RemindMe: \" + remindMeApp + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        this.remindMe \u003d new RemindMe(remindMeApp);","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.remindMe.getPersonList());","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        filteredModules \u003d new FilteredList\u003c\u003e(this.remindMe.getModuleList());","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.remindMe.getEventList());","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"        this(new RemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"    public Path getRemindMeFilePath () {","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"        return userPrefs.getRemindMeFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"    public void setRemindMeFilePath(Path remindMeFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        requireNonNull(remindMeFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"        userPrefs.setRemindMeFilePath(remindMeFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RemindMe Person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"        return remindMe.hasPerson(person);","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"        remindMe.removePerson(target);","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"        remindMe.addPerson(person);","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"        remindMe.setPerson(target, editedPerson);","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"     * {@code versionedRemindMe}","lastModifiedDate":"2021-03-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"markuz5116"},"content":"        return remindMe.equals(other.remindMe)","lastModifiedDate":"2021-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"Hzxin"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 filteredModules.equals(other.filteredModules)","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents);","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"Hzxin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RemindMe \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"markuz5116"},"content":"    public void setRemindMe(RemindMe remindMe) {","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"        this.remindMe.resetData(remindMe);","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":164,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"markuz5116"},"content":"    public void resetModules() {","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"markuz5116"},"content":"        this.remindMe.resetModules();","lastModifiedDate":"2021-03-18"},{"lineNumber":167,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":170,"author":{"gitId":"markuz5116"},"content":"    public void resetPersons() {","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"markuz5116"},"content":"        this.remindMe.resetPersons();","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":175,"author":{"gitId":"markuz5116"},"content":"    public void resetEvents() {","lastModifiedDate":"2021-03-19"},{"lineNumber":176,"author":{"gitId":"markuz5116"},"content":"        this.remindMe.resetEvents();","lastModifiedDate":"2021-03-19"},{"lineNumber":177,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":178,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":179,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"markuz5116"},"content":"    public ReadOnlyRemindMe getRemindMe() {","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"markuz5116"},"content":"        return remindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":182,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"markuz5116"},"content":"    public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"markuz5116"},"content":"        filteredModules.setPredicate(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":189,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":191,"author":{"gitId":"markuz5116"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"markuz5116"},"content":"        return filteredModules;","lastModifiedDate":"2021-03-12"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":194,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":195,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":196,"author":{"gitId":"markuz5116"},"content":"    public void updateFilteredEventList(Predicate\u003cGeneralEvent\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-19"},{"lineNumber":198,"author":{"gitId":"markuz5116"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2021-03-19"},{"lineNumber":199,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":200,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":201,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":202,"author":{"gitId":"markuz5116"},"content":"    public ObservableList\u003cGeneralEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-03-19"},{"lineNumber":203,"author":{"gitId":"markuz5116"},"content":"        return filteredEvents;","lastModifiedDate":"2021-03-19"},{"lineNumber":204,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":205,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":206,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"markuz5116"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2021-03-10"},{"lineNumber":208,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":209,"author":{"gitId":"markuz5116"},"content":"        return remindMe.hasModule(module);","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":211,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":212,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"jellymias"},"content":"    public boolean hasModule(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"markuz5116"},"content":"        return remindMe.hasModule(index);","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":216,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":217,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":218,"author":{"gitId":"markuz5116"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2021-03-10"},{"lineNumber":219,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":220,"author":{"gitId":"markuz5116"},"content":"        remindMe.addModule(module);","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"Hzxin"},"content":"        updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":223,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":224,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"maikongeh"},"content":"    public void deleteModule(Module target) {","lastModifiedDate":"2021-03-16"},{"lineNumber":226,"author":{"gitId":"markuz5116"},"content":"        remindMe.removeModule(target);","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":229,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":230,"author":{"gitId":"jellymias"},"content":"    public Module getModule(Module module) {","lastModifiedDate":"2021-03-22"},{"lineNumber":231,"author":{"gitId":"jellymias"},"content":"        return remindMe.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":232,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":233,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":234,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"jellymias"},"content":"    public Module getModule(int index) {","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"jellymias"},"content":"        return remindMe.getModule(index);","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":240,"author":{"gitId":"jellymias"},"content":"    public void editModule(int index, Title title) {","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"jellymias"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-03-16"},{"lineNumber":242,"author":{"gitId":"markuz5116"},"content":"        remindMe.editModule(index, title);","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":244,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":245,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"jellymias"},"content":"    public void setModule(Module target, Module editedMod) {","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(target, editedMod);","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"jellymias"},"content":"        remindMe.setModule(target, editedMod);","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":252,"author":{"gitId":"jellymias"},"content":"    public boolean hasAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":253,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(module, assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":254,"author":{"gitId":"markuz5116"},"content":"        return remindMe.hasAssignment(module, assignment);","lastModifiedDate":"2021-03-18"},{"lineNumber":255,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":256,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":257,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":258,"author":{"gitId":"jellymias"},"content":"    public boolean hasAssignment(Module module, int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":259,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":260,"author":{"gitId":"jellymias"},"content":"        return remindMe.hasAssignment(module, index);","lastModifiedDate":"2021-03-22"},{"lineNumber":261,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":262,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":263,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":264,"author":{"gitId":"maikongeh"},"content":"    public void deleteAssignment(Module module, Assignment target) {","lastModifiedDate":"2021-04-04"},{"lineNumber":265,"author":{"gitId":"maikongeh"},"content":"        remindMe.removeAssignment(module, target);","lastModifiedDate":"2021-04-04"},{"lineNumber":266,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":267,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":268,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":269,"author":{"gitId":"maikongeh"},"content":"    public void deleteExam(Module module, Exam exam) {","lastModifiedDate":"2021-04-04"},{"lineNumber":270,"author":{"gitId":"maikongeh"},"content":"        remindMe.removeExam(module, exam);","lastModifiedDate":"2021-04-04"},{"lineNumber":271,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":272,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":273,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":274,"author":{"gitId":"maikongeh"},"content":"    public void deleteGeneralEvent(GeneralEvent generalEvent) {","lastModifiedDate":"2021-04-04"},{"lineNumber":275,"author":{"gitId":"maikongeh"},"content":"        remindMe.removeEvent(generalEvent);","lastModifiedDate":"2021-04-04"},{"lineNumber":276,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":277,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":278,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":279,"author":{"gitId":"jellymias"},"content":"    public void addAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":280,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(module, assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":281,"author":{"gitId":"markuz5116"},"content":"        remindMe.addAssignment(module, assignment);","lastModifiedDate":"2021-03-18"},{"lineNumber":282,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":283,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":284,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":285,"author":{"gitId":"jellymias"},"content":"    public void editAssignment(Module module, int index, Description edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":286,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":287,"author":{"gitId":"jellymias"},"content":"        remindMe.editAssignment(module, index, edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":288,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":289,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":290,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":291,"author":{"gitId":"jellymias"},"content":"    public void editAssignment(Module module, int index, LocalDateTime edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":292,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":293,"author":{"gitId":"jellymias"},"content":"        remindMe.editAssignment(module, index, edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":294,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":295,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":296,"author":{"gitId":"Hzxin"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":297,"author":{"gitId":"Hzxin"},"content":"    public void toggleDoneStatusForAssignment(Module module, int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":298,"author":{"gitId":"Hzxin"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-04-06"},{"lineNumber":299,"author":{"gitId":"Hzxin"},"content":"        remindMe.toggleDoneStatusForAssignment(module, index);","lastModifiedDate":"2021-04-06"},{"lineNumber":300,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":301,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":302,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":303,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":304,"author":{"gitId":"jellymias"},"content":"    public boolean hasExam(Module module, Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":305,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(module, exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":306,"author":{"gitId":"markuz5116"},"content":"        return remindMe.hasExam(module, exam);","lastModifiedDate":"2021-03-18"},{"lineNumber":307,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":308,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":309,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":310,"author":{"gitId":"jellymias"},"content":"    public boolean hasExam(Module module, int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":311,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":312,"author":{"gitId":"jellymias"},"content":"        return remindMe.hasExam(module, index);","lastModifiedDate":"2021-03-22"},{"lineNumber":313,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":314,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":315,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":316,"author":{"gitId":"jellymias"},"content":"    public void editExam(Module module, int index, LocalDateTime edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":317,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(module, edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":318,"author":{"gitId":"jellymias"},"content":"        remindMe.editExam(module, index, edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":319,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":320,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":321,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":322,"author":{"gitId":"jellymias"},"content":"    public void addExam(Module module, Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":323,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(module, exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":324,"author":{"gitId":"markuz5116"},"content":"        remindMe.addExam(module, exam);","lastModifiedDate":"2021-03-18"},{"lineNumber":325,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":326,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":327,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":328,"author":{"gitId":"jellymias"},"content":"    public boolean hasEvent(GeneralEvent event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":329,"author":{"gitId":"jellymias"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":330,"author":{"gitId":"jellymias"},"content":"        return remindMe.hasEvent(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":331,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":332,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":333,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":334,"author":{"gitId":"jellymias"},"content":"    public boolean hasEvent(int index) {","lastModifiedDate":"2021-03-20"},{"lineNumber":335,"author":{"gitId":"jellymias"},"content":"        return remindMe.hasEvent(index);","lastModifiedDate":"2021-03-20"},{"lineNumber":336,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":337,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":338,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":339,"author":{"gitId":"jellymias"},"content":"    public void editEvent(int index, Description edit) {","lastModifiedDate":"2021-03-20"},{"lineNumber":340,"author":{"gitId":"jellymias"},"content":"        remindMe.editEvent(index, edit);","lastModifiedDate":"2021-03-20"},{"lineNumber":341,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":342,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":343,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":344,"author":{"gitId":"jellymias"},"content":"    public void editEvent(int index, LocalDateTime edit) {","lastModifiedDate":"2021-03-20"},{"lineNumber":345,"author":{"gitId":"jellymias"},"content":"        remindMe.editEvent(index, edit);","lastModifiedDate":"2021-03-20"},{"lineNumber":346,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":347,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":348,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":349,"author":{"gitId":"maikongeh"},"content":"    public void deleteEvent(GeneralEvent target) {","lastModifiedDate":"2021-03-22"},{"lineNumber":350,"author":{"gitId":"maikongeh"},"content":"        remindMe.removeEvent(target);","lastModifiedDate":"2021-03-22"},{"lineNumber":351,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":352,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":353,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":354,"author":{"gitId":"jellymias"},"content":"    public void addEvent(GeneralEvent event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":355,"author":{"gitId":"jellymias"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":356,"author":{"gitId":"jellymias"},"content":"        remindMe.addEvent(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":357,"author":{"gitId":"Hzxin"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":358,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":359,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":360,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":361,"author":{"gitId":"jellymias"},"content":"    public GeneralEvent getEvent(int index) {","lastModifiedDate":"2021-03-23"},{"lineNumber":362,"author":{"gitId":"jellymias"},"content":"        return remindMe.getEvent(index);","lastModifiedDate":"2021-03-23"},{"lineNumber":363,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":364,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":366,"author":{"gitId":"jellymias"},"content":"    public void setEvent(GeneralEvent target, GeneralEvent editedEvent) {","lastModifiedDate":"2021-04-01"},{"lineNumber":367,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":368,"author":{"gitId":"jellymias"},"content":"        remindMe.setEvent(target, editedEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markuz5116":88,"jellymias":113,"Hzxin":22,"maikongeh":26,"-":122}},{"path":"src/main/java/seedu/address/model/ReadOnlyRemindMe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":" * Unmodifiable view of the RemindMe App.","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"public interface ReadOnlyRemindMe {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    ObservableList\u003cModule\u003e getModuleList();","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"     * This list will not contain any duplicate general events.","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    ObservableList\u003cGeneralEvent\u003e getEventList();","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"markuz5116":8,"jellymias":14,"Hzxin":7}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    Path getRemindMeFilePath();","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Hzxin":2,"-":15}},{"path":"src/main/java/seedu/address/model/RemindMe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import java.util.List;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.UniqueGeneralEventList;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.UniqueModuleList;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"public class RemindMe implements ReadOnlyRemindMe {","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    private final UniqueModuleList modules;","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    private final UniqueGeneralEventList events;","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    /*","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    {","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        modules \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        events \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"    public RemindMe() {}","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"     * Creates a RemindMe using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"    public RemindMe(ReadOnlyRemindMe toBeCopied) {","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        this();","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"     * Replaces the contents of the module list with {@code modules}.","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        this.modules.setModules(modules);","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"    public void setEvents(List\u003cGeneralEvent\u003e events) {","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        this.events.setGeneralEvents(events);","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"     * Resets the existing data of this {@code RemindMe} with {@code newData}.","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"    public void resetData(ReadOnlyRemindMe newData) {","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        setModules(newData.getModuleList());","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"     * Resets the existing data of the modules in this {@code RemindMe}.","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"    public void resetModules() {","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"        setModules(new ArrayList\u003cModule\u003e());","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"     * Resets the existing data of the contacts in this {@code RemindMe}.","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"    public void resetPersons() {","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"        setPersons(new ArrayList\u003cPerson\u003e());","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"     * Resets the existing data of the general events in this {@code RemindMe}.","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"    public void resetEvents() {","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"        setEvents(new ArrayList\u003cGeneralEvent\u003e());","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"    //// module-level operations","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"     * Returns true if a module with the same title as {@code module} exists in RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"        return modules.contains(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"     * Returns true if the {@code index} is a valid index within the range of RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"    public boolean hasModule(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d modules.size();","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":124,"author":{"gitId":"markuz5116"},"content":"     * Returns true if a general event with the same description as {@code event} exists in","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"     * RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":126,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":127,"author":{"gitId":"markuz5116"},"content":"    public boolean hasEvent(GeneralEvent event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":128,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":129,"author":{"gitId":"markuz5116"},"content":"        return events.contains(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":131,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":132,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":133,"author":{"gitId":"markuz5116"},"content":"     * Returns true if the {@code index} is a valid index within the range of RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":134,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":135,"author":{"gitId":"markuz5116"},"content":"    public boolean hasEvent(int index) {","lastModifiedDate":"2021-03-19"},{"lineNumber":136,"author":{"gitId":"markuz5116"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d events.size();","lastModifiedDate":"2021-03-19"},{"lineNumber":137,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"     * Returns true if {@code module} has an assignment with the same description and date as {@code assignment}.","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"    public boolean hasAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(module, assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"        Module mod \u003d modules.getModule(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"        return mod.hasAssignment(assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"     * Returns true if {@code index} is within the size of the assignment list in {@code module}.","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"jellymias"},"content":"    public boolean hasAssignment(Module module, int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":"        Module mod \u003d modules.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"        return mod.hasAssignment(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"     * Returns true if {@code module} has an exam with the same date as {@code exam}.","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"    public boolean hasExam(Module module, Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":"        requireAllNonNull(module, exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"        Module mod \u003d modules.getModule(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"jellymias"},"content":"        return mod.hasExam(exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":"     * Returns true if {@code index} is within the exam list of {@code module}.","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":"    public boolean hasExam(Module module, int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":171,"author":{"gitId":"jellymias"},"content":"        Module mod \u003d modules.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"        return mod.hasExam(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"Hzxin"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":177,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"Hzxin"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"Hzxin"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"Hzxin"},"content":"        return persons.contains(person);","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"Hzxin"},"content":"     * Adds a person to the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":185,"author":{"gitId":"Hzxin"},"content":"     * The person must not already exist in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":186,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"Hzxin"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"Hzxin"},"content":"        persons.add(p);","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"Hzxin"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"Hzxin"},"content":"     * {@code target} must exist in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":194,"author":{"gitId":"Hzxin"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":195,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"Hzxin"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"Hzxin"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"Hzxin"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"markuz5116"},"content":"     * Removes {@code key} from this {@code RemindMe}.","lastModifiedDate":"2021-03-19"},{"lineNumber":204,"author":{"gitId":"markuz5116"},"content":"     * {@code key} must exist in RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":205,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":206,"author":{"gitId":"Hzxin"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2021-03-15"},{"lineNumber":207,"author":{"gitId":"Hzxin"},"content":"        persons.remove(key);","lastModifiedDate":"2021-03-15"},{"lineNumber":208,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":209,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"Hzxin"},"content":"    //// util methods","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":212,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":213,"author":{"gitId":"jellymias"},"content":"     * Adds a module to the module planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":214,"author":{"gitId":"jellymias"},"content":"     * The module must not already exist in the module planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":215,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":216,"author":{"gitId":"jellymias"},"content":"    public void addModule(Module mod) {","lastModifiedDate":"2021-03-11"},{"lineNumber":217,"author":{"gitId":"jellymias"},"content":"        modules.add(mod);","lastModifiedDate":"2021-03-11"},{"lineNumber":218,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":219,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":220,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":221,"author":{"gitId":"jellymias"},"content":"     * Replaces the given module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2021-03-11"},{"lineNumber":222,"author":{"gitId":"jellymias"},"content":"     * {@code target} must exist in the module planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":223,"author":{"gitId":"jellymias"},"content":"     * The title of {@code editedModule} must not be the same as another existing module in the module planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":224,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":225,"author":{"gitId":"jellymias"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2021-03-11"},{"lineNumber":226,"author":{"gitId":"jellymias"},"content":"        requireNonNull(editedModule);","lastModifiedDate":"2021-03-11"},{"lineNumber":227,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":228,"author":{"gitId":"jellymias"},"content":"        modules.setModule(target, editedModule);","lastModifiedDate":"2021-03-11"},{"lineNumber":229,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":230,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":231,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":232,"author":{"gitId":"markuz5116"},"content":"     * Removes {@code key} from this {@code RemindMe}.","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"jellymias"},"content":"     * {@code key} must exist in the module planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":234,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":235,"author":{"gitId":"jellymias"},"content":"    public void removeModule(Module key) {","lastModifiedDate":"2021-03-11"},{"lineNumber":236,"author":{"gitId":"jellymias"},"content":"        modules.remove(key);","lastModifiedDate":"2021-03-11"},{"lineNumber":237,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":238,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":239,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":240,"author":{"gitId":"markuz5116"},"content":"     * Edits module at {@code index} and changes its title to {@code title} in the module planner.","lastModifiedDate":"2021-03-19"},{"lineNumber":241,"author":{"gitId":"markuz5116"},"content":"     * {@code index} must be within the bounds of the module planner.","lastModifiedDate":"2021-03-19"},{"lineNumber":242,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":243,"author":{"gitId":"markuz5116"},"content":"    public void editModule(int index, Title title) {","lastModifiedDate":"2021-03-19"},{"lineNumber":244,"author":{"gitId":"markuz5116"},"content":"        Module target \u003d modules.getModule(index);","lastModifiedDate":"2021-03-19"},{"lineNumber":245,"author":{"gitId":"markuz5116"},"content":"        Module editedModule \u003d target;","lastModifiedDate":"2021-03-19"},{"lineNumber":246,"author":{"gitId":"markuz5116"},"content":"        editedModule.editTitle(title);","lastModifiedDate":"2021-03-19"},{"lineNumber":247,"author":{"gitId":"markuz5116"},"content":"        setModule(target, editedModule);","lastModifiedDate":"2021-03-19"},{"lineNumber":248,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":249,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":250,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":251,"author":{"gitId":"jellymias"},"content":"     * Gets the module with the same title as {@code module}.","lastModifiedDate":"2021-03-23"},{"lineNumber":252,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":253,"author":{"gitId":"jellymias"},"content":"    public Module getModule(Module module) {","lastModifiedDate":"2021-03-22"},{"lineNumber":254,"author":{"gitId":"jellymias"},"content":"        return modules.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":255,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":256,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":257,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":258,"author":{"gitId":"jellymias"},"content":"     * Gets the module at {@code index}.","lastModifiedDate":"2021-03-23"},{"lineNumber":259,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":260,"author":{"gitId":"jellymias"},"content":"    public Module getModule(int index) {","lastModifiedDate":"2021-03-23"},{"lineNumber":261,"author":{"gitId":"jellymias"},"content":"        return modules.getModule(index);","lastModifiedDate":"2021-03-23"},{"lineNumber":262,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":263,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":264,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":265,"author":{"gitId":"markuz5116"},"content":"     * Adds an assignment to the module in the module planner.","lastModifiedDate":"2021-03-19"},{"lineNumber":266,"author":{"gitId":"markuz5116"},"content":"     * The module must already exist in the module planner.","lastModifiedDate":"2021-03-19"},{"lineNumber":267,"author":{"gitId":"markuz5116"},"content":"     * The assignment must not already exist in the module.","lastModifiedDate":"2021-03-19"},{"lineNumber":268,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":269,"author":{"gitId":"markuz5116"},"content":"    public void addAssignment(Module mod, Assignment assignment) {","lastModifiedDate":"2021-03-19"},{"lineNumber":270,"author":{"gitId":"markuz5116"},"content":"        Module editedMod \u003d modules.getModule(mod);","lastModifiedDate":"2021-03-19"},{"lineNumber":271,"author":{"gitId":"markuz5116"},"content":"        editedMod.addAssignment(assignment);","lastModifiedDate":"2021-03-19"},{"lineNumber":272,"author":{"gitId":"markuz5116"},"content":"        modules.setModule(mod, editedMod);","lastModifiedDate":"2021-03-19"},{"lineNumber":273,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":274,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":275,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":276,"author":{"gitId":"Hzxin"},"content":"     * Toggles the done status of the assignment in {@code module} at {@code index}.","lastModifiedDate":"2021-04-06"},{"lineNumber":277,"author":{"gitId":"Hzxin"},"content":"     * {@code module} must already exist in the RemindMe and {@code index} must be a valid index.","lastModifiedDate":"2021-04-06"},{"lineNumber":278,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":279,"author":{"gitId":"Hzxin"},"content":"    public void toggleDoneStatusForAssignment(Module module, int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":280,"author":{"gitId":"Hzxin"},"content":"        Module edited \u003d modules.getModule(module);","lastModifiedDate":"2021-04-06"},{"lineNumber":281,"author":{"gitId":"Hzxin"},"content":"        edited.toggleAssignmentDoneStatus(index);","lastModifiedDate":"2021-04-06"},{"lineNumber":282,"author":{"gitId":"Hzxin"},"content":"        modules.setModule(module, edited);","lastModifiedDate":"2021-04-06"},{"lineNumber":283,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":284,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":285,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":286,"author":{"gitId":"Hzxin"},"content":"     * Edits the date of the exam at {@code index} in the {@code module} with the given {@code edit}.","lastModifiedDate":"2021-04-06"},{"lineNumber":287,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":288,"author":{"gitId":"Hzxin"},"content":"    public void editExam(Module module, int index, LocalDateTime edit) {","lastModifiedDate":"2021-04-06"},{"lineNumber":289,"author":{"gitId":"Hzxin"},"content":"        Module edited \u003d modules.getModule(module);","lastModifiedDate":"2021-04-06"},{"lineNumber":290,"author":{"gitId":"Hzxin"},"content":"        edited.editExam(index - 1, edit);","lastModifiedDate":"2021-04-06"},{"lineNumber":291,"author":{"gitId":"Hzxin"},"content":"        modules.setModule(module, edited);","lastModifiedDate":"2021-04-06"},{"lineNumber":292,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":293,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":294,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":295,"author":{"gitId":"jellymias"},"content":"     * Edits the description of the assignment in {@code module} at {@code index} with the given {@code edit}.","lastModifiedDate":"2021-03-22"},{"lineNumber":296,"author":{"gitId":"jellymias"},"content":"     * {@code module} must already exist in the remindMe and {@code index} must be a valid index.","lastModifiedDate":"2021-03-22"},{"lineNumber":297,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":298,"author":{"gitId":"jellymias"},"content":"    public void editAssignment(Module module, int index, Description edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":299,"author":{"gitId":"jellymias"},"content":"        Module edited \u003d modules.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":300,"author":{"gitId":"jellymias"},"content":"        edited.editAssignment(index - 1, edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":301,"author":{"gitId":"jellymias"},"content":"        modules.setModule(module, edited);","lastModifiedDate":"2021-03-22"},{"lineNumber":302,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":303,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":304,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":305,"author":{"gitId":"jellymias"},"content":"     * Edits the description of the assignment in {@code module} at {@code index} with the given {@code edit}.","lastModifiedDate":"2021-03-22"},{"lineNumber":306,"author":{"gitId":"jellymias"},"content":"     * {@code module} must already exist in the remindMe and {@code index} must be a valid index.","lastModifiedDate":"2021-03-22"},{"lineNumber":307,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":308,"author":{"gitId":"jellymias"},"content":"    public void editAssignment(Module module, int index, LocalDateTime edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":309,"author":{"gitId":"jellymias"},"content":"        Module edited \u003d modules.getModule(module);","lastModifiedDate":"2021-03-22"},{"lineNumber":310,"author":{"gitId":"jellymias"},"content":"        edited.editAssignment(index - 1, edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":311,"author":{"gitId":"jellymias"},"content":"        modules.setModule(module, edited);","lastModifiedDate":"2021-03-22"},{"lineNumber":312,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":313,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":314,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":315,"author":{"gitId":"jellymias"},"content":"     * Removes {@code key} from {@code module} in the module planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":316,"author":{"gitId":"jellymias"},"content":"     * {@code module} must exist in the module planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":317,"author":{"gitId":"jellymias"},"content":"     * {@code key} must exist in {@code module}.","lastModifiedDate":"2021-03-11"},{"lineNumber":318,"author":{"gitId":"markuz5116"},"content":"     * todo if not needed, pls delete.","lastModifiedDate":"2021-03-19"},{"lineNumber":319,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":320,"author":{"gitId":"jellymias"},"content":"    public void removeAssignment(Module module, Assignment key) {","lastModifiedDate":"2021-03-11"},{"lineNumber":321,"author":{"gitId":"jellymias"},"content":"        Module editedModule \u003d modules.getModule(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":322,"author":{"gitId":"jellymias"},"content":"        editedModule.deleteAssignment(key);","lastModifiedDate":"2021-03-11"},{"lineNumber":323,"author":{"gitId":"jellymias"},"content":"        modules.setModule(module, editedModule);","lastModifiedDate":"2021-04-06"},{"lineNumber":324,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":325,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":326,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":327,"author":{"gitId":"markuz5116"},"content":"     * Adds an exam to the module in the module planner.","lastModifiedDate":"2021-03-19"},{"lineNumber":328,"author":{"gitId":"markuz5116"},"content":"     * The module must already exist in the module planner.","lastModifiedDate":"2021-03-19"},{"lineNumber":329,"author":{"gitId":"markuz5116"},"content":"     * The exam must not already exist in the module.","lastModifiedDate":"2021-03-19"},{"lineNumber":330,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":331,"author":{"gitId":"markuz5116"},"content":"    public void addExam(Module mod, Exam exam) {","lastModifiedDate":"2021-03-19"},{"lineNumber":332,"author":{"gitId":"markuz5116"},"content":"        Module editedMod \u003d modules.getModule(mod);","lastModifiedDate":"2021-03-19"},{"lineNumber":333,"author":{"gitId":"markuz5116"},"content":"        editedMod.addExam(exam);","lastModifiedDate":"2021-03-19"},{"lineNumber":334,"author":{"gitId":"markuz5116"},"content":"        modules.setModule(mod, editedMod);","lastModifiedDate":"2021-03-19"},{"lineNumber":335,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":336,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":337,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":338,"author":{"gitId":"jellymias"},"content":"     * Removes {@code key} from {@code module} in the module planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":339,"author":{"gitId":"jellymias"},"content":"     * {@code module} must exist in the module planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":340,"author":{"gitId":"jellymias"},"content":"     * {@code key} must exist in {@code module}.","lastModifiedDate":"2021-03-11"},{"lineNumber":341,"author":{"gitId":"markuz5116"},"content":"     * todo if not needed, pls delete.","lastModifiedDate":"2021-03-19"},{"lineNumber":342,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":343,"author":{"gitId":"jellymias"},"content":"    public void removeExam(Module module, Exam key) {","lastModifiedDate":"2021-03-11"},{"lineNumber":344,"author":{"gitId":"jellymias"},"content":"        Module editedModule \u003d modules.getModule(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":345,"author":{"gitId":"jellymias"},"content":"        editedModule.deleteExam(key);","lastModifiedDate":"2021-03-11"},{"lineNumber":346,"author":{"gitId":"jellymias"},"content":"        modules.setModule(module, editedModule);","lastModifiedDate":"2021-04-06"},{"lineNumber":347,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":348,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":349,"author":{"gitId":"markuz5116"},"content":"    public void addEvent(GeneralEvent toAdd) {","lastModifiedDate":"2021-03-19"},{"lineNumber":350,"author":{"gitId":"markuz5116"},"content":"        events.add(toAdd);","lastModifiedDate":"2021-03-19"},{"lineNumber":351,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":352,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":353,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":354,"author":{"gitId":"markuz5116"},"content":"     * Replaces the given GeneralEvent {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-03-19"},{"lineNumber":355,"author":{"gitId":"markuz5116"},"content":"     * {@code target} must exist in RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":356,"author":{"gitId":"markuz5116"},"content":"     * The description of {@code editedEvent} must not be the same as another existing GeneralEvent","lastModifiedDate":"2021-03-19"},{"lineNumber":357,"author":{"gitId":"markuz5116"},"content":"     * in RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":358,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":359,"author":{"gitId":"markuz5116"},"content":"    public void setEvent(GeneralEvent target, GeneralEvent editedEvent) {","lastModifiedDate":"2021-03-19"},{"lineNumber":360,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2021-03-19"},{"lineNumber":361,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":362,"author":{"gitId":"markuz5116"},"content":"        events.setGeneralEvent(target, editedEvent);","lastModifiedDate":"2021-03-19"},{"lineNumber":363,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":364,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":365,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":366,"author":{"gitId":"markuz5116"},"content":"     * Removes {@code toRemove} from this RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":367,"author":{"gitId":"markuz5116"},"content":"     * {@code toRemove} must exist in RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":368,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":369,"author":{"gitId":"markuz5116"},"content":"    public void removeEvent(GeneralEvent toRemove) {","lastModifiedDate":"2021-03-19"},{"lineNumber":370,"author":{"gitId":"markuz5116"},"content":"        events.remove(toRemove);","lastModifiedDate":"2021-03-19"},{"lineNumber":371,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":372,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":373,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":374,"author":{"gitId":"jellymias"},"content":"     * Edits event at {@code index} with the given {@code description}.","lastModifiedDate":"2021-03-20"},{"lineNumber":375,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":376,"author":{"gitId":"markuz5116"},"content":"    public void editEvent(int index, Description description) {","lastModifiedDate":"2021-03-19"},{"lineNumber":377,"author":{"gitId":"jellymias"},"content":"        GeneralEvent target \u003d events.getGeneralEvent(index);","lastModifiedDate":"2021-03-20"},{"lineNumber":378,"author":{"gitId":"jellymias"},"content":"        GeneralEvent edited \u003d target.setDescription(description);","lastModifiedDate":"2021-03-20"},{"lineNumber":379,"author":{"gitId":"jellymias"},"content":"        events.setGeneralEvent(target, edited);","lastModifiedDate":"2021-03-20"},{"lineNumber":380,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":381,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":382,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":383,"author":{"gitId":"jellymias"},"content":"     * Edits event at {@code index} with the given {@code date}.","lastModifiedDate":"2021-03-20"},{"lineNumber":384,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":385,"author":{"gitId":"jellymias"},"content":"    public void editEvent(int index, LocalDateTime date) {","lastModifiedDate":"2021-03-20"},{"lineNumber":386,"author":{"gitId":"jellymias"},"content":"        GeneralEvent target \u003d events.getGeneralEvent(index);","lastModifiedDate":"2021-03-20"},{"lineNumber":387,"author":{"gitId":"jellymias"},"content":"        GeneralEvent edited \u003d target.setDate(date);","lastModifiedDate":"2021-03-20"},{"lineNumber":388,"author":{"gitId":"jellymias"},"content":"        events.setGeneralEvent(target, edited);","lastModifiedDate":"2021-03-20"},{"lineNumber":389,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":390,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":391,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":392,"author":{"gitId":"jellymias"},"content":"     * Gets the event in the events list at {@code index}.","lastModifiedDate":"2021-03-23"},{"lineNumber":393,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":394,"author":{"gitId":"jellymias"},"content":"    public GeneralEvent getEvent(int index) {","lastModifiedDate":"2021-03-23"},{"lineNumber":395,"author":{"gitId":"jellymias"},"content":"        return events.getGeneralEvent(index);","lastModifiedDate":"2021-03-23"},{"lineNumber":396,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":397,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":398,"author":{"gitId":"jellymias"},"content":"    //// util methods","lastModifiedDate":"2021-03-11"},{"lineNumber":399,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":400,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":401,"author":{"gitId":"jellymias"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":402,"author":{"gitId":"Hzxin"},"content":"        return modules.asUnmodifiableObservableList().size() + \" modules\";","lastModifiedDate":"2021-03-15"},{"lineNumber":403,"author":{"gitId":"jellymias"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-11"},{"lineNumber":404,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":405,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":406,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":407,"author":{"gitId":"jellymias"},"content":"    public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":408,"author":{"gitId":"jellymias"},"content":"        return modules.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-11"},{"lineNumber":409,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":410,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":411,"author":{"gitId":"Hzxin"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":412,"author":{"gitId":"Hzxin"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":413,"author":{"gitId":"Hzxin"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-15"},{"lineNumber":414,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":415,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":416,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":417,"author":{"gitId":"markuz5116"},"content":"    public ObservableList\u003cGeneralEvent\u003e getEventList() {","lastModifiedDate":"2021-03-19"},{"lineNumber":418,"author":{"gitId":"markuz5116"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-19"},{"lineNumber":419,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":420,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":421,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":422,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":423,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":424,"author":{"gitId":"markuz5116"},"content":"                || (other instanceof RemindMe // instanceof handles nulls","lastModifiedDate":"2021-03-18"},{"lineNumber":425,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 modules.equals(((RemindMe) other).modules));","lastModifiedDate":"2021-03-18"},{"lineNumber":426,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":427,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":428,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":429,"author":{"gitId":"jellymias"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":430,"author":{"gitId":"jellymias"},"content":"        return modules.hashCode();","lastModifiedDate":"2021-03-11"},{"lineNumber":431,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":432,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"markuz5116":131,"jellymias":227,"Hzxin":74}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    private Path remindMeFilePath \u003d Paths.get(\"data\", \"remindMe.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        setRemindMeFilePath(newUserPrefs.getRemindMeFilePath());","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    public Path getRemindMeFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        return remindMeFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"    public void setRemindMeFilePath(Path remindMeFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        requireNonNull(remindMeFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"        this.remindMeFilePath \u003d remindMeFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"                \u0026\u0026 remindMeFilePath.equals(o.remindMeFilePath);","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        return Objects.hash(guiSettings, remindMeFilePath);","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"        sb.append(\"\\nLocal data file location : \" + remindMeFilePath);","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hzxin":10,"-":79}},{"path":"src/main/java/seedu/address/model/event/DescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"public class DescriptionContainsKeywordsPredicate implements Predicate\u003cGeneralEvent\u003e {","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"    public DescriptionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    public boolean test(GeneralEvent event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"                        StringUtil.containsWordIgnoreCase(event.getDescription().description, keyword));","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"        if (!(other instanceof DescriptionContainsKeywordsPredicate)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"            return false;","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"            return true;","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate otherPred \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"                (DescriptionContainsKeywordsPredicate) other;","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        return keywords.equals(otherPred.keywords);","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"markuz5116":35}},{"path":"src/main/java/seedu/address/model/event/GeneralEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Event;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"public class GeneralEvent extends Event {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"    public static final String DATE_CONSTRAINT \u003d \"Event date must be formatted \"","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"            + \"to a valid DD/MM/YYYY HHmm\";","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    public static final String DESCRIPTION_CONSTRAINT \u003d \"Event description should not be blank.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    public final Description description;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public final LocalDateTime date;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"     * Constructs an {@code GeneralEvent}.","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     * @param description A valid event description.","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     * @param date A valid date and time.","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    public GeneralEvent(Description description, LocalDateTime date) {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        super(description, date, new Tag(\"GeneralEvent\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    public GeneralEvent setDescription(Description newDescription) {","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        return new GeneralEvent(newDescription, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    public GeneralEvent setDate(LocalDateTime newDate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        return new GeneralEvent(description, newDate);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    public boolean isSameEvent(GeneralEvent other) {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        return this.equals(other);","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    public String toString() {","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        return description + \" on: \" + date.format(LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"                || (other instanceof GeneralEvent // instanceof handles nulls","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 description.equals(((GeneralEvent) other).description)","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 date.equals(((GeneralEvent) other).date));","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        return Objects.hash(description, date);","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"markuz5116":3,"jellymias":55,"Hzxin":2}},{"path":"src/main/java/seedu/address/model/event/UniqueGeneralEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.exceptions.DuplicateGeneralEventException;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.exceptions.GeneralEventNotFoundException;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"public class UniqueGeneralEventList implements Iterable\u003cGeneralEvent\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    private final ObservableList\u003cGeneralEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private final ObservableList\u003cGeneralEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"     * Returns true if the list contains an equivalent general event as the {@code toCheck}.","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    public boolean contains(GeneralEvent toCheck) {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"     * Adds a general event to the list.","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"     * The general event must not already exist in the list.","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"    public void add(GeneralEvent toAdd) {","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"            throw new DuplicateGeneralEventException();","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        assert internalList !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"     * Gets the general events with the same general event title as {@code event}","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"     * {@code event} must already exist in the list.","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"    public GeneralEvent getGeneralEvent(GeneralEvent event) {","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        Predicate\u003cGeneralEvent\u003e hasGeneralEvent \u003d e -\u003e e.isSameEvent(event);","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"        FilteredList\u003cGeneralEvent\u003e filteredGeneralEvents \u003d internalList.filtered(hasGeneralEvent);","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"        if (filteredGeneralEvents.isEmpty()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"            throw new GeneralEventNotFoundException();","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        return filteredGeneralEvents.get(0);","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"     * Gets the general event at {@code index}.","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"     * {@code index} must be within the bounds of the list size.","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"    public GeneralEvent getGeneralEvent(int index) {","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        assert internalList !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"        if (index \u003c 1 || index \u003e size()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"            throw new GeneralEventNotFoundException();","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        return internalList.get(index - 1);","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"     * Replaces the generalEvent {@code target} in the list with {@code editedGeneralEvent}.","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"     * The general event identity of {@code editedGeneralEvent} must not be the same as another","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"     * existing general event in the list.","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"    public void setGeneralEvent(GeneralEvent target, GeneralEvent editedGeneralEvent) {","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"        requireAllNonNull(target, editedGeneralEvent);","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"        GeneralEvent foundGeneralEvent \u003d getGeneralEvent(target);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"        int index \u003d internalList.indexOf(foundGeneralEvent);","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        if (hasDuplicate(editedGeneralEvent, foundGeneralEvent)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"            throw new DuplicateGeneralEventException();","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"        internalList.set(index, editedGeneralEvent);","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"    private boolean hasDuplicate(GeneralEvent editedGeneralEvent, GeneralEvent foundGeneralEvent) {","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"        return !foundGeneralEvent.equals(editedGeneralEvent)","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 contains(editedGeneralEvent);","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"     * Removes the equivalent general event from the list.","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"     * The general event must exist in the list.","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"    public void remove(GeneralEvent toRemove) {","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"            throw new GeneralEventNotFoundException();","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"markuz5116"},"content":"     * Replaces the contents of this list with {@code generalEvents}.","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"markuz5116"},"content":"     * {@code generalEvents} must not contain duplicate general events.","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"    public void setGeneralEvents(List\u003cGeneralEvent\u003e generalEvents) {","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(generalEvents);","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"        if (!areGeneralEventsUnique(generalEvents)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"            throw new DuplicateGeneralEventException();","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"        internalList.setAll(generalEvents);","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"     * Returns the backing list as an unmodfiable {@code ObservableList}.","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"    public ObservableList\u003cGeneralEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"markuz5116"},"content":"     * Returns the number of general events in the list.","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"markuz5116"},"content":"    public int size() {","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"markuz5116"},"content":"        return internalList.size();","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"markuz5116"},"content":"    public Iterator\u003cGeneralEvent\u003e iterator() {","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"markuz5116"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-18"},{"lineNumber":135,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":136,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"markuz5116"},"content":"        if (!(other instanceof UniqueGeneralEventList)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"markuz5116"},"content":"            return false;","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":142,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"markuz5116"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"markuz5116"},"content":"            return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":147,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList otherList \u003d (UniqueGeneralEventList) other;","lastModifiedDate":"2021-03-18"},{"lineNumber":148,"author":{"gitId":"markuz5116"},"content":"        return internalList.equals(otherList.internalList);","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":151,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"markuz5116"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-18"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":155,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":156,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":157,"author":{"gitId":"markuz5116"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"markuz5116"},"content":"    private boolean areGeneralEventsUnique(List\u003cGeneralEvent\u003e events) {","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"markuz5116"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"markuz5116"},"content":"                    return false;","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"markuz5116"},"content":"                }","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"markuz5116"},"content":"            }","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":167,"author":{"gitId":"markuz5116"},"content":"        return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"markuz5116":169}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateGeneralEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"public class DuplicateGeneralEventException extends RuntimeException {","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"    public DuplicateGeneralEventException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"        super(\"Operation would result in duplicate General Events\");","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"markuz5116":7}},{"path":"src/main/java/seedu/address/model/event/exceptions/GeneralEventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"public class GeneralEventNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"markuz5116":4}},{"path":"src/main/java/seedu/address/model/module/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.Event;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"public class Assignment extends Event {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"    public static final String DATE_CONSTRAINTS \u003d \"Assignment deadline must be formatted \"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"            + \"to a valid DD/MM/YYYY HHmm\";","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    public static final String DESCRIPTION_CONSTRAINTS \u003d \"Assignment description should not be \"","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"            + \"blank.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    public final Description description;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public final LocalDateTime deadline;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    private boolean isDone;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"     * Constructs an {@code Assignment}.","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     * @param description A valid assignment description.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     * @param deadline A valid date and time.","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"     * @param tag A tag with the module name.","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    public Assignment(Description description, LocalDateTime deadline, Tag tag) {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        super(description, deadline, tag);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"     * Constructs an {@code Assignment}.","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"     * @param description A valid assignment description.","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"     * @param deadline A valid date and time.","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    public Assignment(Description description, LocalDateTime deadline, Tag tag, boolean isDone) {","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        super(description, deadline, tag);","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"     * Changes the description of the assignment with the given {@code newDescription}","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    public Assignment setDescription(Description newDescription) {","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        return new Assignment(newDescription, deadline, tag);","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"     * Changes the deadline of the assignment with the given {@code newDeadline}","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"    public Assignment setDeadline(LocalDateTime newDeadline) {","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        return new Assignment(description, newDeadline, tag);","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"    public boolean isSameAssignment(Assignment other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"        return this.equals(other);","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"     * Get a String representation of the doneStatus.","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"     * @return [X] for done assignment and [ ] for un-done assignment.","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"    public String isDone() {","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        if (isDone) {","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"            return \"[X]\";","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"     * this method toggle the done status of our assignment, Either from done to undone or undone to done","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"    public void toggleDoneStatus() {","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"        this.isDone \u003d !isDone;","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"        return description + \" due: \" + deadline.format(LocalDateTimeUtil.DATETIME_FORMATTER)","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"            + \"    \" + isDone();","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"                || (other instanceof Assignment // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 isDone().equals(isDone()))","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 description.equals(((Assignment) other).description)","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"                \u0026\u0026 deadline.equals(((Assignment) other).deadline);","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"        return Objects.hash(description, deadline);","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":4,"jellymias":53,"Hzxin":33,"banchiang":3,"maikongeh":11}},{"path":"src/main/java/seedu/address/model/module/AssignmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"public class AssignmentList {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"    public static final String NO_ASSIGNMENTS_OUTPUT \u003d \"You have no assignments~\";","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"    private final List\u003cAssignment\u003e assignments;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"     * Constructs an {@code AssignmentList} to store {@code Assignments}","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    public AssignmentList() {","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"        this.assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"     * Constructs an {@code AssignmentList} to store {@code Assignments} with given {@code ArrayList\u003cAssignment\u003e};","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"     * @param assignments assignments to construct the AssignmentList.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    public AssignmentList(List\u003cAssignment\u003e assignments) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     * Get the assignment at the index from the list.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * @param index Index of the assignment.","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * @return Assignment at index.","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    public Assignment get(int index) {","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        return assignments.get(index);","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"     * Gets the index of the {@code assignment} in the assignment list.","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     * {@code assignment} must exist in the assignment list.","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"    public int getIndex(Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        int index \u003d -1;","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 0; i \u003c assignments.size(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"            if (assignments.get(i).equals(assignment)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"                index \u003d i;","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"                break;","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        return index;","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    public void set(int index, Assignment assignment) {","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        assignments.add(index + 1, assignment);","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        assignments.remove(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"     * Adds an assignment to the list.","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"     * @param assignment Assignment to be added.","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"    public void add(Assignment assignment) {","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        assignments.add(assignment);","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"     * Removes the assignment at the index from the list.","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"     * @param index Index of assignment to be removed.","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"     * @return Removed assignment.","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"    public Assignment delete(int index) {","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"        Assignment deleted \u003d assignments.remove(index);","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"        return deleted;","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"     * Delete the {@code assignment} from assignment list.","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"     * {@code assignment} must exist in the assignment list.","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"    public Assignment delete(Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        int index \u003d getIndex(assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"        return delete(index);","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"     * Toggles the done status of the assignment at the input index","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"    public void toggleDoneStatus(int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"        Assignment toggledAssignment \u003d assignments.get(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"        toggledAssignment.toggleDoneStatus();","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"     * Checks if the assignment list contains the given assignment.","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"     * @param assignment Assignment to check.","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"     * @return Boolean.","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"    public boolean contains(Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"        boolean hasAssignment \u003d false;","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"        for (Assignment value : assignments) {","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"            if (value.equals(assignment)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"                return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"        return hasAssignment;","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"    public List\u003cAssignment\u003e getAssignments() {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"        return new ArrayList\u003c\u003e(assignments);","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"     * Gets the size of the list.","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"     * @return List size.","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"    public int size() {","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"        return assignments.size();","lastModifiedDate":"2021-03-09"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"Hzxin"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"Hzxin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"Hzxin"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"Hzxin"},"content":"        if (!(other instanceof AssignmentList)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"Hzxin"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"Hzxin"},"content":"        AssignmentList otherList \u003d (AssignmentList) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"Hzxin"},"content":"        if (assignments.size() !\u003d otherList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"Hzxin"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"Hzxin"},"content":"            for (int i \u003d 0; i \u003c otherList.size(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"Hzxin"},"content":"                if (!assignments.get(i).equals(otherList.assignments.get(i))) {","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"Hzxin"},"content":"                    return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"Hzxin"},"content":"                }","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"Hzxin"},"content":"        return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"banchiang"},"content":"        if (size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"banchiang"},"content":"            return NO_ASSIGNMENTS_OUTPUT;","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"Hzxin"},"content":"        builder.append(\"Assignment: \\n\");","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"            builder.append(i + 1).append(\". \")","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":"                    .append(get(i)).append(\"\\n\");","lastModifiedDate":"2021-03-09"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":9,"jellymias":103,"Hzxin":36,"banchiang":3,"maikongeh":8}},{"path":"src/main/java/seedu/address/model/module/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"public class Description {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    // todo change message constraints","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"            \"Description should not be blank\";","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    /*","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    // todo change regex","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    public final String description;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     * @param description A valid assignment description.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    public Description(String description) {","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     * Returns true if a given string is a valid assignment description.","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    public static boolean isValidDescription(String description) {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        return description.matches(VALIDATION_REGEX) \u0026\u0026 !description.isBlank();","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        return description;","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"        return description.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":1,"jellymias":53,"Hzxin":2}},{"path":"src/main/java/seedu/address/model/module/Exam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.Event;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"public class Exam extends Event {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Exam date must be formatted \"","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"        + \"to a valid DD/MM/YYYY HHmm\";","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"    public static final DateTimeFormatter EXAM_DATE_FORMATTER \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    public static final String EXAM_HEADER \u003d \"Exam is on: \";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    public final LocalDateTime examDate;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"     * Constructs an {@code Exam} with {@code examDate} as input representing the date of the Exam.","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    public Exam(LocalDateTime examDate, Tag tag) {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        super(new Description(\"exam\"), examDate, tag);","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"        assert examDate !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"        this.examDate \u003d examDate;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"     * Checks whether {@code Exam} is on {@code localDateTime}.","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    public boolean isAt(LocalDateTime localDateTime) {","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        assert examDate !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        return examDate \u003d\u003d localDateTime;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     * Sets the date of the exam to the given {@code date}.","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    public Exam setDate(LocalDateTime newDate) {","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        return new Exam(newDate, tag);","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"     * Returns a string representation of {@code Exam} with date of format YYYY-MM-DD HH:TT.","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"    public String toString() {","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        return EXAM_HEADER + EXAM_DATE_FORMATTER.format(examDate);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"     * Returns true if {@code other} is the same instance or is instance of Exam and has the same","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"     * date.","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"                || (other instanceof Exam // instanceof handles nulls","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 examDate.equals(((Exam) other).examDate)","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 tag.equals(((Exam) other).tag)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"     * Returns the hashcode representation of {@code Exam}.","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        return examDate.hashCode();","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"markuz5116":54,"banchiang":3,"Hzxin":5,"jellymias":7}},{"path":"src/main/java/seedu/address/model/module/ExamList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":" * Represents a ExamList in Module.","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"public class ExamList {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    public static final String NO_EXAMS_OUTPUT \u003d \"You have no exams~\";","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    // Identity fields.","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    private List\u003cExam\u003e exams;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"     * Constructs an {@code ExamList} to store {@code Exam}.","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    public ExamList() {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"        exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"     * Constucts an {@code ExamList} that stores existing {@code Exams} from input.","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"     * @param exams exams to be contained in {@code ExamList}.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    public ExamList(List\u003cExam\u003e exams) {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        if (exams \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"            this.exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        this.exams \u003d exams;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"     * Returns if {@code exam} exists inside the exam list.","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    public boolean contains(Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        boolean hasExam \u003d false;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        assert exams !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 0; i \u003c exams.size() \u0026\u0026 !hasExam; i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"            if (exams.contains(exam)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"                hasExam \u003d true;","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        return hasExam;","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"     * Gets the index of the {@code exam} in the exam list.","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"     * {@code exam} must exist in the exam list.","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"    public int getIndex(Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        assert exams !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        int index \u003d -1;","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 0; i \u003c exams.size(); i++) {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"            if (exams.get(i).equals(exam)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"                index \u003d i;","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        return index;","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"     * Adds an {@code Exam} into the ExamList.","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"     * @param exam Exam to be added.","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"    public void add(Exam exam) {","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        assert exam !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assert exams !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"        exams.add(exam);","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"     * Removes {@code Exam} at the index from the ExamList.","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"     * @param index Index of the {@code Exam} to be removed.","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"     * @return Removed Exam.","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"    public Exam deleteAt(int index) {","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c exams.size();","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"        Exam deletedExam \u003d exams.remove(index);","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"        return deletedExam;","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"     * Delete the {@code exam} from exam list.","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"     * {@code exam} must exist in the exam list.","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"    public Exam delete(Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"        assert exam !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"        int index \u003d getIndex(exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"        return deleteAt(index);","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"     * Gets size of the {@code ExamList}.","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"     * @return size of {@code ExamList}.","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"    public int size() {","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"        assert exams !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"        return exams.size();","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"     * Finds the exams of the specific {@code localDateTime}.","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"     * @param localDateTime localDateTime used to find {@code Exam} of the same {@code","lastModifiedDate":"2021-03-09"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"     *     localDateTime}.","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"     * @return {@code ExamList} with the {@code localDateTime}.","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"    public ExamList find(LocalDateTime localDateTime) {","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"        assert exams !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"        ArrayList\u003cExam\u003e examsFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"        for (Exam exam : exams) {","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"            if (exam.isAt(localDateTime)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"                examsFound.add(exam);","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"        return new ExamList(examsFound);","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"Hzxin"},"content":"     * Get the exam at the index from the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"Hzxin"},"content":"     * @param index Index of the exam.","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"Hzxin"},"content":"     * @return Exam at index.","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"Hzxin"},"content":"    public Exam get(int index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"Hzxin"},"content":"        return exams.get(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"markuz5116"},"content":"     * Checks whether the {@code ExamList} is empty.","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"markuz5116"},"content":"     * @return true if {@code ExamList} is empty, else false.","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":141,"author":{"gitId":"markuz5116"},"content":"    public boolean hasNoExam() {","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"markuz5116"},"content":"        return exams.isEmpty();","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"     * Gets the List of {@code Exams}.","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"markuz5116"},"content":"     * @return List of {@code Exams}.","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":150,"author":{"gitId":"markuz5116"},"content":"    public ArrayList\u003cExam\u003e getExams() {","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"markuz5116"},"content":"        return new ArrayList\u003c\u003e(exams);","lastModifiedDate":"2021-03-09"},{"lineNumber":152,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"    public Exam getExamAt(int index) {","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"markuz5116"},"content":"        return exams.get(index);","lastModifiedDate":"2021-03-10"},{"lineNumber":156,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":157,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"     * Sets the exam at {@code index} to the given {@code exam}.","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":"    public void set(int index, Exam exam) {","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"        exams.add(index + 1, exam);","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"jellymias"},"content":"        exams.remove(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"markuz5116"},"content":"     * Returns String representation of {@code ExamList}.","lastModifiedDate":"2021-03-09"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":169,"author":{"gitId":"markuz5116"},"content":"     * @return ExamList.","lastModifiedDate":"2021-03-09"},{"lineNumber":170,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":171,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":172,"author":{"gitId":"markuz5116"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"Hzxin"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"markuz5116"},"content":"        if (hasNoExam()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":175,"author":{"gitId":"markuz5116"},"content":"            return NO_EXAMS_OUTPUT;","lastModifiedDate":"2021-03-09"},{"lineNumber":176,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":177,"author":{"gitId":"Hzxin"},"content":"        builder.append(\"Exams: \\n\");","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"Hzxin"},"content":"        for (int i \u003d 0; i \u003c size(); i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"Hzxin"},"content":"            builder.append(i + 1).append(\". \")","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"Hzxin"},"content":"                .append(get(i)).append(\"\\n\");","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":182,"author":{"gitId":"Hzxin"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":184,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":185,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":186,"author":{"gitId":"markuz5116"},"content":"     * Checks whether ExamList is the same as {@code input}. Checks based on the list of {@code","lastModifiedDate":"2021-03-09"},{"lineNumber":187,"author":{"gitId":"markuz5116"},"content":"     * Exams}.","lastModifiedDate":"2021-03-09"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":189,"author":{"gitId":"markuz5116"},"content":"     * @param other The other object to check with {@code ExamList}.","lastModifiedDate":"2021-03-09"},{"lineNumber":190,"author":{"gitId":"markuz5116"},"content":"     * @return true if the {@code exams} is the same as {@code exams} of other.","lastModifiedDate":"2021-03-09"},{"lineNumber":191,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":192,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":194,"author":{"gitId":"markuz5116"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":195,"author":{"gitId":"markuz5116"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":196,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":197,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":198,"author":{"gitId":"markuz5116"},"content":"        if (!(other instanceof ExamList)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":199,"author":{"gitId":"markuz5116"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":200,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":201,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":202,"author":{"gitId":"Hzxin"},"content":"        ExamList otherList \u003d (ExamList) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"Hzxin"},"content":"        if (exams.size() !\u003d otherList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"Hzxin"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"Hzxin"},"content":"            for (int i \u003d 0; i \u003c otherList.size(); i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"Hzxin"},"content":"                if (!exams.get(i).equals(otherList.exams.get(i))) {","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"Hzxin"},"content":"                    return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"Hzxin"},"content":"                }","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"Hzxin"},"content":"        return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":215,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":141,"Hzxin":30,"jellymias":44}},{"path":"src/main/java/seedu/address/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"public class Module implements Comparable\u003cModule\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    private Title title;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"    private final AssignmentList assignments;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"    private final ExamList exams;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"     * Constructs a {@code Module} with {@code Title} as the input representing the module title.","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"    public Module(Title title) {","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"        this.assignments \u003d new AssignmentList();","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"        this.exams \u003d new ExamList();","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"     * Constructs a {@code Module} with {@code Title}, {@code AssignmentList} and {@code ExamList} as the inputs.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    public Module(Title title, AssignmentList assignments, ExamList exams) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        this.assignments \u003d assignments;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        this.exams \u003d exams;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"     * Gets the title of the module.","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"     * @return Module title.","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"    public Title getTitle() {","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        return title;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"     * Changes the title of the module with the given {@code title}","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    public void editTitle(Title title) {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"     * Gets the assignment list in the module.","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"     * @return List of module assignments.","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"    public AssignmentList getAssignments() {","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"        return assignments;","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"     * Gets the assignment at the specified index.","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"     * @param index Index of assignment.","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"     * @return Assignment at index.","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"    public Assignment getAssignment(int index) {","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"        return assignments.get(index);","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"     * Gets the exams of the module.","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"     * @return List of module exams.","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"    public ExamList getExams() {","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"        return exams;","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"     * Gets {@code exam} at specific index.","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"     * @param index index of the examList.","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"     * @return {@code exam} at index.","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"    public Exam getExam(int index) {","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"        return exams.getExamAt(index);","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"     * Checks if the module has the given assignment in its assignment list.","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"     * @param assignment Assignment to be checked.","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"     * @return Boolean","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"    public boolean hasAssignment(Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"        return assignments.contains(assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"     * Returns true if the assignment list in {@code Module} contains the {@code index}.","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"    public boolean hasAssignment(int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"        return index \u003c\u003d assignments.size() \u0026\u0026 index \u003e 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"maikongeh"},"content":"     * Checks if the module has the given exam in its exam list.","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"maikongeh"},"content":"     * @param exam Exam to be checked.","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"maikongeh"},"content":"     * @return Boolean","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"maikongeh"},"content":"    public boolean hasExam(Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"maikongeh"},"content":"        return exams.contains(exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"     * Returns true if {@code index} is within the exam list of the module.","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"    public boolean hasExam(int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d exams.size();","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"maikongeh"},"content":"     * Adds an assignment to the assignment list of the module.","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"maikongeh"},"content":"     * @param assignment Assignment to be added.","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"maikongeh"},"content":"    public void addAssignment(Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"maikongeh"},"content":"        this.assignments.add(assignment);","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":125,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":126,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":127,"author":{"gitId":"maikongeh"},"content":"     * Adds an exam to the exam list of the module.","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":129,"author":{"gitId":"maikongeh"},"content":"     * @param exam Exam to be added.","lastModifiedDate":"2021-03-11"},{"lineNumber":130,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"maikongeh"},"content":"    public void addExam(Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"maikongeh"},"content":"        this.exams.add(exam);","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":135,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"maikongeh"},"content":"     * Delete {@code assignment} from {@code assignments}","lastModifiedDate":"2021-03-11"},{"lineNumber":137,"author":{"gitId":"maikongeh"},"content":"     * {@code assignment} must exist in {@code assignments}","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"maikongeh"},"content":"    public void deleteAssignment(Assignment assignment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"maikongeh"},"content":"        this.assignments.delete(assignment);","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"maikongeh"},"content":"     * Delete {@code index} from {@code assignments}","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"maikongeh"},"content":"     * {@code assignment} must exist in {@code assignments}","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"maikongeh"},"content":"    public void deleteAssignment(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"maikongeh"},"content":"        this.assignments.delete(index);","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"maikongeh"},"content":"     * Toggles done status of assignment at index","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"maikongeh"},"content":"    public void toggleAssignmentDoneStatus(int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"maikongeh"},"content":"        this.assignments.toggleDoneStatus(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"maikongeh"},"content":"     * Delete {@code exam} from {@code exams}","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"maikongeh"},"content":"     * {@code assignment} must exist in {@code exams}","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"maikongeh"},"content":"    public void deleteExam(Exam exam) {","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"maikongeh"},"content":"        this.exams.delete(exam);","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"maikongeh"},"content":"     * Delete {@code index} from {@code exams}","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"maikongeh"},"content":"     * {@code index} must exist in {@code exams}","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"maikongeh"},"content":"    public void deleteExam(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"maikongeh"},"content":"        this.exams.deleteAt(index);","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":"     * Edits the description of the assignment at {@code index} with the given {@code edit}.","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":177,"author":{"gitId":"jellymias"},"content":"    public void editAssignment(int index, Description edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":178,"author":{"gitId":"jellymias"},"content":"        Assignment target \u003d getAssignment(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"jellymias"},"content":"        target \u003d target.setDescription(edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"jellymias"},"content":"        assignments.set(index, target);","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":184,"author":{"gitId":"jellymias"},"content":"     * Edits the deadline of the assignment at {@code index} with the given {@code edit}.","lastModifiedDate":"2021-03-22"},{"lineNumber":185,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":186,"author":{"gitId":"jellymias"},"content":"    public void editAssignment(int index, LocalDateTime edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":187,"author":{"gitId":"jellymias"},"content":"        Assignment target \u003d getAssignment(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":188,"author":{"gitId":"jellymias"},"content":"        target \u003d target.setDeadline(edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":189,"author":{"gitId":"jellymias"},"content":"        assignments.set(index, target);","lastModifiedDate":"2021-03-22"},{"lineNumber":190,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":192,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":193,"author":{"gitId":"jellymias"},"content":"     * Edits the date of the exam at {@code index} with the given {@code edit}.","lastModifiedDate":"2021-03-22"},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":195,"author":{"gitId":"jellymias"},"content":"    public void editExam(int index, LocalDateTime edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":196,"author":{"gitId":"jellymias"},"content":"        Exam target \u003d getExam(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":197,"author":{"gitId":"jellymias"},"content":"        target \u003d target.setDate(edit);","lastModifiedDate":"2021-03-22"},{"lineNumber":198,"author":{"gitId":"jellymias"},"content":"        exams.set(index, target);","lastModifiedDate":"2021-03-22"},{"lineNumber":199,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":200,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":201,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":202,"author":{"gitId":"maikongeh"},"content":"     * Returns true if both modules have the same title.","lastModifiedDate":"2021-03-11"},{"lineNumber":203,"author":{"gitId":"maikongeh"},"content":"     * This defines a weaker notion of equality between two modules.","lastModifiedDate":"2021-03-11"},{"lineNumber":204,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":205,"author":{"gitId":"maikongeh"},"content":"    public boolean isSameModule(Module otherModule) {","lastModifiedDate":"2021-03-11"},{"lineNumber":206,"author":{"gitId":"maikongeh"},"content":"        if (otherModule \u003d\u003d this) {","lastModifiedDate":"2021-03-11"},{"lineNumber":207,"author":{"gitId":"maikongeh"},"content":"            return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":208,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":209,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":210,"author":{"gitId":"maikongeh"},"content":"        return otherModule !\u003d null","lastModifiedDate":"2021-03-11"},{"lineNumber":211,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 otherModule.getTitle().equals(getTitle());","lastModifiedDate":"2021-03-11"},{"lineNumber":212,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":213,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":214,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":215,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":216,"author":{"gitId":"maikongeh"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2021-03-11"},{"lineNumber":217,"author":{"gitId":"maikongeh"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-03-11"},{"lineNumber":218,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":219,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":220,"author":{"gitId":"maikongeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":221,"author":{"gitId":"maikongeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-11"},{"lineNumber":222,"author":{"gitId":"maikongeh"},"content":"            return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":223,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":224,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":225,"author":{"gitId":"maikongeh"},"content":"        if (!(other instanceof Module)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":226,"author":{"gitId":"maikongeh"},"content":"            return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":227,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":228,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":229,"author":{"gitId":"maikongeh"},"content":"        Module otherModule \u003d (Module) other;","lastModifiedDate":"2021-03-11"},{"lineNumber":230,"author":{"gitId":"maikongeh"},"content":"        return otherModule.getTitle().equals(getTitle())","lastModifiedDate":"2021-03-11"},{"lineNumber":231,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 otherModule.getAssignments().equals(getAssignments())","lastModifiedDate":"2021-03-11"},{"lineNumber":232,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 otherModule.getExams().equals(getExams());","lastModifiedDate":"2021-03-11"},{"lineNumber":233,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":234,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":235,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":236,"author":{"gitId":"maikongeh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":237,"author":{"gitId":"maikongeh"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-11"},{"lineNumber":238,"author":{"gitId":"maikongeh"},"content":"        return Objects.hash(title, assignments, exams);","lastModifiedDate":"2021-03-11"},{"lineNumber":239,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":240,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":241,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":242,"author":{"gitId":"maikongeh"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":243,"author":{"gitId":"Hzxin"},"content":"        return getTitle().modTitle;","lastModifiedDate":"2021-03-18"},{"lineNumber":244,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":245,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":246,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":247,"author":{"gitId":"maikongeh"},"content":"    public int compareTo(Module o) {","lastModifiedDate":"2021-03-11"},{"lineNumber":248,"author":{"gitId":"maikongeh"},"content":"        return title.compareTo(o.title);","lastModifiedDate":"2021-03-11"},{"lineNumber":249,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":250,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"markuz5116":3,"jellymias":49,"Hzxin":10,"maikongeh":188}},{"path":"src/main/java/seedu/address/model/module/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"public class Title implements Comparable\u003cTitle\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"            \"%s\u0027 titles should alphanumeric and should not be blank.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    /*","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9 ]+$\";","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public final String modTitle;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     * @param modTitle A valid module title.","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    public Title(String modTitle) {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        requireNonNull(modTitle);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        checkArgument(isValidTitle(modTitle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        this.modTitle \u003d modTitle;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     * Returns true if a given string is a valid module title.","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        return modTitle;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"                \u0026\u0026 modTitle.equals(((Title) other).modTitle)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        return modTitle.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"    public int compareTo(Title other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        return modTitle.compareTo(other.modTitle);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"markuz5116":8,"jellymias":51}},{"path":"src/main/java/seedu/address/model/module/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cModule\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    public boolean test(Module module) {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"                        StringUtil.containsWordIgnoreCase(module.getTitle().modTitle, keyword));","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"                || (other instanceof TitleContainsKeywordsPredicate)","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"                \u0026\u0026 keywords.equals(((TitleContainsKeywordsPredicate) other).keywords);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"markuz5116":27}},{"path":"src/main/java/seedu/address/model/module/UniqueModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"public class UniqueModuleList implements Iterable\u003cModule\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    private final ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private final ObservableList\u003cModule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"     * Returns true if the list contains an equivalent module as the given argument.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    public boolean contains(Module toCheck) {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        return internalList.stream().anyMatch(toCheck::isSameModule);","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"     * Adds a module to the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     * The module must not already exist in the list.","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"    public void add(Module toAdd) {","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"     * Gets the module with the same module title as {@code module}","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"     * {@code module} must already exist in the list.","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    public Module getModule(Module module) {","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        Predicate\u003cModule\u003e hasModuleTitle \u003d (x) -\u003e x.isSameModule(module);","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        FilteredList\u003cModule\u003e filteredModule \u003d internalList.filtered(hasModuleTitle);","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        if (filteredModule.size() !\u003d 1) {","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"        return filteredModule.get(0);","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"     * Gets the module at {@code index}","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"     * {@code index} must be within the bounds of the list size.","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"    public Module getModule(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        if (index - 1 \u003e\u003d 0 \u0026\u0026 index - 1 \u003c size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"            return internalList.get(index - 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"     * Replaces the module {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"     * The module identity of {@code editedModule} must not be the same as another existing","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"     * module in the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        Module foundModule \u003d getModule(target);","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        int index \u003d internalList.indexOf(foundModule);","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"        boolean hasDuplicate \u003d !foundModule.equals(editedModule) \u0026\u0026 contains(editedModule);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"        if (hasDuplicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"        internalList.set(index, editedModule);","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"     * Removes the equivalent module from the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"     * The module must exist in the list.","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"    public void remove(Module toRemove) {","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"    public void setModules(UniqueModuleList replaceModules) {","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"        requireNonNull(replaceModules);","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"        internalList.setAll(replaceModules.internalList);","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"     * Replaces the contents of this list with {@code modules}.","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"markuz5116"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"        requireAllNonNull(modules);","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"markuz5116"},"content":"        if (!areModulesUnique(modules)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"        internalList.setAll(modules);","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"    public ObservableList\u003cModule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"     * Returns the number of items in the list.","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"    public int size() {","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"        return internalList.size();","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"markuz5116"},"content":"    public Iterator\u003cModule\u003e iterator() {","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"markuz5116"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"markuz5116"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"markuz5116"},"content":"                || (other instanceof UniqueModuleList)","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"markuz5116"},"content":"                    \u0026\u0026 internalList.equals(((UniqueModuleList) other).internalList);","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"markuz5116"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"markuz5116"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"markuz5116"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"markuz5116"},"content":"     * Returns true if {@code modules} contains only unique modules.","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":151,"author":{"gitId":"markuz5116"},"content":"    private boolean areModulesUnique(List\u003cModule\u003e modules) {","lastModifiedDate":"2021-03-10"},{"lineNumber":152,"author":{"gitId":"Hzxin"},"content":"        for (int i \u003d 0; i \u003c modules.size() - 1; i++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"Hzxin"},"content":"            for (int j \u003d i + 1; j \u003c modules.size(); j++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"Hzxin"},"content":"                if (modules.get(i).isSameModule(modules.get(j))) {","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"markuz5116"},"content":"                    return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":156,"author":{"gitId":"markuz5116"},"content":"                }","lastModifiedDate":"2021-03-10"},{"lineNumber":157,"author":{"gitId":"markuz5116"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":159,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":160,"author":{"gitId":"Hzxin"},"content":"        return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"markuz5116":119,"jellymias":39,"Hzxin":4}},{"path":"src/main/java/seedu/address/model/module/exceptions/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"public class DuplicateModuleException extends RuntimeException {","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"        super(\"Operation would result in duplicate modules.\");","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"markuz5116":7}},{"path":"src/main/java/seedu/address/model/module/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"public class ModuleNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"markuz5116":4}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":" * Represents a Person\u0027s birthday in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthday(String)}","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"public class Birthday extends Event {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Birthdays should be in the form of \"","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"            + \"a valid DD/MM/YYYY\";","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    private final LocalDate birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        super(new Description(\"someone bday\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"            LocalDate.parse(birthday, LocalDateTimeUtil.DATE_FORMATTER).atStartOfDay(),","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"            new Tag(\"bday\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        this.birthday \u003d LocalDate.parse(birthday, LocalDateTimeUtil.DATE_FORMATTER);","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     * Constructs a {@code Birthday} for a {@code Person}.","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"     * @param birthday Birthday of the Person.","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"     * @param name Name of the Person.","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    public Birthday(String birthday, String name) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        super(new Description(name + \"\u0027s birthday\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"            LocalDate.parse(birthday, LocalDateTimeUtil.DATE_FORMATTER).atStartOfDay(),","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"            new Tag(\"Birthday\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        this.birthday \u003d LocalDate.parse(birthday, LocalDateTimeUtil.DATE_FORMATTER);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"     * Returns true if a given string is a valid birthday.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"    public static boolean isValidBirthday(String test) {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        return LocalDateTimeUtil.isValidDate(test);","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"     * Checks if birthday lies on a certain date of any year.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"     * @param date to check with.","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"     * @return true if date and birthday lies on same date, else false.","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    public boolean isDate(LocalDate date) {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        return birthday.getMonth() \u003d\u003d date.getMonth()","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"            \u0026\u0026 birthday.getDayOfMonth() \u003d\u003d date.getDayOfMonth();","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        return this.birthday.format(LocalDateTimeUtil.DATE_FORMATTER);","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"                || (other instanceof Birthday // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 this.birthday.equals(((Birthday) other).birthday)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"        return birthday.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"    public LocalDate getBirthday() {","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"        return this.birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":2,"Hzxin":9,"banchiang":28,"maikongeh":45}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" * Represents a Person\u0027s name in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hzxin":1,"-":58}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":" * Represents a Person in the RemindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    private final Birthday birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    public Person(Name name, Birthday birthday, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"        requireAllNonNull(name, birthday, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        return birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"                \u0026\u0026 otherPerson.getBirthday().equals(getBirthday());","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"        return Objects.hash(name, birthday, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"        builder.append(getName() + \"\\n\");","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"        builder.append(\"Birthday: \");","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"maikongeh"},"content":"        builder.append(getBirthday());","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":98,"author":{"gitId":"maikongeh"},"content":"            builder.append(\"\\nTags: \");","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Hzxin":1,"maikongeh":14,"-":89}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":" * Represents a Tag in the remindMe.","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9 ]+$\";","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * Constructs an empty {@code Tag}","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    public Tag() {","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        this.tagName \u003d \"\";","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markuz5116":1,"Hzxin":2,"jellymias":7,"-":52}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.AssignmentList;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.ExamList;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":" * Contains utility methods for populating {@code RemindMe} with sample data.","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"            new Person(new Name(\"Alice Pauline\"), new Birthday(\"12/12/2020\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"            new Person(new Name(\"Benson Meier\"), new Birthday(\"12/12/2020\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"                getTagSet(\"owesMoney\", \"friends\")),","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"            new Person(new Name(\"Carl Kurz\"), new Birthday(\"12/12/2020\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"                getTagSet()),","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"            new Person(new Name(\"Daniel Meier\"), new Birthday(\"12/12/2020\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"            new Person(new Name(\"Elle Meyer\"), new Birthday(\"12/12/2020\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"                getTagSet()),","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"            new Person(new Name(\"Fiona Kunz\"), new Birthday(\"12/12/2020\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"                getTagSet()),","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"            new Person(new Name(\"George Best\"), new Birthday(\"12/12/2020\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"                getTagSet())","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"    public static Module[] getSampleModules() {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"        return new Module[] {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"            new Module(new Title(\"CS2103\"), new AssignmentList(),","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"                        new ExamList())","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        };","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"    public static GeneralEvent[] getSampleEvents() {","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"        return new GeneralEvent[] {","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"            new GeneralEvent(new Description(\"Party\"), LocalDateTime.parse((\"30/03/2021 2359\"),","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"                LocalDateTimeUtil.DATETIME_FORMATTER))","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        };","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"    public static ReadOnlyRemindMe getSampleRemindMe() {","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"        RemindMe sampleRm \u003d new RemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        for (Module sampleMod : getSampleModules()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"            sampleRm.addModule(sampleMod);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"            sampleRm.addPerson(samplePerson);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        for (GeneralEvent sampleGeneralEvent : getSampleEvents()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"            sampleRm.addEvent(sampleGeneralEvent);","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"        return sampleRm;","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"    public static List\u003cAssignment\u003e getAssignments(String... assignments) {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"        //todo either take in str representation of date","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.of(2021, 03, 20, 23, 59);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"        return Arrays.stream(assignments)","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"                .map(Description::new)","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"                .map(description -\u003e new Assignment(description, dateTime, new Tag(\"FAKE\")))","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"    public static List\u003cExam\u003e getExams(String... exams) {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"        return Arrays.stream(exams)","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"                .map(date -\u003e LocalDateTime.parse(date, Exam.EXAM_DATE_FORMATTER))","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"                .map(date -\u003e new Exam(date, new Tag(\"PLACEHOLDER\")))","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"markuz5116":28,"Hzxin":41,"maikongeh":1,"-":33}},{"path":"src/main/java/seedu/address/storage/CalendarStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.Event;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.EventList;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.AssignmentList;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.ExamList;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":" * A Calendar storage to extract events from {@code Logic} and store them for future calendar usage.","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"public class CalendarStorage {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    private HashMap\u003cLocalDate, EventList\u003e storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    private ArrayList\u003cBirthday\u003e birthdays;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    private Logic logic;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"     * Constructs new storage for the calendar of RemindMe.","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * @param logic Logic that calendar storage uses.","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    public CalendarStorage(Logic logic) {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        storage \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        this.birthdays \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"     * Returns sorted {@code Event} in a {@code EventsList} that occurs on a certain date.","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"     * @param date Date which event occurs.","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     * @return {@code EventList} that contains all events for a certain date.","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    public EventList getDateEvents(LocalDate date) {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        EventList events \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        //Add assignments, exams, general events to returning event list","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        if (isDateOccupied(date)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"            events \u003d storage.get(date);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        //Add birthday to returning event list","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        for (Birthday bday : birthdays) {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"            if (bday.isDate(date)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"                events.add(bday);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"        //Sort the event according to time","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        events.sort();","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        return events;","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"     * Stores the event via date into storage.","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"     * @param date Date in which the event occurs.","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"     * @param event Event that occurs.","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"    public void storeEvent(LocalDate date, Event event) {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"        EventList events \u003d storage.getOrDefault(date, new EventList());","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"        events.add(event);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        storage.put(date, events);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"     * Checks if calendar date has any assignments, exams, general events.","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"     * @param date Date to check in calendar.","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"     * @return True if date occupied, else False.","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"    private boolean isDateOccupied(LocalDate date) {","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"        return storage.containsKey(date);","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"     * Refreshes storage with the latest information for the Calendar.","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"    public void refreshStorage() {","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"        clearStorage();","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"        loadModuleEvents();","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"        loadGeneralEvents();","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"        loadBirthdays();","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"    private void clearStorage() {","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"        storage.clear();","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"        birthdays.clear();","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"    private void loadModuleEvents() {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"        ObservableList\u003cModule\u003e moduleList \u003d logic.getFilteredModuleList();","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":"        for (Module m : moduleList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"            ExamList exams \u003d m.getExams();","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"            for (Exam e : exams.getExams()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"                LocalDate date \u003d e.getDate();","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"                storeEvent(date, e);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"            AssignmentList assignments \u003d m.getAssignments();","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"            for (Assignment a: assignments.getAssignments()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"                LocalDate date \u003d a.getDate();","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":"                storeEvent(date, a);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":"    private void loadGeneralEvents() {","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":"        ObservableList\u003cGeneralEvent\u003e generalEventList \u003d logic.getFilteredEventList();","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":"        for (GeneralEvent ge : generalEventList) {","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"            LocalDate date \u003d ge.getDate();","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":"            storeEvent(date, ge);","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"    // As Birthdays can occur every year, we cannot simply add the birthday into the hashmap storage.","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"    // The year of the birth date would not be the same as the current year, meaning that Birthday","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":"    // would not be able to be stored on the day itself of any year except the year the person was born.","lastModifiedDate":"2021-04-06"},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"    // Therefore birthday is stored in a separate list.","lastModifiedDate":"2021-04-06"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":"    private void loadBirthdays() {","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":"        ObservableList\u003cPerson\u003e personList \u003d logic.getFilteredPersonList();","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"banchiang"},"content":"        for (Person p : personList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"banchiang"},"content":"            Birthday bday \u003d p.getBirthday();","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"banchiang"},"content":"            birthdays.add(bday);","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"banchiang":138}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAssignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"class JsonAdaptedAssignment {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Assignment\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Assignment deadline must be formatted \"","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        + \"to a valid DD/MM/YYYY HHmm\";","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAdaptedAssignment.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    public final String description;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    public final String deadline;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    public final String tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    public final String doneStatus;","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given {@code description}","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"     * ,{@code deadline}, {@code tag} and {@code doneStatus}.","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    public JsonAdaptedAssignment(@JsonProperty(\"description\") String description,","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"                                 @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"                                 @JsonProperty(\"tag\") String tag,","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"                                 @JsonProperty(\"doneStatus\") String doneStatus) {","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        this.doneStatus \u003d doneStatus;","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"     * Converts a given {@code source} into this class for Jackson use.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    public JsonAdaptedAssignment(Assignment source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        description \u003d source.description.description;","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"        deadline \u003d source.deadline.format(LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        tag \u003d source.getTag().tagName;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        doneStatus \u003d source.isDone();","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"     * Converts this Jackson-friendly adapted assignment object into the model\u0027s {@code assignment} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted assignment.","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"    public Assignment toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        assert description !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"        final Description modelDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"            modelDescription \u003d new Description(description);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"        if (deadline \u003d\u003d null || !LocalDateTimeUtil.isValidDateTime(deadline)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(String.format(MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"        assert deadline !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"        final LocalDateTime modelDeadline \u003d LocalDateTime.parse(deadline,","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"                LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"        if (tag \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"                Tag.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        assert tag !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"        final Tag modelTag;","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"        if (!Tag.isValidTagName(tag)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"            modelTag \u003d new Tag(tag);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"        if (doneStatus \u003d\u003d null) {","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(MISSING_FIELD_MESSAGE_FORMAT);","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"        final boolean isDone;","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"        if (doneStatus.equals(\"[X]\")) {","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"            isDone \u003d false;","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"Hzxin"},"content":"        return new Assignment(modelDescription, modelDeadline, modelTag, isDone);","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Hzxin":111}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedExam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":" * Jackson-friendly version of {@link Exam}.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"class JsonAdaptedExam {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Exam\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Exam date must be formatted \"","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        + \"to a valid DD/MM/YYYY HHmm\";","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAdaptedExam.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    public final String examDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    public final String tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"     * Constructs a {@code JsonAdaptedExam} with the given {@code examDate} and {@code tag}.","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    public JsonAdaptedExam(@JsonProperty(\"examDate\") String examDate,","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"                           @JsonProperty(\"tag\") String tag) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"        this.examDate \u003d examDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"     * Converts a given {@code source} into this class for Jackson use.","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    public JsonAdaptedExam(Exam source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        examDate \u003d source.examDate.format(LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        tag \u003d source.getTag().tagName;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"     * Converts this Jackson-friendly adapted exam object into the model\u0027s {@code assignment} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted assignment.","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    public Exam toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        if (examDate \u003d\u003d null) {","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        assert examDate !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        if (!LocalDateTimeUtil.isValidDateTime(examDate)) {","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(String.format(MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"                LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        final LocalDateTime modelExamDate \u003d LocalDateTime.parse(examDate,","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"                LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"        if (tag \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"                Tag.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"        assert tag !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"        final Tag modelTag;","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        if (!Tag.isValidTagName(tag)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"            modelTag \u003d new Tag(tag);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"        return new Exam(modelExamDate, modelTag);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Hzxin":79}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGeneralEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":" * Jackson-friendly version of {@link GeneralEvent}.","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"class JsonAdaptedGeneralEvent {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"General event\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Event date must be formatted \"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        + \"to a valid DD/MM/YYYY TIME\";","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAdaptedGeneralEvent.class);","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    public final String description;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    public final String date;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"     * Constructs a {@code JsonAdaptedGeneralEvent} with the given {@code description} and {@code date}.","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    public JsonAdaptedGeneralEvent(@JsonProperty(\"description\") String description,","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"                                 @JsonProperty(\"date\") String date) {","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"     * Converts a given {@code source} into this class for Jackson use.","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    public JsonAdaptedGeneralEvent(GeneralEvent source) {","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        description \u003d source.description.description;","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        date \u003d source.date.format(LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"     * Converts this Jackson-friendly adapted general event object into the model\u0027s {@code generalEvent} object.","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted general event.","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    public GeneralEvent toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"                Description.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"        assert description !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"        final Description modelDescription;","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"            modelDescription \u003d new Description(description);","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        if (date \u003d\u003d null || !LocalDateTimeUtil.isValidDateTime(date)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(String.format(MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"                LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        assert date !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        final LocalDateTime modelDeadline \u003d LocalDateTime.parse(date,","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"            LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"        return new GeneralEvent(modelDescription, modelDeadline);","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Hzxin":78}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.AssignmentList;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.ExamList;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"class JsonAdaptedModule {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Module\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    private String title;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    private ArrayList\u003cJsonAdaptedAssignment\u003e assignmentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    private ArrayList\u003cJsonAdaptedExam\u003e examList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"     * Constructs a {@code JsonAdaptedModule} with the given person details.","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    public JsonAdaptedModule(@JsonProperty(\"title\") String title,","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"                             @JsonProperty(\"assignmentList\") ArrayList\u003cJsonAdaptedAssignment\u003e assignmentList,","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"                             @JsonProperty(\"examList\") ArrayList\u003cJsonAdaptedExam\u003e examList) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        if (assignmentList !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"            this.assignmentList.addAll(assignmentList);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"        if (examList !\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"            this.examList \u003d examList;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"     * Converts a given {@code Module} into this class for Jackson use.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        title \u003d source.getTitle().modTitle;","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"        assignmentList.addAll(source.getAssignments().getAssignments().stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"                .map(JsonAdaptedAssignment::new)","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        examList.addAll(source.getExams().getExams().stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"                .map(JsonAdaptedExam::new)","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"     * Converts this Jackson-friendly adapted Module object into the model\u0027s {@code Module} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Module.","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"        final ArrayList\u003cAssignment\u003e modelAssignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        final ArrayList\u003cExam\u003e modelExams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        if (assignmentList !\u003d null \u0026\u0026 !assignmentList.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"            for (JsonAdaptedAssignment assignment : assignmentList) {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"                modelAssignments.add(assignment.toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"        if (examList !\u003d null \u0026\u0026 !examList.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"            for (JsonAdaptedExam exam : examList) {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"                modelExams.add(exam.toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"                    String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"        assert title !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"        final AssignmentList modelAssignmentLists \u003d new AssignmentList(modelAssignments);","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"        final ExamList modelExamList \u003d new ExamList(modelExams);","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        return new Module(modelTitle, modelAssignmentLists, modelExamList);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"markuz5116":2,"Hzxin":89}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    private final String birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        birthday \u003d source.getBirthday().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"        assert name !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"                    Birthday.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        assert birthday !\u003d null;","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday, name);","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"        return new Person(modelName, modelBirthday, modelTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Hzxin":7,"banchiang":1,"maikongeh":9,"-":74}},{"path":"src/main/java/seedu/address/storage/JsonRemindMeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":" * A class to access RemindMe data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"public class JsonRemindMeStorage implements RemindMeStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonRemindMeStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    public JsonRemindMeStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    public Path getRemindMeFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"    public Optional\u003cReadOnlyRemindMe\u003e readRemindMe() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        return readRemindMe(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"     * Similar to {@link #readRemindMe()}.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"    public Optional\u003cReadOnlyRemindMe\u003e readRemindMe(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        Optional\u003cJsonSerializableRemindMe\u003e jsonRemindMeApp \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"                filePath, JsonSerializableRemindMe.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        if (!jsonRemindMeApp.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"            return Optional.of(jsonRemindMeApp.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"    public void saveRemindMe(ReadOnlyRemindMe remindMe) throws IOException {","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        saveRemindMe(remindMe, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"     * Similar to {@link #saveRemindMe(ReadOnlyRemindMe)}.","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"    public void saveRemindMe(ReadOnlyRemindMe remindMeApp, Path filePath) throws IOException {","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        requireNonNull(remindMeApp);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableRemindMe(remindMeApp), filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"markuz5116":7,"Hzxin":13,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableRemindMe.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":" * An Immutable RemindMe that is serializable to JSON format.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"@JsonRootName(value \u003d \"remindMe\")","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"class JsonSerializableRemindMe {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"Module list contains duplicate module(s).\";","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Person list contains duplicate person(s).\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Event list contains duplicate event(s).\";","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    private final List\u003cJsonAdaptedGeneralEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"     * Constructs a {@code JsonSerializableRemindMeApp} with the given modules and persons.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    public JsonSerializableRemindMe(@JsonProperty(\"modules\") List\u003cJsonAdaptedModule\u003e modules,","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"                                       @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"                                    @JsonProperty(\"events\") List\u003cJsonAdaptedGeneralEvent\u003e events) {","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"     * Converts a given {@code ReadOnlyRemindMeApp} into this class for Jackson use.","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableRemindMeApp}.","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"    public JsonSerializableRemindMe(ReadOnlyRemindMe source) {","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        events.addAll(source.getEventList()","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"            .stream()","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"            .map(JsonAdaptedGeneralEvent::new)","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"     * Converts this RemindMe into the model\u0027s {@code RemindMe} object.","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"    public RemindMe toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        RemindMe remindMe \u003d new RemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"        for (JsonAdaptedModule jsonAdaptedModule : modules) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"            Module module \u003d jsonAdaptedModule.toModelType();","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"            if (remindMe.hasModule(module)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"            remindMe.addModule(module);","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"            if (remindMe.hasPerson(person)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"            remindMe.addPerson(person);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"        for (JsonAdaptedGeneralEvent jsonAdaptedGeneralEvent : events) {","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"            GeneralEvent generalEvent \u003d jsonAdaptedGeneralEvent.toModelType();","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"            if (remindMe.hasEvent(generalEvent)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"            remindMe.addEvent(generalEvent);","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"        return remindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"markuz5116":11,"Hzxin":80}},{"path":"src/main/java/seedu/address/storage/RemindMeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"public interface RemindMeStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    Path getRemindMeFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"     * Returns RemindMe data as a {@link ReadOnlyRemindMe}.","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    Optional\u003cReadOnlyRemindMe\u003e readRemindMe() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"     * @see #getRemindMeFilePath()","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    Optional\u003cReadOnlyRemindMe\u003e readRemindMe(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"     * Saves the given {@link ReadOnlyRemindMe} to the storage.","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"     * @param remindMeApp cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"    void saveRemindMe(ReadOnlyRemindMe remindMeApp) throws IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"     * @see #saveRemindMe(ReadOnlyRemindMe)","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    void saveRemindMe(ReadOnlyRemindMe remindMeApp, Path filePath) throws IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"markuz5116":8,"Hzxin":34}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"public interface Storage extends RemindMeStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    Optional\u003cReadOnlyRemindMe\u003e readRemindMe() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    void saveRemindMe(ReadOnlyRemindMe remindMeApp) throws IOException;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"markuz5116":3,"Hzxin":1,"-":25}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":" * Manages storage of RemindMe data in local storage.","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    private RemindMeStorage remindMeStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"     * Creates a {@code StorageManager} with the given {@code RemindMeStorage} and {@code","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"     * UserPrefStorage}.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    public StorageManager(RemindMeStorage remindMeStorage,","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        this.remindMeStorage \u003d remindMeStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RemindMe methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    public Path getRemindMeFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        return remindMeStorage.getRemindMeFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"    public Optional\u003cReadOnlyRemindMe\u003e readRemindMe() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        return readRemindMe(remindMeStorage.getRemindMeFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"    public Optional\u003cReadOnlyRemindMe\u003e readRemindMe(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        return remindMeStorage.readRemindMe(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"    public void saveRemindMe(ReadOnlyRemindMe remindMeApp) throws IOException {","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        saveRemindMe(remindMeApp, remindMeStorage.getRemindMeFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"    public void saveRemindMe(ReadOnlyRemindMe remindMeApp, Path filePath) throws IOException {","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"        remindMeStorage.saveRemindMe(remindMeApp, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markuz5116":7,"Hzxin":12,"-":61}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        requireNonNull(commandExecutor);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"banchiang":3,"-":85}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w15-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        requireNonNull(root);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"banchiang":3,"Hzxin":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"import seedu.address.storage.CalendarStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"import seedu.address.ui.calendar.CalendarWindow;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"import seedu.address.ui.calendar.schedule.UpcomingSchedule;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.panels.DisplayPanel;","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    private static final String FXML \u003d \"MainWindow2.fxml\";","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    private DisplayPanel displayPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    private CalendarWindow calendarWindow;","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    private CalendarStorage calendarStorage;","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    private UpcomingSchedule upcomingSchedule;","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"    private MenuItem calendarMenuItem;","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    private StackPane displayPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        requireAllNonNull(primaryStage, logic);","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        // When main window is closed, all other window closes.","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"        primaryStage.setOnHidden(e -\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"            Platform.exit();","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"            System.exit(0);","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"        });","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"        //Create calendar dependencies and window","lastModifiedDate":"2021-04-06"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"        calendarStorage \u003d new CalendarStorage(logic);","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"        upcomingSchedule \u003d new UpcomingSchedule(calendarStorage);","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"        calendarWindow \u003d new CalendarWindow(calendarStorage, upcomingSchedule);","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"        setAccelerator(calendarMenuItem, KeyCombination.keyCombination(\"F2\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"Hzxin"},"content":"        displayPanel \u003d new DisplayPanel(logic);","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"Hzxin"},"content":"        displayPanelPlaceholder.getChildren().add(displayPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"Hzxin"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getRemindMeFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":166,"author":{"gitId":"Hzxin"},"content":"     * Opens the calendar window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-03-02"},{"lineNumber":167,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":168,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-02"},{"lineNumber":169,"author":{"gitId":"Hzxin"},"content":"    public void handleCalendar() {","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"Hzxin"},"content":"        if (!calendarWindow.isShowing()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":171,"author":{"gitId":"Hzxin"},"content":"            calendarWindow.show();","lastModifiedDate":"2021-03-02"},{"lineNumber":172,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-03-02"},{"lineNumber":173,"author":{"gitId":"Hzxin"},"content":"            calendarWindow.focus();","lastModifiedDate":"2021-03-02"},{"lineNumber":174,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":175,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":176,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":205,"author":{"gitId":"Hzxin"},"content":"    public DisplayPanel getDisplayPanel() {","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"Hzxin"},"content":"        return displayPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"Hzxin"},"content":"    private void switchTabBySuccessfulFeedback(String feedback) {","lastModifiedDate":"2021-04-05"},{"lineNumber":210,"author":{"gitId":"Hzxin"},"content":"        boolean isPersons \u003d feedback.contains(\"person\");","lastModifiedDate":"2021-04-05"},{"lineNumber":211,"author":{"gitId":"Hzxin"},"content":"        boolean isModules \u003d feedback.contains(\"module\") || feedback.contains(\"exam\")","lastModifiedDate":"2021-04-05"},{"lineNumber":212,"author":{"gitId":"Hzxin"},"content":"            || feedback.contains(\"assignment\");","lastModifiedDate":"2021-04-05"},{"lineNumber":213,"author":{"gitId":"Hzxin"},"content":"        boolean isEvents \u003d feedback.contains(\"event\");","lastModifiedDate":"2021-04-05"},{"lineNumber":214,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":215,"author":{"gitId":"Hzxin"},"content":"        if (isPersons) {","lastModifiedDate":"2021-04-05"},{"lineNumber":216,"author":{"gitId":"Hzxin"},"content":"            displayPanel.showContacts();","lastModifiedDate":"2021-04-05"},{"lineNumber":217,"author":{"gitId":"Hzxin"},"content":"        } else if (isModules) {","lastModifiedDate":"2021-04-05"},{"lineNumber":218,"author":{"gitId":"Hzxin"},"content":"            displayPanel.showModules();","lastModifiedDate":"2021-04-05"},{"lineNumber":219,"author":{"gitId":"Hzxin"},"content":"        } else if (isEvents) {","lastModifiedDate":"2021-04-05"},{"lineNumber":220,"author":{"gitId":"Hzxin"},"content":"            displayPanel.showEvents();","lastModifiedDate":"2021-04-05"},{"lineNumber":221,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":222,"author":{"gitId":"Hzxin"},"content":"            logger.info(\"No switching of tabs\");","lastModifiedDate":"2021-04-05"},{"lineNumber":223,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":224,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":225,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":226,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":227,"author":{"gitId":"Hzxin"},"content":"    private void switchTabByErrorCommandText(String commandText) {","lastModifiedDate":"2021-04-05"},{"lineNumber":228,"author":{"gitId":"Hzxin"},"content":"        boolean isPersons \u003d commandText.contains(\"n/\");","lastModifiedDate":"2021-04-05"},{"lineNumber":229,"author":{"gitId":"Hzxin"},"content":"        boolean isModules \u003d commandText.contains(\"m/\") || commandText.contains(\"a/\")","lastModifiedDate":"2021-04-05"},{"lineNumber":230,"author":{"gitId":"Hzxin"},"content":"            || commandText.contains(\"e/\");","lastModifiedDate":"2021-04-05"},{"lineNumber":231,"author":{"gitId":"Hzxin"},"content":"        boolean isEvents \u003d commandText.contains(\"g/\");","lastModifiedDate":"2021-04-05"},{"lineNumber":232,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":233,"author":{"gitId":"Hzxin"},"content":"        if (isPersons) {","lastModifiedDate":"2021-04-05"},{"lineNumber":234,"author":{"gitId":"Hzxin"},"content":"            displayPanel.showContacts();","lastModifiedDate":"2021-04-05"},{"lineNumber":235,"author":{"gitId":"Hzxin"},"content":"        } else if (isModules) {","lastModifiedDate":"2021-04-05"},{"lineNumber":236,"author":{"gitId":"Hzxin"},"content":"            displayPanel.showModules();","lastModifiedDate":"2021-04-05"},{"lineNumber":237,"author":{"gitId":"Hzxin"},"content":"        } else if (isEvents) {","lastModifiedDate":"2021-04-05"},{"lineNumber":238,"author":{"gitId":"Hzxin"},"content":"            displayPanel.showEvents();","lastModifiedDate":"2021-04-05"},{"lineNumber":239,"author":{"gitId":"Hzxin"},"content":"        } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":240,"author":{"gitId":"Hzxin"},"content":"            logger.info(\"No switching of tabs\");","lastModifiedDate":"2021-04-05"},{"lineNumber":241,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":242,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":243,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":244,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":245,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"Hzxin"},"content":"            String feedback \u003d commandResult.getFeedbackToUser();","lastModifiedDate":"2021-04-05"},{"lineNumber":257,"author":{"gitId":"Hzxin"},"content":"            resultDisplay.setFeedbackToUser(feedback);","lastModifiedDate":"2021-04-05"},{"lineNumber":258,"author":{"gitId":"Hzxin"},"content":"            switchTabBySuccessfulFeedback(feedback.toLowerCase());","lastModifiedDate":"2021-04-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"Hzxin"},"content":"            if (commandResult.isShowCalendar()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":264,"author":{"gitId":"Hzxin"},"content":"                handleCalendar();","lastModifiedDate":"2021-03-03"},{"lineNumber":265,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":266,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"Hzxin"},"content":"            switchTabByErrorCommandText(commandText.toLowerCase());","lastModifiedDate":"2021-04-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"banchiang":21,"Hzxin":71,"-":187}},{"path":"src/main/java/seedu/address/ui/ReminderWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.BackgroundImage;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.BackgroundPosition;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.BackgroundRepeat;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.BackgroundSize;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.EventList;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"import seedu.address.storage.CalendarStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":" * The Reminder Window. Provides the user schedule within a week.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"public class ReminderWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    private static final String FXML \u003d \"ReminderWindow.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    private LocalDate todayDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    private CalendarStorage calendarStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    private AnchorPane mainWindow;","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    private TextArea contentArea;","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"     * Creates a new ReminderWindow.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    public ReminderWindow(CalendarStorage calendarStorage) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        requireNonNull(calendarStorage);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        this.todayDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        this.calendarStorage \u003d calendarStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        calendarStorage.refreshStorage();","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        contentArea.setText(generateReminderContent());","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        BackgroundImage backgroundImage \u003d new BackgroundImage(new Image(\"images/reminderwindowbackground.png\"),","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"            BackgroundRepeat.REPEAT, BackgroundRepeat.NO_REPEAT, BackgroundPosition.DEFAULT,","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"            BackgroundSize.DEFAULT);","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        mainWindow.setBackground(new Background(backgroundImage));","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    private String generateReminderContent() {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        String eventContent \u003d \"\";","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"            EventList eventList \u003d calendarStorage.getDateEvents(todayDate.plusDays(i));","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"            if (eventList.isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"                continue;","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"            eventContent +\u003d eventList.toString() + \"\\n\";","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        if (eventContent.length() \u003d\u003d 0) {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"            eventContent \u003d \"You have no events!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        return eventContent;","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"    void show() {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        getRoot().show();","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"     * This method closes the reminder window.","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"    private void close() {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"        getRoot().hide();","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Hzxin":76,"banchiang":3}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        requireNonNull(saveLocation);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"banchiang":3,"-":28}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"import seedu.address.storage.CalendarStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    private static final String REMINDME_LOGO \u003d \"/images/logo.png\";","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    private ReminderWindow reminderWindow;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        requireNonNull(logic);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        requireNonNull(primaryStage);","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        primaryStage.getIcons().add(getImage(REMINDME_LOGO));","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"            CalendarStorage calendarStorage \u003d new CalendarStorage(logic);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"            reminderWindow \u003d new ReminderWindow(calendarStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"            reminderWindow.show();","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/dark/DarkTheme.css\");","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"banchiang":7,"Hzxin":5,"-":86}},{"path":"src/main/java/seedu/address/ui/calendar/CalendarBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.Event;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.EventList;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"import seedu.address.ui.calendar.schedule.UpcomingSchedule;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":" * Represents a box for a date in the calendar, where the calendar is on the right side of the {@code CalendarWindow}.","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"public class CalendarBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    private static final String FXML \u003d \"CalendarBox.fxml\";","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    private static final Color RED \u003d Color.RED;","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    private LocalDate dateTime;","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    private EventList events;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    private VBox dateHolder;","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    private Label date;","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    private Label birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    private Label assignment;","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    private Label exam;","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    private Label event;","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"     * Constructs a CalendarBox object to display the entries on that day.","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"     * @param dateTime Date time of the day cell in the calendar view.","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"    public CalendarBox(LocalDate dateTime, EventList events) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        super(FXML);","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"        requireAllNonNull(dateTime, events);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        this.events \u003d events;","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        initializeCalenderBoxInfo();","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"     * Adds mouse click event handler for {@code CalendarBox}.","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"     * @param upcomingSchedule To update when the {@code CalendarBox} is clicked.","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"    public void addClickEventHandler(UpcomingSchedule upcomingSchedule) {","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"        dateHolder.addEventHandler(MouseEvent.MOUSE_CLICKED, upcomingSchedule);","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"        return dateTime;","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"    private void initializeCalenderBoxInfo() {","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        loadDate();","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"        loadEventsCount();","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"    private void loadDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"        date.setText(dateTime.getMonth().toString().substring(0, 3)","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"                + \" \" + dateTime.getDayOfMonth() + \" \" + dateTime.getYear());","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"    private void loadEventsCount() {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"        int assignmentCount \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        int examCount \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"        int birthdayCount \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"        int generalEventCount \u003d 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"        for (Event e : events.getEvents()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"            if (e instanceof Assignment) {","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"                assignmentCount++;","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"            if (e instanceof Exam) {","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"                examCount++;","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"            if (e instanceof Birthday) {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"                birthdayCount++;","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"            if (e instanceof GeneralEvent) {","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"                generalEventCount++;","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"        setBirthdayText(birthdayCount);","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"        setAssignmentText(assignmentCount);","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"        setExamCount(examCount);","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":"        setEventText(generalEventCount);","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"    private void setBirthdayText(int birthdayCount) {","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"        if (birthdayCount \u003e 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"            birthday.setTextFill(RED);","lastModifiedDate":"2021-04-06"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"        birthday.setText(birthdayCount + \" Birthday(s)\");","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"    private void setAssignmentText(int assignmentCount) {","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"        if (assignmentCount \u003e 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":"            assignment.setTextFill(RED);","lastModifiedDate":"2021-04-06"},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":"        assignment.setText(assignmentCount + \" Assignment(s)\");","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"    private void setExamCount(int examCount) {","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":"        if (examCount \u003e 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":"            exam.setTextFill(RED);","lastModifiedDate":"2021-04-06"},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"        exam.setText(examCount + \" Exam(s)\");","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":"    private void setEventText(int eventCount) {","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"        if (eventCount \u003e 0) {","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":"            event.setTextFill(RED);","lastModifiedDate":"2021-04-06"},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"banchiang"},"content":"        event.setText(eventCount + \" Event(s)\");","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"banchiang":109,"Hzxin":26}},{"path":"src/main/java/seedu/address/ui/calendar/CalendarWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.ui.calendar;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import java.time.YearMonth;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.EventList;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.storage.CalendarStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"import seedu.address.ui.calendar.schedule.UpcomingSchedule;","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":" * Represents the calendar window for the GUI.","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"public class CalendarWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    //Solution below adapted from","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    //https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CalendarWindow.class);","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    private static final String FXML \u003d \"CalendarWindow.fxml\";","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    private static final int FIRST_ROW \u003d 0;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    private static final int DAY_ONE \u003d 1;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    private static final int CALENDER_SIDE_SIZE \u003d 7;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    private static final int CALENDAR_SIZE \u003d 35;","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    private static final int LEAP_YEAR_FEB_DAYS \u003d 29;","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    private static final int[] DAYS_IN_MONTH \u003d {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    private static final String[] MONTHS \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"    private static final String[] DAYS \u003d {\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"};","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    private int day;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    private int month;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    private int year;","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    private int prevMonthDays;","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    private int nextMonthDays;","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    private int thisMonthDays;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    private YearMonth yearMonth;","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    private LocalDate todayDate;","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    private LocalDate firstDayOfTheMonth;","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    private CalendarStorage calendarStorage;","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    private UpcomingSchedule upcomingSchedule;","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    private Label monthYearLabel;","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    private Label dummyLabel;","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"    private GridPane calendar;","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"    private StackPane schedulePanelPlaceHolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"     * Constructs a new CalendarWindow.","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"    public CalendarWindow(Stage root) {","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        super(FXML, root);","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"     * Constructs a new CalendarWindow.","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"     * @param calendarStorage Stores the calendar events\u0027 information.","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"     * @param upcomingSchedule Schedule for date on the left side of the calendar window.","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"    public CalendarWindow(CalendarStorage calendarStorage, UpcomingSchedule upcomingSchedule) {","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"        super(FXML);","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"        requireAllNonNull(calendarStorage, upcomingSchedule);","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"        this.todayDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        this.day \u003d todayDate.getDayOfMonth();","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"        this.month \u003d todayDate.getMonthValue();","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"        this.year \u003d todayDate.getYear();","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"        this.yearMonth \u003d YearMonth.of(this.year, this.month);","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"        this.firstDayOfTheMonth \u003d yearMonth.atDay(DAY_ONE);","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"        this.calendarStorage \u003d calendarStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"        this.upcomingSchedule \u003d upcomingSchedule;","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"        schedulePanelPlaceHolder.getChildren().add(upcomingSchedule.getRoot());","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"        setMonthYearLabel();","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"        loadWindow();","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"        logger.info(\"calendar window initialised\");","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"    private void loadWindow() {","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"        loadSchedule();","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"        loadCalendar();","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"    private void loadSchedule() {","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"        upcomingSchedule.loadSchedule(todayDate);","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"    private void loadCalendar() {","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"        //update the number of days for the months showing in calendar","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"        updateMonthDays();","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"        //load day names (mon ... sun)","lastModifiedDate":"2021-04-06"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"        loadDayNames();","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"        //fill up the calendar with the dates","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":"        loadDayDates();","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"        logger.info(\"calendar window successfully loads\");","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":"     * Refreshes Calendar storage.","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"    private void refreshStorage() {","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":"        calendarStorage.refreshStorage();","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"     * Updates number of days of previous month,","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"     * current month and next month that are to","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":"     * be viewed on the Calendar.","lastModifiedDate":"2021-04-06"},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":"    private void updateMonthDays() {","lastModifiedDate":"2021-04-06"},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":"        this.thisMonthDays \u003d findNumberOfDaysInTheMonth();","lastModifiedDate":"2021-04-06"},{"lineNumber":133,"author":{"gitId":"banchiang"},"content":"        int firstDayOfMonth \u003d this.firstDayOfTheMonth.getDayOfWeek().getValue();","lastModifiedDate":"2021-04-06"},{"lineNumber":134,"author":{"gitId":"banchiang"},"content":"        this.prevMonthDays \u003d firstDayOfMonth % 7 - 1;","lastModifiedDate":"2021-04-06"},{"lineNumber":135,"author":{"gitId":"banchiang"},"content":"        this.nextMonthDays \u003d CALENDAR_SIZE - this.thisMonthDays - prevMonthDays;","lastModifiedDate":"2021-04-06"},{"lineNumber":136,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":137,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":138,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":139,"author":{"gitId":"banchiang"},"content":"     * Loads the day names into the Calendar.","lastModifiedDate":"2021-04-06"},{"lineNumber":140,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"banchiang"},"content":"    private void loadDayNames() {","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"banchiang"},"content":"        for (int col \u003d 0; col \u003c CALENDER_SIDE_SIZE; col++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"banchiang"},"content":"            Label dayName \u003d new Label(DAYS[col]);","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"banchiang"},"content":"            VBox dayNameBox \u003d new VBox();","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"banchiang"},"content":"            dayNameBox.getChildren().add(dayName);","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"banchiang"},"content":"            dayNameBox.setPrefHeight(20);","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"banchiang"},"content":"            dayNameBox.setPrefWidth(20);","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"banchiang"},"content":"            dayNameBox.setAlignment(Pos.CENTER);","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"banchiang"},"content":"            calendar.add(dayNameBox, col, FIRST_ROW);","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":151,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":152,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":154,"author":{"gitId":"banchiang"},"content":"     * Loads the day dates into Calendar.","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":156,"author":{"gitId":"banchiang"},"content":"    private void loadDayDates() {","lastModifiedDate":"2021-03-10"},{"lineNumber":157,"author":{"gitId":"banchiang"},"content":"        //refresh calendar storage before loading info for day dates.","lastModifiedDate":"2021-04-06"},{"lineNumber":158,"author":{"gitId":"banchiang"},"content":"        refreshStorage();","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"banchiang"},"content":"        LocalDate currentDate \u003d firstDayOfTheMonth.minusDays(prevMonthDays);","lastModifiedDate":"2021-03-10"},{"lineNumber":160,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":161,"author":{"gitId":"banchiang"},"content":"        for (int row \u003d 2; row \u003c CALENDER_SIDE_SIZE; row++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"banchiang"},"content":"            for (int col \u003d 0; col \u003c CALENDER_SIDE_SIZE; col++) {","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"banchiang"},"content":"                CalendarBox calendarBox \u003d loadCalendarBoxInfo(currentDate);","lastModifiedDate":"2021-04-06"},{"lineNumber":164,"author":{"gitId":"banchiang"},"content":"                calendar.add(calendarBox.getRoot(), col, row);","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"banchiang"},"content":"                //change today date background color to orange","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"banchiang"},"content":"                if (todayDate.compareTo(currentDate) \u003d\u003d 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"banchiang"},"content":"                    calendarBox.getRoot().setStyle(\"-fx-background-color: #FF7F50\");","lastModifiedDate":"2021-03-10"},{"lineNumber":169,"author":{"gitId":"banchiang"},"content":"                }","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"banchiang"},"content":"                //check if date is not within the month and","lastModifiedDate":"2021-03-10"},{"lineNumber":172,"author":{"gitId":"banchiang"},"content":"                //change the day background color to grey","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"banchiang"},"content":"                if (currentDate.getMonthValue() !\u003d this.month) {","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"Hzxin"},"content":"                    calendarBox.getRoot().setDisable(true);","lastModifiedDate":"2021-03-03"},{"lineNumber":175,"author":{"gitId":"Hzxin"},"content":"                    calendarBox.getRoot().setStyle(\"-fx-background-color: grey\");","lastModifiedDate":"2021-03-03"},{"lineNumber":176,"author":{"gitId":"Hzxin"},"content":"                }","lastModifiedDate":"2021-03-03"},{"lineNumber":177,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"banchiang"},"content":"                //move on to the next day","lastModifiedDate":"2021-04-06"},{"lineNumber":179,"author":{"gitId":"Hzxin"},"content":"                currentDate \u003d currentDate.plusDays(1);","lastModifiedDate":"2021-03-03"},{"lineNumber":180,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":181,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":182,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":183,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":184,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":185,"author":{"gitId":"banchiang"},"content":"     * Creates a {@code CalendarBox} for a date in the Calendar with relevant events for the day.","lastModifiedDate":"2021-04-06"},{"lineNumber":186,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":187,"author":{"gitId":"banchiang"},"content":"     * @param date Date for the {@code CalendarBox}.","lastModifiedDate":"2021-04-06"},{"lineNumber":188,"author":{"gitId":"banchiang"},"content":"     * @return New {@code CalendarBox} of a certain date.","lastModifiedDate":"2021-04-06"},{"lineNumber":189,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":190,"author":{"gitId":"banchiang"},"content":"    private CalendarBox loadCalendarBoxInfo(LocalDate date) {","lastModifiedDate":"2021-04-06"},{"lineNumber":191,"author":{"gitId":"banchiang"},"content":"        EventList events \u003d calendarStorage.getDateEvents(date);","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"banchiang"},"content":"        CalendarBox calendarBox \u003d new CalendarBox(date, events);","lastModifiedDate":"2021-03-26"},{"lineNumber":193,"author":{"gitId":"banchiang"},"content":"        calendarBox.addClickEventHandler(upcomingSchedule);","lastModifiedDate":"2021-03-26"},{"lineNumber":194,"author":{"gitId":"banchiang"},"content":"        return calendarBox;","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":198,"author":{"gitId":"Hzxin"},"content":"     * Shows the calendar window.","lastModifiedDate":"2021-03-02"},{"lineNumber":199,"author":{"gitId":"Hzxin"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2021-03-02"},{"lineNumber":200,"author":{"gitId":"Hzxin"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":201,"author":{"gitId":"Hzxin"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":202,"author":{"gitId":"Hzxin"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-03-02"},{"lineNumber":203,"author":{"gitId":"Hzxin"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":204,"author":{"gitId":"Hzxin"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":205,"author":{"gitId":"Hzxin"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2021-03-02"},{"lineNumber":206,"author":{"gitId":"Hzxin"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":207,"author":{"gitId":"Hzxin"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":208,"author":{"gitId":"Hzxin"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2021-03-02"},{"lineNumber":209,"author":{"gitId":"Hzxin"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":210,"author":{"gitId":"Hzxin"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":211,"author":{"gitId":"Hzxin"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2021-03-02"},{"lineNumber":212,"author":{"gitId":"Hzxin"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":213,"author":{"gitId":"Hzxin"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":214,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":215,"author":{"gitId":"Hzxin"},"content":"    public void show() {","lastModifiedDate":"2021-03-02"},{"lineNumber":216,"author":{"gitId":"Hzxin"},"content":"        logger.fine(\"Showing calendar page about the application.\");","lastModifiedDate":"2021-03-02"},{"lineNumber":217,"author":{"gitId":"banchiang"},"content":"        refreshCalenderView();","lastModifiedDate":"2021-03-16"},{"lineNumber":218,"author":{"gitId":"Hzxin"},"content":"        getRoot().show();","lastModifiedDate":"2021-03-02"},{"lineNumber":219,"author":{"gitId":"Hzxin"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-03-02"},{"lineNumber":220,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":221,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":222,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":223,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":224,"author":{"gitId":"Hzxin"},"content":"     * Returns true if the calendar window is currently being shown.","lastModifiedDate":"2021-03-02"},{"lineNumber":225,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":226,"author":{"gitId":"Hzxin"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-03-02"},{"lineNumber":227,"author":{"gitId":"Hzxin"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-03-02"},{"lineNumber":228,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":229,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":230,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":231,"author":{"gitId":"Hzxin"},"content":"     * Hides the calendar window.","lastModifiedDate":"2021-03-02"},{"lineNumber":232,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":233,"author":{"gitId":"Hzxin"},"content":"    public void hide() {","lastModifiedDate":"2021-03-02"},{"lineNumber":234,"author":{"gitId":"Hzxin"},"content":"        getRoot().hide();","lastModifiedDate":"2021-03-02"},{"lineNumber":235,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":236,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":237,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":238,"author":{"gitId":"Hzxin"},"content":"     * Focuses on the calendar window.","lastModifiedDate":"2021-03-02"},{"lineNumber":239,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":240,"author":{"gitId":"Hzxin"},"content":"    public void focus() {","lastModifiedDate":"2021-03-02"},{"lineNumber":241,"author":{"gitId":"Hzxin"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-03-02"},{"lineNumber":242,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":243,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    // @@author banchiang-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-03-10"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    // https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java","lastModifiedDate":"2021-04-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    // with no modifications.","lastModifiedDate":"2021-03-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * Finds the number of days in a month given the year and month.","lastModifiedDate":"2021-03-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * @return Number of days.","lastModifiedDate":"2021-04-06"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    private int findNumberOfDaysInTheMonth() {","lastModifiedDate":"2021-04-06"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (this.month \u003d\u003d 2) {","lastModifiedDate":"2021-03-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            if (this.yearMonth.isLeapYear()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                return LEAP_YEAR_FEB_DAYS;","lastModifiedDate":"2021-04-06"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                return DAYS_IN_MONTH[month - 1];","lastModifiedDate":"2021-03-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return DAYS_IN_MONTH[month - 1];","lastModifiedDate":"2021-03-10"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * Updates attributes for the {@code CalendarWindow} from a date.","lastModifiedDate":"2021-04-06"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * @param date current date.","lastModifiedDate":"2021-04-06"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    private void updateDayMonthYear(LocalDate date) {","lastModifiedDate":"2021-04-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        this.year \u003d date.getYear();","lastModifiedDate":"2021-04-06"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        this.month \u003d date.getMonthValue();","lastModifiedDate":"2021-04-06"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        this.day \u003d date.getDayOfMonth();","lastModifiedDate":"2021-04-06"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        this.yearMonth \u003d YearMonth.of(this.year, this.month);","lastModifiedDate":"2021-04-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        this.firstDayOfTheMonth \u003d yearMonth.atDay(DAY_ONE);","lastModifiedDate":"2021-04-06"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    // @@author","lastModifiedDate":"2021-04-06"},{"lineNumber":278,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":279,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":280,"author":{"gitId":"banchiang"},"content":"    //Solution below adapted from","lastModifiedDate":"2021-03-17"},{"lineNumber":281,"author":{"gitId":"banchiang"},"content":"    //https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java","lastModifiedDate":"2021-04-09"},{"lineNumber":282,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":283,"author":{"gitId":"banchiang"},"content":"     * Sets the monthYear Label\u0027s content.","lastModifiedDate":"2021-03-26"},{"lineNumber":284,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":285,"author":{"gitId":"banchiang"},"content":"    private void setMonthYearLabel() {","lastModifiedDate":"2021-03-10"},{"lineNumber":286,"author":{"gitId":"banchiang"},"content":"        StringBuilder monthYear \u003d new StringBuilder();","lastModifiedDate":"2021-03-10"},{"lineNumber":287,"author":{"gitId":"banchiang"},"content":"        monthYear.append(MONTHS[this.firstDayOfTheMonth.getMonthValue() - 1]);","lastModifiedDate":"2021-03-10"},{"lineNumber":288,"author":{"gitId":"banchiang"},"content":"        monthYear.append(\"  \");","lastModifiedDate":"2021-03-10"},{"lineNumber":289,"author":{"gitId":"banchiang"},"content":"        monthYear.append(this.firstDayOfTheMonth.getYear());","lastModifiedDate":"2021-03-10"},{"lineNumber":290,"author":{"gitId":"banchiang"},"content":"        String output \u003d monthYear.toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":291,"author":{"gitId":"banchiang"},"content":"        this.monthYearLabel.setText(output);","lastModifiedDate":"2021-03-10"},{"lineNumber":292,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":293,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":294,"author":{"gitId":"banchiang"},"content":"    //Solution below adapted from","lastModifiedDate":"2021-03-17"},{"lineNumber":295,"author":{"gitId":"banchiang"},"content":"    //https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java","lastModifiedDate":"2021-04-09"},{"lineNumber":296,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":297,"author":{"gitId":"banchiang"},"content":"     * Refreshes the calendar view, the right side of the {@code CalendarWindow} GUI.","lastModifiedDate":"2021-04-06"},{"lineNumber":298,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":299,"author":{"gitId":"banchiang"},"content":"    private void refreshCalenderView() {","lastModifiedDate":"2021-03-10"},{"lineNumber":300,"author":{"gitId":"banchiang"},"content":"        calendar.getChildren().clear();","lastModifiedDate":"2021-03-10"},{"lineNumber":301,"author":{"gitId":"banchiang"},"content":"        setMonthYearLabel();","lastModifiedDate":"2021-03-10"},{"lineNumber":302,"author":{"gitId":"banchiang"},"content":"        loadCalendar();","lastModifiedDate":"2021-03-10"},{"lineNumber":303,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":304,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":305,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":306,"author":{"gitId":"banchiang"},"content":"     * Refreshes the schedule view, the left side of the {@code CalendarWindow} GUI.","lastModifiedDate":"2021-04-06"},{"lineNumber":307,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":308,"author":{"gitId":"banchiang"},"content":"    private void refreshScheduleView() {","lastModifiedDate":"2021-04-06"},{"lineNumber":309,"author":{"gitId":"banchiang"},"content":"        upcomingSchedule.refreshSchedule();","lastModifiedDate":"2021-04-06"},{"lineNumber":310,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":311,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":312,"author":{"gitId":"banchiang"},"content":"    //Solution below adapted from","lastModifiedDate":"2021-03-14"},{"lineNumber":313,"author":{"gitId":"banchiang"},"content":"    //https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java","lastModifiedDate":"2021-04-09"},{"lineNumber":314,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":315,"author":{"gitId":"banchiang"},"content":"     * Initialises calendar to previous month data when the prev button is clicked.","lastModifiedDate":"2021-03-26"},{"lineNumber":316,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":317,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":318,"author":{"gitId":"banchiang"},"content":"    public void handleToPrev() {","lastModifiedDate":"2021-03-10"},{"lineNumber":319,"author":{"gitId":"banchiang"},"content":"        this.firstDayOfTheMonth \u003d firstDayOfTheMonth.minusMonths(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":320,"author":{"gitId":"banchiang"},"content":"        updateDayMonthYear(firstDayOfTheMonth);","lastModifiedDate":"2021-03-10"},{"lineNumber":321,"author":{"gitId":"banchiang"},"content":"        refreshCalenderView();","lastModifiedDate":"2021-03-10"},{"lineNumber":322,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":323,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":324,"author":{"gitId":"banchiang"},"content":"    //Solution below adapted from","lastModifiedDate":"2021-03-14"},{"lineNumber":325,"author":{"gitId":"banchiang"},"content":"    //https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java","lastModifiedDate":"2021-04-09"},{"lineNumber":326,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":327,"author":{"gitId":"banchiang"},"content":"     * Initialises calendar to next month data when the next button is clicked.","lastModifiedDate":"2021-03-26"},{"lineNumber":328,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":329,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":330,"author":{"gitId":"banchiang"},"content":"    public void handleToNext() {","lastModifiedDate":"2021-03-10"},{"lineNumber":331,"author":{"gitId":"banchiang"},"content":"        this.firstDayOfTheMonth \u003d firstDayOfTheMonth.plusMonths(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":332,"author":{"gitId":"banchiang"},"content":"        updateDayMonthYear(firstDayOfTheMonth);","lastModifiedDate":"2021-03-10"},{"lineNumber":333,"author":{"gitId":"banchiang"},"content":"        refreshCalenderView();","lastModifiedDate":"2021-03-10"},{"lineNumber":334,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":335,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":336,"author":{"gitId":"banchiang"},"content":"    //Solution below adapted from","lastModifiedDate":"2021-03-14"},{"lineNumber":337,"author":{"gitId":"banchiang"},"content":"    //https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java","lastModifiedDate":"2021-04-09"},{"lineNumber":338,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":339,"author":{"gitId":"banchiang"},"content":"     * Initialises calendar to current month of today\u0027s date.","lastModifiedDate":"2021-03-26"},{"lineNumber":340,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":341,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-10"},{"lineNumber":342,"author":{"gitId":"banchiang"},"content":"    public void viewToday() {","lastModifiedDate":"2021-03-10"},{"lineNumber":343,"author":{"gitId":"banchiang"},"content":"        updateDayMonthYear(todayDate);","lastModifiedDate":"2021-03-10"},{"lineNumber":344,"author":{"gitId":"banchiang"},"content":"        refreshCalenderView();","lastModifiedDate":"2021-03-10"},{"lineNumber":345,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":346,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":347,"author":{"gitId":"banchiang"},"content":"    //Solution below adapted from","lastModifiedDate":"2021-04-06"},{"lineNumber":348,"author":{"gitId":"banchiang"},"content":"    //https://github.com/AY2021S1-CS2103-W14-1/tp/blob/master/src/main/java/seedu/address/ui/CalendarView.java","lastModifiedDate":"2021-04-09"},{"lineNumber":349,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":350,"author":{"gitId":"banchiang"},"content":"     * Refreshes the calendar view along with the upcoming schedule view.","lastModifiedDate":"2021-04-04"},{"lineNumber":351,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":352,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-26"},{"lineNumber":353,"author":{"gitId":"banchiang"},"content":"    public void refresh() {","lastModifiedDate":"2021-03-26"},{"lineNumber":354,"author":{"gitId":"banchiang"},"content":"        refreshCalenderView();","lastModifiedDate":"2021-03-26"},{"lineNumber":355,"author":{"gitId":"banchiang"},"content":"        refreshScheduleView();","lastModifiedDate":"2021-04-06"},{"lineNumber":356,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":357,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"banchiang":229,"Hzxin":94,"-":34}},{"path":"src/main/java/seedu/address/ui/calendar/schedule/CalendarEventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.ui.calendar.schedule;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.Event;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":" * A GUI card to show details for an {@code Event} for {@code DayEventList} in calendar window.","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"public class CalendarEventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    private static final String FXML \u003d \"schedule/CalendarEventCard.fxml\";","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    private final Event event;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    private Label description;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    private Label id;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    private Label time;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     * Constructs new {@code CalendarEventCard} to show a event in the {@code DayEventList}.","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"     * @param event Event to be shown.","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    public CalendarEventCard(Event event) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        super(FXML);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"        init();","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    private void init() {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        loadCardColour();","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        setDescription();","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        setTime();","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    private void setDescription() {","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"        this.description.setWrapText(true);","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        this.description.setMaxWidth(250);","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        this.description.setText(event.getTag().tagName + \": \" + event.getDescription().description);","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    private void setTime() {","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        String time \u003d TIME_FORMATTER.format(event.getDateTime());","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        this.time.setText(time);","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"    private void loadCardColour() {","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        if (event instanceof Birthday) {","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"            cardPane.setStyle(\"-fx-background-color: salmon;\");","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"        if (event instanceof Exam) {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"            cardPane.setStyle(\"-fx-background-color: khaki;\");","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        if (event instanceof Assignment) {","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"            cardPane.setStyle(\"-fx-background-color: lightblue;\");","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        if (event instanceof GeneralEvent) {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"            cardPane.setStyle(\"-fx-background-color: lime;\");","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"banchiang":76,"Hzxin":1}},{"path":"src/main/java/seedu/address/ui/calendar/schedule/DayEventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.ui.calendar.schedule;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.Event;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.EventList;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":" * Represents a event list for the bottom of {@code UpcomingSchedule} GUI.","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"public class DayEventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    private static final String FXML \u003d \"schedule/DayEventListPanel.fxml\";","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    private EventList events;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"     * Constructs new {@code DayEventList} to show events in {@code UpcomingSchedule}.","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    public DayEventListPanel() {","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        super(FXML);","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        this.events \u003d new EventList();","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"     * Updates display of {@code Events} for a day in the {@code UpcomingSchedule}.","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"     * @param events {@code EventList} for the day.","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    public void updateList(EventList events) {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        this.events \u003d events;","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        clearDayEvents();","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        loadDayEvents();","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    private void clearDayEvents() {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"        eventListView.getItems().clear();","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    private void loadDayEvents() {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        for (Event event : events.getEvents()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"            eventListView.getItems().add(event);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code CalendarEventCard}.","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"                setGraphic(null);","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"                setText(null);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"                setGraphic(new CalendarEventCard(event).getRoot());","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"banchiang":68}},{"path":"src/main/java/seedu/address/ui/calendar/schedule/UpcomingSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.ui.calendar.schedule;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.util.CalendarUtil.calendarTextToDate;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.EventList;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.storage.CalendarStorage;","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":" * Represents a GUI to show the upcoming events for a day in the calendar.","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"public class UpcomingSchedule extends UiPart\u003cRegion\u003e implements EventHandler\u003cMouseEvent\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    //Solution adapted from","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    // https://github.com/AY2021S1-CS2103T-T12-3/tp/blob/master/src/main/java/seedu/address/ui/schedule","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    private static final String FXML \u003d \"schedule/UpcomingSchedule.fxml\";","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(UpcomingSchedule.class);","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    private DayEventListPanel eventHolder;","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    private LocalDate currentDay;","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    private CalendarStorage calendarStorage;","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    private VBox schedule;","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    private Label date;","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    private Label year;","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    @FXML","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    private Label day;","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"     * Constructs a schedule for the UpcomingSchedulePanel, which is the left panel of the {@Code CalendarWindow}.","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"     * @param calendarStorage Storage for schedule to access events.","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    public UpcomingSchedule(CalendarStorage calendarStorage) {","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        super(FXML);","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        requireNonNull(calendarStorage);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        //Initialises attributes","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        this.calendarStorage \u003d calendarStorage;","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        currentDay \u003d LocalDate.now();","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        eventHolder \u003d new DayEventListPanel();","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        //Loads schedule","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        schedule.getChildren().add(eventHolder.getRoot());","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        loadSchedule(currentDay);","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        logger.info(\"Upcoming schedule successfully initialised\");","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"     * Loads the schedule for a certain date.","lastModifiedDate":"2021-04-04"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"     * @param date Date for schedule.","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"    public void loadSchedule(LocalDate date) {","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"        setCurrentDay(date);","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        fillTopLabelForDay();","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        fillBase();","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"     * Refreshes the {@code DayEventList} when the refresh button is clicked on the CalendarWindow.","lastModifiedDate":"2021-04-04"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"    public void refreshSchedule() {","lastModifiedDate":"2021-04-04"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        fillBase();","lastModifiedDate":"2021-04-04"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"    private void setCurrentDay(LocalDate date) {","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"        this.currentDay \u003d date;","lastModifiedDate":"2021-04-06"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"     * Fills the {@code UpcomingSchedule} at the bottom with events for the date.","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"    private void fillBase() {","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"        //Remove events previously and refresh calendar storage","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"        schedule.getChildren().remove(eventHolder.getRoot());","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"        calendarStorage.refreshStorage();","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"        //Get new events for the day and update the eventHolder","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"        EventList events \u003d calendarStorage.getDateEvents(currentDay);","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"        eventHolder.updateList(events);","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"        schedule.getChildren().add(eventHolder.getRoot());","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"        logger.info(\"Events for the day has loaded successfully\");","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"     * Fills the {@code UpcomingSchedule} at the top with the description of the date.","lastModifiedDate":"2021-04-06"},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"    private void fillTopLabelForDay() {","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"        year.setText(String.valueOf(currentDay.getYear()));","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"        date.setText(getDateString(currentDay));","lastModifiedDate":"2021-03-26"},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"        day.setText(getDayString(currentDay));","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"        logger.info(\"Date details of upcoming schedule loaded successfully\");","lastModifiedDate":"2021-04-06"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"    private String getDateString(LocalDate date) {","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":"        String month \u003d date.getMonth().toString();","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"        String dayOfMonth \u003d String.valueOf(date.getDayOfMonth());","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":"        String dateString \u003d month + \" \" + dayOfMonth + \",\";","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":"        return dateString;","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":"    private String getDayString(LocalDate date) {","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":"        String dayString \u003d date.getDayOfWeek().toString();","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":"        return dayString.substring(0, 1) + dayString.substring(1).toLowerCase();","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":"     * Handles the mouse click event to load and show the","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"     * date events of a Calendar Box in the upcoming schedule.","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":"     * @param mouseEvent Clicking on the a {@Code CalendarBox} mouse event.","lastModifiedDate":"2021-04-06"},{"lineNumber":133,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"banchiang"},"content":"    public void handle(MouseEvent mouseEvent) {","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"banchiang"},"content":"        //Get time string from calendar box that was clicked","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"banchiang"},"content":"        String formattedTime \u003d ((Label) ((VBox) mouseEvent.getSource()).getChildren().get(0)).getText();","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"banchiang"},"content":"        LocalDate clickedDate \u003d calendarTextToDate(formattedTime);","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"banchiang"},"content":"        if (clickedDate \u003d\u003d currentDay) {","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"banchiang"},"content":"            refreshSchedule();","lastModifiedDate":"2021-04-06"},{"lineNumber":142,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"banchiang"},"content":"        currentDay \u003d clickedDate;","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"banchiang"},"content":"        loadSchedule(currentDay);","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"banchiang":147}},{"path":"src/main/java/seedu/address/ui/cards/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.ui.cards;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":" * An UI component that displays information of a {@code GeneralEvent}.","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    public final GeneralEvent generalEvent;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    private Label description;","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    private Label id;","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    private Label date;","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     * Creates a {@code EventCard} with the given {@code GeneralEvent} and index to display.","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    public EventCard(GeneralEvent generalEvent, int displayedIndex) {","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        super(FXML);","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        requireAllNonNull(generalEvent, displayedIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        this.generalEvent \u003d generalEvent;","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        description.setText(generalEvent.getDescription().description);","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        description.setWrapText(true);","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        description.setMaxWidth(500);","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"        date.setText(\"Date: \" + generalEvent.getDateTime().format(LocalDateTimeUtil.DATETIME_FORMATTER));","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"            return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        // state check","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"            \u0026\u0026 generalEvent.equals(card.generalEvent);","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Hzxin":64,"banchiang":5}},{"path":"src/main/java/seedu/address/ui/cards/ModuleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.ui.cards;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"public class ModuleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    private static final String FXML \u003d \"ModuleListCard.fxml\";","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    private final Module module;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    private Label title;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    private Label assignments;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    private Label exams;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    private Label tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"     * Creates a {@code ModuleCard} with the given {@code Module} and index to display.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    public ModuleCard(Module module, int displayIndex) {","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"        super(FXML);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"        title.setWrapText(true);","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        title.setMaxWidth(600);","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        title.setText(displayIndex + \". \" + module.getTitle().modTitle + \": \");","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"        assignments.setWrapText(true);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        assignments.setText(module.getAssignments().toString());","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        assignments.setMaxWidth(300);","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        exams.setWrapText(true);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"        exams.setText(module.getExams().toString());","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"        exams.setMaxWidth(300);","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"        ModuleCard card \u003d (ModuleCard) other;","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"        return title.getText().equals(card.title.getText())","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"                \u0026\u0026 module.equals(card.module);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Hzxin":62,"banchiang":9}},{"path":"src/main/java/seedu/address/ui/cards/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.ui.cards;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    private Label birthday;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        requireAllNonNull(person, displayedIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"        name.setWrapText(true);","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"        name.setMaxWidth(500);","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        birthday.setText(\"Birthday: \" + person.getBirthday().toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Hzxin":5,"banchiang":4,"-":67}},{"path":"src/main/java/seedu/address/ui/panels/DisplayPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.ui.panels;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"public class DisplayPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    private static final String FXML \u003d \"DisplayPanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    private Logic logic;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    private ModuleListPanel moduleListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    private TabPane tabPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    private StackPane moduleListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    private Tab modules;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    private Tab contacts;","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"    private Tab events;","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"     * Creates a display panel to hold all feature related contents","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"     * @param logic the logic object that manages the ui and the data","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    public DisplayPanel(Logic logic) {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        requireNonNull(logic);","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        fillInnerPart();","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"        listenerOnChange();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"    private void listenerOnChange() {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        addTabPaneListener();","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    private void addTabPaneListener() {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        tabPane.widthProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"            tabPane.setTabMinWidth((tabPane.getWidth() - 70) / tabPane.getTabs().size());","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"            tabPane.setTabMaxWidth((tabPane.getWidth() - 90) / tabPane.getTabs().size());","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"        });","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"    private void fillInnerPart() {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"        moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList());","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        moduleListPanelPlaceholder.getChildren().add(moduleListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"    public TabPane getTabPane() {","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"        return tabPane;","lastModifiedDate":"2021-04-05"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"    public void showModules() {","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"        tabPane.getSelectionModel().select(modules);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"    public void showContacts() {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"        tabPane.getSelectionModel().select(contacts);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"    public void showEvents() {","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"        tabPane.getSelectionModel().select(events);","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Hzxin":97,"banchiang":3}},{"path":"src/main/java/seedu/address/ui/panels/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.ui.panels;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.cards.EventCard;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":" * Panel containing the list of general events.","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private ListView\u003cGeneralEvent\u003e eventListView;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    public EventListPanel(ObservableList\u003cGeneralEvent\u003e eventList) {","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        super(FXML);","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        requireNonNull(eventList);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListPanel.EventListViewCell());","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code GeneralEvent} using a {@code EventCard}.","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    class EventListViewCell extends ListCell\u003cGeneralEvent\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"        protected void updateItem(GeneralEvent generalEvent, boolean empty) {","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"            super.updateItem(generalEvent, empty);","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"            if (empty || generalEvent \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"                setText(null);","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"            } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"                setGraphic(new EventCard(generalEvent, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Hzxin":48,"banchiang":3}},{"path":"src/main/java/seedu/address/ui/panels/ModuleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.ui.panels;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.cards.ModuleCard;","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"public class ModuleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    private static final String FXML \u003d \"ModuleListPanel.fxml\";","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModuleListPanel.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    private ListView\u003cModule\u003e moduleListView;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"     * Creates a {@code ModuleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        super(FXML);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"        requireNonNull(moduleList);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        moduleListView.setItems(moduleList);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        moduleListView.setCellFactory(listView -\u003e new ModuleListViewCell());","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    class ModuleListViewCell extends ListCell\u003cModule\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        protected void updateItem(Module module, boolean empty) {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"            super.updateItem(module, empty);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"            if (empty || module \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"                setText(null);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"            } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"                setGraphic(new ModuleCard(module, getIndex() + 1).getRoot());","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Hzxin":51,"banchiang":3}},{"path":"src/main/java/seedu/address/ui/panels/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.ui.panels;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import seedu.address.ui.cards.PersonCard;","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        requireNonNull(personList);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Hzxin":4,"banchiang":2,"-":49}},{"path":"src/main/resources/view/CalendarBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003cVBox fx:id\u003d\"dateHolder\" alignment\u003d\"CENTER\" prefHeight\u003d\"58.0\" prefWidth\u003d\"44.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"label-bright\" text\u003d\"Label\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"        \u003cLabel fx:id\u003d\"birthday\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"        \u003cLabel fx:id\u003d\"assignment\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"        \u003cLabel fx:id\u003d\"exam\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        \u003cLabel fx:id\u003d\"event\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"Hzxin":12,"banchiang":2}},{"path":"src/main/resources/view/CalendarWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"/* current css not in use */","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":".weekday {","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"    -fx-font-family: \"Abyssinica SIL\";","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":".weekend {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    -fx-font-family: \"Abyssinica SIL\";","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    -fx-text-fill: red;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":".button {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    -fx-font-family: \"DejaVu Serif Bold\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    -fx-background-color: #B0C4DE;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"banchiang":18}},{"path":"src/main/resources/view/CalendarWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"\u003cStage resizable\u003d\"false\" title\u003d\"Calendar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"        \u003cImage url\u003d\"@/images/logo.png\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"   \u003cscene\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"      \u003cScene\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"          \u003cstylesheets\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"              \u003cURL value\u003d\"@CalendarWindow.css\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"          \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"         \u003croot\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"            \u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"654.0\" prefWidth\u003d\"1128.0\" style\u003d\"-fx-background-color: grey;\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"                  \u003cVBox prefHeight\u003d\"650.0\" prefWidth\u003d\"450.0\" style\u003d\"-fx-background-color: #2F4550;\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"                        \u003cImageView fitHeight\u003d\"167.0\" fitWidth\u003d\"151.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" translateX\u003d\"60.0\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"                           \u003cimage\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"                              \u003cImage url\u003d\"@../images/logo.png\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"                           \u003c/image\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"                        \u003c/ImageView\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"                        \u003cHBox prefHeight\u003d\"503.0\" prefWidth\u003d\"275.0\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"                              \u003cStackPane fx:id\u003d\"schedulePanelPlaceHolder\" prefHeight\u003d\"503.0\" prefWidth\u003d\"450.0\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"                  \u003cAnchorPane minWidth\u003d\"860.0\" prefHeight\u003d\"656.0\" style\u003d\"-fx-background-color: #F8F8FF;\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"                        \u003cLabel fx:id\u003d\"monthYearLabel\" layoutX\u003d\"26.0\" layoutY\u003d\"14.0\" text\u003d\"Text\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"                           \u003cfont\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"                              \u003cFont name\u003d\"Abyssinica SIL\" size\u003d\"26.0\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"                           \u003c/font\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"                         \u003cButton ellipsisString\u003d\"\" layoutX\u003d\"593.0\" layoutY\u003d\"10.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleToNext\" prefHeight\u003d\"40.0\" prefWidth\u003d\"30.0\" text\u003d\"\u0026gt;\" textOverrun\u003d\"CLIP\" /\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"                         \u003cButton ellipsisString\u003d\"\" layoutX\u003d\"526.0\" layoutY\u003d\"10.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#viewToday\" prefHeight\u003d\"40.0\" prefWidth\u003d\"60.0\" text\u003d\"Today\" textOverrun\u003d\"CLIP\" /\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"                         \u003cButton ellipsisString\u003d\"\" layoutX\u003d\"485.0\" layoutY\u003d\"10.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleToPrev\" prefHeight\u003d\"40.0\" prefWidth\u003d\"30.0\" text\u003d\"\u0026lt;\" /\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"                        \u003cGridPane fx:id\u003d\"calendar\" alignment\u003d\"CENTER\" gridLinesVisible\u003d\"true\" layoutX\u003d\"-6.0\" layoutY\u003d\"55.0\" prefHeight\u003d\"590.0\" prefWidth\u003d\"860.0\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"                          \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"                              \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"                              \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"                              \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"                              \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"                              \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"                            \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"                            \u003cColumnConstraints halignment\u003d\"CENTER\" hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"                          \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"                          \u003crowConstraints\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"                              \u003cRowConstraints fillHeight\u003d\"false\" minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" valignment\u003d\"CENTER\" vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"                              \u003cRowConstraints fillHeight\u003d\"false\" minHeight\u003d\"0.0\" prefHeight\u003d\"0.0\" valignment\u003d\"CENTER\" vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"                            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"                            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"                            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"                              \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"                              \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"                          \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"                        \u003c/GridPane\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"                        \u003cButton ellipsisString\u003d\"\" layoutX\u003d\"770.0\" layoutY\u003d\"10.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#refresh\" prefHeight\u003d\"40.0\" prefWidth\u003d\"70.0\" text\u003d\"Refresh\" textOverrun\u003d\"CLIP\" /\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"         \u003c/root\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"      \u003c/Scene\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"   \u003c/scene\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"\u003c/Stage\u003e","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"Hzxin":71,"banchiang":16}},{"path":"src/main/resources/view/DisplayPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"\u003cTabPane fx:id\u003d\"tabPane\" tabClosingPolicy\u003d\"UNAVAILABLE\" tabMaxWidth\u003d\"Infinity\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"   \u003ctabs\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"      \u003cTab fx:id\u003d\"modules\" closable\u003d\"false\" text\u003d\"Modules\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"            \u003cStackPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"                  \u003cHBox alignment\u003d\"CENTER\" spacing\u003d\"5.0\" StackPane.alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"                        \u003cVBox fx:id\u003d\"moduleList\" minWidth\u003d\"250.0\" styleClass\u003d\"vbox-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"                              \u003cStackPane fx:id\u003d\"moduleListPanelPlaceholder\" styleClass\u003d\"empty-container\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"                        \u003cVBox alignment\u003d\"CENTER\" styleClass\u003d\"vbox-with-border\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"                     \u003cStackPane.margin\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"                     \u003c/StackPane.margin\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"      \u003c/Tab\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"      \u003cTab fx:id\u003d\"contacts\" text\u003d\"Contacts\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"            \u003cStackPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"                  \u003cHBox spacing\u003d\"5.0\" StackPane.alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"                        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"250.0\" styleClass\u003d\"vbox-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"                              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" styleClass\u003d\"empty-container\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"                        \u003cVBox alignment\u003d\"CENTER\" styleClass\u003d\"vbox-with-border\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"                     \u003cStackPane.margin\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"                     \u003c/StackPane.margin\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"      \u003c/Tab\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"      \u003cTab fx:id\u003d\"events\" text\u003d\"Events\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"            \u003cStackPane\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"                  \u003cHBox spacing\u003d\"5.0\" StackPane.alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"                        \u003cVBox fx:id\u003d\"eventList\" minWidth\u003d\"250.0\" styleClass\u003d\"vbox-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"                              \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" styleClass\u003d\"empty-container\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"                        \u003cVBox alignment\u003d\"CENTER\" styleClass\u003d\"vbox-with-border\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"                     \u003cStackPane.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"                     \u003c/StackPane.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"      \u003c/Tab\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"   \u003c/tabs\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"\u003c/TabPane\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Hzxin":85}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"            \u003cLabel fx:id\u003d\"date\" alignment\u003d\"CENTER\" text\u003d\"Label\" translateX\u003d\"55.0\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Hzxin":37}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"  \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Hzxin":8}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"         \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"               \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                     \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"               \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                     \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"               \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"               \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"               \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Hzxin":1,"-":38}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"RemindMe\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    \u003cImage url\u003d\"@/images/logo.png\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"        \u003cURL value\u003d\"@dark/DarkTheme.css\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"        \u003cURL value\u003d\"@dark/Extensions.css\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Calendar\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"            \u003cMenuItem fx:id\u003d\"calendarMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCalendar\" text\u003d\"Calendar\" /\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150.0\" minHeight\u003d\"150.0\" prefHeight\u003d\"150.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Hzxin":10,"banchiang":4,"-":47}},{"path":"src/main/resources/view/MainWindow2.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"\u003cfx:root resizable\u003d\"false\" minHeight\u003d\"780\" minWidth\u003d\"840\" onCloseRequest\u003d\"#handleExit\" title\u003d\"RemindMe\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"  \u003cicons\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    \u003cImage url\u003d\"@/images/logo.png\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"  \u003cscene\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    \u003cScene\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        \u003cURL value\u003d\"@customizedStyle/CustomizedTheme.css\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"        \u003cURL value\u003d\"@customizedStyle/CustomisedExtensions.css\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"      \u003cVBox prefWidth\u003d\"800.0\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Calendar\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"            \u003cMenuItem fx:id\u003d\"calendarMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCalendar\" text\u003d\"Calendar\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"              \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"            \u003cSplitPane dividerPositions\u003d\"0.5\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"               \u003citems\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"                  \u003cVBox prefWidth\u003d\"400.0\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"350.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"                   \u003cStackPane fx:id\u003d\"displayPanelPlaceholder\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"                         \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"               \u003c/items\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"          \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"banchiang":65,"Hzxin":3}},{"path":"src/main/resources/view/ModuleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"         \u003cHBox \u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"           \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"           \u003c/Label\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"               \u003cLabel fx:id\u003d\"tag\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" styleClass\u003d\"cell_big_label\" translateX\u003d\"75.0\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"                  \u003cminWidth\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"                     \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"                  \u003c/minWidth\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        \u003cLabel fx:id\u003d\"assignments\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        \u003cLabel fx:id\u003d\"exams\" alignment\u003d\"CENTER_RIGHT\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" translateX\u003d\"145.0\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Hzxin":40,"banchiang":1}},{"path":"src/main/resources/view/ModuleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"  \u003cListView fx:id\u003d\"moduleListView\" style\u003d\"-fx-background-color: white;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Hzxin":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"            \u003cLabel fx:id\u003d\"birthday\" alignment\u003d\"CENTER\" text\u003d\"Label\" translateX\u003d\"25.0\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Hzxin":8,"-":30}},{"path":"src/main/resources/view/ReminderWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"\u003cStage resizable\u003d\"false\" minHeight\u003d\"570.0\" minWidth\u003d\"750.0\" title\u003d\"Reminder\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"        \u003cImage url\u003d\"@/images/logo.png\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"                \u003cURL value\u003d\"@customizedStyle/transparentTheme.css\" /\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"            \u003cAnchorPane minHeight\u003d\"570.0\" minWidth\u003d\"750.0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"               \u003cAnchorPane fx:id\u003d\"mainWindow\" minHeight\u003d\"570.0\" minWidth\u003d\"750.0\"\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"                     \u003cImageView fitHeight\u003d\"150.0\" fitWidth\u003d\"225.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" translateX\u003d\"10.0\" translateY\u003d\"10.0\"\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"                        \u003cimage\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"                           \u003cImage url\u003d\"@/images/logoCalligraphy.png\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"                        \u003c/image\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"                     \u003c/ImageView\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"                     \u003cButton fx:id\u003d\"startButton\" layoutX\u003d\"329.0\" layoutY\u003d\"526.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#close\" text\u003d\"Start\" textFill\u003d\"#805555\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"                           \u003cFont name\u003d\"FreeMono\" size\u003d\"17.0\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"                     \u003c/Button\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"                     \u003cText fx:id\u003d\"header\" fill\u003d\"WHITE\" layoutX\u003d\"23.0\" layoutY\u003d\"82.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"In the next 3 days:\" translateY\u003d\"10.0\"\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"                           \u003cFont name\u003d\"FreeSerif Bold Italic\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"                     \u003c/Text\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"                     \u003cTextArea fx:id\u003d\"contentArea\" editable\u003d\"false\" layoutX\u003d\"54.0\" layoutY\u003d\"121.0\" prefHeight\u003d\"374.0\" prefWidth\u003d\"670.0\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"                           \u003cFont name\u003d\"FreeSerif Bold Italic\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"                     \u003c/TextArea\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"               \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"            \u003c/children\u003e\u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"\u003c/Stage\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Hzxin":48,"banchiang":4}},{"path":"src/main/resources/view/customizedStyle/CustomisedExtensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":".error {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":".list-cell:empty {","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"    -fx-background: derive(#EFC9AF, 30%);","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":".tag-selector {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":".tooltip-text {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Hzxin":20}},{"path":"src/main/resources/view/customizedStyle/CustomizedTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":".root {","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":".background {","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"    background-color: #EFC9AF; /* Used in the default.html file */","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":".label {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":".label-bright {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":".label-header {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 25pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: Candara;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":".text-field {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    -fx-prompt-text-fill: derive(black, 65%);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":".tab-pane {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 8 8 8 8;","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    -fx-border-radius: 8 8 8 8;","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":".tab-pane .tab-header-background {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":".tab-pane .tab-content-area {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":".tab-pane .tab:selected {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 10%);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"    -fx-pref-height: 60;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"    -fx-effect: innershadow(gaussian, #FCF6F5FF, 7, 0.1, -1, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":".tab-pane .tab {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 50%);","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"    -fx-pref-height: 60;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"    -fx-effect: innershadow(gaussian, #FCF6F5FF, 7, 0.1, -1, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":".tab-pane .tab-label {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Sitka Banner\";","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"    -fx-font-weight: 600;","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":".table-view {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#104c91, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"    -fx-border-color: transparent transparent transparent #1F8AC0;","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":".split-pane {","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#104c91, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":".list-view-module {","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"Hzxin"},"content":".list-view-module .list-cell {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 18 18 18 18;","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"    -fx-border-radius: 18 18 18 18;","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"Hzxin"},"content":".list-view-module .list-cell:filled:selected {","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"Hzxin"},"content":"    -fx-effect: dropshadow(gaussian, #0B2B37, 10, 0, 5, 5);","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"Hzxin"},"content":".list-view-module .list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"Hzxin"},"content":"    -fx-effect: null;","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"Hzxin"},"content":".list-view-module .list-cell .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"Hzxin"},"content":".list-view-module .list-cell:empty {","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 2 ;","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: #EFC9AF ;","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"Hzxin"},"content":"    -fx-background-insets: 0 ;","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"Hzxin"},"content":".cell_big_label {","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"Hzxin"},"content":".cell_small_label {","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"Hzxin"},"content":".stack-pane {","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 50%);","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"Hzxin"},"content":".pane-with-border {","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"Hzxin"},"content":"    -fx-border-color: derive(#EFC9AF, 10%);","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"Hzxin"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 5 10 5 10;","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"Hzxin"},"content":".pane-with-border-rounded {","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"Hzxin"},"content":"    -fx-border-color: derive(#EFC9AF, 10%);","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"Hzxin"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 5 10 5 10;","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 18 18 18 18;","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"Hzxin"},"content":"    -fx-border-radius: 18 18 18 18;","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"Hzxin"},"content":".vbox-with-border {","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"Hzxin"},"content":"    -fx-border-color: derive(#EFC9AF, 10%);","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"Hzxin"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"Hzxin"},"content":"    -fx-border-radius: 18 18 0 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 18 18 0 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"Hzxin"},"content":".vbox-with-border .label-header {","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 25pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: Candara;","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"Hzxin"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"Hzxin"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 5 5 5 5;","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"Hzxin"},"content":".empty-container {","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"Hzxin"},"content":".vbox-data {","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 18 18 18 18;","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"Hzxin"},"content":"    -fx-spacing: 5;","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 10 5 10 5;","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"Hzxin"},"content":".result-display {","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #1F8AC0;","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"Hzxin"},"content":".result-display .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"Hzxin"},"content":".status-bar {","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 30%);","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"Hzxin"},"content":".status-bar .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #1F8AC0;","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"Hzxin"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"Hzxin"},"content":".status-bar-with-border {","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 30%);","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"Hzxin"},"content":"    -fx-border-color: derive(#EFC9AF, 25%);","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"Hzxin"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"Hzxin"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #1F8AC0;","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"Hzxin"},"content":".context-menu {","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 50%);","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"Hzxin"},"content":".context-menu .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"Hzxin"},"content":".menu-bar {","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"Hzxin"},"content":".menu-bar .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"Hzxin"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"Hzxin"},"content":".menu .left-container {","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: #EFC9AF;","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"Hzxin"},"content":"/*","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"Hzxin"},"content":" * Metro style Push Button","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"Hzxin"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"Hzxin"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"Hzxin"},"content":".button {","lastModifiedDate":"2021-03-17"},{"lineNumber":256,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"Hzxin"},"content":"    -fx-border-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"Hzxin"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2021-03-17"},{"lineNumber":261,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"Hzxin"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"Hzxin"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"Hzxin"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"Hzxin"},"content":"    -fx-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":272,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":273,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":274,"author":{"gitId":"Hzxin"},"content":".scroll-bar {","lastModifiedDate":"2021-03-17"},{"lineNumber":275,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 20%);","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":278,"author":{"gitId":"Hzxin"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-03-17"},{"lineNumber":279,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: derive(#EFC9AF, 50%);","lastModifiedDate":"2021-03-30"},{"lineNumber":280,"author":{"gitId":"Hzxin"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":281,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":283,"author":{"gitId":"Hzxin"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-03-17"},{"lineNumber":284,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":285,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":286,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":287,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":288,"author":{"gitId":"Hzxin"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-03-17"},{"lineNumber":289,"author":{"gitId":"Hzxin"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-03-17"},{"lineNumber":290,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":291,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":292,"author":{"gitId":"Hzxin"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-03-17"},{"lineNumber":293,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-03-17"},{"lineNumber":294,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":295,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":296,"author":{"gitId":"Hzxin"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-03-17"},{"lineNumber":297,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":298,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":299,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":300,"author":{"gitId":"Hzxin"},"content":"#cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":301,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: #EFC9AF;","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"Hzxin"},"content":"    -fx-effect: dropshadow(gaussian, #EFC9AF, 10, 0, 1, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":304,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":305,"author":{"gitId":"Hzxin"},"content":"#commandTextField {","lastModifiedDate":"2021-03-17"},{"lineNumber":306,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: transparent #104C91 transparent #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"Hzxin"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":308,"author":{"gitId":"Hzxin"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2021-03-17"},{"lineNumber":309,"author":{"gitId":"Hzxin"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":310,"author":{"gitId":"Hzxin"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":311,"author":{"gitId":"Hzxin"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-17"},{"lineNumber":312,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-17"},{"lineNumber":313,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: #104C91;","lastModifiedDate":"2021-03-30"},{"lineNumber":314,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":315,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":316,"author":{"gitId":"Hzxin"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-03-17"},{"lineNumber":317,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: transparent, #EFC9AF, transparent, #EFC9AF;","lastModifiedDate":"2021-03-30"},{"lineNumber":318,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":319,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":320,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":321,"author":{"gitId":"Hzxin"},"content":"#tags {","lastModifiedDate":"2021-03-17"},{"lineNumber":322,"author":{"gitId":"Hzxin"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-17"},{"lineNumber":323,"author":{"gitId":"Hzxin"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":324,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":325,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":326,"author":{"gitId":"Hzxin"},"content":"#tags .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":327,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":328,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-03-17"},{"lineNumber":329,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":330,"author":{"gitId":"Hzxin"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-17"},{"lineNumber":331,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-17"},{"lineNumber":332,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-17"},{"lineNumber":333,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":334,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":335,"author":{"gitId":"Hzxin"},"content":"#tag {","lastModifiedDate":"2021-03-25"},{"lineNumber":336,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-25"},{"lineNumber":337,"author":{"gitId":"Hzxin"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-25"},{"lineNumber":338,"author":{"gitId":"Hzxin"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-25"},{"lineNumber":339,"author":{"gitId":"Hzxin"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-25"},{"lineNumber":340,"author":{"gitId":"Hzxin"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-25"},{"lineNumber":341,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":342,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":343,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Hzxin":343}},{"path":"src/main/resources/view/customizedStyle/transparentTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":".text-area {","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":".text-area .scroll-pane {","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":".text-area .scroll-pane .viewport{","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":".text-area .scroll-pane .content{","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"Hzxin":17}},{"path":"src/main/resources/view/schedule/CalendarEventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"            \u003cLabel fx:id\u003d\"time\" alignment\u003d\"CENTER\" text\u003d\"Label\" translateX\u003d\"55.0\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"banchiang":30}},{"path":"src/main/resources/view/schedule/DayEventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"banchiang":8}},{"path":"src/main/resources/view/schedule/EventCell.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"\u003c!--","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@@author banchiang-reused","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"FXML reused from (https://github.com/AY2021S1-CS2103T-F12-2/tp) with minor modifications","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cVBox fx:id\u003d\"eventHolder\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"40.0\" prefWidth\u003d\"315.0\" style\u003d\"-fx-border-color: #00a3cc; -fx-border-width: 0 0 0 3; -fx-background-color: rgba(204, 245, 255, 0.5) rgba(204, 245, 255, 0.7);\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"startTime\" prefWidth\u003d\"315.0\" text\u003d\"10:30 AM\" textFill\u003d\"#00a3cc\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cInsets /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"title\" prefWidth\u003d\"315.0\" text\u003d\"CS2103\" textFill\u003d\"#00a3cc\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cFont name\u003d\"Arial Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c!-- @@author --\u003e","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"banchiang":8,"-":24}},{"path":"src/main/resources/view/schedule/UpcomingSchedule.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.shape.Line?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"\u003c!--","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@@author banchiang-reused","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"FXML reused from (https://github.com/AY2021S1-CS2103T-F12-2/tp) with minor modifications","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cVBox fx:id\u003d\"schedule\" maxWidth\u003d\"450.0\" minWidth\u003d\"450.0\" prefWidth\u003d\"450.0\" style\u003d\"-fx-background-color: white;\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cHBox prefHeight\u003d\"30.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"date\" text\u003d\"October, 20\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                        \u003cFont name\u003d\"Arial Bold\" size\u003d\"30.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"year\" text\u003d\"2020\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003cFont name\u003d\"Arial\" size\u003d\"30.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"day\" style\u003d\"-fx-font-weight: 100;\" text\u003d\"Thursday\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003cFont name\u003d\"Arial\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cLine endX\u003d\"270.0\" startX\u003d\"-100.0\" stroke\u003d\"#0000001c\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cLabel text\u003d\"all-day\" textFill\u003d\"#cdcdcd\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"20.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cLine endX\u003d\"270.0\" startX\u003d\"-100.0\" stroke\u003d\"#00000031\" strokeWidth\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cInsets left\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c!-- @@ author --\u003e","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"banchiang":10,"-":43}},{"path":"src/test/data/JsonRemindMeStorageTest/invalidAndValidPersonRemindMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"  \"modules\" : [ ],","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"    \"name\" : \"Alice @2131\u003c\u003e\",","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"22/10/2020\",","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"  }],","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    \"description\" : \"Party\",","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    \"date\" : \"01/01/2021 2359\"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Hzxin":8,"-":4}},{"path":"src/test/data/JsonRemindMeStorageTest/invalidPersonRemindMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"  \"modules\" : [ ],","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"    \"name\" : \"Alice @2131\u003c\u003e\",","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"22/10/2020\",","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"  }],","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    \"description\" : \"Party\",","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"    \"date\" : \"01/01/2021 2359\"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Hzxin":8,"-":4}},{"path":"src/test/data/JsonSerializableRemindMeTest/duplicateEventRemindMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"{","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"  \"modules\" : [],","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"  \"persons\" : [],","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"    \"description\" : \"party1\",","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"    \"date\" : \"01/01/1998 2359\"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"    \"description\" : \"party1\",","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    \"date\" : \"01/01/1998 2359\"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"  }]","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Hzxin":11}},{"path":"src/test/data/JsonSerializableRemindMeTest/duplicateModuleRemindMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"{","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"  \"modules\" : [ {","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"    \"title\" : \"MOD 1\",","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"    \"assignmentList\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"    \"examList\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"  }, {","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"    \"title\" : \"MOD 1\",","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"    \"assignmentList\" : [ ],","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"    \"examList\" : [ ]","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"  } ],","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"  \"persons\" : [],","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"  \"events\" : []","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Hzxin":13}},{"path":"src/test/data/JsonSerializableRemindMeTest/duplicatePersonRemindMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"  \"modules\" : [ ],","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"    \"name\" : \"Alice\",","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"22/10/2020\",","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"  },","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"    {","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"      \"name\" : \"Alice\",","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"      \"birthday\" : \"22/10/2020\",","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"    },","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    {","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"      \"name\" : \"Alice\",","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"      \"birthday\" : \"22/10/2020\",","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"  ],","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"  \"events\" : []","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"markuz5116":12,"Hzxin":5,"-":3}},{"path":"src/test/data/JsonSerializableRemindMeTest/invalidPersonRemindMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"  \"modules\" : [ ],","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"    \"name\" : \"Alice @2131\u003c\u003e\",","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"    \"birthday\" : \"2020-10-22\",","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"  }],","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"      \"description\" : \"Party\",","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"      \"date\" : \"01/01/2021 2359\"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"markuz5116":4,"Hzxin":4,"-":4}},{"path":"src/test/data/JsonSerializableRemindMeTest/typicalPersonsRemindMe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"  \"modules\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"    \"title\" : \"MOD 1\",","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"    \"assignmentList\" : [ ],","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"    \"examList\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"  }, {","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"    \"title\" : \"MOD 2\",","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"    \"assignmentList\" : [ ],","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"    \"examList\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"20/12/1998\",","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"20/12/1998\",","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"20/12/1998\",","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"20/12/1998\",","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"20/12/1998\",","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"20/12/1998\",","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    \"birthday\" : \"20/12/1998\",","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"  } ],","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    \"description\" : \"Party\",","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    \"date\" : \"01/01/2021 2359\"","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"markuz5116":6,"Hzxin":15,"-":24}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"  \"remindMeFilePath\" : \"remindMe.json\"","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Hzxin":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"  \"remindMeFilePath\" : \"remindMe.json\"","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Hzxin":1,"-":10}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"        assertNotNull(AppUtil.getImage(\"/images/logo.png\"));","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"banchiang":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddPersonCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"import seedu.address.storage.JsonRemindMeStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonRemindMeStorage.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        JsonRemindMeStorage remindMeStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"            new JsonRemindMeStorage(temporaryFolder.resolve(\"remindMe.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        StorageManager storage \u003d new StorageManager(remindMeStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        // Setup LogicManager with JsonRemindMeIoExceptionThrowingStub","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        JsonRemindMeStorage remindMeStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"            new JsonRemindMeIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionRemindMe.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        StorageManager storage \u003d new StorageManager(remindMeStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"        String addPersonCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        assertCommandFailure(addPersonCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"Hzxin"},"content":"        Model expectedModel \u003d new ModelManager(model.getRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"Hzxin"},"content":"    private static class JsonRemindMeIoExceptionThrowingStub extends JsonRemindMeStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"Hzxin"},"content":"        private JsonRemindMeIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"        public void saveRemindMe(ReadOnlyRemindMe readOnlyRemindMe, Path filePath) throws IOException {","lastModifiedDate":"2021-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"markuz5116":7,"Hzxin":17,"-":134}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddPersonCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        Model expectedModel \u003d new ModelManager(model.getRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        Person personInList \u003d model.getRemindMe().getPersonList().get(0);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"markuz5116":5,"Hzxin":4,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/ClearModulesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.clearcommand.ClearCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.clearcommand.ClearModulesCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"public class ClearModulesCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    public void execute_emptyRemindMe_success() {","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(new ClearModulesCommand(), model, ClearModulesCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    public void execute_nonEmptyRemindMe_success() {","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        expectedModel.setRemindMe(new RemindMe());","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"markuz5116":7,"Hzxin":5,"-":22}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditPersonCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.event.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"    public static final LocalDateTime VALID_DATE \u003d LocalDateTime.of(2021, 03, 15, 23, 59);","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"    public static final String VALID_TITLE_CS2103 \u003d \"CS2103\";","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"    public static final String VALID_TITLE_CS2101 \u003d \"CS2101\";","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    public static final String INVALID_TITLE \u003d \"Invalid!\";","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    public static final Exam VALID_EXAM \u003d new Exam(VALID_DATE, new Tag(VALID_TITLE_CS2101));","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    public static final String VALID_EXAM_DATETIME_1 \u003d \"03/05/2021 1300\";","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"    public static final String VALID_EXAM_DATETIME_2 \u003d \"06/06/2021 0500\";","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"    public static final String VALID_ASSIGNMENT_DESCRIPTION_1 \u003d \"Assignment 1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"    public static final String VALID_ASSIGNMENT_DESCRIPTION_2 \u003d \"Assignment 2\";","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    public static final String VALID_ASSIGNMENT_DEADLINE_1 \u003d \"04/04/2021 1700\";","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    public static final String VALID_ASSIGNMENT_DEADLINE_2 \u003d \"03/05/2021 1300\";","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"    public static final ArrayList\u003cExam\u003e VALID_EXAMS_CS2103 \u003d new ArrayList\u003cExam\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"12/12/1999\";","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"12/12/1999\";","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"    public static final String VALID_GENERAL_EVENT_DESCRIPTION_1 \u003d \"Party\";","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"    public static final String VALID_GENERAL_EVENT_DESCRIPTION_2 \u003d \"Eat food\";","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    public static final String VALID_GENERAL_EVENT_DATE_1 \u003d \"01/01/2021 2359\";","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"    public static final String VALID_GENERAL_EVENT_DATE_2 \u003d \"02/02/2021 2359\";","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"    public static final String INVALID_GENERAL_EVENT_DATE_1 \u003d \"01/1/2021 2359\";","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"    public static final String INVALID_GENERAL_EVENT_DATE_2 \u003d \"01-01-2021 23:59\";","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"        VALID_EXAMS_CS2103.add(VALID_EXAM);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"        RemindMe expectedRemindMe \u003d new RemindMe(actualModel.getRemindMe());","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"        assertEquals(expectedRemindMe, actualModel.getRemindMe());","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"     * Updates {@code model}\u0027s filtered list to show only the module at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"     * {@code model}\u0027s remindMe module list.","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"    public static void showModuleAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredModuleList().size());","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"        Module module \u003d model.getFilteredModuleList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"        final String[] splitTitle \u003d module.getTitle().modTitle.split(\"\\\\s+\");","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"jellymias"},"content":"        model.updateFilteredModuleList(new TitleContainsKeywordsPredicate(Arrays.asList(splitTitle[0])));","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":"        assertEquals(2, model.getFilteredModuleList().size());","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":"     * Updates {@code model}\u0027s filtered list to show only the general event at the given {@code targetIndex} in the","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"     * {@code model}\u0027s remindMe event list.","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"    public static void showEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredModuleList().size());","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"jellymias"},"content":"        GeneralEvent event \u003d model.getFilteredEventList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"        final String[] splitTitle \u003d event.getDescription().description.split(\"\\\\s+\");","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":"        model.updateFilteredEventList(new DescriptionContainsKeywordsPredicate(Arrays.asList(splitTitle[0])));","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":"        assertEquals(2, model.getFilteredModuleList().size());","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"markuz5116":17,"jellymias":39,"Hzxin":4,"banchiang":1,"maikongeh":6,"-":102}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"        model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        expectedModel \u003d new ModelManager(model.getRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Hzxin":3,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/ToggleDoneAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ASSIGNMENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ASSIGNMENT;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import seedu.address.testutil.typicalmodules.ModuleBuilder;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"public class ToggleDoneAssignmentCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"    public void equals() {","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"        Module module \u003d new ModuleBuilder().build();","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"        ToggleDoneAssignmentCommand toggleFirstCommand \u003d new ToggleDoneAssignmentCommand(module.getTitle(),","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"                INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"        ToggleDoneAssignmentCommand toggleSecondCommand \u003d new ToggleDoneAssignmentCommand(module.getTitle(),","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"                INDEX_SECOND_ASSIGNMENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"        assertTrue(toggleFirstCommand.equals(toggleFirstCommand));","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        ToggleDoneAssignmentCommand toggleFirstCommandCopy \u003d new ToggleDoneAssignmentCommand(module.getTitle(),","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"                INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        assertTrue(toggleFirstCommand.equals(toggleFirstCommandCopy));","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        assertFalse(toggleFirstCommand.equals(1));","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        assertFalse(toggleFirstCommand.equals(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        assertFalse(toggleFirstCommand.equals(toggleSecondCommand));","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"maikongeh":50}},{"path":"src/test/java/seedu/address/logic/commands/addcommand/AddAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_ASSIGNMENT;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"import seedu.address.testutil.AssignmentBuilder;","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.testutil.typicalmodules.ModuleBuilder;","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"public class AddAssignmentCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    private AddAssignmentCommand addAssignmentCommandDummy \u003d new AddAssignmentCommand(MOD_1, VALID_ASSIGNMENT);","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    public void constructor_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAssignmentCommand(MOD_1, null));","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    public void constructor_nullModule_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAssignmentCommand(null, VALID_ASSIGNMENT));","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    public void execute_invalidModule_throwsCommandException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        ModelStubWithoutModule modelStubWithoutModule \u003d new ModelStubWithoutModule();","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        assertThrows(CommandException.class, AddAssignmentCommand.MESSAGE_MODULE_NOT_FOUND, () -\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"            addAssignmentCommandDummy.execute(modelStubWithoutModule));","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    public void execute_duplicateAssignment_throwsCommandException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        ModelStubWithModuleWithAssignment modelStubWithModuleWithAssignment \u003d new ModelStubWithModuleWithAssignment();","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        assertThrows(CommandException.class, AddAssignmentCommand.MESSAGE_DUPLICATE_ASSIGNMENT, () -\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"            addAssignmentCommandDummy.execute(modelStubWithModuleWithAssignment));","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    public void execute_assignmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"        ModelStubWithModuleWithoutAssignment modelStubWithModuleWithoutAssignment \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"            new ModelStubWithModuleWithoutAssignment();","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        CommandResult commandResult \u003d addAssignmentCommandDummy.execute(modelStubWithModuleWithoutAssignment);","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        assertEquals(String.format(AddAssignmentCommand.MESSAGE_SUCCESS, VALID_ASSIGNMENT),","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        assertTrue(modelStubWithModuleWithoutAssignment.isAssignmentAdded);","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"    public void equals() {","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        Assignment assignment1 \u003d new AssignmentBuilder().withDescription(\"assignment 1\").build();","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        Assignment assignment2 \u003d new AssignmentBuilder().withDescription(\"assignment 2\").build();","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"        Module module1 \u003d new ModuleBuilder().withTitle(\"mod 1\").build();","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        Module module2 \u003d new ModuleBuilder().withTitle(\"mod 2\").build();","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"        AddAssignmentCommand aac1 \u003d new AddAssignmentCommand(module1, assignment1);","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        AddAssignmentCommand aac2 \u003d new AddAssignmentCommand(module1, assignment2);","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"        AddAssignmentCommand aac3 \u003d new AddAssignmentCommand(module2, assignment1);","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        AddAssignmentCommand aac4 \u003d new AddAssignmentCommand(module2, assignment2);","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        assertTrue(aac1.equals(aac1));","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        AddAssignmentCommand aac1Copy \u003d new AddAssignmentCommand(module1, assignment1);","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        assertTrue(aac1.equals(aac1Copy));","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"        AddAssignmentCommand aac4Copy \u003d new AddAssignmentCommand(module2, assignment2);","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        assertTrue(aac4.equals(aac4Copy));","lastModifiedDate":"2021-04-06"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"        assertFalse(aac1.equals(1));","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"        assertFalse(aac1.equals(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"        // same module, different assignment -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"        assertFalse(aac1.equals(aac2));","lastModifiedDate":"2021-04-06"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"        assertFalse(aac3.equals(aac4));","lastModifiedDate":"2021-04-06"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"        // different module, same assignment -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"        assertFalse(aac1.equals(aac3));","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"        assertFalse(aac2.equals(aac4));","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithoutModule extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"            return false;","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithModuleWithAssignment extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":"            return true;","lastModifiedDate":"2021-04-06"},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"        public boolean hasAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-04-06"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"            return true;","lastModifiedDate":"2021-04-06"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithModuleWithoutAssignment extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"        private boolean isAssignmentAdded \u003d false;","lastModifiedDate":"2021-04-06"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":"            return true;","lastModifiedDate":"2021-04-06"},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":"        public boolean hasAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-04-06"},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":"            return false;","lastModifiedDate":"2021-04-06"},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"        public void addAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":"            isAssignmentAdded \u003d true;","lastModifiedDate":"2021-04-06"},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"banchiang":132}},{"path":"src/test/java/seedu/address/logic/commands/addcommand/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_GENERAL_EVENT_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_GENERAL_EVENT_2;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    private AddEventCommand addEventCommandDummy \u003d new AddEventCommand(VALID_GENERAL_EVENT_1);","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        ModelStubWithEvent modelStubWithEvent \u003d new ModelStubWithEvent();","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"                AddEventCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e addEventCommandDummy.execute(modelStubWithEvent));","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        ModelStubWithoutEvent modelStubWithoutEvent \u003d new ModelStubWithoutEvent();","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        CommandResult commandResult \u003d addEventCommandDummy.execute(modelStubWithoutEvent);","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_SUCCESS, VALID_GENERAL_EVENT_1),","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        assertTrue(modelStubWithoutEvent.isEventAdded);","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    public void equals() {","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"        AddEventCommand addEventCommand1 \u003d new AddEventCommand(VALID_GENERAL_EVENT_1);","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        AddEventCommand addEventCommand2 \u003d new AddEventCommand(VALID_GENERAL_EVENT_2);","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        //same object -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        assertTrue(addEventCommand1.equals(addEventCommand1));","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"        //same values -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"        AddEventCommand addEventCommand1Copy \u003d new AddEventCommand(VALID_GENERAL_EVENT_1);","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        assertTrue(addEventCommand1.equals(addEventCommand1Copy));","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        assertFalse(addEventCommand1.equals(1));","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        assertFalse(addEventCommand1.equals(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        assertFalse(addEventCommand1.equals(addEventCommand2));","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        public boolean hasEvent(GeneralEvent event) {","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"            return true;","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithoutEvent extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"        private boolean isEventAdded \u003d false;","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        public boolean hasEvent(GeneralEvent event) {","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"            return false;","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"        public void addEvent(GeneralEvent event) {","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"            isEventAdded \u003d true;","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"banchiang":85}},{"path":"src/test/java/seedu/address/logic/commands/addcommand/AddExamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.DATE_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.DATE_2;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_EXAM;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.testutil.ExamBuilder;","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"import seedu.address.testutil.typicalmodules.ModuleBuilder;","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"public class AddExamCommandTest {","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    private AddExamCommand addExamCommandDummy \u003d new AddExamCommand(MOD_1, VALID_EXAM);","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    public void constructor_nullExam_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddExamCommand(MOD_1, null));","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    public void constructor_nullModule_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddExamCommand(null, VALID_EXAM));","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    public void execute_invalidModule_throwsCommandException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        ModelStubWithoutModule modelStubWithoutModule \u003d new ModelStubWithoutModule();","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        assertThrows(CommandException.class, AddExamCommand.MESSAGE_MODULE_NOT_FOUND, () -\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"                addExamCommandDummy.execute(modelStubWithoutModule));","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    public void execute_duplicateExam_throwsCommandException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        ModelStubWithModuleWithExam modelStubWithModuleWithExam \u003d new ModelStubWithModuleWithExam();","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"        assertThrows(CommandException.class, AddExamCommand.MESSAGE_DUPLICATE_EXAM, () -\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"                addExamCommandDummy.execute(modelStubWithModuleWithExam));","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"    public void execute_examAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"        ModelStubWithModuleWithoutExam modelStubWithModuleWithoutExam \u003d new ModelStubWithModuleWithoutExam();","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        CommandResult commandResult \u003d addExamCommandDummy.execute(modelStubWithModuleWithoutExam);","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        assertEquals(String.format(AddExamCommand.MESSAGE_SUCCESS, VALID_EXAM),","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        assertTrue(modelStubWithModuleWithoutExam.isExamAdded);","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"    public void equals() {","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        Exam exam1 \u003d new ExamBuilder().withExamDate(DATE_1).build();","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        Exam exam2 \u003d new ExamBuilder().withExamDate(DATE_2).build();","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"        Module module1 \u003d new ModuleBuilder().withTitle(\"mod 1\").build();","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        Module module2 \u003d new ModuleBuilder().withTitle(\"mod 2\").build();","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"        AddExamCommand addExamCommand1 \u003d new AddExamCommand(module1, exam1);","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        AddExamCommand addExamCommand2 \u003d new AddExamCommand(module1, exam2);","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"        AddExamCommand addExamCommand3 \u003d new AddExamCommand(module2, exam1);","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        AddExamCommand addExamCommand4 \u003d new AddExamCommand(module2, exam2);","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        assertTrue(addExamCommand1.equals(addExamCommand1));","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        AddExamCommand addExamCommand1Copy \u003d new AddExamCommand(module1, exam1);","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        assertTrue(addExamCommand1.equals(addExamCommand1Copy));","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"        AddExamCommand addExamCommand4Copy \u003d new AddExamCommand(module2, exam2);","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        assertTrue(addExamCommand4.equals(addExamCommand4Copy));","lastModifiedDate":"2021-04-06"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"        assertFalse(addExamCommand1.equals(1));","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"        assertFalse(addExamCommand1.equals(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"        // same module, different exams -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"        assertFalse(addExamCommand1.equals(addExamCommand2));","lastModifiedDate":"2021-04-06"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"        assertFalse(addExamCommand3.equals(addExamCommand4));","lastModifiedDate":"2021-04-06"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"        // different module, same exams -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"        assertFalse(addExamCommand1.equals(addExamCommand3));","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"        assertFalse(addExamCommand2.equals(addExamCommand4));","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithoutModule extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"            return false;","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithModuleWithExam extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":"            return true;","lastModifiedDate":"2021-04-06"},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"        public boolean hasExam(Module module, Exam exam) {","lastModifiedDate":"2021-04-06"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"            return true;","lastModifiedDate":"2021-04-06"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithModuleWithoutExam extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"        private boolean isExamAdded \u003d false;","lastModifiedDate":"2021-04-06"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":"            return true;","lastModifiedDate":"2021-04-06"},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":"        public boolean hasExam(Module module, Exam exam) {","lastModifiedDate":"2021-04-06"},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":"            return false;","lastModifiedDate":"2021-04-06"},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"        public void addExam(Module module, Exam exam) {","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":"            isExamAdded \u003d true;","lastModifiedDate":"2021-04-06"},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"banchiang":132}},{"path":"src/test/java/seedu/address/logic/commands/addcommand/AddModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_2;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"public class AddModuleCommandTest {","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    private AddModuleCommand addModuleCommandDummy \u003d new AddModuleCommand(MOD_1);","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddModuleCommand(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    public void execute_duplicateModule_throwsCommandException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        ModelStubWithModule modelStubWithModule \u003d new ModelStubWithModule();","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"                AddModuleCommand.MESSAGE_DUPLICATE_MODULE, () -\u003e addModuleCommandDummy.execute(modelStubWithModule));","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    public void execute_moduleAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        ModelStubWithoutModule modelStubWithoutModule \u003d new ModelStubWithoutModule();","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        CommandResult commandResult \u003d addModuleCommandDummy.execute(modelStubWithoutModule);","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        assertEquals(String.format(AddModuleCommand.MESSAGE_SUCCESS, MOD_1),","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        assertTrue(modelStubWithoutModule.isModuleAdded);","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    public void equals() {","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"        AddModuleCommand addModuleCommand1 \u003d new AddModuleCommand(MOD_1);","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        AddModuleCommand addModuleCommand2 \u003d new AddModuleCommand(MOD_2);","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        //same object -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        assertTrue(addModuleCommand1.equals(addModuleCommand1));","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"        //same values -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"        AddModuleCommand addModuleCommand1Copy \u003d new AddModuleCommand(MOD_1);","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"        assertTrue(addModuleCommand1.equals(addModuleCommand1Copy));","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        assertFalse(addModuleCommand1.equals(1));","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        assertFalse(addModuleCommand1.equals(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        assertFalse(addModuleCommand1.equals(addModuleCommand2));","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithModule extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"            return true;","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"    private class ModelStubWithoutModule extends ModelStub {","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"        private boolean isModuleAdded \u003d false;","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"            return false;","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"            isModuleAdded \u003d true;","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"banchiang":85}},{"path":"src/test/java/seedu/address/logic/commands/addcommand/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.commands.addcommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").withBirthday(\"12/12/1999\").build();","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").withBirthday(\"12/12/1999\").build();","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"        public Path getRemindMeFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":"        public void setRemindMeFilePath(Path remindMeFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"Hzxin"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":152,"author":{"gitId":"markuz5116"},"content":"        public boolean hasModule(Module module) {","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-10"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":"        public boolean hasModule(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"        public void addModule(Module module) {","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-10"},{"lineNumber":164,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"maikongeh"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"maikongeh"},"content":"        public void deleteModule(Module module) {","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"maikongeh"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"maikongeh"},"content":"        @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":172,"author":{"gitId":"maikongeh"},"content":"        public void deleteExam(Module module, Exam exam) {","lastModifiedDate":"2021-04-04"},{"lineNumber":173,"author":{"gitId":"maikongeh"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-04"},{"lineNumber":174,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":175,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":176,"author":{"gitId":"maikongeh"},"content":"        @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":177,"author":{"gitId":"maikongeh"},"content":"        public void deleteAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-04-04"},{"lineNumber":178,"author":{"gitId":"maikongeh"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-04"},{"lineNumber":179,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":180,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":181,"author":{"gitId":"maikongeh"},"content":"        @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":182,"author":{"gitId":"maikongeh"},"content":"        public void deleteGeneralEvent(GeneralEvent generalEvent) {","lastModifiedDate":"2021-04-04"},{"lineNumber":183,"author":{"gitId":"maikongeh"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-04"},{"lineNumber":184,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":185,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":186,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":187,"author":{"gitId":"jellymias"},"content":"        public Module getModule(Module module) {","lastModifiedDate":"2021-03-22"},{"lineNumber":188,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-03-22"},{"lineNumber":189,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":190,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"jellymias"},"content":"        public Module getModule(int index) {","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-03-23"},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":196,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"jellymias"},"content":"        public void setModule(Module target, Module editedMod) {","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":202,"author":{"gitId":"jellymias"},"content":"        public boolean hasAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":203,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":204,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":205,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":206,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":207,"author":{"gitId":"jellymias"},"content":"        public boolean hasAssignment(Module module, int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":208,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":209,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":210,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":211,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":212,"author":{"gitId":"jellymias"},"content":"        public void editAssignment(Module module, int index, Description edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":213,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":214,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":215,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":216,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":217,"author":{"gitId":"jellymias"},"content":"        public void editAssignment(Module module, int index, LocalDateTime edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":218,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":219,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":220,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":221,"author":{"gitId":"Hzxin"},"content":"        @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":222,"author":{"gitId":"Hzxin"},"content":"        public void toggleDoneStatusForAssignment(Module module, int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":223,"author":{"gitId":"Hzxin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":224,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":225,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":226,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":227,"author":{"gitId":"jellymias"},"content":"        public void addAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-03-11"},{"lineNumber":228,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":229,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":230,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":231,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":232,"author":{"gitId":"jellymias"},"content":"        public boolean hasExam(Module module, Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":233,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":234,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":235,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":236,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":237,"author":{"gitId":"jellymias"},"content":"        public boolean hasExam(Module module, int index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":238,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":239,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":240,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":241,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":242,"author":{"gitId":"jellymias"},"content":"        public void addExam(Module module, Exam exam) {","lastModifiedDate":"2021-03-11"},{"lineNumber":243,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-09"},{"lineNumber":244,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":245,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":246,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":247,"author":{"gitId":"jellymias"},"content":"        public void editExam(Module module, int index, LocalDateTime edit) {","lastModifiedDate":"2021-03-22"},{"lineNumber":248,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":249,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":250,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":251,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":252,"author":{"gitId":"markuz5116"},"content":"        public void setRemindMe(RemindMe remindMe) {","lastModifiedDate":"2021-03-18"},{"lineNumber":253,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":254,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":255,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":256,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":257,"author":{"gitId":"markuz5116"},"content":"        public void resetModules() {","lastModifiedDate":"2021-03-18"},{"lineNumber":258,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":259,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":260,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":261,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":262,"author":{"gitId":"markuz5116"},"content":"        public void resetPersons() {","lastModifiedDate":"2021-03-18"},{"lineNumber":263,"author":{"gitId":"Hzxin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":264,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":265,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":266,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":267,"author":{"gitId":"markuz5116"},"content":"        public void resetEvents() {","lastModifiedDate":"2021-03-19"},{"lineNumber":268,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-19"},{"lineNumber":269,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":270,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":271,"author":{"gitId":"Hzxin"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":272,"author":{"gitId":"jellymias"},"content":"        public void editModule(int index, Title title) {","lastModifiedDate":"2021-03-16"},{"lineNumber":273,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":274,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":275,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":276,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":277,"author":{"gitId":"markuz5116"},"content":"        public ReadOnlyRemindMe getRemindMe() {","lastModifiedDate":"2021-03-18"},{"lineNumber":278,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":279,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":280,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":281,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":282,"author":{"gitId":"jellymias"},"content":"        public boolean hasEvent(GeneralEvent event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":283,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-19"},{"lineNumber":284,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":285,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":286,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":287,"author":{"gitId":"jellymias"},"content":"        public boolean hasEvent(int index) {","lastModifiedDate":"2021-03-20"},{"lineNumber":288,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-20"},{"lineNumber":289,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":290,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":291,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":292,"author":{"gitId":"jellymias"},"content":"        public void addEvent(GeneralEvent event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":293,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-19"},{"lineNumber":294,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":295,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":296,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":297,"author":{"gitId":"jellymias"},"content":"        public void editEvent(int index, Description edit) {","lastModifiedDate":"2021-03-20"},{"lineNumber":298,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-20"},{"lineNumber":299,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":300,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":301,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":302,"author":{"gitId":"jellymias"},"content":"        public void editEvent(int index, LocalDateTime edit) {","lastModifiedDate":"2021-03-20"},{"lineNumber":303,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-20"},{"lineNumber":304,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":305,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":306,"author":{"gitId":"maikongeh"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":307,"author":{"gitId":"maikongeh"},"content":"        public void deleteEvent(GeneralEvent event) {","lastModifiedDate":"2021-03-22"},{"lineNumber":308,"author":{"gitId":"maikongeh"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-03-22"},{"lineNumber":309,"author":{"gitId":"maikongeh"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":310,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":311,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":312,"author":{"gitId":"jellymias"},"content":"        public GeneralEvent getEvent(int index) {","lastModifiedDate":"2021-03-23"},{"lineNumber":313,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-03-23"},{"lineNumber":314,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":315,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":316,"author":{"gitId":"jellymias"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":317,"author":{"gitId":"jellymias"},"content":"        public void setEvent(GeneralEvent target, GeneralEvent editedEvent) {","lastModifiedDate":"2021-04-01"},{"lineNumber":318,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-01"},{"lineNumber":319,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":320,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":321,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":322,"author":{"gitId":"markuz5116"},"content":"        public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":323,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":324,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":325,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":326,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":327,"author":{"gitId":"markuz5116"},"content":"        public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":328,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":329,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":330,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":331,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":332,"author":{"gitId":"markuz5116"},"content":"        public void updateFilteredEventList(Predicate\u003cGeneralEvent\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":333,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-19"},{"lineNumber":334,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":335,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":336,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":337,"author":{"gitId":"markuz5116"},"content":"        public ObservableList\u003cGeneralEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-03-19"},{"lineNumber":338,"author":{"gitId":"markuz5116"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-19"},{"lineNumber":339,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":343,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"markuz5116":78,"banchiang":2,"jellymias":97,"Hzxin":14,"maikongeh":25,"-":164}},{"path":"src/test/java/seedu/address/logic/commands/deletecommand/DeleteAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ASSIGNMENT;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MODULE;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ASSIGNMENT;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalModuleTitles.TITLE_CS1101;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalModuleTitles.TITLE_CS2101;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMeWithFilledModules;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":" * {@code DeleteAssignmentCommand}.","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"public class DeleteAssignmentCommandTest {","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMeWithFilledModules(), new UserPrefs());","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"    public void execute_validModuleTitleValidAssignmentIndex_success() {","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        Module moduleTarget \u003d model.getFilteredModuleList()","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"                .get(INDEX_FIRST_MODULE.getZeroBased());","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        Assignment assignmentToDelete \u003d moduleTarget.getAssignment(0);","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        Title title \u003d moduleTarget.getTitle();","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        DeleteAssignmentCommand deleteAssignmentCommand \u003d new DeleteAssignmentCommand(title, INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        String expectedMessage \u003d String.format(DeleteAssignmentCommand.MESSAGE_DELETE_ASSIGNMENT_SUCCESS,","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"                assignmentToDelete);","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalRemindMeWithFilledModules(), new UserPrefs());","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        expectedModel.deleteAssignment(moduleTarget, assignmentToDelete);","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        assertCommandSuccess(deleteAssignmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"    public void execute_validModuleTitleInvalidAssignmentIndex_failure() {","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"        Module moduleTarget \u003d model.getFilteredModuleList()","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"                .get(INDEX_FIRST_MODULE.getZeroBased());","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"        Title title \u003d moduleTarget.getTitle();","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(moduleTarget.getAssignments().size() + 1);","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"        DeleteAssignmentCommand deleteAssignmentCommand \u003d new DeleteAssignmentCommand(title, outOfBoundIndex);","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"        assertCommandFailure(deleteAssignmentCommand, model, Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"    public void execute_invalidModuleTitleValidAssignmentIndex_failure() {","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"        Title invalidTitle \u003d new Title(\"CS999999\");","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"        DeleteAssignmentCommand deleteAssignmentCommand \u003d new DeleteAssignmentCommand(invalidTitle, validIndex);","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"        assertCommandFailure(deleteAssignmentCommand, model, Messages.MESSAGE_INVALID_MODULE_TITLE);","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"    public void equals() {","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"        DeleteAssignmentCommand deleteAssignmentFirstCommand \u003d new DeleteAssignmentCommand(TITLE_CS1101,","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"                INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"        DeleteAssignmentCommand deleteAssignmentSecondCommand \u003d new DeleteAssignmentCommand(TITLE_CS2101,","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"                INDEX_SECOND_ASSIGNMENT);","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"        assertTrue(deleteAssignmentFirstCommand.equals(deleteAssignmentFirstCommand));","lastModifiedDate":"2021-04-04"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"        DeleteAssignmentCommand deleteAssignmentFirstCommandCopy \u003d new DeleteAssignmentCommand(TITLE_CS1101,","lastModifiedDate":"2021-04-04"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"                INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-04-04"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"        // same values -\u003e return true","lastModifiedDate":"2021-04-04"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"        assertTrue(deleteAssignmentFirstCommand.equals(deleteAssignmentFirstCommandCopy));","lastModifiedDate":"2021-04-04"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2021-04-04"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"        assertFalse(deleteAssignmentFirstCommand.equals(deleteAssignmentSecondCommand));","lastModifiedDate":"2021-04-04"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"maikongeh":94}},{"path":"src/test/java/seedu/address/logic/commands/deletecommand/DeleteExamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EXAM;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MODULE;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EXAM;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MODULE;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalModuleTitles.TITLE_CS1101;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalModuleTitles.TITLE_CS2101;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMeWithFilledModules;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":" * {@code DeleteExamCommand}.","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"public class DeleteExamCommandTest {","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMeWithFilledModules(), new UserPrefs());","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"    public void execute_validModuleTitleValidExamIndex_success() {","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"        Module moduleTarget \u003d model.getFilteredModuleList()","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"                .get(INDEX_SECOND_MODULE.getZeroBased());","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        Exam examToDelete \u003d moduleTarget.getExam(0);","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        Title title \u003d moduleTarget.getTitle();","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        DeleteExamCommand deleteExamCommand \u003d new DeleteExamCommand(title, INDEX_FIRST_EXAM);","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        String expectedMessage \u003d String.format(DeleteExamCommand.MESSAGE_DELETE_EXAM_SUCCESS,","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"                examToDelete);","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalRemindMeWithFilledModules(), new UserPrefs());","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        expectedModel.deleteExam(moduleTarget, examToDelete);","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"        assertCommandSuccess(deleteExamCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"    public void execute_validModuleTitleInvalidExamIndex_failure() {","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        Module moduleTarget \u003d model.getFilteredModuleList()","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"                .get(INDEX_FIRST_MODULE.getZeroBased());","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"        Title title \u003d moduleTarget.getTitle();","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(moduleTarget.getExams().size() + 1);","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"        DeleteExamCommand deleteExamCommand \u003d new DeleteExamCommand(title, outOfBoundIndex);","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"        assertCommandFailure(deleteExamCommand, model, DeleteExamCommand.MESSAGE_EMPTY_EXAMLIST);","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"    public void execute_invalidModuleTitleValidExamIndex_failure() {","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        Title invalidTitle \u003d new Title(\"CS999999\");","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"        Index validIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"        DeleteExamCommand deleteExamCommand \u003d new DeleteExamCommand(invalidTitle, validIndex);","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"        assertCommandFailure(deleteExamCommand, model, Messages.MESSAGE_INVALID_MODULE_TITLE);","lastModifiedDate":"2021-04-04"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"    public void equals() {","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"        DeleteExamCommand deleteExamFirstCommand \u003d new DeleteExamCommand(TITLE_CS1101,","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"                INDEX_FIRST_EXAM);","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"        DeleteExamCommand deleteExamSecondCommand \u003d new DeleteExamCommand(TITLE_CS2101,","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"                INDEX_SECOND_EXAM);","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"maikongeh"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-04-04"},{"lineNumber":81,"author":{"gitId":"maikongeh"},"content":"        assertTrue(deleteExamFirstCommand.equals(deleteExamFirstCommand));","lastModifiedDate":"2021-04-04"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"        DeleteExamCommand deleteExamFirstCommandCopy \u003d new DeleteExamCommand(TITLE_CS1101,","lastModifiedDate":"2021-04-04"},{"lineNumber":84,"author":{"gitId":"maikongeh"},"content":"                INDEX_FIRST_EXAM);","lastModifiedDate":"2021-04-04"},{"lineNumber":85,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":86,"author":{"gitId":"maikongeh"},"content":"        // same values -\u003e return true","lastModifiedDate":"2021-04-04"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"        assertTrue(deleteExamFirstCommand.equals(deleteExamFirstCommandCopy));","lastModifiedDate":"2021-04-04"},{"lineNumber":88,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"        // different values -\u003e return false","lastModifiedDate":"2021-04-04"},{"lineNumber":90,"author":{"gitId":"maikongeh"},"content":"        assertFalse(deleteExamFirstCommand.equals(deleteExamSecondCommand));","lastModifiedDate":"2021-04-04"},{"lineNumber":91,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":92,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":93,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":94,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"maikongeh":94}},{"path":"src/test/java/seedu/address/logic/commands/deletecommand/DeleteGeneralEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":" * {@code DeleteGeneralEventCommand}.","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"public class DeleteGeneralEventCommandTest {","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    public void execute_validEventIndex_success() {","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"        GeneralEvent eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"        DeleteGeneralEventCommand deleteGeneralEventCommand \u003d new DeleteGeneralEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRemindMe(), new UserPrefs());","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        String expectedMessage \u003d String.format(DeleteGeneralEventCommand.MESSAGE_GENERAL_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        assertCommandSuccess(deleteGeneralEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"    public void execute_invalidEventIndex_throwsCommandException() {","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        DeleteGeneralEventCommand deleteGeneralEventCommand \u003d new DeleteGeneralEventCommand(outOfBoundIndex);","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"        assertCommandFailure(deleteGeneralEventCommand, model, Messages.MESSAGE_INVALID_GENERAL_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"    public void equals() {","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"        DeleteGeneralEventCommand deleteFirstCommand \u003d new DeleteGeneralEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"        DeleteGeneralEventCommand deleteSecondCommand \u003d new DeleteGeneralEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"        DeleteGeneralEventCommand deleteFirstCommandCopy \u003d new DeleteGeneralEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"maikongeh":69}},{"path":"src/test/java/seedu/address/logic/commands/deletecommand/DeleteModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MODULE;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalModuleTitles.TITLE_CS1101;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalModuleTitles.TITLE_CS2101;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"/**","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":" * {@code DeleteModuleCommand}.","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":" */","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"public class DeleteModuleCommandTest {","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    private final Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"    public void execute_validModuleTitle_success() {","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"        Module moduleToDelete \u003d model.getFilteredModuleList()","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"                .get(INDEX_FIRST_MODULE.getZeroBased());","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        Title title \u003d moduleToDelete.getTitle();","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"        DeleteModuleCommand deleteCommand \u003d new DeleteModuleCommand(title);","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        String expectedMessage \u003d String.format(DeleteModuleCommand.MESSAGE_DELETE_MODULE_SUCCESS, moduleToDelete);","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRemindMe(), new UserPrefs());","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        expectedModel.deleteModule(moduleToDelete);","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"    public void execute_invalidModuleTitle_throwsCommandException() {","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        Title invalidTitle \u003d new Title(\"INVALID DELETE TITLE\");","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"        DeleteModuleCommand deleteModuleCommand \u003d new DeleteModuleCommand(invalidTitle);","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"maikongeh"},"content":"        assertCommandFailure(deleteModuleCommand, model, Messages.MESSAGE_INVALID_MODULE_TITLE);","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"maikongeh"},"content":"    public void equals() {","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"        DeleteModuleCommand deleteModuleFirstCommand \u003d new DeleteModuleCommand(TITLE_CS1101);","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"maikongeh"},"content":"        DeleteModuleCommand deleteModuleSecondCommand \u003d new DeleteModuleCommand(TITLE_CS2101);","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"maikongeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"        assertTrue(deleteModuleFirstCommand.equals(deleteModuleFirstCommand));","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"maikongeh"},"content":"        // same title -\u003e returns true","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"maikongeh"},"content":"        DeleteModuleCommand deleteModuleFirstCommandCopy \u003d new DeleteModuleCommand(TITLE_CS1101);","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        assertTrue(deleteModuleFirstCommand.equals(deleteModuleFirstCommandCopy));","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"        assertFalse(deleteModuleFirstCommand.equals(1));","lastModifiedDate":"2021-04-04"},{"lineNumber":70,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":71,"author":{"gitId":"maikongeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-04"},{"lineNumber":72,"author":{"gitId":"maikongeh"},"content":"        assertFalse(deleteModuleFirstCommand.equals(null));","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"maikongeh"},"content":"        // different module title -\u003e returns false","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"        assertFalse(deleteModuleFirstCommand.equals(deleteModuleSecondCommand));","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"markuz5116":2,"maikongeh":77}},{"path":"src/test/java/seedu/address/logic/commands/deletecommand/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.logic.commands.deletecommand;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":" * {@code DeletePersonCommand}.","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"        Person personToDelete \u003d model.getFilteredPersonList()","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        Model expectedModel \u003d new ModelManager(model.getRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRemindMe().getPersonList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"maikongeh"},"content":"        DeletePersonCommand deleteCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"maikongeh"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"maikongeh"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Hzxin":5,"maikongeh":14,"-":91}},{"path":"src/test/java/seedu/address/logic/commands/editcommand/EditAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_2;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ASSIGNMENT;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MODULE;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_ASSIGNMENT;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_ASSIGNMENT;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMeWithFilledModules;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.clearcommand.ClearModulesCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"import seedu.address.testutil.typicalmodules.ModuleBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"public class EditAssignmentCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMeWithFilledModules(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    public void execute_descriptionFieldSpecified_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        Description edit \u003d new Description(\"change something\");","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand editAssignmentCommand \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"                                                                                edit, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        Module editedMod \u003d new ModuleBuilder(modelCopy.getFilteredModuleList().get(0)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        editedMod.editAssignment(0, edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        Assignment editedAssignment \u003d editedMod.getAssignment(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditAssignmentCommand.MESSAGE_SUCCESS, editedAssignment);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalRemindMeWithFilledModules(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        expectedModel.editAssignment(target, 1, edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        assertCommandSuccess(editAssignmentCommand, modelCopy, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"    public void execute_dateFieldSpecified_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_2, Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand editAssignmentCommand \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"                                                                                null, edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        Module editedMod \u003d new ModuleBuilder(modelCopy.getFilteredModuleList().get(0)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        editedMod.editAssignment(0, edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"        Assignment editedAssignment \u003d editedMod.getAssignment(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditAssignmentCommand.MESSAGE_SUCCESS, editedAssignment);","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalRemindMeWithFilledModules(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"        expectedModel.editAssignment(target, 1, edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"        assertCommandSuccess(editAssignmentCommand, modelCopy, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"    public void execute_duplicateAssignment_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"        Description existingDescription \u003d modelCopy.getFilteredModuleList()","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"                                                .get(0).getAssignment(1).getDescription();","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand editAssignmentCommand \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"                                                                                existingDescription, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditAssignmentCommand.MESSAGE_DUPLICATE_ASSIGNMENT);","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editAssignmentCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"    public void execute_invalidModuleTitle_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 3\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"        Description edit \u003d new Description(\"change\");","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand editAssignmentCommand \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"                                                                                edit, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditAssignmentCommand.MESSAGE_NO_MODULE);","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editAssignmentCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"    public void execute_invalidAssignmentIndex_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"        Description edit \u003d new Description(\"change\");","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand editAssignmentCommand \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_THIRD_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"                                                                                edit, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditAssignmentCommand.MESSAGE_NO_ASSIGNMENT);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editAssignmentCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"    public void execute_noDescriptionChange_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"        Description edit \u003d modelCopy.getFilteredModuleList().get(0).getAssignment(0).getDescription();","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand editAssignmentCommand \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"                                                                                edit, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditAssignmentCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editAssignmentCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"    public void execute_noDateChange_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d modelCopy.getFilteredModuleList().get(0).getAssignment(0).getDateTime();","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand editAssignmentCommand \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"                                                                        null, edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditAssignmentCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editAssignmentCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":"    public void execute_allFieldsSpecified_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"        Description descriptionEdit \u003d new Description(\"change something\");","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_2, Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand editAssignmentCommand \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"                                                                                descriptionEdit, dateEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditAssignmentCommand.MESSAGE_TWO_CHANGES);","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editAssignmentCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"jellymias"},"content":"    public void execute_noFieldsSpecified_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand editAssignmentCommand \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"                                                                        null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditAssignmentCommand.MESSAGE_NO_VALID_CHANGES);","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editAssignmentCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"jellymias"},"content":"    public void equals() {","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"jellymias"},"content":"        Description descriptionEdit \u003d new Description(\"change\");","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_2, Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"jellymias"},"content":"        final EditAssignmentCommand standardCommandDescription \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"jellymias"},"content":"                                                                                descriptionEdit, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"jellymias"},"content":"        final EditAssignmentCommand standardCommandDate \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"jellymias"},"content":"                                                                        null, dateEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"jellymias"},"content":"        // same values for description edit -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand commandWithSameValuesDesc \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_MODULE.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"jellymias"},"content":"                                                                                descriptionEdit, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommandDescription.equals(commandWithSameValuesDesc));","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"jellymias"},"content":"        // same values for date edit -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand commandWithSameValuesDate \u003d new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_MODULE.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"jellymias"},"content":"                                                                                null, dateEdit);","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommandDate.equals(commandWithSameValuesDate));","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"jellymias"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommandDescription.equals(standardCommandDescription));","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommandDate.equals(standardCommandDate));","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"jellymias"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDate.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"jellymias"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(new ClearModulesCommand()));","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDate.equals(new ClearModulesCommand()));","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"jellymias"},"content":"        // different targets -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"jellymias"},"content":"        Module diffTarget \u003d new ModuleBuilder().withTitle(\"DIFF MOD\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(new EditAssignmentCommand(diffTarget,","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"jellymias"},"content":"                                                                                descriptionEdit, null)));","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDate.equals(new EditAssignmentCommand(diffTarget,","lastModifiedDate":"2021-03-30"},{"lineNumber":223,"author":{"gitId":"jellymias"},"content":"                                                                            INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"jellymias"},"content":"                                                                            null, dateEdit)));","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"jellymias"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_SECOND_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"jellymias"},"content":"                                                                                descriptionEdit, null)));","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDate.equals(new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"jellymias"},"content":"                                                                            INDEX_SECOND_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"jellymias"},"content":"                                                                    null, dateEdit)));","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"jellymias"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"jellymias"},"content":"        Description diffDescription \u003d new Description(\"different\");","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"jellymias"},"content":"                                                                                diffDescription, null)));","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"jellymias"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"jellymias"},"content":"        LocalDateTime diffDate \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_1, Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(new EditAssignmentCommand(target,","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"jellymias"},"content":"                                                                                INDEX_FIRST_ASSIGNMENT.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"jellymias"},"content":"                                                                                null, diffDate)));","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jellymias":246}},{"path":"src/test/java/seedu/address/logic/commands/editcommand/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DATE_2;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DESCRIPTION_2;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.GeneralEventBuilder.DEFAULT_DATE;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.GeneralEventBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.clearcommand.ClearModulesCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"import seedu.address.testutil.GeneralEventBuilder;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"public class EditEventCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    public void execute_descriptionFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        Description edit \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(), edit, null);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        GeneralEvent editedEvent \u003d new GeneralEventBuilder().withDescription(DEFAULT_DESCRIPTION)","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"                                        .withDate(LocalDateTime.parse(VALID_GENERAL_EVENT_DATE_1,","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"                                                LocalDateTimeUtil.DATETIME_FORMATTER))","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"                                        .build();","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_SUCCESS, editedEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"                new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"    public void execute_dateFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d DEFAULT_DATE;","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(), null, edit);","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        GeneralEvent editedEvent \u003d new GeneralEventBuilder().withDescription(VALID_GENERAL_EVENT_DESCRIPTION_1)","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"                                        .withDate(DEFAULT_DATE)","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"                                        .build();","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_SUCCESS, editedEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"                new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"    public void execute_descriptionDuplicateGeneralEventUnfilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"        Description edit \u003d new Description(VALID_GENERAL_EVENT_DESCRIPTION_1);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_SECOND_EVENT.getOneBased(), edit, null);","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editEventCommand, model, expectedMessage);","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"    public void execute_dateDuplicateGeneralEventUnfilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d LocalDateTime.parse(VALID_GENERAL_EVENT_DATE_2, LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(), null, edit);","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editEventCommand, model, expectedMessage);","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"    public void execute_descriptionDuplicateGeneralEventFilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"        Description edit \u003d new Description(VALID_GENERAL_EVENT_DESCRIPTION_1);","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_SECOND_EVENT.getOneBased(), edit, null);","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editEventCommand, model, expectedMessage);","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"    public void execute_dateDuplicateGeneralEventFilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        showEventAtIndex(model, INDEX_SECOND_EVENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d LocalDateTime.parse(VALID_GENERAL_EVENT_DATE_2, LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(), null, edit);","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editEventCommand, model, expectedMessage);","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"    public void execute_descriptionInvalidGeneralEventIndexUnfilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"        Description edit \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex.getOneBased(), edit, null);","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_NO_EVENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"    public void execute_dateInvalidGeneralEventIndexUnfilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d DEFAULT_DATE;","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex.getOneBased(), null, edit);","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_NO_EVENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"        Description descriptionEdit \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d DEFAULT_DATE;","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(),","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"                                                                    descriptionEdit, dateEdit);","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_EDIT_BOTH_PARTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"    public void execute_noFieldsSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(), null, null);","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_NULL_EDIT);","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"    public void equals() {","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"        Description descriptionEdit \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d DEFAULT_DATE;","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"jellymias"},"content":"        final EditEventCommand standardCommandDescription \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(),","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":"                                                                                    descriptionEdit, null);","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"        final EditEventCommand standardCommandDate \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(),","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":"                                                                    null, dateEdit);","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"        Description descriptionCopy \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateCopy \u003d DEFAULT_DATE;","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"        EditEventCommand commandWithSameValuesDescription \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(),","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":"                                                                                    descriptionCopy, null);","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"        EditEventCommand commandWithSameValuesDate \u003d new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(),","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"jellymias"},"content":"                                                                            null, dateCopy);","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommandDescription.equals(commandWithSameValuesDescription));","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommandDate.equals(commandWithSameValuesDate));","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommandDescription.equals(standardCommandDescription));","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommandDate.equals(standardCommandDate));","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"jellymias"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(null));","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDate.equals(null));","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(new ClearModulesCommand()));","lastModifiedDate":"2021-04-01"},{"lineNumber":177,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDate.equals(new ClearModulesCommand()));","lastModifiedDate":"2021-04-01"},{"lineNumber":178,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"jellymias"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(new EditEventCommand(INDEX_SECOND_EVENT.getOneBased(),","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"jellymias"},"content":"                                                                            descriptionEdit, null)));","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDate.equals(new EditEventCommand(INDEX_SECOND_EVENT.getOneBased(),","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"jellymias"},"content":"                                                            null, dateEdit)));","lastModifiedDate":"2021-04-01"},{"lineNumber":184,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"jellymias"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":186,"author":{"gitId":"jellymias"},"content":"        Description diffDescription \u003d new Description(VALID_GENERAL_EVENT_DESCRIPTION_2);","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"jellymias"},"content":"        LocalDateTime diffDate \u003d LocalDateTime.parse(VALID_GENERAL_EVENT_DATE_2, LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDescription.equals(new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(),","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"jellymias"},"content":"                                                                            diffDescription, null)));","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommandDate.equals(new EditEventCommand(INDEX_FIRST_EVENT.getOneBased(),","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"jellymias"},"content":"                                                            null, diffDate)));","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"jellymias":193}},{"path":"src/test/java/seedu/address/logic/commands/editcommand/EditExamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_2;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EXAM;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EXAM;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMeWithFilledModules;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.clearcommand.ClearModulesCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import seedu.address.testutil.typicalmodules.ModuleBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"public class EditExamCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMeWithFilledModules(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    private LocalDateTime newDate \u003d LocalDateTime.parse(\"30/03/2021 1800\", Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    public void execute_descriptionFieldSpecified_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 2\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d newDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        EditExamCommand editExamCommand \u003d new EditExamCommand(target, INDEX_FIRST_EXAM.getOneBased(), edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        Module editedMod \u003d new ModuleBuilder(modelCopy.getFilteredModuleList().get(1)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        editedMod.editExam(0, edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        Exam editedExam \u003d editedMod.getExam(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditExamCommand.MESSAGE_SUCCESS, editedExam);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalRemindMeWithFilledModules(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        expectedModel.editExam(target, 1, edit);","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        assertCommandSuccess(editExamCommand, modelCopy, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"    public void execute_duplicateExam_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 2\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        LocalDateTime existingDate \u003d modelCopy.getFilteredModuleList()","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"                                                    .get(1).getExam(1).getDateTime();","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        EditExamCommand editExamCommand \u003d new EditExamCommand(target, INDEX_FIRST_EXAM.getOneBased(), existingDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditExamCommand.MESSAGE_DUPLICATE_EXAM);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editExamCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"    public void execute_invalidModuleTitle_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 3\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d newDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"        EditExamCommand editExamCommand \u003d new EditExamCommand(target, INDEX_FIRST_EXAM.getOneBased(), edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditExamCommand.MESSAGE_NO_MODULE);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editExamCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"    public void execute_invalidExamIndex_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 1\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d newDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        EditExamCommand editExamCommand \u003d new EditExamCommand(target, INDEX_FIRST_EXAM.getOneBased(), edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditExamCommand.MESSAGE_NO_EXAM);","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editExamCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"    public void execute_noDateChange_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 2\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d modelCopy.getFilteredModuleList().get(1).getExam(0).getDateTime();","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"        EditExamCommand editExamCommand \u003d new EditExamCommand(target, INDEX_FIRST_EXAM.getOneBased(), edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditExamCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editExamCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"    public void execute_noFieldsSpecified_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 2\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"        EditExamCommand editExamCommand \u003d new EditExamCommand(target, INDEX_FIRST_EXAM.getOneBased(), null);","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditExamCommand.MESSAGE_NO_VALID_CHANGES);","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editExamCommand, modelCopy, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"    public void equals() {","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new ModuleBuilder().withTitle(\"MOD 2\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d newDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"        final EditExamCommand standardCommand \u003d new EditExamCommand(target, INDEX_FIRST_EXAM.getOneBased(), edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"        Module copy \u003d new ModuleBuilder().withTitle(\"MOD 2\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"        EditExamCommand commandWithSameValues \u003d new EditExamCommand(copy, INDEX_FIRST_EXAM.getOneBased(), newDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommand.equals(new ClearModulesCommand()));","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"        // different targets -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"        Module diffTarget \u003d new ModuleBuilder().withTitle(\"DIFF MOD\").emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommand.equals(new EditExamCommand(diffTarget, INDEX_SECOND_EXAM.getOneBased(), edit)));","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommand.equals(new EditExamCommand(target, INDEX_SECOND_EXAM.getOneBased(), edit)));","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"        LocalDateTime diffDate \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_2, Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommand.equals(new EditExamCommand(target, INDEX_FIRST_EXAM.getOneBased(), diffDate)));","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jellymias":143,"Hzxin":1}},{"path":"src/test/java/seedu/address/logic/commands/editcommand/EditModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showModuleAtIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MODULE;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MODULE;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_MODULE;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.typicalmodules.ModuleBuilder.DEFAULT_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.clearcommand.ClearModulesCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"import seedu.address.testutil.typicalmodules.ModuleBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"public class EditModuleCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        Module editedMod \u003d new ModuleBuilder().build();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        Title edit \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(INDEX_FIRST_MODULE.getOneBased(), edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        String expectedMessage \u003d String.format(EditModuleCommand.MESSAGE_SUCCESS, edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"                new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        expectedModel.setModule(model.getFilteredModuleList().get(0), editedMod);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        assertCommandSuccess(editModuleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    public void execute_duplicateModuleUnfilteredList_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        Title testTitle \u003d new Title(\"CS Test\");","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        Module testModule \u003d new Module(testTitle);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        modelCopy.addModule(testModule);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        Module moduleInList \u003d modelCopy.getFilteredModuleList().get(INDEX_SECOND_MODULE.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(INDEX_FIRST_MODULE.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"                                                                    moduleInList.getTitle());","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editModuleCommand, modelCopy, EditModuleCommand.MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"    public void execute_duplicateModuleFilteredList_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        Title testTitle \u003d new Title(\"CS Test\");","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        Module testModule \u003d new Module(testTitle);","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"        Model modelCopy \u003d new ModelManager(new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        modelCopy.addModule(testModule);","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"        showModuleAtIndex(modelCopy, INDEX_FIRST_MODULE);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"        Module moduleInList \u003d modelCopy.getRemindMe().getModuleList().get(INDEX_SECOND_MODULE.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(INDEX_FIRST_MODULE.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"                                                                    moduleInList.getTitle());","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editModuleCommand, modelCopy, EditModuleCommand.MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"    public void execute_invalidModuleIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredModuleList().size() + 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(outOfBoundIndex.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"                                                                    new Title(\"Title\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editModuleCommand, model, editModuleCommand.MESSAGE_NO_MODULE);","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"    public void execute_invalidModuleIndexFilteredList_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"        showModuleAtIndex(model, INDEX_FIRST_MODULE);","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        Index outOfBoundIndex \u003d INDEX_THIRD_MODULE;","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"        EditModuleCommand editModuleCommand \u003d new EditModuleCommand(outOfBoundIndex.getOneBased(),","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"                                                                    new Title(\"Title\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"        assertCommandFailure(editModuleCommand, model, EditModuleCommand.MESSAGE_NO_MODULE);","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"    public void equals() {","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"        Title edit \u003d new Title(\"CS2101\");","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"        final EditModuleCommand standardCommand \u003d new EditModuleCommand(INDEX_FIRST_MODULE.getOneBased(), edit);","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"        Title editCopy \u003d new Title(\"CS2101\");","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"        EditModuleCommand commandWithSameValues \u003d new EditModuleCommand(INDEX_FIRST_MODULE.getOneBased(), editCopy);","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommand.equals(new ClearModulesCommand()));","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommand.equals(new EditModuleCommand(INDEX_SECOND_MODULE.getOneBased(), edit)));","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"        Title diffEdit \u003d new Title(\"CS2102\");","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"        assertFalse(standardCommand.equals(new EditModuleCommand(INDEX_FIRST_MODULE.getOneBased(), diffEdit)));","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jellymias":125}},{"path":"src/test/java/seedu/address/logic/commands/editcommand/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.clearcommand.ClearModulesCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPersonCommand.","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"                                new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"                                new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"                                new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"                                new RemindMe(model.getRemindMe()), new UserPrefs());","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"        Person personInList \u003d model.getRemindMe().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"markuz5116"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"Hzxin"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getRemindMe().getPersonList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"markuz5116"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"        assertFalse(standardCommand.equals(new ClearModulesCommand()));","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"markuz5116"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2021-03-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"markuz5116"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2021-03-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"markuz5116":35,"jellymias":6,"Hzxin":4,"-":132}},{"path":"src/test/java/seedu/address/logic/commands/editcommand/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.commands.editcommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jellymias":2,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/findcommand/FindEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.findcommand;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_GENERAL_EVENT_1;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_GENERAL_EVENT_2;","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_GENERAL_EVENT_3;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"public class FindEventCommandTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        FindEventCommand findFirstCommand \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        FindEventCommand findSecondCommand \u003d new FindEventCommand(secondPredicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        FindEventCommand findFirstCommandCopy \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"        // different events -\u003e returns false","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"    public void execute_zeroKeywords_noEventsFound() {","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEventList());","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"    public void execute_multipleKeywords_multipleEventsFound() {","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\"party eat\");","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assertEquals(Arrays.asList(VALID_GENERAL_EVENT_1, VALID_GENERAL_EVENT_2,","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"                VALID_GENERAL_EVENT_3), model.getFilteredEventList());","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"    public void execute_throws() {","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\"party eat\");","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e command.execute(null));","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"     * Parses {@code userInput} into a {@code DescriptionContainsKeywordsPredicate}.","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"    private DescriptionContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"        return new DescriptionContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"markuz5116":89}},{"path":"src/test/java/seedu/address/logic/commands/findcommand/FindModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.findcommand;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MODULE_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"public class FindModuleCommandTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    private final Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"                new TitleContainsKeywordsPredicate(List.of(\"second\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        FindModuleCommand findFirstModule \u003d new FindModuleCommand(firstPredicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        FindModuleCommand findSecondModule \u003d new FindModuleCommand(secondPredicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        assertTrue(findFirstModule.equals(findFirstModule));","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        FindModuleCommand findFirstModuleCopy \u003d new FindModuleCommand(firstPredicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        assertTrue(findFirstModule.equals(findFirstModuleCopy));","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        // different types -\u003e return false","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        assertFalse(findFirstModule.equals(1));","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        assertFalse(findSecondModule.equals(null));","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"        // different predicates -\u003e returns false","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"        assertFalse(findFirstModule.equals(findSecondModule));","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"    public void execute_zeroKeywords_noModuleFound() {","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MODULE_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"        FindModuleCommand command \u003d new FindModuleCommand(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        expectedModel.updateFilteredModuleList(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredModuleList());","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"    public void execute_multipleKeywords_multipleModulesFound() {","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MODULE_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\"1 2 mod\");","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        FindModuleCommand command \u003d new FindModuleCommand(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        expectedModel.updateFilteredModuleList(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"        Module mod1 \u003d new Module(new Title(\"MOD 1\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        Module mod2 \u003d new Module(new Title(\"MOD 2\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"        assertEquals(Arrays.asList(mod1, mod2), model.getFilteredModuleList());","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"    public void execute_throws() {","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\"mod\");","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"        FindModuleCommand command \u003d new FindModuleCommand(predicate);","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e command.execute(null));","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"     * Parses {@code userInput} into a {@code TitleContainsKeywordsPredicate}.","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"    private TitleContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-04-02"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"        return new TitleContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"markuz5116":91}},{"path":"src/test/java/seedu/address/logic/commands/findcommand/FindPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.commands.findcommand;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.CARL;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.ELLE;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.FIONA;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"public class FindPersonCommandTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    private Model model \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalRemindMe(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        FindPersonCommand findSecondCommand \u003d new FindPersonCommand(secondPredicate);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"markuz5116":8,"Hzxin":6,"-":69}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    public static void assertParseCommandSuccess(CommandParser commandParser, String userInput, Parser expectedParser) {","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        try {","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"            Command actual \u003d commandParser.parseCommand(userInput);","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"            Command expected \u003d expectedParser.parse(userInput);","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"            assertEquals(actual, expected);","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    public static void assertParseCommandFailure(CommandParser commandParser, String userInput,","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"                                                 String expectedMessage) {","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        try {","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"            commandParser.parseCommand(userInput);","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"jellymias":28,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.deletecommand.DeletePersonCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"import seedu.address.logic.parser.deletecommandparser.DeletePersonCommandParser;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"markuz5116":2,"banchiang":1,"maikongeh":4,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/RemindMeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.CalendarCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddPersonCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.clearcommand.ClearCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.deletecommand.DeletePersonCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindPersonCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"public class RemindMeParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    private final RemindMeParser remindMeParser \u003d new RemindMeParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        AddPersonCommand command \u003d (AddPersonCommand)","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"                remindMeParser.parseCommand(PersonUtil.getaddPersonCommand(person));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        assertTrue(remindMeParser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"            ClearCommand.MESSAGE_USAGE), () -\u003e remindMeParser","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"            .parseCommand(ClearCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) remindMeParser.parseCommand(","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"maikongeh"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(ExitCommand.COMMAND_CHAR) instanceof ExitCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(ExitCommand.COMMAND_CHAR + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) remindMeParser.parseCommand(","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"                FindPersonCommand.COMMAND_WORD + \" n/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"        assertEquals(new FindPersonCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(HelpCommand.COMMAND_CHAR) instanceof HelpCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(HelpCommand.COMMAND_CHAR + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"    public void parseCommand_calender() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(CalendarCommand.COMMAND_WORD) instanceof CalendarCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(CalendarCommand.COMMAND_WORD + \" 3\") instanceof CalendarCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(CalendarCommand.COMMAND_CHAR) instanceof CalendarCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"        assertTrue(remindMeParser.parseCommand(CalendarCommand.COMMAND_CHAR + \" 3\") instanceof CalendarCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"            -\u003e remindMeParser.parseCommand(\"\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"            -\u003e remindMeParser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"markuz5116":11,"banchiang":28,"maikongeh":4,"-":66}},{"path":"src/test/java/seedu/address/logic/parser/addcommandparser/AddAssignmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_ASSIGNMENT;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.addcommand.AddAssignmentCommand;","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"public class AddAssignmentCommandParserTest {","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    private AddAssignmentCommandParser parser \u003d new AddAssignmentCommandParser();","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    public void parse_allFieldPresent_success() {","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        String userInput \u003d \" \" + PREFIX_MODULE + \"MOD 2\" + \" \" + PREFIX_ASSIGNMENT + VALID_ASSIGNMENT_DESCRIPTION_1","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"                + \" \" + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        assertParseSuccess(parser, userInput, new AddAssignmentCommand(MOD_2, VALID_ASSIGNMENT));","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    public void parse_missingValue_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        //empty module","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE + \" \" + PREFIX_ASSIGNMENT + VALID_ASSIGNMENT_DESCRIPTION_1 + \" \"","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"                + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        //empty assignment description","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + \"MOD 2\" + \" \" + PREFIX_ASSIGNMENT + \" \"","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"                + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2, Assignment.DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        //empty deadline","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE + \"MOD 2\" + \" \" + PREFIX_ASSIGNMENT + VALID_ASSIGNMENT_DESCRIPTION_1","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"                + \" \" + PREFIX_DEADLINE;","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput3, Assignment.DATE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        //blank deadline","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        String userInput4 \u003d \" \" + PREFIX_MODULE + \"MOD 2\" + \" \" + PREFIX_ASSIGNMENT + VALID_ASSIGNMENT_DESCRIPTION_1","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"                + \" \" + PREFIX_DEADLINE + \"    \";","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput4, Assignment.DATE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    public void parse_wrongValue_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"        //wrong module values","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE + \"?MOD 2\" + \" \" + PREFIX_ASSIGNMENT","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"                + VALID_ASSIGNMENT_DESCRIPTION_1 + \" \" + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + \"MOD 2/\" + \" \" + PREFIX_ASSIGNMENT","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"                + VALID_ASSIGNMENT_DESCRIPTION_1 + \" \" + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE + \"MOD_2\" + \" \" + PREFIX_ASSIGNMENT","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"                + VALID_ASSIGNMENT_DESCRIPTION_1 + \" \" + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput3, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"        //wrong deadline values","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"        String userInput4 \u003d \" \" + PREFIX_MODULE + \"MOD 2\" + \" \" + PREFIX_ASSIGNMENT + VALID_ASSIGNMENT_DESCRIPTION_1","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"                + \" \" + PREFIX_DEADLINE + \"hi\";","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput4, Assignment.DATE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"        String userInput5 \u003d \" \" + PREFIX_MODULE + \"MOD 2\" + \" \" + PREFIX_ASSIGNMENT + VALID_ASSIGNMENT_DESCRIPTION_1","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"                + \" \" + PREFIX_DEADLINE + \"01/01/1998\";","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput5, Assignment.DATE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        String userInput6 \u003d \" \" + PREFIX_MODULE + \"MOD 2\" + \" \" + PREFIX_ASSIGNMENT + VALID_ASSIGNMENT_DESCRIPTION_1","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"                + \" \" + PREFIX_DEADLINE + \"1200\";","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput6, Assignment.DATE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"    public void parse_missingPrefix_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"        //missing module prefix","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + \"MOD 2\" + \" \" + PREFIX_ASSIGNMENT + VALID_ASSIGNMENT_DESCRIPTION_1 + \" \"","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"                + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1,","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"        //missing assignment prefix","lastModifiedDate":"2021-04-10"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + \"MOD 2\" + \" \" + VALID_ASSIGNMENT_DESCRIPTION_1 + \" \"","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"                + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2,","lastModifiedDate":"2021-04-10"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"        //missing deadline prefix","lastModifiedDate":"2021-04-10"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE + \"MOD 2\" + \" \" + PREFIX_ASSIGNMENT + VALID_ASSIGNMENT_DESCRIPTION_1","lastModifiedDate":"2021-04-10"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"                + \" \" + VALID_ASSIGNMENT_DEADLINE_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput3,","lastModifiedDate":"2021-04-10"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"banchiang":103}},{"path":"src/test/java/seedu/address/logic/parser/addcommandparser/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_GENERAL_EVENT_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.addcommand.AddEventCommand;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    private AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    public void parse_allFieldPresent_success() {","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"        String userInput \u003d \" \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \"","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"                + PREFIX_DATE + VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"        assertParseSuccess(parser, userInput , new AddEventCommand(VALID_GENERAL_EVENT_1));","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    public void parse_missingValue_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        //missing event description","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + PREFIX_GENERAL_EVENT + \" \" + PREFIX_DATE + VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1, GeneralEvent.DESCRIPTION_CONSTRAINT);","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        //missing date","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \" + PREFIX_DATE;","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2, GeneralEvent.DATE_CONSTRAINT);","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        //missing date","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        String userInput3 \u003d \" \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \" + PREFIX_DATE + \"  \";","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput3, GeneralEvent.DATE_CONSTRAINT);","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    public void parse_wrongValue_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        //wrong values for date","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \" + PREFIX_DATE + \"hi\";","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1, GeneralEvent.DATE_CONSTRAINT);","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \" + PREFIX_DATE","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"                + \"01/01/1998\";","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2, GeneralEvent.DATE_CONSTRAINT);","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"        String userInput3 \u003d \" \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \" + PREFIX_DATE","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"                + \"1200\";","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput3, GeneralEvent.DATE_CONSTRAINT);","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"    public void parse_missingPrefix_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        //missing general event prefix","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \" + PREFIX_DATE + VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1,","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"        //missing date prefix","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \"","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"                + VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2,","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"banchiang":70}},{"path":"src/test/java/seedu/address/logic/parser/addcommandparser/AddExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2103;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_EXAM;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.addcommand.AddExamCommand;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.testutil.typicalmodules.ModuleBuilder;","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"public class AddExamCommandParserTest {","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    private AddExamCommandParser parser \u003d new AddExamCommandParser();","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    private Module cs2103 \u003d new ModuleBuilder().withTitle(VALID_TITLE_CS2103).emptyBuild();","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    public void parse_allFieldPresent_success() {","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        String userInput \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2103 + \" \" + PREFIX_EXAM + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        assertParseSuccess(parser, userInput, new AddExamCommand(cs2103, VALID_EXAM));","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    public void parse_missingValue_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"        //empty module","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE + \" \" + PREFIX_EXAM + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        //empty exam date","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2103 + \" \" + PREFIX_EXAM;","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2, Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        //blank empty date","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2103 + \" \" + PREFIX_EXAM + \"   \";","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput3, Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    public void parse_wrongValue_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        //wrong values for module","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE + \"/\" + VALID_TITLE_CS2103 + \" \" + PREFIX_EXAM + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2103 + \"?\" + \" \" + PREFIX_EXAM + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE + \"MODULE_1\" + \" \" + PREFIX_EXAM + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput3, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"        //wrong values for date","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        String userInput4 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2103 + \" \" + PREFIX_EXAM + \"nani\";","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput4, Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        String userInput5 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2103 + \" \" + PREFIX_EXAM + \"01/01/1998\";","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput5, Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"        String userInput6 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2103 + \" \" + PREFIX_EXAM + \"1200\";","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput6, Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"    public void parse_missingPrefix_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"        //missing module prefix","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + VALID_TITLE_CS2103 + \" \" + PREFIX_EXAM + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1,","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"        //missing exam prefix","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2103 + \" \" + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2,","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"banchiang":80}},{"path":"src/test/java/seedu/address/logic/parser/addcommandparser/AddModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import seedu.address.logic.commands.addcommand.AddModuleCommand;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"public class AddModuleCommandParserTest {","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    private AddModuleCommandParser parser \u003d new AddModuleCommandParser();","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    public void parse_allFieldPresent_success() {","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        String userInput \u003d \" \" + PREFIX_MODULE + \"MOD 2\";","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        assertParseSuccess(parser, userInput, new AddModuleCommand(MOD_2));","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    public void parse_missingValue_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"        //missing module name","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE;","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        //blank module name","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + \"    \";","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    public void parse_wrongValue_failure() {","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE + \"/\";","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        String userInput2 \u003d \" \" + \"?\" + PREFIX_MODULE;","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput2, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"        String userInput3 \u003d \" \" + \"MODULE_1\";","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        assertParseFailure(parser, userInput3, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"banchiang":45}},{"path":"src/test/java/seedu/address/logic/parser/addcommandparser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.logic.parser.addcommandparser;","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddPersonCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"    private final AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withBirthday(\"12/12/1999\").withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"                + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withBirthday(\"12/12/1999\")","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"maikongeh"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + BIRTHDAY_DESC_AMY,","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"maikongeh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"maikongeh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_BIRTHDAY_BOB,","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"maikongeh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"maikongeh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        // invalid value reported","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"maikongeh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"maikongeh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-06"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"markuz5116":14,"banchiang":1,"Hzxin":5,"jellymias":1,"maikongeh":13,"-":57}},{"path":"src/test/java/seedu/address/logic/parser/editcommandparser/EditAssignmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditAssignmentCommand;","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"public class EditAssignmentCommandParserTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAssignmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    private EditAssignmentCommandParser parser \u003d new EditAssignmentCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        // no module specified","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE + \" \" + PREFIX_ASSIGNMENT.getPrefix()","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"                            + \"1 \" + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + \" \" + PREFIX_ASSIGNMENT.getPrefix()","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"                            + \"1 \" + PREFIX_DESCRIPTION + VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput2, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        // no exam specified","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT.getPrefix() + \" \"","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput3, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        String userInput4 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT.getPrefix() + \" \"","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DESCRIPTION + VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput4, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        // no edit specified","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        String userInput5 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \"","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_ASSIGNMENT.getPrefix() + \"1 \" + PREFIX_DEADLINE;","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput5, Assignment.DATE_CONSTRAINTS);","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        String userInput6 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \"","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_ASSIGNMENT.getPrefix() + \"1 \" + PREFIX_DESCRIPTION;","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput6, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"        // no field specified","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        String userInput7 \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput7,","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        // all fields empty","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"        String userInput8 \u003d \" \" + PREFIX_MODULE.getPrefix() + \" \" + PREFIX_ASSIGNMENT + \" \" + PREFIX_DEADLINE;","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput8, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"        String userInput9 \u003d \" \" + PREFIX_MODULE.getPrefix() + \" \" + PREFIX_ASSIGNMENT + \" \" + PREFIX_DESCRIPTION;","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput9, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"        // invalid module title","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE.getPrefix() + INVALID_TITLE + \" \" + PREFIX_ASSIGNMENT + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\")); // invaid title","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE.getPrefix() + INVALID_TITLE + \" \" + PREFIX_ASSIGNMENT + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DESCRIPTION + VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput2, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\")); // invaid title","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"        // invalid assignment index","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT + \"0 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput3, MESSAGE_INVALID_INDEX); // invaid exam index","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"        String userInput4 \u003d \" \" + PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT + \"0 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DESCRIPTION + VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput4, MESSAGE_INVALID_INDEX); // invaid exam index","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        // invalid edit","lastModifiedDate":"2021-04-07"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"        String userInput5 \u003d \" \" + PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DEADLINE + INVALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput5, Assignment.DATE_CONSTRAINTS); // invaid exam date","lastModifiedDate":"2021-04-07"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"    public void parse_editOneField_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"        // valid date edit","lastModifiedDate":"2021-04-07"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new Module(new Title(VALID_TITLE_CS2101));","lastModifiedDate":"2021-04-07"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d LocalDateTime.parse(VALID_ASSIGNMENT_DEADLINE_1, LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand expectedCommand1 \u003d new EditAssignmentCommand(target, 1, null, dateEdit);","lastModifiedDate":"2021-04-07"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"        assertParseSuccess(parser, userInput1, expectedCommand1);","lastModifiedDate":"2021-04-07"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"        // valid description edit","lastModifiedDate":"2021-04-07"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DESCRIPTION + VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"        Description descriptionEdit \u003d new Description(VALID_ASSIGNMENT_DESCRIPTION_1);","lastModifiedDate":"2021-04-07"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand expectedCommand2 \u003d new EditAssignmentCommand(target, 1, descriptionEdit, null);","lastModifiedDate":"2021-04-07"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"        assertParseSuccess(parser, userInput2, expectedCommand2);","lastModifiedDate":"2021-04-07"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"    public void parse_editBothFields_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"        String userInput \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"                + PREFIX_DESCRIPTION + VALID_ASSIGNMENT_DESCRIPTION_1 + \" \"","lastModifiedDate":"2021-04-07"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"                + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new Module(new Title(VALID_TITLE_CS2101));","lastModifiedDate":"2021-04-07"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d LocalDateTime.parse(VALID_ASSIGNMENT_DEADLINE_1, LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-04-07"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"        Description descriptionEdit \u003d new Description(VALID_ASSIGNMENT_DESCRIPTION_1);","lastModifiedDate":"2021-04-07"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommand expectedCommand \u003d new EditAssignmentCommand(target, 1, descriptionEdit, dateEdit);","lastModifiedDate":"2021-04-07"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-07"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"jellymias":126}},{"path":"src/test/java/seedu/address/logic/parser/editcommandparser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ASSIGNMENT;","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseCommandFailure;","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseCommandSuccess;","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditCommand;","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    public void parse_noPrefixSpecified_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        // with preamble","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \"1\";","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        assertParseCommandFailure(parser, userInput1,","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"                                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \"words\";","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        assertParseCommandFailure(parser, userInput2,","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"                                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        // without preamble","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        assertParseCommandFailure(parser, userInput3,","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"                                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    public void parse_allPrefixSpecified_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        // without preamble","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + \" \" + PREFIX_NAME + \" \" + PREFIX_TAG + \" \" + PREFIX_GENERAL_EVENT","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"                            + \" \" + PREFIX_DATE + \" \" + PREFIX_ASSIGNMENT + \" \" + PREFIX_EXAM;","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        assertParseCommandFailure(parser, userInput2, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"    public void parse_moduleCommand_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        String userInput \u003d \" 1 \" + PREFIX_MODULE + VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        EditModuleCommandParser expectedParser \u003d new EditModuleCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput, expectedParser);","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"    public void parse_examCommand_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"        String userInput \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_EXAM + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DATE + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"        EditExamCommandParser expectedParser \u003d new EditExamCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput, expectedParser);","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"    public void parse_assignmentCommand_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"        // parse deadline","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommandParser expectedParser1 \u003d new EditAssignmentCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput1, expectedParser1);","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"        // parse description","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DESCRIPTION + VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommandParser expectedParser2 \u003d new EditAssignmentCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput2, expectedParser2);","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"        // parse both","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_ASSIGNMENT + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DESCRIPTION + VALID_ASSIGNMENT_DESCRIPTION_1 + \" \"","lastModifiedDate":"2021-04-07"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DEADLINE + VALID_ASSIGNMENT_DEADLINE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"        EditAssignmentCommandParser expectedParser3 \u003d new EditAssignmentCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput3, expectedParser3);","lastModifiedDate":"2021-04-07"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"    public void parse_generalEventCommand_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"        // parse deadline","lastModifiedDate":"2021-04-07"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \" 1 \" + PREFIX_DATE + VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"        EditEventCommandParser expectedParser1 \u003d new EditEventCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput1, expectedParser1);","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"        // parse description","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \" 1 \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"        EditEventCommandParser expectedParser2 \u003d new EditEventCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput2, expectedParser2);","lastModifiedDate":"2021-04-07"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"        // parse both","lastModifiedDate":"2021-04-07"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \" 1 \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \"","lastModifiedDate":"2021-04-07"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DATE + VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"        EditEventCommandParser expectedParser3 \u003d new EditEventCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput3, expectedParser3);","lastModifiedDate":"2021-04-07"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"    public void parse_personCommand_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"        // parse name","lastModifiedDate":"2021-04-07"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \" 1 \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-04-07"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"        EditPersonCommandParser expectedParser1 \u003d new EditPersonCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput1, expectedParser1);","lastModifiedDate":"2021-04-07"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"        // parse birthday","lastModifiedDate":"2021-04-07"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \" 1 \" + PREFIX_NAME + VALID_NAME_AMY + \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2021-04-07"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"        EditPersonCommandParser expectedParser2 \u003d new EditPersonCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput2, expectedParser2);","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"        // parse tags","lastModifiedDate":"2021-04-07"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \" 1 \" + PREFIX_NAME + VALID_NAME_AMY + \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2021-04-07"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"        EditPersonCommandParser expectedParser3 \u003d new EditPersonCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput3, expectedParser3);","lastModifiedDate":"2021-04-07"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"        // parse all","lastModifiedDate":"2021-04-07"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"        String userInput4 \u003d \" 1 \" + PREFIX_NAME + VALID_NAME_AMY + \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY","lastModifiedDate":"2021-04-07"},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"                            + \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2021-04-07"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"        EditPersonCommandParser expectedParser4 \u003d new EditPersonCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"        assertParseCommandSuccess(parser, userInput4, expectedParser4);","lastModifiedDate":"2021-04-07"},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"jellymias":138}},{"path":"src/test/java/seedu/address/logic/parser/editcommandparser/EditEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DATE_2;","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENERAL_EVENT;","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditEventCommand;","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"public class EditEventCommandParserTest {","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    private EditEventCommandParser parser \u003d new EditEventCommandParser();","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        // no field specified","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \"1 \" + PREFIX_GENERAL_EVENT.getPrefix();","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput3, Description.MESSAGE_CONSTRAINTS); //empty description","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        String userInput4 \u003d \"1 \" + PREFIX_DATE.getPrefix();","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput4, GeneralEvent.DATE_CONSTRAINT); //empty date","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        // negative index","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \"-5 \" + PREFIX_DATE.getPrefix() + VALID_GENERAL_EVENT_DATE_2;","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput1 ,","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"                MESSAGE_INVALID_INDEX_1 + \"g/\" + MESSAGE_INVALID_INDEX_2);","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        // zero index","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \"0 \" + PREFIX_DATE.getPrefix() + VALID_GENERAL_EVENT_DATE_2;","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput2 ,","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"                            MESSAGE_INVALID_INDEX_1 + \"g/\" + MESSAGE_INVALID_INDEX_2);","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \"words \" + PREFIX_DATE.getPrefix() + VALID_GENERAL_EVENT_DATE_2;","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput3 ,","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"maikongeh"},"content":"                MESSAGE_INVALID_INDEX_1 + \"g/\" + MESSAGE_INVALID_INDEX_2);","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        String userInput4 \u003d \"i/ \" + PREFIX_DATE.getPrefix() + VALID_GENERAL_EVENT_DATE_2;","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput4 ,","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"maikongeh"},"content":"                MESSAGE_INVALID_INDEX_1 + \"g/\" + MESSAGE_INVALID_INDEX_2);","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"        String userInput \u003d \"1 \" + PREFIX_DATE.getPrefix() + INVALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput, GeneralEvent.DATE_CONSTRAINT); // invalid date format","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"    public void parse_allFieldsSpecified_failure() {","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_GENERAL_EVENT.getPrefix()","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"                            + VALID_GENERAL_EVENT_DESCRIPTION_1 + \" \" + PREFIX_DATE + VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        Description eventEdit \u003d new Description(VALID_GENERAL_EVENT_DESCRIPTION_1);","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d LocalDateTime.parse(VALID_GENERAL_EVENT_DATE_1, LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-04-06"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex.getOneBased(), eventEdit, dateEdit);","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-04-06"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d targetIndex.getOneBased() + \" \" + PREFIX_GENERAL_EVENT + VALID_GENERAL_EVENT_DESCRIPTION_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d targetIndex.getOneBased() + \" \" + PREFIX_DATE + VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-06"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"        Description eventEdit \u003d new Description(VALID_GENERAL_EVENT_DESCRIPTION_1);","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"        EditEventCommand expectedCommand1 \u003d new EditEventCommand(targetIndex.getOneBased(), eventEdit, null);","lastModifiedDate":"2021-04-06"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        assertParseSuccess(parser, userInput1, expectedCommand1);","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateEdit \u003d LocalDateTime.parse(VALID_GENERAL_EVENT_DATE_1, LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-04-06"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"        EditEventCommand expectedCommand2 \u003d new EditEventCommand(targetIndex.getOneBased(), null, dateEdit);","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"        assertParseSuccess(parser, userInput2, expectedCommand2);","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"jellymias":91,"maikongeh":6}},{"path":"src/test/java/seedu/address/logic/parser/editcommandparser/EditExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX_1;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX_2;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditExamCommand;","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"public class EditExamCommandParserTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditExamCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    private EditExamCommandParser parser \u003d new EditExamCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        // no module specified","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE + \" \" + PREFIX_EXAM.getPrefix()","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"                            + \"1 \" + PREFIX_DATE + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        // no exam index specified","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_EXAM.getPrefix() + \" \"","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DATE + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"maikongeh"},"content":"        assertParseFailure(parser, userInput2,","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"                MESSAGE_INVALID_INDEX_1 + \"e/\" + MESSAGE_INVALID_INDEX_2);","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        // no date specified","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \"","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_EXAM.getPrefix() + \"1 \" + PREFIX_DATE;","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput3, Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        // no field specified","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        String userInput4 \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput4,","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        // all fields empty","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        String userInput5 \u003d \" \" + PREFIX_MODULE.getPrefix() + \" \" + PREFIX_EXAM + \" \" + PREFIX_DATE;","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput5, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \" \" + PREFIX_MODULE.getPrefix() + INVALID_TITLE + \" \" + PREFIX_EXAM + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DATE + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput1, String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\")); // invaid title","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \" \" + PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101 + \" \" + PREFIX_EXAM + \"0 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"                + PREFIX_DATE + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"maikongeh"},"content":"        assertParseFailure(parser, userInput2,","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"maikongeh"},"content":"                MESSAGE_INVALID_INDEX_1 + \"e/\" + MESSAGE_INVALID_INDEX_2); // invaid exam index","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \" \" + PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101 + \" \" + PREFIX_EXAM + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DATE + INVALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput3, Exam.MESSAGE_CONSTRAINTS); // invaid exam date","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        String userInput \u003d \" \" + PREFIX_MODULE + VALID_TITLE_CS2101 + \" \" + PREFIX_EXAM + \"1 \"","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"                            + PREFIX_DATE + VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"        Module target \u003d new Module(new Title(VALID_TITLE_CS2101));","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        LocalDateTime edit \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_1, LocalDateTimeUtil.DATETIME_FORMATTER);","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"        EditExamCommand expectedCommand \u003d new EditExamCommand(target, 1, edit);","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"jellymias":78,"maikongeh":7}},{"path":"src/test/java/seedu/address/logic/parser/editcommandparser/EditModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MODULE;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditModuleCommand;","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"public class EditModuleCommandParserTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditModuleCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    private EditModuleCommandParser parser \u003d new EditModuleCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        // no index specified","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        // no index and no field specified","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \"\";","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput2,","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        // no field specified","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \"1 \" + PREFIX_MODULE.getPrefix();","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        assertParseFailure(parser, userInput3,","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"                String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\")); //empty description","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        // negative index","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        String userInput1 \u003d \"-5 \" + PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput1,","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        // zero index","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        String userInput2 \u003d \"0 \" + PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput2,","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        String userInput3 \u003d \"words \" + PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput3 ,","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        String userInput4 \u003d \"i/ \" + PREFIX_MODULE.getPrefix() + VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        assertParseFailure(parser, userInput4 ,","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        String userInput \u003d \"1 \" + PREFIX_MODULE.getPrefix() + INVALID_TITLE;","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"                String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\")); // invalid date format","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"        Index targetIndex \u003d INDEX_FIRST_MODULE;","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_MODULE + VALID_TITLE_CS2101;","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"        Title edited \u003d new Title(VALID_TITLE_CS2101);","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"        EditModuleCommand expectedCommand \u003d new EditModuleCommand(targetIndex.getOneBased(), edited);","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"markuz5116":4,"jellymias":75}},{"path":"src/test/java/seedu/address/logic/parser/editcommandparser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.logic.parser.editcommandparser;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditPersonCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC,","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"markuz5116":15,"jellymias":5,"-":114}},{"path":"src/test/java/seedu/address/logic/parser/findcommandparser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.findcommandparser;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindEventCommand;","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindModuleCommand;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindPersonCommand;","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    public void parseCommand_emptyArg_throwsParseException() {","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\"       \"));","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    public void parseCommand_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" *\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" p/\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" abd m/\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"    public void parseCommand_findModuleCommand() throws ParseException {","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        // prefixes not present -\u003e throws","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" b/\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        // a/ or e/ present with m/ -\u003e throws","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" m/MOD1 a/a\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" m/MOD2 e/a\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        // preamble not empty -\u003e throws","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" abc m/\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        // valid args -\u003e returns FindModuleCommand","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        String input \u003d \" m/MOD1\";","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        FindModuleCommand command \u003d new FindModuleCommand(new TitleContainsKeywordsPredicate(","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"                Collections.singletonList(\"MOD1\")","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        ));","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        assertEquals(command, parser.parseCommand(input));","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"    public void parseCommand_findEventCommand() throws ParseException {","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        // prefixes not present -\u003e throws","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" b/\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        // preamble not empty -\u003e throws","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" abc g/\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        // valid args -\u003e returns FindModuleCommand","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        String input \u003d \" g/EVENT1\";","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        FindEventCommand command \u003d new FindEventCommand(new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"                Collections.singletonList(\"EVENT1\")","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"        ));","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        assertEquals(command, parser.parseCommand(input));","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"    public void parseCommand_findPersonCommand() throws ParseException {","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        // prefixes not present -\u003e throws","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" b/\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        // preamble not empty -\u003e throws","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\" abc n/\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"        // valid args -\u003e returns FindModuleCommand","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"        String input \u003d \" n/NAME1\";","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(new NameContainsKeywordsPredicate(","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"                Collections.singletonList(\"NAME1\")","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"        ));","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        assertEquals(command, parser.parseCommand(input));","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"markuz5116":84}},{"path":"src/test/java/seedu/address/logic/parser/findcommandparser/FindEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.findcommandparser;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindEventCommand;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"public class FindEventCommandParserTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    private final FindEventCommandParser parser \u003d new FindEventCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"        assertParseFailure(parser, \"        \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"                FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    public void parse_validArgs_returnsFindEventCommand() {","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        FindEventCommand expectedFindEventCommand \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"                new FindEventCommand(new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"                        Arrays.asList(\"Meeting\", \"Appointment\")));","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        assertParseSuccess(parser, \" g/Meeting Appointment\", expectedFindEventCommand);","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        assertParseSuccess(parser, \" g/\\n Meeting \\n \\t Appointment  \\t\", expectedFindEventCommand);","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"markuz5116":35}},{"path":"src/test/java/seedu/address/logic/parser/findcommandparser/FindModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.findcommandparser;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindModuleCommand;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"public class FindModuleCommandParserTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    private FindModuleCommandParser parser \u003d new FindModuleCommandParser();","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"                FindModuleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    public void parse_validArgs_returnsFindPersonCommand() {","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        FindModuleCommand expectedFindModuleCommand \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"                new FindModuleCommand(new TitleContainsKeywordsPredicate(","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"                        Arrays.asList(\"MOD1\", \"MOD2\")));","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        assertParseSuccess(parser, \" m/MOD1 MOD2\", expectedFindModuleCommand);","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        assertParseSuccess(parser, \" m/\\n MOD1 \\n \\t MOD2  \\t\", expectedFindModuleCommand);","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"markuz5116":35}},{"path":"src/test/java/seedu/address/logic/parser/findcommandparser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.logic.parser.findcommandparser;","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.findcommand.FindPersonCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"                FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    public void parse_validArgs_returnsFindPersonCommand() {","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        FindPersonCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"                new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindPersonCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        assertParseSuccess(parser, \" n/\\n Alice \\n \\t Bob  \\t\", expectedFindPersonCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"markuz5116":11,"-":24}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.ALICE;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.BENSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"import seedu.address.testutil.RemindMeBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        assertEquals(new RemindMe(), new RemindMe(modelManager.getRemindMe()));","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        userPrefs.setRemindMeFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        userPrefs.setRemindMeFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"    public void setRemindMeFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setRemindMeFilePath(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"    public void setRemindMeFilePath_validPath_setsRemindMeFilePath() {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        modelManager.setRemindMeFilePath(path);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"        assertEquals(path, modelManager.getRemindMeFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"    public void hasPerson_personNotInRemindMe_returnsFalse() {","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"    public void hasPerson_personInRemindMe_returnsTrue() {","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"        RemindMe remindMe \u003d new RemindMeBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"        RemindMe differentRemindMe \u003d new RemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"        modelManager \u003d new ModelManager(remindMe, userPrefs);","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(remindMe, userPrefs);","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"Hzxin"},"content":"        // different remindMe -\u003e returns false","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentRemindMe, userPrefs)));","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"        assertFalse(modelManager.equals(new ModelManager(remindMe, userPrefs)));","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"Hzxin"},"content":"        differentUserPrefs.setRemindMeFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"        assertFalse(modelManager.equals(new ModelManager(remindMe, differentUserPrefs)));","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"markuz5116":8,"Hzxin":14,"-":110}},{"path":"src/test/java/seedu/address/model/RemindMeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.ALICE;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"public class RemindMeTest {","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    private final RemindMe remindMe \u003d new RemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        assertEquals(Collections.emptyList(), remindMe.getPersonList());","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        assertThrows(NullPointerException.class, () -\u003e remindMe.resetData(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    public void resetData_withValidReadOnlyRemindMe_replacesData() {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        RemindMe newData \u003d getTypicalRemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        remindMe.resetData(newData);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        assertEquals(newData, remindMe);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        RemindMeStub newData \u003d new RemindMeStub(newPersons, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e remindMe.resetData(newData));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        assertThrows(NullPointerException.class, () -\u003e remindMe.hasPerson(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"    public void hasPerson_personNotInRemindMe_returnsFalse() {","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"        assertFalse(remindMe.hasPerson(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"    public void hasPerson_personInRemindMe_returnsTrue() {","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"        remindMe.addPerson(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        assertTrue(remindMe.hasPerson(ALICE));","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"    public void hasPerson_personWithSameIdentityFieldsInRemindMe_returnsTrue() {","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        remindMe.addPerson(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"        assertTrue(remindMe.hasPerson(editedAlice));","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e remindMe.getPersonList().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"     * A stub ReadOnlyRemindMe whose persons list can violate interface constraints.","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"    private static class RemindMeStub implements ReadOnlyRemindMe {","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"        private final ObservableList\u003cModule\u003e modules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"        private final ObservableList\u003cGeneralEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"        RemindMeStub(Collection\u003cPerson\u003e persons, Collection\u003cModule\u003e modules,","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"                     Collection\u003cGeneralEvent\u003e events) {","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"            this.modules.setAll(modules);","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"            this.events.setAll(events);","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"        public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"            return modules;","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"Hzxin"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":"            return persons;","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"        public ObservableList\u003cGeneralEvent\u003e getEventList() {","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"            return events;","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"markuz5116":18,"Hzxin":42,"-":60}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    public void setRemindMeFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setRemindMeFilePath(null));","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Hzxin":2,"-":19}},{"path":"src/test/java/seedu/address/model/event/DescriptionContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"public class DescriptionContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    private final List\u003cString\u003e keywords1 \u003d Collections.singletonList(\"EVENT1\");","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    private final List\u003cString\u003e keywords2 \u003d Arrays.asList(\"EVENT1\", \"EVENT2\");","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    private final Description description1 \u003d new Description(\"EVENT1\");","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private final Description description2 \u003d new Description(\"EVENT2\");","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    private final Description description3 \u003d new Description(\"EVENT3 EVENT4\");","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date \u003d LocalDateTime.of(2021, 3, 4, 23, 59);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"                new DescriptionContainsKeywordsPredicate(keywords1);","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"                new DescriptionContainsKeywordsPredicate(keywords2);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate secondPredicateCopy \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"                new DescriptionContainsKeywordsPredicate(keywords2);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        assertTrue(secondPredicateCopy.equals(secondPredicate));","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        // different instance -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        assertFalse(secondPredicate.equals(2));","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        // different attributes -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"    public void test_descriptionDoesNotContainKeywords_returnFalse() {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"        assertFalse(predicate.test(new GeneralEvent(description1, date)));","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        // Non-matching keywords","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        predicate \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"EVENT3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        assertFalse(predicate.test(new GeneralEvent(description1, date)));","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"    public void test_descriptionContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        // One keyword","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"                new DescriptionContainsKeywordsPredicate(Arrays.asList(\"EVENT2\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate.test(new GeneralEvent(description2, date)));","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"EVENT3\", \"EVENT3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate.test(new GeneralEvent(description3, date)));","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"EVENT3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate.test(new GeneralEvent(description3, date)));","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"eVenT3\", \"EvenT3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate.test(new GeneralEvent(description3, date)));","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"markuz5116":80}},{"path":"src/test/java/seedu/address/model/event/GeneralEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"public class GeneralEventTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    private final Description description1 \u003d new Description(\"Event1\");","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    private final Description description2 \u003d new Description(\"Event2\");","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date1 \u003d LocalDateTime.of(2021, 3, 23, 23, 59);","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date2 \u003d LocalDateTime.of(2021, 4, 22, 10, 15);","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private final GeneralEvent event1 \u003d new GeneralEvent(description1, date1);","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    private final GeneralEvent event2 \u003d new GeneralEvent(description2, date2);","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    public void setDescription() {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"        GeneralEvent copyEvent1 \u003d new GeneralEvent(description1, date1);","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"        GeneralEvent editedEvent1 \u003d new GeneralEvent(description2, date1);","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        assertNotEquals(copyEvent1, editedEvent1);","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        assertEquals(copyEvent1.setDescription(description2), editedEvent1);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"    public void setDate() {","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        GeneralEvent copyEvent2 \u003d new GeneralEvent(description2, date2);","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        assertEquals(event2, copyEvent2);","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        assertNotEquals(event2, copyEvent2.setDate(date1));","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    public void isSameEvent() {","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        assertFalse(event1.isSameEvent(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        assertTrue(event1.isSameEvent(event1));","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        // different events -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        assertFalse(event1.isSameEvent(event2));","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        GeneralEvent copyEvent1 \u003d new GeneralEvent(description1, date1);","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        assertTrue(event1.isSameEvent(copyEvent1));","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        assertFalse(event1.equals(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        assertTrue(event1.equals(event1));","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        // different instance -\u003e return false","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        assertFalse(event1.equals(2));","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e return true","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"        GeneralEvent copyEvent2 \u003d new GeneralEvent(description2, date2);","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        assertTrue(event2.equals(copyEvent2));","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"        // different attributes -\u003e return false","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        assertFalse(event1.equals(event2));","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        // different description but same date -\u003e return false","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assertFalse(event2.equals(copyEvent2.setDescription(description1)));","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        // same description but different date -\u003e return false","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"        assertFalse(event2.equals(copyEvent2.setDate(date1)));","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"markuz5116":77}},{"path":"src/test/java/seedu/address/model/event/UniqueGeneralEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.exceptions.DuplicateGeneralEventException;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.event.exceptions.GeneralEventNotFoundException;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"public class UniqueGeneralEventListTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private final Description description1 \u003d new Description(\"Event1\");","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    private final Description description2 \u003d new Description(\"Event2\");","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date1 \u003d LocalDateTime.of(2021, 3, 23, 23, 59);","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date2 \u003d LocalDateTime.of(2021, 4, 22, 10, 15);","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    private final GeneralEvent event1 \u003d new GeneralEvent(description1, date1);","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    private final GeneralEvent event2 \u003d new GeneralEvent(description2, date2);","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    private final GeneralEvent event3 \u003d new GeneralEvent(description1, date2);","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    private final GeneralEvent event4 \u003d new GeneralEvent(description2, date1);","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    public void add() {","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list.add(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        // add an event","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        list.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list.size(), 1);","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        // add another event","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        list.add(event4);","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list.size(), 2);","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        // add duplicate event -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        assertThrows(DuplicateGeneralEventException.class, () -\u003e list.add(event4));","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"    public void contains() {","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e return false","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.contains(event1));","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"        // list contains the event -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        list.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        list.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.contains(event1));","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        // list does not contain the event -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.contains(event3));","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list.contains(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"    public void getGeneralEvent() {","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list.getGeneralEvent(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"        // event does not exist with empty list -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        assertThrows(GeneralEventNotFoundException.class, () -\u003e list.getGeneralEvent(event1));","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"        list.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"        list.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"        list.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"        // event does not exist and list is not empty -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"        assertThrows(GeneralEventNotFoundException.class, () -\u003e list.getGeneralEvent(event4));","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"        // event exists -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"        assertEquals(event1, list.getGeneralEvent(event1));","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"        assertEquals(event3, list.getGeneralEvent(event3));","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"        // Using Index ---------------------------------------------------------------------------","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list2 \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"        assertThrows(GeneralEventNotFoundException.class, () -\u003e list2.getGeneralEvent(0));","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"        list2.add(event4);","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"        list2.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"        list2.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"        // event at index 0 -\u003e returns event4","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"        assertEquals(event4, list2.getGeneralEvent(1));","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"        // last event -\u003e returns event3","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"        assertEquals(event3, list2.getGeneralEvent(list2.size()));","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"        // index \u003c 1  -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"        assertThrows(GeneralEventNotFoundException.class, () -\u003e list2.getGeneralEvent(0));","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"markuz5116"},"content":"        // index \u003e size -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"markuz5116"},"content":"        assertThrows(GeneralEventNotFoundException.class, () -\u003e list2.getGeneralEvent(","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"                list2.size() + 1));","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"    public void setGeneralEvent() {","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list1 \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.setGeneralEvent(null, null));","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.setGeneralEvent(null, event1));","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.setGeneralEvent(event1, null));","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"        // event1 to event4 -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"        list1.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"        list1.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"        list1.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list2 \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"markuz5116"},"content":"        list2.add(event4);","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"markuz5116"},"content":"        list2.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"markuz5116"},"content":"        list2.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"markuz5116"},"content":"        list2.setGeneralEvent(event4, event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list1, list2);","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"markuz5116"},"content":"        // duplicate event -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"markuz5116"},"content":"        assertThrows(DuplicateGeneralEventException.class, () -\u003e list1.setGeneralEvent(event1,","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"markuz5116"},"content":"                event2));","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"markuz5116"},"content":"    public void remove() {","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list1 \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.remove(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"markuz5116"},"content":"        list1.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"        list1.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"markuz5116"},"content":"        list1.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"markuz5116"},"content":"        // remove event not found -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"markuz5116"},"content":"        assertThrows(GeneralEventNotFoundException.class, () -\u003e list1.remove(event4));","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list2 \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"        list2.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"        list2.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"markuz5116"},"content":"        list1.remove(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list1, list2);","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"    public void setGeneralEvents() {","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list1 \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list2 \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.setGeneralEvents(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"        List\u003cGeneralEvent\u003e inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"markuz5116"},"content":"        list1.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"markuz5116"},"content":"        list1.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"markuz5116"},"content":"        list1.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"markuz5116"},"content":"        inputList.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"markuz5116"},"content":"        inputList.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"markuz5116"},"content":"        inputList.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"markuz5116"},"content":"        // set inputList to list2 -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"markuz5116"},"content":"        list2.setGeneralEvents(inputList);","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list1, list2);","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"markuz5116"},"content":"        // set inputList contains duplicate -\u003e throws","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"markuz5116"},"content":"        inputList.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"        assertThrows(DuplicateGeneralEventException.class, () -\u003e list2.setGeneralEvents(inputList));","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list1 \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":191,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list1.equals(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":192,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"        list1.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"markuz5116"},"content":"        list1.add(event4);","lastModifiedDate":"2021-03-25"},{"lineNumber":195,"author":{"gitId":"markuz5116"},"content":"        list1.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":197,"author":{"gitId":"markuz5116"},"content":"        // different instance -\u003e return false","lastModifiedDate":"2021-03-25"},{"lineNumber":198,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list1.equals(2));","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":201,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list1.equals(list1));","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"markuz5116"},"content":"        UniqueGeneralEventList list2 \u003d new UniqueGeneralEventList();","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"markuz5116"},"content":"        list2.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"markuz5116"},"content":"        list2.add(event4);","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"markuz5116"},"content":"        list2.add(event3);","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list1.equals(list2));","lastModifiedDate":"2021-03-25"},{"lineNumber":210,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":211,"author":{"gitId":"markuz5116"},"content":"        // different size -\u003e returns false;","lastModifiedDate":"2021-03-25"},{"lineNumber":212,"author":{"gitId":"markuz5116"},"content":"        list2.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":213,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list1.equals(list2));","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"markuz5116"},"content":"        // different order -\u003e return false","lastModifiedDate":"2021-03-25"},{"lineNumber":216,"author":{"gitId":"markuz5116"},"content":"        list2.remove(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"markuz5116"},"content":"        list2.remove(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"markuz5116"},"content":"        list2.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list1.equals(list2));","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":221,"author":{"gitId":"markuz5116"},"content":"        // different attributes -\u003e return false","lastModifiedDate":"2021-03-25"},{"lineNumber":222,"author":{"gitId":"markuz5116"},"content":"        list2.remove(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":223,"author":{"gitId":"markuz5116"},"content":"        list1.remove(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":224,"author":{"gitId":"markuz5116"},"content":"        list2.add(event2);","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"markuz5116"},"content":"        list1.add(event1);","lastModifiedDate":"2021-03-25"},{"lineNumber":226,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list1.equals(list2));","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":228,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"markuz5116":228}},{"path":"src/test/java/seedu/address/model/module/AssignmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"public class AssignmentListTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    private final Description description1 \u003d new Description(\"test 1\");","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private final Description description2 \u003d new Description(\"test 2\");","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date1 \u003d LocalDateTime.parse(\"11/12/2021 1900\",","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date2 \u003d LocalDateTime.parse(\"12/12/2021 1900\",","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    private final Tag tag \u003d new Tag(\"CS2103\");","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    private final Assignment assignment1 \u003d new Assignment(description1, date1, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    private final Assignment assignment2 \u003d new Assignment(description2, date2, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    private final List\u003cAssignment\u003e assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    public void add() {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        AssignmentList list \u003d new AssignmentList();","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        list.add(assignment1);","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        list.add(assignment2);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        // size of list is 2","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        assertTrue(list.size() \u003d\u003d 2);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        // assignment at index 0 is assignment1","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        assertTrue(list.get(0).equals(assignment1));","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        assertFalse(list.get(0).equals(assignment2));","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        // assignment at index 1 is assignment2","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        assertTrue(list.get(1).equals(assignment2));","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        assertFalse(list.get(1).equals(assignment1));","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        // AssignmentList created using different constructors, same attributes -\u003e return true","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        assignments.add(assignment1);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        assignments.add(assignment2);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.equals(new AssignmentList(assignments)));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"        AssignmentList list \u003d new AssignmentList();","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        list.add(assignment1);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        list.add(assignment2);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        // same instance -\u003e return true","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.equals(list));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"        // different instance -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.equals(2));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        // different list size -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"        AssignmentList list2 \u003d new AssignmentList();","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        list2.add(assignment2);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.equals(list2));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        // different sequence -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"        list2.add(assignment1);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.equals(list2));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"        // different assignments -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"        Assignment assignment3 \u003d new Assignment(description2, date1, tag);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"        list2.delete(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"        list2.add(assignment3);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.equals(list2));","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e return true","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"        list2.delete(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"        list2.add(assignment2);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.equals(list2));","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"    public void delete() {","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"        AssignmentList list \u003d new AssignmentList();","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        list.add(assignment1);","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"        list.add(assignment2);","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"        Assignment deleted \u003d list.delete(1);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"        // size of list is 1","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"        assertTrue(list.size() \u003d\u003d 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"        // deleted assignment is assignment2","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"        assertTrue(deleted.equals(assignment2));","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"        assertFalse(deleted.equals(assignment1));","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"        // assignment in list is assignment1","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"        assertTrue(list.get(0).equals(assignment1));","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        assertFalse(list.get(0).equals(assignment2));","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"        // no other assignment in list","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e list.get(1));","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"        list.add(assignment2);","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"markuz5116"},"content":"        deleted \u003d list.delete(assignment1);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"        // deleted assignment is assignment 2 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"        assertTrue(assignment1.equals(deleted));","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"        // size of list is 1 -\u003e return true","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.size() \u003d\u003d 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"        // remaining assignment in list is assignment 1 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"        assertTrue(assignment2.equals(list.get(0)));","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"    public void getIndex() {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"markuz5116"},"content":"        AssignmentList list \u003d new AssignmentList();","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns -1","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"markuz5116"},"content":"        assertEquals(-1, list.getIndex(assignment1));","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"markuz5116"},"content":"        // list containing assignment at index 0 with list size 1-\u003e returns 0","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"        list.add(assignment1);","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list.getIndex(assignment1), 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.getIndex(assignment1) !\u003d 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"markuz5116"},"content":"        // list does not contain assignment -\u003e returns -1","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"markuz5116"},"content":"        assertEquals(-1, list.getIndex(assignment2));","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"markuz5116"},"content":"        // list contains assignment at index 1 -\u003e returns 1","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"        list.add(assignment2);","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"markuz5116"},"content":"        assertEquals(1, list.getIndex(assignment2));","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"markuz5116"},"content":"        // list contains assignment at index 0 -\u003e returns 0","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"markuz5116"},"content":"        assertEquals(0, list.getIndex(assignment1));","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"markuz5116"},"content":"        // list updated such that assignment is at index 0 -\u003e returns 0","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"markuz5116"},"content":"        list.delete(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"        assertEquals(0, list.getIndex(assignment2));","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"markuz5116"},"content":"    public void contains() {","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"markuz5116"},"content":"        AssignmentList list \u003d new AssignmentList();","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"        // list is empty -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.contains(assignment1));","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"markuz5116"},"content":"        // list contains assignment -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"markuz5116"},"content":"        list.add(assignment1);","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.contains(assignment1));","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"markuz5116"},"content":"        // list doesn\u0027t contain assignment -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.contains(assignment2));","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"markuz5116"},"content":"        // list with multiple assignments","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"markuz5116"},"content":"        list.add(assignment2);","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"markuz5116"},"content":"        // list contains assignment -\u003e return true","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.contains(assignment1));","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.contains(assignment2));","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.contains(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"markuz5116"},"content":"    public void getAssignment() {","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"markuz5116"},"content":"        AssignmentList list \u003d new AssignmentList();","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"markuz5116"},"content":"        List\u003cAssignment\u003e assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.getAssignments().equals(assignments));","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list.getAssignments().equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"markuz5116"},"content":"        // list return is instance of List class -\u003e return true","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.getAssignments() instanceof List);","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"        // list returned is the same -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"markuz5116"},"content":"        list.add(assignment1);","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"markuz5116"},"content":"        list.add(assignment2);","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"markuz5116"},"content":"        assignments.add(assignment1);","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"markuz5116"},"content":"        assignments.add(assignment2);","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list.getAssignments().equals(assignments));","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":195,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"markuz5116"},"content":"    public void set() {","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"markuz5116"},"content":"        AssignmentList assignments1 \u003d new AssignmentList();","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"markuz5116"},"content":"        assignments1.add(assignment1);","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"markuz5116"},"content":"        AssignmentList assignments2 \u003d new AssignmentList();","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"markuz5116"},"content":"        assignments2.add(assignment2);","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"markuz5116"},"content":"        // set assignment1 to assignment2 at index 0","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"markuz5116"},"content":"        assignments1.set(0, assignment2);","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"markuz5116"},"content":"        assertEquals(assignments1, assignments2);","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"markuz5116"},"content":"    public void toggleDoneStatus() {","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"markuz5116"},"content":"        Assignment assignment1 \u003d new Assignment(description1, date1, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"markuz5116"},"content":"        Assignment assignment2 \u003d new Assignment(description2, date2, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"markuz5116"},"content":"        AssignmentList assignments1 \u003d new AssignmentList(List.of(assignment1, assignment2));","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"markuz5116"},"content":"        // toggle done at index 0","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"markuz5116"},"content":"        Assignment assignment1Copy \u003d new Assignment(description1, date1, tag, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"markuz5116"},"content":"        Assignment assignment2Copy \u003d new Assignment(description2, date2, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"markuz5116"},"content":"        AssignmentList assignments2 \u003d new AssignmentList(List.of(assignment1Copy, assignment2Copy));","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"markuz5116"},"content":"        assignments1.toggleDoneStatus(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"markuz5116"},"content":"        assertEquals(assignments1, assignments2);","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"markuz5116"},"content":"        // toggle done at index 1","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"markuz5116"},"content":"        assignment2Copy \u003d new Assignment(description2, date2, tag, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":223,"author":{"gitId":"markuz5116"},"content":"        assignments1.toggleDoneStatus(1);","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"markuz5116"},"content":"        assignments2 \u003d new AssignmentList(List.of(assignment1Copy, assignment2Copy));","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"markuz5116"},"content":"        assertEquals(assignments1, assignments2);","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"markuz5116"},"content":"    public void testToString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"markuz5116"},"content":"        AssignmentList assignments1 \u003d new AssignmentList();","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"markuz5116"},"content":"        assertTrue(assignments1.toString().equals(AssignmentList.NO_ASSIGNMENTS_OUTPUT));","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"markuz5116"},"content":"        // non-empty list -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"markuz5116"},"content":"        assignments1.add(assignment1);","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"markuz5116"},"content":"        assignments1.add(assignment2);","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"markuz5116"},"content":"        String output \u003d \"Assignment: \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"markuz5116"},"content":"                + \"1. \" + assignment1.toString() + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"markuz5116"},"content":"                + \"2. \" + assignment2.toString() + \"\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"markuz5116"},"content":"        assertTrue(assignments1.toString().equals(output));","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"markuz5116":187,"jellymias":53,"Hzxin":2}},{"path":"src/test/java/seedu/address/model/module/AssignmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"public class AssignmentTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    private final Description description1 \u003d new Description(\"test 1\");","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    private final Description description2 \u003d new Description(\"test 2\");","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date1 \u003d LocalDateTime.parse(\"11/12/2021 1900\",","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"                                                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date2 \u003d LocalDateTime.parse(\"12/12/2021 1900\",","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"                                                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    private final Tag tag \u003d new Tag(\"CS2103\");","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    private final Assignment assignment \u003d new Assignment(description1, date1, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    private final Assignment editedAssignmentDiffDate \u003d new Assignment(description1, date2, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    private final Assignment editedAssignmentDiffDescription \u003d new Assignment(description2, date1, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    private final Assignment diffAssignment \u003d new Assignment(description2, date2, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Assignment(null, date1, tag)); // null description","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Assignment(description1, null, tag)); // null date","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Assignment(null, null, tag)); // both null","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    public void isSameAssignment() {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        assertTrue(assignment.isSameAssignment(assignment));","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        assertFalse(assignment.isSameAssignment(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        // same description different date -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        assertFalse(assignment.isSameAssignment(editedAssignmentDiffDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        // same date different description -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        assertFalse(assignment.isSameAssignment(editedAssignmentDiffDescription));","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        // different assignment -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        assertFalse(assignment.isSameAssignment(diffAssignment));","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"    public void equals() {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        Assignment assignmentCopy \u003d new Assignment(description1, date1, tag);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        assertTrue(assignment.equals(assignmentCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"        assertTrue(assignment.equals(assignment));","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        assertFalse(assignment.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        assertFalse(assignment.equals(5));","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"        // different assignment -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        assertFalse(assignment.equals(diffAssignment));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        // different description -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assertFalse(assignment.equals(editedAssignmentDiffDescription));","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        // different date -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"        assertFalse(assignment.equals(editedAssignmentDiffDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"    public void setDescription() {","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"        Assignment assignmentCopy \u003d new Assignment(description1, date1, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"        // description changed to description2","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        assertEquals(assignmentCopy.setDescription(description2), editedAssignmentDiffDescription);","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"    public void setDeadline() {","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"        Assignment assignmentCopy \u003d new Assignment(description1, date1, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"        // description changed to description2","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"        assertEquals(assignmentCopy.setDeadline(date2), editedAssignmentDiffDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"    public void isDone() {","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"        // assignment is not done","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"        Assignment assignment \u003d new Assignment(description1, date1, tag, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"        assertEquals(assignment.isDone(), \"[ ]\");","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"        // assignment is done","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"        assignment \u003d new Assignment(description2, date2, tag, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"        assertEquals(assignment.isDone(), \"[X]\");","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"    public void toggleDoneStatus() {","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"        Assignment assignment \u003d new Assignment(description2, date1, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"markuz5116"},"content":"        // assignment is not done, toggled to done","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"markuz5116"},"content":"        assignment.toggleDoneStatus();","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"        assertEquals(assignment.isDone(), \"[X]\");","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"markuz5116"},"content":"        // assignment toggle to done","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"        assignment.toggleDoneStatus();","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"        assertEquals(assignment.isDone(), \"[ ]\");","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"    public void testToString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"        assertTrue(assignment.toString().equals(assignment.toString()));","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"        assertFalse(assignment.toString().equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"        // different assignments -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"markuz5116"},"content":"        assertFalse(assignment.toString().equals(diffAssignment));","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"markuz5116"},"content":"        // different description -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"markuz5116"},"content":"        assertFalse(assignment.toString().equals(editedAssignmentDiffDescription.toString()));","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"markuz5116"},"content":"        // different date -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"        assertFalse(assignment.toString().equals(editedAssignmentDiffDate.toString()));","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"markuz5116":77,"jellymias":50,"Hzxin":5}},{"path":"src/test/java/seedu/address/model/module/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"        // null description","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        // invalid description","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"        // valid description","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        assertTrue(Description.isValidDescription(\"tp submission\")); // alphabets only","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        assertTrue(Description.isValidDescription(\"2103\")); // numbers only","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        assertTrue(Description.isValidDescription(\"CS2103T\")); // alphanumeric characters","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        assertTrue(Description.isValidDescription(\"Software Engineering\")); // with capital letters","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        assertTrue(Description.isValidDescription(\"tp v1.2\")); // non-alphanumeric characters","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        assertTrue(Description.isValidDescription(","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"                \"CS2103T Software Engineering submission tp v1.2!!!\")); // long description","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"jellymias":39}},{"path":"src/test/java/seedu/address/model/module/ExamListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_2;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"public class ExamListTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    private final ExamList examList1 \u003d new ExamList();","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private ExamList examList2 \u003d new ExamList();","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date1 \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_1,","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"            Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    private final LocalDateTime date2 \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_2,","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"            Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    private final Exam exam1 \u003d new Exam(date1, new Tag(\"mod1\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    private final Exam exam2 \u003d new Exam(date2, new Tag(\"mod2\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    public void add() {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        // empty list add one exam -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        examList2.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        assertEquals(examList1.size(), 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        assertEquals(examList2.size(), 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        // size of list is 2","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        assertEquals(examList1.size(), 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        List\u003cExam\u003e exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        exams.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        exams.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        examList2 \u003d new ExamList(exams);","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.equals(examList1));","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        ExamList copyExamList1 \u003d new ExamList();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        copyExamList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        copyExamList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.equals(copyExamList1));","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        // different lists -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.equals(examList2));","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"        // different sequence -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        copyExamList1 \u003d new ExamList();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        copyExamList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"        copyExamList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.equals(copyExamList1));","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        // different size -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        copyExamList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.equals(copyExamList1));","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"        // different instances -\u003e return false","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.equals(1));","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"    public void contains() {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.contains(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.contains(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"        // list contains exam -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.contains(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"        // list doesn\u0027t contain exam -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.contains(exam2));","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"        // list with multiple exams","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"        // list contains exams","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.contains(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.contains(exam2));","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"    public void getIndex() {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns -1","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"        assertEquals(-1, examList1.getIndex(exam1));","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns -1","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"        assertEquals(-1, examList1.getIndex(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"        // has exam -\u003e returns 0","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"        assertEquals(examList1.getIndex(exam1), 0);","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"        // doesn\u0027t have exam -\u003e returns -1","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"        assertEquals(-1, examList1.getIndex(exam2));","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"        // multiple exams","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"        // has exam at index 0 -\u003e returns 0","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"        assertEquals(examList1.getIndex(exam1), 0);","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"        // has exam at index 1 -\u003e return 1","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"markuz5116"},"content":"        assertEquals(examList1.getIndex(exam2), 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"markuz5116"},"content":"    public void deleteAt() {","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"markuz5116"},"content":"        // remove exam at index 0 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.deleteAt(0).equals(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.size() \u003d\u003d 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"markuz5116"},"content":"        // remove exam at index 1 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.deleteAt(1).equals(exam2));","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.size() \u003d\u003d 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"markuz5116"},"content":"    public void delete() {","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"markuz5116"},"content":"        // remove exam at index 1 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.delete(exam2).equals(exam2));","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"markuz5116"},"content":"        // remove exam at index 0 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.delete(exam1).equals(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"markuz5116"},"content":"    public void find() {","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.find(date1).equals(new ExamList()));","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.find(null).equals(new ExamList()));","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"        // list has the exam with the date and time -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.find(date1).equals(examList1));","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"markuz5116"},"content":"        // list had no exam with the date and time -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.find(date2).equals(examList1));","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"markuz5116"},"content":"        // list has multiple exams with the date time -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"markuz5116"},"content":"        examList2.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"markuz5116"},"content":"        examList2.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.find(date1).equals(examList2));","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"markuz5116"},"content":"    public void get() {","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"markuz5116"},"content":"        // exam at index 0 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.get(0).equals(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"markuz5116"},"content":"        // exam at index 1 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":186,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.get(1).equals(exam2));","lastModifiedDate":"2021-03-18"},{"lineNumber":187,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"markuz5116"},"content":"    public void hasNoExam() {","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e return true","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.hasNoExam());","lastModifiedDate":"2021-03-18"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"markuz5116"},"content":"        // non-empty list -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":196,"author":{"gitId":"markuz5116"},"content":"        assertFalse(examList1.hasNoExam());","lastModifiedDate":"2021-03-18"},{"lineNumber":197,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"markuz5116"},"content":"    public void getExam() {","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"markuz5116"},"content":"        List\u003cExam\u003e exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.getExams().equals(exams));","lastModifiedDate":"2021-03-18"},{"lineNumber":205,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"markuz5116"},"content":"        // has one exam -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"markuz5116"},"content":"        exams.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.getExams().equals(exams));","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"markuz5116"},"content":"        // has two exams -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":213,"author":{"gitId":"markuz5116"},"content":"        exams.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":214,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.getExams().equals(exams));","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"markuz5116"},"content":"    public void getExamAt() {","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":220,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"markuz5116"},"content":"        // exam at index 0 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.getExamAt(0).equals(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"markuz5116"},"content":"        // exam at index 1 -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.getExamAt(1).equals(exam2));","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"markuz5116"},"content":"    public void testToString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.toString().equals(ExamList.NO_EXAMS_OUTPUT));","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"markuz5116"},"content":"        // non-empty list -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"markuz5116"},"content":"        examList1.add(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":237,"author":{"gitId":"markuz5116"},"content":"        String output \u003d \"Exams: \\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"markuz5116"},"content":"                + \"1. \" + exam1.toString() + \"\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"markuz5116"},"content":"                + \"2. \" + exam2.toString() + \"\\n\";","lastModifiedDate":"2021-03-18"},{"lineNumber":240,"author":{"gitId":"markuz5116"},"content":"        assertTrue(examList1.toString().equals(output));","lastModifiedDate":"2021-03-18"},{"lineNumber":241,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"markuz5116"},"content":"    public void set() {","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"markuz5116"},"content":"        ExamList exams1 \u003d new ExamList();","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"markuz5116"},"content":"        ExamList exams2 \u003d new ExamList();","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"markuz5116"},"content":"        exams1.add(exam1);","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"markuz5116"},"content":"        exams2.add(exam2);","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"markuz5116"},"content":"        // set exam1 to exam2 at index 0","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"markuz5116"},"content":"        exams1.set(0, exam2);","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"markuz5116"},"content":"        assertEquals(exams1, exams2);","lastModifiedDate":"2021-03-30"},{"lineNumber":254,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"markuz5116":255}},{"path":"src/test/java/seedu/address/model/module/ExamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_2;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"public class ExamTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    private LocalDateTime date1 \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_1,","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"            Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private LocalDateTime date2 \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_2,","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"            Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"    private Tag tag1 \u003d new Tag(\"Mod1\");","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    private Tag tag2 \u003d new Tag(\"Mod2\");","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    private Exam exam1 \u003d new Exam(date1, tag1);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"    private Exam exam2 \u003d new Exam(date2, tag2);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    private Exam exam3 \u003d new Exam(date1, tag2);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    private Exam exam4 \u003d new Exam(date2, tag1);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        assertTrue(exam1.equals(exam1));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam1.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        // different instance -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam1.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        Exam copyExam2 \u003d new Exam(date2, tag2);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        assertTrue(exam2.equals(copyExam2));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam2.equals(exam3));","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam2.equals(exam4));","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"    public void isAt() {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"        // same date -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"        assertTrue(exam1.isAt(date1));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam1.isAt(date2));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam2.isAt(date1));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        // different day -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"        LocalDateTime edittedDate \u003d LocalDateTime.parse(\"15/05/2021 1300\",","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"                Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam3.isAt(edittedDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"        // different month -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"        edittedDate \u003d LocalDateTime.parse(\"03/11/2021 1300\", Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam1.isAt(edittedDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"        // different year -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        edittedDate \u003d LocalDateTime.parse(\"03/05/2020 1300\", Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam1.isAt(edittedDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        // different hour -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"        edittedDate \u003d LocalDateTime.parse(\"03/05/2021 0100\", Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam3.isAt(edittedDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"        // different minutes -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"        edittedDate \u003d LocalDateTime.parse(\"03/05/2021 1359\", Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"        assertFalse(exam3.isAt(edittedDate));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"    public void testToString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"        assertEquals(exam1.toString(), exam1.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"        String expectedString \u003d Exam.EXAM_HEADER + Exam.EXAM_DATE_FORMATTER.format(date1);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"        assertEquals(expectedString, exam1.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"        // different header -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"        expectedString \u003d \"HI \" + Exam.EXAM_DATE_FORMATTER.format(date2);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"        assertNotEquals(expectedString, exam2.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"        expectedString \u003d Exam.EXAM_HEADER + Exam.EXAM_DATE_FORMATTER.format(date2);","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"        assertNotEquals(expectedString, exam1.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"markuz5116":98}},{"path":"src/test/java/seedu/address/model/module/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DESCRIPTION_2;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_2;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2101;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2103;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.testutil.TypicalRemindMe.DATE_1;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.testutil.TypicalRemindMe.DATE_2;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_1;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_2;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"import seedu.address.testutil.typicalmodules.ModuleBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"public class ModuleTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    private final Assignment assignment1 \u003d new Assignment(new Description(VALID_ASSIGNMENT_DESCRIPTION_1),","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"            DATE_1, new Tag(\"MOD1\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"    private final Assignment assignment2 \u003d new Assignment(new Description(VALID_ASSIGNMENT_DESCRIPTION_2),","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"            DATE_2, new Tag(\"MOD2\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"    private final Exam exam1 \u003d new Exam(DATE_1, new Tag(\"MOD1\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    private final Exam exam2 \u003d new Exam(DATE_2, new Tag(\"MOD2\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"    public void isSameModule() {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        Module mod1 \u003d new ModuleBuilder(MOD_1).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        // same instance -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod1.isSameModule(mod1));","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.isSameModule(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        // same title, all other attributes are different -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"        Module moduleCompared \u003d new ModuleBuilder(MOD_1)","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"                .withAssignments(VALID_ASSIGNMENT_DESCRIPTION_1, VALID_ASSIGNMENT_DESCRIPTION_2)","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"                .withExams(VALID_EXAM_DATETIME_1, VALID_EXAM_DATETIME_2).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod1.isSameModule(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        // different title, but all other attributes are similar -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        moduleCompared \u003d new ModuleBuilder(MOD_1).withTitle(VALID_TITLE_CS2101).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.isSameModule(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        // title is lowered case, all other attributes are the same -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        moduleCompared \u003d new ModuleBuilder(MOD_1)","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"                .withTitle(VALID_TITLE_CS2103.toLowerCase()).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.isSameModule(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"        // title has whitespaces trailing, all other attributes are the same -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        String titleWithTrailingSpaces \u003d VALID_TITLE_CS2103 + \"    \";","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        moduleCompared \u003d new ModuleBuilder(MOD_1).withTitle(titleWithTrailingSpaces).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.isSameModule(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        Module mod1 \u003d new ModuleBuilder(MOD_1).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        Module mod2 \u003d new ModuleBuilder(MOD_2).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"        // same instance -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod1.equals(mod1));","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"        Module moduleCompared \u003d new ModuleBuilder(MOD_1).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod1.equals(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        // different class -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.equals(\"HI\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.equals(mod2));","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"        moduleCompared \u003d new ModuleBuilder(MOD_1).withTitle(VALID_TITLE_CS2101).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.equals(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"        // different assignments -\u003e return false","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"        moduleCompared \u003d new ModuleBuilder(MOD_1)","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"                .withAssignments(VALID_ASSIGNMENT_DESCRIPTION_1).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.equals(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"        // different exams -\u003e return false","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"        moduleCompared \u003d new ModuleBuilder(MOD_1)","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"                .withExams(VALID_EXAM_DATETIME_1).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.equals(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"    public void editTitle() {","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"        Module mod1 \u003d new ModuleBuilder(MOD_1).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"        Module mod2 \u003d new ModuleBuilder(MOD_2).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"        // same title -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod1.equals(mod1));","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"        Module moduleCompared \u003d new ModuleBuilder(MOD_1).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"        moduleCompared.editTitle(new Title(\"MOD 2\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"        assertFalse(mod1.equals(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"markuz5116"},"content":"        // same title after changing -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod2.equals(moduleCompared));","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"    public void getAssignment() {","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"        Module copyMod1 \u003d new ModuleBuilder(MOD_1).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"        copyMod1.addAssignment(assignment1);","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"        copyMod1.addAssignment(assignment2);","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"        // assignment at index 0 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod1.getAssignment(0).equals(assignment1));","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"        // assignment at index 1 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod1.getAssignment(1).equals(assignment2));","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"    public void getExamAt() {","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"markuz5116"},"content":"        Module copyMod2 \u003d new ModuleBuilder(MOD_2).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"markuz5116"},"content":"        copyMod2.addExam(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"markuz5116"},"content":"        copyMod2.addExam(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"        // exam at index 0 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod2.getExam(0).equals(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"markuz5116"},"content":"        // exam at index 1 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod2.getExam(1).equals(exam2));","lastModifiedDate":"2021-03-18"},{"lineNumber":135,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":136,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"    public void hasAssignment() {","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"markuz5116"},"content":"        Module copyMod2 \u003d new ModuleBuilder(MOD_2).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"markuz5116"},"content":"        // empty list","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod2.hasAssignment(assignment1));","lastModifiedDate":"2021-03-18"},{"lineNumber":142,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"markuz5116"},"content":"        // has assignment -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"markuz5116"},"content":"        copyMod2.addAssignment(assignment1);","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod2.hasAssignment(assignment1));","lastModifiedDate":"2021-03-18"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":147,"author":{"gitId":"markuz5116"},"content":"        // does not have the assignment -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":148,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod2.hasAssignment(assignment2));","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"markuz5116"},"content":"        // index------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"markuz5116"},"content":"        Module copyMod1 \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasAssignment(0));","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"markuz5116"},"content":"        // one assignment in the list -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"markuz5116"},"content":"        copyMod1.addAssignment(assignment2);","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod1.hasAssignment(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"markuz5116"},"content":"        // index \u003c\u003d 0 -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasAssignment(0));","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasAssignment(-2));","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"markuz5116"},"content":"        // index \u003d size of assignment list -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod1.hasAssignment(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"markuz5116"},"content":"        // index \u003e size of assignment list -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasAssignment(2));","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasAssignment(5));","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"markuz5116"},"content":"    public void hasExam() {","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"markuz5116"},"content":"        Module copyMod2 \u003d new ModuleBuilder(MOD_2).emptyBuild();","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"markuz5116"},"content":"        // empty list","lastModifiedDate":"2021-03-18"},{"lineNumber":176,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod2.hasExam(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":178,"author":{"gitId":"markuz5116"},"content":"        // has exam -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":179,"author":{"gitId":"markuz5116"},"content":"        copyMod2.addExam(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod2.hasExam(exam2));","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":182,"author":{"gitId":"markuz5116"},"content":"        // does not have exam -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod2.hasExam(exam1));","lastModifiedDate":"2021-03-18"},{"lineNumber":184,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"markuz5116"},"content":"        // index------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"markuz5116"},"content":"        Module copyMod1 \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasExam(0));","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"markuz5116"},"content":"        // one assignment in the list -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"markuz5116"},"content":"        copyMod1.addExam(exam1);","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod1.hasExam(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"markuz5116"},"content":"        // index \u003c\u003d 0 -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasExam(0));","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasExam(-2));","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"markuz5116"},"content":"        // index \u003d size of assignment list -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"markuz5116"},"content":"        assertTrue(copyMod1.hasExam(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"markuz5116"},"content":"        // index \u003e size of assignment list -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasExam(2));","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"markuz5116"},"content":"        assertFalse(copyMod1.hasExam(5));","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":206,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":207,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"markuz5116"},"content":"    public void deleteAssignment() {","lastModifiedDate":"2021-03-18"},{"lineNumber":209,"author":{"gitId":"markuz5116"},"content":"        Module mod1Copy \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-18"},{"lineNumber":210,"author":{"gitId":"markuz5116"},"content":"        mod1Copy.addAssignment(assignment1);","lastModifiedDate":"2021-03-18"},{"lineNumber":211,"author":{"gitId":"markuz5116"},"content":"        mod1Copy.addAssignment(assignment2);","lastModifiedDate":"2021-03-18"},{"lineNumber":212,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":213,"author":{"gitId":"markuz5116"},"content":"        // delete assignment at index 0 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":214,"author":{"gitId":"markuz5116"},"content":"        mod1Copy.deleteAssignment(assignment1);","lastModifiedDate":"2021-03-18"},{"lineNumber":215,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod1Copy.getAssignment(0).equals(assignment2));","lastModifiedDate":"2021-03-18"},{"lineNumber":216,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":217,"author":{"gitId":"markuz5116"},"content":"        // delete assignment at index 1 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"markuz5116"},"content":"        mod1Copy.addAssignment(assignment1);","lastModifiedDate":"2021-03-18"},{"lineNumber":219,"author":{"gitId":"markuz5116"},"content":"        mod1Copy.deleteAssignment(assignment1);","lastModifiedDate":"2021-03-18"},{"lineNumber":220,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod1Copy.getAssignment(0).equals(assignment2));","lastModifiedDate":"2021-03-18"},{"lineNumber":221,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":222,"author":{"gitId":"markuz5116"},"content":"        // delete using index","lastModifiedDate":"2021-03-18"},{"lineNumber":223,"author":{"gitId":"markuz5116"},"content":"        mod1Copy \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"markuz5116"},"content":"        Module mod2Copy \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"markuz5116"},"content":"        mod1Copy.addAssignment(assignment2);","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"markuz5116"},"content":"        mod1Copy.addAssignment(assignment1);","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"markuz5116"},"content":"        mod2Copy.addAssignment(assignment2);","lastModifiedDate":"2021-03-18"},{"lineNumber":228,"author":{"gitId":"markuz5116"},"content":"        mod2Copy.addAssignment(assignment1);","lastModifiedDate":"2021-03-18"},{"lineNumber":229,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"markuz5116"},"content":"        // delete at index 1 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":231,"author":{"gitId":"markuz5116"},"content":"        mod1Copy.deleteAssignment(1);","lastModifiedDate":"2021-03-18"},{"lineNumber":232,"author":{"gitId":"markuz5116"},"content":"        mod2Copy.deleteAssignment(assignment1);","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod1Copy.equals(mod2Copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"markuz5116"},"content":"        // delete at index 0 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"markuz5116"},"content":"        mod1Copy.deleteAssignment(assignment2);","lastModifiedDate":"2021-03-18"},{"lineNumber":237,"author":{"gitId":"markuz5116"},"content":"        mod2Copy.deleteAssignment(0);","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod1Copy.equals(mod2Copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":240,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":241,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":242,"author":{"gitId":"markuz5116"},"content":"    public void deleteExam() {","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"markuz5116"},"content":"        Module mod2Copy1 \u003d new ModuleBuilder(MOD_2).emptyBuild();","lastModifiedDate":"2021-03-18"},{"lineNumber":244,"author":{"gitId":"markuz5116"},"content":"        Module mod2Copy2 \u003d new ModuleBuilder(MOD_2).emptyBuild();","lastModifiedDate":"2021-03-18"},{"lineNumber":245,"author":{"gitId":"markuz5116"},"content":"        mod2Copy1.addExam(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":246,"author":{"gitId":"markuz5116"},"content":"        mod2Copy1.addExam(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":247,"author":{"gitId":"markuz5116"},"content":"        mod2Copy2.addExam(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":248,"author":{"gitId":"markuz5116"},"content":"        mod2Copy2.addExam(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":249,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":250,"author":{"gitId":"markuz5116"},"content":"        // delete exam2 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":251,"author":{"gitId":"markuz5116"},"content":"        mod2Copy1.deleteExam(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":252,"author":{"gitId":"markuz5116"},"content":"        mod2Copy2.deleteExam(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":253,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod2Copy1.equals(mod2Copy2));","lastModifiedDate":"2021-03-18"},{"lineNumber":254,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":255,"author":{"gitId":"markuz5116"},"content":"        // delete exam1 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":256,"author":{"gitId":"markuz5116"},"content":"        mod2Copy1.deleteExam(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":257,"author":{"gitId":"markuz5116"},"content":"        mod2Copy2.deleteExam(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":258,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod2Copy1.equals(mod2Copy2));","lastModifiedDate":"2021-03-18"},{"lineNumber":259,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":260,"author":{"gitId":"markuz5116"},"content":"        // delete using index","lastModifiedDate":"2021-03-18"},{"lineNumber":261,"author":{"gitId":"markuz5116"},"content":"        mod2Copy1.addExam(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":262,"author":{"gitId":"markuz5116"},"content":"        mod2Copy1.addExam(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":263,"author":{"gitId":"markuz5116"},"content":"        mod2Copy2.addExam(exam2);","lastModifiedDate":"2021-03-18"},{"lineNumber":264,"author":{"gitId":"markuz5116"},"content":"        mod2Copy2.addExam(exam1);","lastModifiedDate":"2021-03-18"},{"lineNumber":265,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":266,"author":{"gitId":"markuz5116"},"content":"        // delete at index 1 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":267,"author":{"gitId":"markuz5116"},"content":"        mod2Copy1.deleteExam(1);","lastModifiedDate":"2021-03-18"},{"lineNumber":268,"author":{"gitId":"markuz5116"},"content":"        mod2Copy2.deleteExam(1);","lastModifiedDate":"2021-03-18"},{"lineNumber":269,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod2Copy1.equals(mod2Copy2));","lastModifiedDate":"2021-03-18"},{"lineNumber":270,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":271,"author":{"gitId":"markuz5116"},"content":"        // delete at index 0 -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":272,"author":{"gitId":"markuz5116"},"content":"        mod2Copy1.deleteExam(0);","lastModifiedDate":"2021-03-18"},{"lineNumber":273,"author":{"gitId":"markuz5116"},"content":"        mod2Copy2.deleteExam(0);","lastModifiedDate":"2021-03-18"},{"lineNumber":274,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod2Copy1.equals(mod2Copy2));","lastModifiedDate":"2021-03-18"},{"lineNumber":275,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod2Copy1.getExams().equals(new ExamList()));","lastModifiedDate":"2021-03-18"},{"lineNumber":276,"author":{"gitId":"markuz5116"},"content":"        assertTrue(mod2Copy2.getExams().equals(new ExamList()));","lastModifiedDate":"2021-03-18"},{"lineNumber":277,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":278,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":279,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":280,"author":{"gitId":"markuz5116"},"content":"    public void compareTo() {","lastModifiedDate":"2021-03-18"},{"lineNumber":281,"author":{"gitId":"markuz5116"},"content":"        Module mod1 \u003d new ModuleBuilder(MOD_1).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"markuz5116"},"content":"        Module mod2 \u003d new ModuleBuilder(MOD_2).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"markuz5116"},"content":"        // same module -\u003e returns 0","lastModifiedDate":"2021-03-18"},{"lineNumber":284,"author":{"gitId":"markuz5116"},"content":"        assertEquals(0, mod1.compareTo(mod1));","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":286,"author":{"gitId":"markuz5116"},"content":"        // different titles -\u003e return -1","lastModifiedDate":"2021-03-18"},{"lineNumber":287,"author":{"gitId":"markuz5116"},"content":"        assertEquals(-1, mod1.compareTo(mod2));","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":289,"author":{"gitId":"markuz5116"},"content":"        // different titles -\u003e return 1","lastModifiedDate":"2021-03-18"},{"lineNumber":290,"author":{"gitId":"markuz5116"},"content":"        assertEquals(mod2.compareTo(mod1), 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":292,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"markuz5116"},"content":"    public void toggleAssignmentDoneStatus() {","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"markuz5116"},"content":"        Module mod1 \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"markuz5116"},"content":"        Module mod2 \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"markuz5116"},"content":"        mod1.addAssignment(new Assignment(assignment1.description, assignment1.deadline,","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"markuz5116"},"content":"                new Tag(\"Test\"), false));","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"markuz5116"},"content":"        mod2.addAssignment(new Assignment(assignment1.description, assignment1.deadline,","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"markuz5116"},"content":"                new Tag(\"Test\"), true));","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"markuz5116"},"content":"        // toggle assignment done at index 0","lastModifiedDate":"2021-03-30"},{"lineNumber":304,"author":{"gitId":"markuz5116"},"content":"        mod1.toggleAssignmentDoneStatus(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"markuz5116"},"content":"        assertEquals(mod1, mod2);","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"markuz5116"},"content":"    public void editAssignment() {","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"markuz5116"},"content":"        // for description --------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"markuz5116"},"content":"        Module mod1 \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"markuz5116"},"content":"        Module mod2 \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"markuz5116"},"content":"        mod1.addAssignment(new Assignment(assignment1.description, assignment1.deadline,","lastModifiedDate":"2021-03-30"},{"lineNumber":314,"author":{"gitId":"markuz5116"},"content":"                new Tag(\"Test\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":315,"author":{"gitId":"markuz5116"},"content":"        mod2.addAssignment(new Assignment(assignment2.description, assignment1.deadline,","lastModifiedDate":"2021-03-30"},{"lineNumber":316,"author":{"gitId":"markuz5116"},"content":"                new Tag(\"Test\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":317,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":318,"author":{"gitId":"markuz5116"},"content":"        // edit assignment description at index 0","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"markuz5116"},"content":"        mod1.editAssignment(0, assignment2.description);","lastModifiedDate":"2021-03-30"},{"lineNumber":320,"author":{"gitId":"markuz5116"},"content":"        assertEquals(mod1, mod2);","lastModifiedDate":"2021-03-30"},{"lineNumber":321,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":322,"author":{"gitId":"markuz5116"},"content":"        // for date --------------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":323,"author":{"gitId":"markuz5116"},"content":"        mod1 \u003d new ModuleBuilder(MOD_2).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":324,"author":{"gitId":"markuz5116"},"content":"        mod2 \u003d new ModuleBuilder(MOD_2).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"markuz5116"},"content":"        mod1.addAssignment(new Assignment(assignment1.description, assignment1.deadline,","lastModifiedDate":"2021-03-30"},{"lineNumber":326,"author":{"gitId":"markuz5116"},"content":"                new Tag(\"Test\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"markuz5116"},"content":"        mod2.addAssignment(new Assignment(assignment1.description, assignment2.deadline,","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"markuz5116"},"content":"                new Tag(\"Test\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":329,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":330,"author":{"gitId":"markuz5116"},"content":"        // edit assignment date at index 0","lastModifiedDate":"2021-03-30"},{"lineNumber":331,"author":{"gitId":"markuz5116"},"content":"        mod2.editAssignment(0, assignment1.deadline);","lastModifiedDate":"2021-03-30"},{"lineNumber":332,"author":{"gitId":"markuz5116"},"content":"        assertEquals(mod1, mod2);","lastModifiedDate":"2021-03-30"},{"lineNumber":333,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":334,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":336,"author":{"gitId":"markuz5116"},"content":"    public void editExam() {","lastModifiedDate":"2021-03-30"},{"lineNumber":337,"author":{"gitId":"markuz5116"},"content":"        Module mod1 \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":338,"author":{"gitId":"markuz5116"},"content":"        Module mod2 \u003d new ModuleBuilder(MOD_1).emptyBuild();","lastModifiedDate":"2021-03-30"},{"lineNumber":339,"author":{"gitId":"markuz5116"},"content":"        mod1.addExam(new Exam(exam1.examDate, new Tag(\"TEST\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":340,"author":{"gitId":"markuz5116"},"content":"        mod2.addExam(new Exam(exam2.examDate, new Tag(\"TEST\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":341,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":342,"author":{"gitId":"markuz5116"},"content":"        // edit exam date at index 0","lastModifiedDate":"2021-03-30"},{"lineNumber":343,"author":{"gitId":"markuz5116"},"content":"        mod1.editExam(0, exam2.examDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":344,"author":{"gitId":"markuz5116"},"content":"        assertEquals(mod1, mod2);","lastModifiedDate":"2021-03-30"},{"lineNumber":345,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":346,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":346}},{"path":"src/test/java/seedu/address/model/module/TitleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"public class TitleContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    private final List\u003cString\u003e keywords1 \u003d Collections.singletonList(\"MOD1\");","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    private final List\u003cString\u003e keywords2 \u003d Arrays.asList(\"MOD2\", \"MOD1\");","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    private final Title title1 \u003d new Title(\"MOD1\");","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    private final Title title2 \u003d new Title(\"MOD2\");","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    private final Title title3 \u003d new Title(\"MOD3 MOD4\");","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate predicate1 \u003d new TitleContainsKeywordsPredicate(keywords1);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate predicate2 \u003d new TitleContainsKeywordsPredicate(keywords2);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate1.equals(predicate1));","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate copyPredicate2 \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"                new TitleContainsKeywordsPredicate(keywords2);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate2.equals(copyPredicate2));","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        // different instances -\u003e return false","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        assertFalse(predicate1.equals(2));","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        assertFalse(predicate2.equals(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        // different attributes -\u003e return false","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"        assertFalse(predicate1.equals(predicate2));","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"    public void test_titleDoesNotContainKeywords_returnFalse() {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"                new TitleContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        assertFalse(predicate.test(new Module(title1)));","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        // Non-matching keywords","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Collections.singletonList(\"MOD3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"        assertFalse(predicate.test(new Module(title2)));","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"    public void test_titleContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        // One keyword","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        TitleContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"                new TitleContainsKeywordsPredicate(Arrays.asList(\"MOD2\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate.test(new Module(title2)));","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"MOD3\", \"MOD3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate.test(new Module(title3)));","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"MOD3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate.test(new Module(title3)));","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"mOd3\", \"MoD3\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        assertTrue(predicate.test(new Module(title3)));","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"markuz5116":73}},{"path":"src/test/java/seedu/address/model/module/UniqueModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"public class UniqueModuleListTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    private final Title title1 \u003d new Title(\"MOD1\");","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"    private final Title title2 \u003d new Title(\"MOD2\");","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    private final Module mod1 \u003d new Module(title1);","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    private final Module mod2 \u003d new Module(title2);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"    public void add() {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList uniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.add(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        // add a module","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        uniqueModuleList.add(mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"        assertEquals(uniqueModuleList.size(), 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        // add another event","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        uniqueModuleList.add(mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"        assertEquals(uniqueModuleList.size(), 2);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"        // add duplicate event -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e uniqueModuleList.add(mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"    public void contains() {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList uniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"        assertFalse(uniqueModuleList.contains(mod1));","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"        // list contains the module -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        uniqueModuleList.add(mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        assertTrue(uniqueModuleList.contains(mod1));","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"        // list does not contain the module -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"        assertFalse(uniqueModuleList.contains(mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.contains(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"    public void getModule() {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList uniqueModuleList \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueModuleList.getModule(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        // module does not exist with empty list -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e uniqueModuleList.getModule(mod1));","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"        uniqueModuleList.add(mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        // module does not exist and list is not empty -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e uniqueModuleList.getModule(mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"        // module exists -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"        assertEquals(mod1, uniqueModuleList.getModule(mod1));","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"        uniqueModuleList.add(mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"        assertEquals(mod2, uniqueModuleList.getModule(mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"        // Using index --------------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList uniqueModuleList2 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"        // empty list -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e uniqueModuleList2.getModule(0));","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"        // index \u003c 1 -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e uniqueModuleList2.getModule(0));","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"markuz5116"},"content":"        uniqueModuleList2.add(mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"markuz5116"},"content":"        // index \u003e size -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e uniqueModuleList2.getModule(2));","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"markuz5116"},"content":"        // get module at index 1 -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"markuz5116"},"content":"        assertEquals(mod1, uniqueModuleList2.getModule(1));","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"markuz5116"},"content":"        uniqueModuleList2.add(mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"markuz5116"},"content":"        // get module at index 2 -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"markuz5116"},"content":"        assertEquals(mod2, uniqueModuleList2.getModule(2));","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"markuz5116"},"content":"    public void setModule() {","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list1 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.setModule(null, null));","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.setModule(null, mod1));","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.setModule(mod1, null));","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"markuz5116"},"content":"        list1.add(mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"markuz5116"},"content":"        // set mod1 to mod2 for list1","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list2 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"markuz5116"},"content":"        list2.add(mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"markuz5116"},"content":"        list1.setModule(mod1, mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list1, list2);","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"markuz5116"},"content":"        // duplicate module -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list3 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"markuz5116"},"content":"        list3.add(mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"markuz5116"},"content":"        list3.add(mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"markuz5116"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e list3.setModule(mod1, mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"markuz5116"},"content":"    public void remove() {","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list1 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.remove(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"markuz5116"},"content":"        list1.add(mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"markuz5116"},"content":"        // remove event not found -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"markuz5116"},"content":"        assertThrows(ModuleNotFoundException.class, () -\u003e list1.remove(mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list2 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"markuz5116"},"content":"        list2.add(mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"markuz5116"},"content":"        list2.add(mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"markuz5116"},"content":"        list2.remove(mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list1, list2);","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"markuz5116"},"content":"    public void setModules() {","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"markuz5116"},"content":"        // List\u003cModule\u003e ---------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list1 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list2 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list1.setModules((List\u003cModule\u003e) null));","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list2.setModules((UniqueModuleList) null));","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"markuz5116"},"content":"        List\u003cModule\u003e input1 \u003d List.\u003cModule\u003eof(mod1, mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"markuz5116"},"content":"        // set input contains duplicate -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"markuz5116"},"content":"        assertThrows(DuplicateModuleException.class, () -\u003e list1.setModules(input1));","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"markuz5116"},"content":"        List\u003cModule\u003e input2 \u003d List.\u003cModule\u003eof(mod1, mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"markuz5116"},"content":"        list1.add(mod1);","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"markuz5116"},"content":"        list1.add(mod2);","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"markuz5116"},"content":"        list2.setModules(input2);","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"markuz5116"},"content":"        // same mods -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list1, list2);","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"markuz5116"},"content":"        // UniqueModuleList -------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList inputUniqueList \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"markuz5116"},"content":"        inputUniqueList.setModules(List.of(mod1, mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list3 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e throws","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e list3.setModules((UniqueModuleList) null));","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"markuz5116"},"content":"        // set list3 with inputUniqueList","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"markuz5116"},"content":"        list3.setModules(inputUniqueList);","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"markuz5116"},"content":"        assertEquals(list3, inputUniqueList);","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"markuz5116"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"markuz5116"},"content":"    public void equals() {","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list1 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"markuz5116"},"content":"        UniqueModuleList list2 \u003d new UniqueModuleList();","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"markuz5116"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list1.equals(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"markuz5116"},"content":"        // different instance -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"markuz5116"},"content":"        list2.setModules(Collections.singletonList(mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list2.equals(2));","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"markuz5116"},"content":"        // different modules -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"markuz5116"},"content":"        list1.setModules(Collections.singletonList(mod1));","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"markuz5116"},"content":"        list2.setModules(Collections.singletonList(mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list1.equals(list2));","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"markuz5116"},"content":"        // different size -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"markuz5116"},"content":"        list2.setModules(List.of(mod2, mod1));","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list1.equals(list2));","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"markuz5116"},"content":"        // different order -\u003e returns false","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"markuz5116"},"content":"        list1.setModules(List.of(mod1, mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"markuz5116"},"content":"        assertFalse(list1.equals(list2));","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"markuz5116"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list1.equals(list1));","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"markuz5116"},"content":"        // same attributes -\u003e returns true","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"markuz5116"},"content":"        list1.setModules(List.of(mod1, mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"markuz5116"},"content":"        list2.setModules(List.of(mod1, mod2));","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"markuz5116"},"content":"        assertTrue(list1.equals(list2));","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"markuz5116":214}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"public class BirthdayTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maikongeh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maikongeh"},"content":"    public void constructor_invalidBirthday_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"        String invalidBirthday \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new Birthday(invalidBirthday));","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"maikongeh"},"content":"    public void isValidBirthday() {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maikongeh"},"content":"        // null birthday","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maikongeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthday.isValidBirthday(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"        // blank email","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"maikongeh"},"content":"        assertFalse(Birthday.isValidBirthday(\"\")); // empty string","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"maikongeh"},"content":"        assertFalse(Birthday.isValidBirthday(\" \")); // spaces only","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"maikongeh"},"content":"        // missing parts","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        assertFalse(Birthday.isValidBirthday(\"1999-12\")); // missing local part","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"maikongeh"},"content":"        assertFalse(Birthday.isValidBirthday(\"1999\")); // missing local part","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"maikongeh"},"content":"        assertFalse(Birthday.isValidBirthday(\"-12-15\")); // missing local part","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        // invalid parts","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"maikongeh"},"content":"        assertFalse(Birthday.isValidBirthday(\"abcde\")); // invalid input. Should be all int","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"        assertFalse(Birthday.isValidBirthday(\"@@@@\")); //invalid input. Should not have special characters","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"        assertFalse(Birthday.isValidBirthday(\"12-12-1998\")); // invalid ordering. Should be YYYY-MM-DD","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        assertFalse(Birthday.isValidBirthday(\"1998-10-22\")); // invalid formatting. use / instead of -","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        // valid birthdays","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        assertTrue(Birthday.isValidBirthday(\"12/12/1999\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        assertTrue(Birthday.isValidBirthday(\"10/10/2000\")); // minimal","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        assertTrue(Birthday.isValidBirthday(\"12/12/1998\")); // alphabets only","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"maikongeh"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":7,"Hzxin":4,"maikongeh":39}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        // Keywords does not match name","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Main\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\")","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"                .build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"markuz5116":4,"-":71}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"maikongeh":2,"-":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.ALICE;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"markuz5116":2,"Hzxin":2,"-":72}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.ALICE;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"markuz5116"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"markuz5116":2,"Hzxin":2,"-":165}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAssignmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2103;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.storage.JsonAdaptedAssignment.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.storage.JsonAdaptedAssignment.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_ASSIGNMENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"class JsonAdaptedAssignmentTest {","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private static final String INVALID_DEADLINE \u003d \"35-01-2020 2359\";","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    void toModelType_validAssignmentDetails_returnAssignment() throws Exception {","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedAssignment assignment \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedAssignment(VALID_ASSIGNMENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        assertEquals(VALID_ASSIGNMENT, assignment.toModelType());","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    void toModelType_invalidAssignmentDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedAssignment assignment \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedAssignment(INVALID_DESCRIPTION, VALID_EXAM_DATETIME_1, VALID_TITLE_CS2103, \"\");","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(Description.MESSAGE_CONSTRAINTS, Description.class.getSimpleName());","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assignment::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedAssignment assignment \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedAssignment(null, VALID_EXAM_DATETIME_1, VALID_TITLE_CS2103, \"\");","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assignment::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_invalidLocalDateTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedAssignment assignment \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedAssignment(VALID_ASSIGNMENT_DESCRIPTION_1, INVALID_DEADLINE, VALID_TITLE_CS2103, \"\");","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONSTRAINTS, LocalDateTime.class.getSimpleName());","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assignment::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_nullTag_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedAssignment assignment \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedAssignment(VALID_ASSIGNMENT_DESCRIPTION_1, VALID_EXAM_DATETIME_1, null, \"\");","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"            Tag.class.getSimpleName());","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assignment::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_invalidTag_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedAssignment assignment \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedAssignment(VALID_ASSIGNMENT_DESCRIPTION_1, VALID_EXAM_DATETIME_1, \"@\", \"\");","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assignment::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_nullDoneStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedAssignment assignment \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedAssignment(VALID_ASSIGNMENT_DESCRIPTION_1, VALID_EXAM_DATETIME_1, VALID_TITLE_CS2103, null);","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assignment::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"Hzxin":86}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedExamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2103;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.storage.JsonAdaptedExam.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.storage.JsonAdaptedExam.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_EXAM;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"class JsonAdaptedExamTest {","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    private static final String INVALID_EXAM_DATE \u003d \"35-01-2020 2359\";","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    void toModelType_validExamDetails_returnExam() throws Exception {","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedExam(VALID_EXAM);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"        assertEquals(VALID_EXAM, exam.toModelType());","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    void toModelType_nullExamDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedExam(null, VALID_TITLE_CS2103);","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LocalDateTime.class.getSimpleName());","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_invalidLocalDateTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedExam(INVALID_EXAM_DATE, VALID_TITLE_CS2103);","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONSTRAINTS, LocalDateTime.class.getSimpleName());","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_nullTag_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedExam(VALID_EXAM_DATETIME_1, null);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedExam.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"            Tag.class.getSimpleName());","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_invalidTag_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedExam(VALID_EXAM_DATETIME_1, \"@\");","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d Tag.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"Hzxin":66}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedGeneralEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DESCRIPTION_1;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.storage.JsonAdaptedGeneralEvent.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.storage.JsonAdaptedGeneralEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.testutil.TypicalRemindMe.VALID_GENERAL_EVENT_1;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"class JsonAdaptedGeneralEventTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    private static final String INVALID_DATE \u003d \"35-01-2020 2359\";","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    void toModelType_validGeneralEventDetails_returnGeneralEvent() throws Exception {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedGeneralEvent generalEvent \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"            new JsonAdaptedGeneralEvent(VALID_GENERAL_EVENT_1);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        assertEquals(VALID_GENERAL_EVENT_1, generalEvent.toModelType());","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    void toModelType_invalidGeneralEventDetails_throwsIllegalValueException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedGeneralEvent generalEvent \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"            new JsonAdaptedGeneralEvent(INVALID_DESCRIPTION, VALID_GENERAL_EVENT_DATE_1);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(Description.MESSAGE_CONSTRAINTS, Description.class.getSimpleName());","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, generalEvent::toModelType);","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedGeneralEvent generalEvent \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"            new JsonAdaptedGeneralEvent(null, VALID_GENERAL_EVENT_DATE_1);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, generalEvent::toModelType);","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_invalidLocalDateTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedGeneralEvent generalEvent \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"            new JsonAdaptedGeneralEvent(VALID_GENERAL_EVENT_DESCRIPTION_1, INVALID_DATE);","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONSTRAINTS, LocalDateTime.class.getSimpleName());","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, generalEvent::toModelType);","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"Hzxin":47,"jellymias":7}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.storage.JsonAdaptedModule.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_1;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_1_WITH_ASSIGNMENTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.MOD_1_WITH_EXAMS;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"public class JsonAdaptedModuleTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    void toModelType_validModuleDetails_returnModule() throws Exception {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(MOD_1);","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"        assertEquals(MOD_1, module.toModelType());","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    void toModelType_withExams_returnModule() throws Exception {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(MOD_1_WITH_EXAMS);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"        assertEquals(MOD_1_WITH_EXAMS, module.toModelType());","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    void toModelType_withAssignments_returnModule() throws Exception {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(MOD_1_WITH_ASSIGNMENTS);","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        assertEquals(MOD_1_WITH_ASSIGNMENTS, module.toModelType());","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(null, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"    void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedModule module \u003d new JsonAdaptedModule(\"\", new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"        String expectedMessage \u003d String.format(Title.MESSAGE_CONSTRAINTS, \"Modules\");","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, module::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"markuz5116":1,"Hzxin":51}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.BENSON;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"maikongeh"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"1999-16-16\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"maikongeh"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_BIRTHDAY, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_BIRTHDAY, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"maikongeh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_BIRTHDAY, invalidTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_nullBirthday_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_TAGS);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"            Birthday.class.getSimpleName());","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_invalidBirthday_throwsIllegalValueException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_BIRTHDAY, VALID_TAGS);","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"Hzxin"},"content":"        String expectedMessage \u003d Birthday.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Hzxin":9,"maikongeh":6,"-":59}},{"path":"src/test/java/seedu/address/storage/JsonRemindMeStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.ALICE;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.HOON;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.IDA;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"public class JsonRemindMeStorageTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonRemindMeStorageTest\");","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"    @TempDir","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"    public void readRemindMe_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"        assertThrows(NullPointerException.class, () -\u003e readRemindMe(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"    private java.util.Optional\u003cReadOnlyRemindMe\u003e readRemindMe(String filePath) throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"        return new JsonRemindMeStorage(Paths.get(filePath)).readRemindMe(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Hzxin"},"content":"                : null;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Hzxin"},"content":"        assertFalse(readRemindMe(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRemindMe(\"notJsonFormatRemindMe.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    public void readRemindMe_invalidPersonRemindMe_throwDataConversionException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRemindMe(\"invalidPersonRemindMe.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"    public void readRemindMe_invalidAndValidPersonRemindMe_throwDataConversionException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"        assertThrows(DataConversionException.class, () -\u003e readRemindMe(\"invalidAndValidPersonRemindMe.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"    public void readAndSaveRemindMe_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        Path filePath \u003d testFolder.resolve(\"TempRemindMe.json\");","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        RemindMe original \u003d getTypicalRemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"Hzxin"},"content":"        JsonRemindMeStorage jsonRemindMeStorage \u003d new JsonRemindMeStorage(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Hzxin"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Hzxin"},"content":"        jsonRemindMeStorage.saveRemindMe(original, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"        ReadOnlyRemindMe readBack \u003d jsonRemindMeStorage.readRemindMe(filePath).get();","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"        assertEquals(original, new RemindMe(readBack));","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Hzxin"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Hzxin"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Hzxin"},"content":"        jsonRemindMeStorage.saveRemindMe(original, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Hzxin"},"content":"        readBack \u003d jsonRemindMeStorage.readRemindMe(filePath).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"        assertEquals(original, new RemindMe(readBack));","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Hzxin"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"Hzxin"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Hzxin"},"content":"        jsonRemindMeStorage.saveRemindMe(original); // file path not specified","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"        readBack \u003d jsonRemindMeStorage.readRemindMe().get(); // file path not specified","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"markuz5116"},"content":"        assertEquals(original, new RemindMe(readBack));","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"    public void saveRemindMe_nullRemindMe_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRemindMe(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"     * Saves {@code remindMe} at the specified {@code filePath}.","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"    private void saveRemindMe(ReadOnlyRemindMe remindMe, String filePath) {","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"Hzxin"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"            new JsonRemindMeStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"Hzxin"},"content":"                    .saveRemindMe(remindMe, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"Hzxin"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"Hzxin"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"Hzxin"},"content":"    public void saveRemindMe_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveRemindMe(new RemindMe(), null));","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":9,"Hzxin":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableRemindMeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import seedu.address.testutil.TypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"public class JsonSerializableRemindMeTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableRemindMeTest\");","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsRemindMe.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Hzxin"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonRemindMe.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Hzxin"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonRemindMe.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    private static final Path DUPLICATE_MODULE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateModuleRemindMe.json\");","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"    private static final Path DUPLICATE_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventRemindMe.json\");","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        JsonSerializableRemindMe dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"            JsonSerializableRemindMe.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"        RemindMe remindMeFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"        RemindMe typicalPersonsRemindMe \u003d TypicalRemindMe.getTypicalRemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"        assertEquals(remindMeFromFile, typicalPersonsRemindMe);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        JsonSerializableRemindMe dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"                JsonSerializableRemindMe.class).get();","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"        JsonSerializableRemindMe dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"                JsonSerializableRemindMe.class).get();","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableRemindMe.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_duplicateModules_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"        JsonSerializableRemindMe dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MODULE_FILE,","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Hzxin"},"content":"            JsonSerializableRemindMe.class).get();","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableRemindMe.MESSAGE_DUPLICATE_MODULE,","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Hzxin"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Hzxin"},"content":"        JsonSerializableRemindMe dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENT_FILE,","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Hzxin"},"content":"            JsonSerializableRemindMe.class).get();","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Hzxin"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableRemindMe.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Hzxin"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"markuz5116":8,"Hzxin":27,"-":30}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"Hzxin"},"content":"        userPrefs.setRemindMeFilePath(Paths.get(\"remindMe.json\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Hzxin":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.testutil.TypicalRemindMe.getTypicalRemindMe;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"        JsonRemindMeStorage remindMeStorage \u003d new JsonRemindMeStorage(getTempFilePath(\"rm\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        storageManager \u003d new StorageManager(remindMeStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Hzxin"},"content":"    public void remindMeReadSave() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"         * {@link JsonRemindMeStorage} class.","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonRemindMeStorageTest} class.","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        RemindMe original \u003d getTypicalRemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Hzxin"},"content":"        storageManager.saveRemindMe(original);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"        ReadOnlyRemindMe retrieved \u003d storageManager.readRemindMe().get();","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"        assertEquals(original, new RemindMe(retrieved));","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"Hzxin"},"content":"    public void getRemindMeFilePath() {","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"Hzxin"},"content":"        assertNotNull(storageManager.getRemindMeFilePath());","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markuz5116":6,"Hzxin":8,"-":54}},{"path":"src/test/java/seedu/address/testutil/AssignmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":" * A utility class to help in building an assignment.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"public class AssignmentBuilder {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"description\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    public static final String DEFAULT_TAG \u003d \"CS2103\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"    public static final LocalDateTime DEFAULT_DEADLINE \u003d LocalDateTime.of(2021, 04, 24, 9, 00);","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"    public static final boolean DEFAULT_ISDONE \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"    private Description description;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    private Tag tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"    private boolean isDone;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     * Creates a {@code AssignmentBuilder} with default details;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"    public AssignmentBuilder() {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        this.description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"        this.deadline \u003d DEFAULT_DEADLINE;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"        this.tag \u003d new Tag(DEFAULT_TAG);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"        this.isDone \u003d DEFAULT_ISDONE;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"     * Sets the {@code Description} of the {@code Assignment} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    public AssignmentBuilder withDescription(String description) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"     * Sets the deadline of the {@code Assignment} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    public AssignmentBuilder withDeadline(LocalDateTime deadline) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"     * Sets the {@code Tag} of the {@code Assignment} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"    public AssignmentBuilder withTag(String tag) {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"     * Sets the done status of the {@code Assignment} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"    public AssignmentBuilder withDoneStatus(boolean isDone) {","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"    public Assignment build() {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"        return new Assignment(description, deadline, tag, isDone);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"banchiang":68}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"maikongeh"},"content":"        descriptor.setBirthday(person.getBirthday());","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"maikongeh"},"content":"     * Sets the {@code Birthday} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maikongeh"},"content":"    public EditPersonDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"maikongeh"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jellymias":1,"maikongeh":5,"-":61}},{"path":"src/test/java/seedu/address/testutil/ExamBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"public class ExamBuilder {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    public static final LocalDateTime DEFAULT_EXAM_DATE \u003d LocalDateTime.of(2021, 04, 24, 9, 00);","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    public static final String DEFAULT_TAG \u003d \"tag\";","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    private LocalDateTime examDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    private Tag tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * Creates a {@code ExamBuilder} with default details;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    public ExamBuilder() {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        this.examDate \u003d DEFAULT_EXAM_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        this.tag \u003d new Tag(DEFAULT_TAG);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"     * Sets the date of the {@code Exam} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    public ExamBuilder withExamDate(LocalDateTime examDate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        this.examDate \u003d examDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     * Sets the {@code Tag} of the {@code Exam} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    public ExamBuilder withTag(String tag) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    public Exam build() {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"        return new Exam(examDate, tag);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"banchiang":42}},{"path":"src/test/java/seedu/address/testutil/GeneralEventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"public class GeneralEventBuilder {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"This is a general Event\";","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"    public static final LocalDateTime DEFAULT_DATE \u003d LocalDateTime.of(2021, 04, 17, 12, 0);","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"    private Description description;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"    private LocalDateTime date;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"     * Creates a {@code GeneralEventBuilder} with default details;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"    public GeneralEventBuilder() {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"        this.description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"        this.date \u003d DEFAULT_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     * Creates a GeneralEventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    public GeneralEventBuilder(GeneralEvent eventToCopy) {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        this.description \u003d eventToCopy.getDescription();","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        this.date \u003d eventToCopy.getDateTime();","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"     * Sets the {@code Description} of the {@code GeneralEvent} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"    public GeneralEventBuilder withDescription(String description) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"     * Sets the date of the {@code GeneralEvent} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"    public GeneralEventBuilder withDate(LocalDateTime date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"    public GeneralEvent build() {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"        return new GeneralEvent(description, date);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"banchiang":42,"jellymias":8}},{"path":"src/test/java/seedu/address/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"banchiang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"banchiang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"banchiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"banchiang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"banchiang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"banchiang"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.ReadOnlyRemindMe;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"banchiang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"banchiang"},"content":"/**","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"banchiang"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"banchiang"},"content":" */","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"banchiang"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"banchiang"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"banchiang"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"banchiang"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"banchiang"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"banchiang"},"content":"    public Path getRemindMeFilePath() {","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"banchiang"},"content":"    public void setRemindMeFilePath(Path remindMeFilePath) {","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"banchiang"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"banchiang"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"banchiang"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"banchiang"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"banchiang"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":79,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"banchiang"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":86,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"banchiang"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":88,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":89,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":91,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"banchiang"},"content":"    public boolean hasModule(int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":94,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"banchiang"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"banchiang"},"content":"    public void deleteModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":105,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":106,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":107,"author":{"gitId":"banchiang"},"content":"    public void deleteExam(Module module, Exam exam) {","lastModifiedDate":"2021-04-06"},{"lineNumber":108,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":109,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":110,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":111,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":112,"author":{"gitId":"banchiang"},"content":"    public void deleteAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-04-06"},{"lineNumber":113,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":114,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":115,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":116,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":117,"author":{"gitId":"banchiang"},"content":"    public void deleteGeneralEvent(GeneralEvent generalEvent) {","lastModifiedDate":"2021-04-06"},{"lineNumber":118,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":119,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":120,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":121,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":122,"author":{"gitId":"banchiang"},"content":"    public Module getModule(Module module) {","lastModifiedDate":"2021-04-06"},{"lineNumber":123,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":124,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":125,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":126,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"banchiang"},"content":"    public Module getModule(int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":130,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":131,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":132,"author":{"gitId":"banchiang"},"content":"    public void setModule(Module target, Module editedMod) {","lastModifiedDate":"2021-04-06"},{"lineNumber":133,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":134,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":135,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":136,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":137,"author":{"gitId":"banchiang"},"content":"    public boolean hasAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-04-06"},{"lineNumber":138,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":139,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":140,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":141,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":142,"author":{"gitId":"banchiang"},"content":"    public boolean hasAssignment(Module module, int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":143,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":144,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":145,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":146,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":147,"author":{"gitId":"banchiang"},"content":"    public void editAssignment(Module module, int index, Description edit) {","lastModifiedDate":"2021-04-06"},{"lineNumber":148,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":149,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":150,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":151,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":152,"author":{"gitId":"banchiang"},"content":"    public void editAssignment(Module module, int index, LocalDateTime edit) {","lastModifiedDate":"2021-04-06"},{"lineNumber":153,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":154,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":155,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":156,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":157,"author":{"gitId":"banchiang"},"content":"    public void toggleDoneStatusForAssignment(Module module, int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":158,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":159,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":160,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":161,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":162,"author":{"gitId":"banchiang"},"content":"    public void addAssignment(Module module, Assignment assignment) {","lastModifiedDate":"2021-04-06"},{"lineNumber":163,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":164,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":165,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":166,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":167,"author":{"gitId":"banchiang"},"content":"    public boolean hasExam(Module module, Exam exam) {","lastModifiedDate":"2021-04-06"},{"lineNumber":168,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":169,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":170,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":171,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":172,"author":{"gitId":"banchiang"},"content":"    public boolean hasExam(Module module, int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":173,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":174,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":175,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":176,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":177,"author":{"gitId":"banchiang"},"content":"    public void addExam(Module module, Exam exam) {","lastModifiedDate":"2021-04-06"},{"lineNumber":178,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":179,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":180,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":181,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":182,"author":{"gitId":"banchiang"},"content":"    public void editExam(Module module, int index, LocalDateTime edit) {","lastModifiedDate":"2021-04-06"},{"lineNumber":183,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":184,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":185,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":186,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":187,"author":{"gitId":"banchiang"},"content":"    public void setRemindMe(RemindMe remindMe) {","lastModifiedDate":"2021-04-06"},{"lineNumber":188,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":189,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":190,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":191,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":192,"author":{"gitId":"banchiang"},"content":"    public void resetModules() {","lastModifiedDate":"2021-04-06"},{"lineNumber":193,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":194,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":195,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":196,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":197,"author":{"gitId":"banchiang"},"content":"    public void resetPersons() {","lastModifiedDate":"2021-04-06"},{"lineNumber":198,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":199,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":200,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":201,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":202,"author":{"gitId":"banchiang"},"content":"    public void resetEvents() {","lastModifiedDate":"2021-04-06"},{"lineNumber":203,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":204,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":205,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":206,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":207,"author":{"gitId":"banchiang"},"content":"    public void editModule(int index, Title title) {","lastModifiedDate":"2021-04-06"},{"lineNumber":208,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":209,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":210,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":211,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":212,"author":{"gitId":"banchiang"},"content":"    public ReadOnlyRemindMe getRemindMe() {","lastModifiedDate":"2021-04-06"},{"lineNumber":213,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":214,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":215,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":216,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":217,"author":{"gitId":"banchiang"},"content":"    public boolean hasEvent(GeneralEvent event) {","lastModifiedDate":"2021-04-06"},{"lineNumber":218,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":219,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":220,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":221,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":222,"author":{"gitId":"banchiang"},"content":"    public boolean hasEvent(int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":223,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":224,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":225,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":226,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":227,"author":{"gitId":"banchiang"},"content":"    public void addEvent(GeneralEvent event) {","lastModifiedDate":"2021-04-06"},{"lineNumber":228,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":229,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":230,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":231,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":232,"author":{"gitId":"banchiang"},"content":"    public void editEvent(int index, Description edit) {","lastModifiedDate":"2021-04-06"},{"lineNumber":233,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":234,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":235,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":236,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":237,"author":{"gitId":"banchiang"},"content":"    public void editEvent(int index, LocalDateTime edit) {","lastModifiedDate":"2021-04-06"},{"lineNumber":238,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":239,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":240,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":241,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":242,"author":{"gitId":"banchiang"},"content":"    public void deleteEvent(GeneralEvent event) {","lastModifiedDate":"2021-04-06"},{"lineNumber":243,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":244,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":245,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":246,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":247,"author":{"gitId":"banchiang"},"content":"    public GeneralEvent getEvent(int index) {","lastModifiedDate":"2021-04-06"},{"lineNumber":248,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":249,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":250,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":251,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":252,"author":{"gitId":"banchiang"},"content":"    public void setEvent(GeneralEvent target, GeneralEvent editedEvent) {","lastModifiedDate":"2021-04-06"},{"lineNumber":253,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-04-06"},{"lineNumber":254,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":255,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":256,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":257,"author":{"gitId":"banchiang"},"content":"    public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2021-04-06"},{"lineNumber":258,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":259,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":260,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":261,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":262,"author":{"gitId":"banchiang"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2021-04-06"},{"lineNumber":263,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":264,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":265,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":266,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":267,"author":{"gitId":"banchiang"},"content":"    public void updateFilteredEventList(Predicate\u003cGeneralEvent\u003e predicate) {","lastModifiedDate":"2021-04-06"},{"lineNumber":268,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":269,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":270,"author":{"gitId":"banchiang"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":271,"author":{"gitId":"banchiang"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":272,"author":{"gitId":"banchiang"},"content":"    public ObservableList\u003cGeneralEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-04-06"},{"lineNumber":273,"author":{"gitId":"banchiang"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-06"},{"lineNumber":274,"author":{"gitId":"banchiang"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":275,"author":{"gitId":"banchiang"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"banchiang":275}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"12/12/1999\";","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"maikongeh"},"content":"    private Birthday birthday;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"maikongeh"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"maikongeh"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"maikongeh"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"maikongeh"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"maikongeh"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"maikongeh"},"content":"        return new Person(name, birthday, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Hzxin":1,"maikongeh":8,"-":61}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"import seedu.address.logic.commands.addcommand.AddPersonCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import seedu.address.logic.commands.editcommand.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    public static String getaddPersonCommand(Person person) {","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"maikongeh"},"content":"        sb.append(PREFIX_BIRTHDAY + person.getBirthday().toString() + \" \");","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"maikongeh"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY)","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"maikongeh"},"content":"                .append(birthday.toString()).append(\" \"));","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"markuz5116":3,"jellymias":1,"maikongeh":4,"-":49}},{"path":"src/test/java/seedu/address/testutil/RemindMeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Hzxin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Hzxin"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Hzxin"},"content":" * A utility class to help with building RemindMe objects.","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"Hzxin"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":" *     {@code RemindMe ab \u003d new RemindMeBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"public class RemindMeBuilder {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"    private RemindMe remindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"    public RemindMeBuilder() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"        remindMe \u003d new RemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"    public RemindMeBuilder(RemindMe remindMe) {","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"        this.remindMe \u003d remindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"     * Adds a new {@code Person} to the {@code RemindMe} that we are building.","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Hzxin"},"content":"    public RemindMeBuilder withPerson(Person person) {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"        remindMe.addPerson(person);","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Hzxin"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"     * Adds a new {@code Module} to the {@code RemindMe} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Hzxin"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Hzxin"},"content":"    public RemindMeBuilder withModule(Module module) {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"        remindMe.addModule(module);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    public RemindMe build() {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        return remindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"markuz5116":11,"Hzxin":32}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"    public static final Index INDEX_FIRST_ASSIGNMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_FIRST_EXAM \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_FIRST_MODULE \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"maikongeh"},"content":"    public static final Index INDEX_SECOND_ASSIGNMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_SECOND_EXAM \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_SECOND_MODULE \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_THIRD_MODULE \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_THIRD_EXAM \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_THIRD_ASSIGNMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jellymias":10,"maikongeh":2,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalModuleTitles.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maikongeh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"maikongeh"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"maikongeh"},"content":"public class TypicalModuleTitles {","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"maikongeh"},"content":"    public static final Title TITLE_CS2103 \u003d new Title(\"CS2103\");","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"maikongeh"},"content":"    public static final Title TITLE_CS2101 \u003d new Title(\"CS2101\");","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maikongeh"},"content":"    public static final Title TITLE_CS1101 \u003d new Title(\"CS1101\");","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maikongeh"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maikongeh"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"maikongeh":11}},{"path":"src/test/java/seedu/address/testutil/TypicalRemindMe.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DESCRIPTION_1;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNMENT_DESCRIPTION_2;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_1;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EXAM_DATETIME_2;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DATE_1;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DATE_2;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DESCRIPTION_1;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENERAL_EVENT_DESCRIPTION_2;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"Hzxin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_CS2103;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"Hzxin"},"content":"import seedu.address.commons.util.LocalDateTimeUtil;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.RemindMe;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.event.GeneralEvent;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Assignment;","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Description;","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Exam;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Hzxin"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"import seedu.address.testutil.typicalmodules.ModuleBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"Hzxin"},"content":"public class TypicalRemindMe {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"    public static final LocalDateTime DATE_1 \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_1,","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"            Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    public static final LocalDateTime DATE_2 \u003d LocalDateTime.parse(VALID_EXAM_DATETIME_2,","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"            Exam.EXAM_DATE_FORMATTER);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Hzxin"},"content":"    public static final Assignment VALID_ASSIGNMENT \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"Hzxin"},"content":"        new AssignmentBuilder().withDescription(VALID_ASSIGNMENT_DESCRIPTION_1).withDeadline(DATE_1)","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Hzxin"},"content":"        .withTag(VALID_TITLE_CS2103).withDoneStatus(false).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"    public static final GeneralEvent VALID_GENERAL_EVENT_1 \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"            new GeneralEvent(new Description(VALID_GENERAL_EVENT_DESCRIPTION_1),","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"                LocalDateTime.parse(VALID_GENERAL_EVENT_DATE_1, LocalDateTimeUtil.DATETIME_FORMATTER));","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    public static final GeneralEvent VALID_GENERAL_EVENT_2 \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"            new GeneralEvent(new Description(VALID_GENERAL_EVENT_DESCRIPTION_2),","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"                    LocalDateTime.parse(VALID_GENERAL_EVENT_DATE_2, LocalDateTimeUtil.DATETIME_FORMATTER));","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    public static final GeneralEvent VALID_GENERAL_EVENT_3 \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"            new GeneralEvent(new Description(VALID_GENERAL_EVENT_DESCRIPTION_1),","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"                    LocalDateTime.parse(VALID_GENERAL_EVENT_DATE_2, LocalDateTimeUtil.DATETIME_FORMATTER));","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Hzxin"},"content":"    public static final Exam VALID_EXAM \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"Hzxin"},"content":"        new ExamBuilder().withExamDate(DATE_1).withTag(VALID_TITLE_CS2103).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"    public static final Module MOD_1 \u003d new ModuleBuilder().withTitle(\"MOD 1\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"    public static final Module MOD_2 \u003d new ModuleBuilder().withTitle(\"MOD 2\").emptyBuild();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"    public static final Module MOD_1_WITH_ASSIGNMENTS \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"            new ModuleBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"                    .withTitle(\"MOD 1\")","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"                    .withAssignments(VALID_ASSIGNMENT_DESCRIPTION_1, VALID_ASSIGNMENT_DESCRIPTION_2)","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"                    .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"    public static final Module MOD_1_WITH_EXAMS \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"            new ModuleBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"                    .withTitle(\"MOD 1\")","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"                    .withExams(VALID_EXAM_DATETIME_1, VALID_EXAM_DATETIME_2)","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"                    .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"markuz5116"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"markuz5116"},"content":"            .build();","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"markuz5116"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"markuz5116"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"markuz5116"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"markuz5116"},"content":"            .build();","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"markuz5116"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"markuz5116"},"content":"            .build();","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"markuz5116"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"markuz5116"},"content":"            .build();","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"Hzxin"},"content":"    // Manually added","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Hzxin"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Hzxin"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Hzxin"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Hzxin"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":90,"author":{"gitId":"Hzxin"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Hzxin"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Hzxin"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Hzxin"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Hzxin"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Hzxin"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"Hzxin"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":99,"author":{"gitId":"Hzxin"},"content":"    private TypicalRemindMe() {} // prevents instantiation","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"markuz5116"},"content":"     * Returns an {@code RemindMe} with all the typical persons.","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"markuz5116"},"content":"    public static RemindMe getTypicalRemindMe() {","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"markuz5116"},"content":"        RemindMe mp \u003d new RemindMe();","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"        // Modules","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"markuz5116"},"content":"        mp.addModule(new ModuleBuilder(MOD_1).build());","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"markuz5116"},"content":"        mp.addModule(new ModuleBuilder(MOD_2).build());","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"        // People","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"Hzxin"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"Hzxin"},"content":"            mp.addPerson(person);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"Hzxin"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"        // Events","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"        mp.addEvent(new GeneralEventBuilder(VALID_GENERAL_EVENT_1).build());","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"        mp.addEvent(new GeneralEventBuilder(VALID_GENERAL_EVENT_2).build());","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"        mp.addEvent(new GeneralEventBuilder(VALID_GENERAL_EVENT_3).build());","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"Hzxin"},"content":"        return mp;","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"Hzxin"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"     * Returns an {@code RemindMe} with all the typical persons.","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"    public static RemindMe getTypicalRemindMeWithFilledModules() {","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"        RemindMe mp \u003d new RemindMe();","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"        // Modules","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":"        mp.addModule(new ModuleBuilder(MOD_1_WITH_ASSIGNMENTS).build());","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"        mp.addModule(new ModuleBuilder(MOD_2).withExams(VALID_EXAM_DATETIME_1, VALID_EXAM_DATETIME_2).build());","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"        // People","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"            mp.addPerson(person);","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"        // Events","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"        mp.addEvent(new GeneralEventBuilder(VALID_GENERAL_EVENT_1).build());","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"        mp.addEvent(new GeneralEventBuilder(VALID_GENERAL_EVENT_2).build());","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"        return mp;","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":149,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"Hzxin"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"markuz5116":36,"Hzxin":47,"jellymias":43,"-":25}},{"path":"src/test/java/seedu/address/testutil/typicalmodules/ModuleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markuz5116"},"content":"package seedu.address.testutil.typicalmodules;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.AssignmentList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.ExamList;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.module.Title;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"markuz5116"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"markuz5116"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"markuz5116"},"content":" * Helps with building Module Objects.","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"markuz5116"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"markuz5116"},"content":"public class ModuleBuilder {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"markuz5116"},"content":"    public static final String DEFAULT_TITLE \u003d \"CS2103\";","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"markuz5116"},"content":"    private Title title;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"markuz5116"},"content":"    private AssignmentList assignments;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"markuz5116"},"content":"    private ExamList exams;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"markuz5116"},"content":"     * Creates a {@code ModuleBuilder} with the default details.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"markuz5116"},"content":"    public ModuleBuilder() {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"markuz5116"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"markuz5116"},"content":"        assignments \u003d new AssignmentList();","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"markuz5116"},"content":"        exams \u003d new ExamList();","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"markuz5116"},"content":"     * Creates a ModuleBuilder wit the data of {@code modToCopy}.","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"markuz5116"},"content":"    public ModuleBuilder(Module modToCopy) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"markuz5116"},"content":"        title \u003d modToCopy.getTitle();","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"markuz5116"},"content":"        assignments \u003d new AssignmentList(modToCopy.getAssignments().getAssignments());","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"markuz5116"},"content":"        exams \u003d new ExamList(modToCopy.getExams().getExams());","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"markuz5116"},"content":"     * Sets the {@code Title} of the {@code Module} that is being built.","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"markuz5116"},"content":"    public ModuleBuilder withTitle(String title) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"markuz5116"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"markuz5116"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"markuz5116"},"content":"     * Creates an {@code AssignmentList} and sets it to the {@code Module} that is being built.","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"markuz5116"},"content":"    public ModuleBuilder withAssignments(String ... assignments) {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"markuz5116"},"content":"        this.assignments \u003d new AssignmentList(SampleDataUtil.getAssignments(assignments));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"markuz5116"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"markuz5116"},"content":"     * Creates an {@code ExamList} and sets ot tp the {@code Module} that is being built.","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"markuz5116"},"content":"    public ModuleBuilder withExams(String... exams) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"markuz5116"},"content":"        this.exams \u003d new ExamList(SampleDataUtil.getExams(exams));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"markuz5116"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"markuz5116"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"markuz5116"},"content":"     * Builds the {@code Module} with the {@code Title}, {@code AssignmentList}, and {@code","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"markuz5116"},"content":"     * ExamList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"markuz5116"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"markuz5116"},"content":"    public Module build() {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"markuz5116"},"content":"        return new Module(title, assignments, exams);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"markuz5116"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"markuz5116"},"content":"    public Module emptyBuild() {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"markuz5116"},"content":"        return new Module(title);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"markuz5116"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"markuz5116"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"markuz5116":72}}]
