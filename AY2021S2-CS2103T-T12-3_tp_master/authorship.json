[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"# A-Bash Book","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-11"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-T12-3/tp/actions)","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"## Description","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"This is **a project for bash-savvy users who are familiar with Command-Line-Interface.** We hope that with Bash-like commands, users who enjoy the high speed workflow of executing bash commands can be as seamless and easy to use in our project.","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"## Usages","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"* as a CLI integrated address book.","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"* contact tracker to better manage your contacts and relationships.","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"## Setup","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"[coming soon]","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"## Features","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"[coming soon]","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"## Acknowledgement","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org/).","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"justgnohUG":18,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"DarkDestry-t"},"content":"    jcenter()","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":75,"author":{"gitId":"DarkDestry-t"},"content":"    implementation \u0027me.xdrop:fuzzywuzzy:1.3.1\u0027","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":83,"author":{"gitId":"DarkDestry-t"},"content":"    archiveName \u003d \u0027abb.jar\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"oeiyiping":7,"-":71,"yaowei-soc":4,"DarkDestry-t":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"### Keng Iuan","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"\u003cimg src\u003d\"images/darkdestry-t.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"[[github](http://github.com/darkdestry-t)]","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"\u003c!-- [[portfolio](team/johndoe.md)] --\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"* Role: Team Leader","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"* Responsibilities: Storage","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"### Justin Gnoh","lastModifiedDate":"2021-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"\u003cimg src\u003d\"images/justgnohug.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"[[github](http://github.com/justgnohUG)]","lastModifiedDate":"2021-03-04"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"\u003c!-- [[portfolio](team/johndoe.md)] --\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"* Role: Production","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"### Boon Ji","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"\u003cimg src\u003d\"images/tanboonji.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"[[github](https://github.com/tanboonji)]","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"\u003c!-- [[portfolio](team/johndoe.md)] --\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"* Role: Documentation","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"* Reponsibilities: Logic (excluding Commands)","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"### Yi Ping","lastModifiedDate":"2021-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"\u003cimg src\u003d\"images/oeiyiping.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"[[github](http://github.com/oeiyiping)]","lastModifiedDate":"2021-03-04"},{"lineNumber":47,"author":{"gitId":"oeiyiping"},"content":"\u003c!-- [[portfolio](team/johndoe.md)] --\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"* Role: Documentation","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"* Responsibilities: Model, Commands","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"oeiyiping"},"content":"### Yao Wei","lastModifiedDate":"2021-03-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"\u003cimg src\u003d\"images/yaowei-soc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"oeiyiping"},"content":"[[github](https://github.com/yaowei-soc)]","lastModifiedDate":"2021-03-04"},{"lineNumber":57,"author":{"gitId":"oeiyiping"},"content":"\u003c!-- [[portfolio](team/johndoe.md)] --\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"* Role: Documentation","lastModifiedDate":"2021-03-04"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"* Responsibilities: Test","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"justgnohUG":1,"tanboonji":14,"oeiyiping":14,"-":31}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T12-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-T12-3/tp/) in that page reflects the coverage of your project.","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadow`).","lastModifiedDate":"2020-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":77,"yaowei-soc":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"yaowei-soc"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"* stores the alias data.","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"* exposes an unmodifiable `ObservableList\u003cCommandAlias\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"yaowei-soc"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-T12-3/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-03-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"* can save the aliases data in json format and read it back.","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"yaowei-soc"},"content":"### Filtering PersonCard","lastModifiedDate":"2021-03-10"},{"lineNumber":224,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":225,"author":{"gitId":"yaowei-soc"},"content":"![Sequence Diagram of Filtering Display](images/FilterDisplaySequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":227,"author":{"gitId":"yaowei-soc"},"content":"A new `DisplayFilterPredicate` is added in `Model`.","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"yaowei-soc"},"content":"When the `FilterCommand` is executed, `Model` will be updated with the latest `DisplayFilterPredicate`.","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"yaowei-soc"},"content":"Executing a `FilterCommand` will trigger an update of the `DisplayFilterPredicate` that is stored in","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"yaowei-soc"},"content":"`PersonListPanel`.","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"yaowei-soc"},"content":"`PersonListView` will need to be re-drawn since certain UI elements will have its visibility updated.","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"yaowei-soc"},"content":"Re-drawing of the `PersonListView` will re-create all the `PersonCard`,","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"yaowei-soc"},"content":"allowing it to show or hide UI elements based on the `DisplayFilterPredicate`.","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"yaowei-soc"},"content":"This has to be done so that the dimension of the hidden UI element will not be included during the","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"yaowei-soc"},"content":"layoutBounds calculations.","lastModifiedDate":"2021-03-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"justgnohUG"},"content":"### Autocomplete","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"justgnohUG"},"content":"The current implementation consists of a Ui component called `AutoCompleteListPanel` which is made up of `AutocompleteCells`.","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"justgnohUG"},"content":"Each `AutoCompleteCell` contains a command word. Command words are retrieved by calling `getAutocompleteCommands()` in `LogicManager` and populated","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"justgnohUG"},"content":"by `MainWindow` in the `fillInnerParts()` method. ","lastModifiedDate":"2021-03-24"},{"lineNumber":244,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"justgnohUG"},"content":"In `CommandBox` a method called `setKeyUpCallback()` triggers the method `updateList()` in `AutocompleteListPanel` on every release of a key. This updates the existing command panel","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"justgnohUG"},"content":"with the correct filtered commands.","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"justgnohUG"},"content":"- The `setKeyUpCallback()` uses `addEventFilter()` and detects when a key is released before triggering the function to handle it.","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"justgnohUG"},"content":"Event filters are added to the root by `MainWindow` and the corresponding keys (`TAB`, `UP`, `DOWN`)","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"justgnohUG"},"content":"are listened to.","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"justgnohUG"},"content":"- On `TAB` key release, the `doTab()` method which resides in the `AutocompleteListPanel` will be called to handle the","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"justgnohUG"},"content":"toggling between commands.","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"justgnohUG"},"content":"[Expected Behaviour]","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"justgnohUG"},"content":"![TabToggleCommand](images/TabToggleCommand.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"justgnohUG"},"content":"- On `UP/DOWN` key release, the `selectNext()` and `selectPrev()` methods which reside in PersonListPanel will be called ","lastModifiedDate":"2021-03-24"},{"lineNumber":259,"author":{"gitId":"justgnohUG"},"content":"to handle the toggling between contacts.","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":261,"author":{"gitId":"justgnohUG"},"content":"[Expected Behaviour]","lastModifiedDate":"2021-03-24"},{"lineNumber":262,"author":{"gitId":"justgnohUG"},"content":"![UpDownToggleCommand](images/UpDownToggleContact.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":263,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":264,"author":{"gitId":"justgnohUG"},"content":"The CommandBox updates the list of commands in the AutocompleteListPanel. ","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"justgnohUG"},"content":"The CommandBox also handles autocomplete indices as provided by methods bound to the `UP/DOWN`, by appending them to","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"justgnohUG"},"content":"the existing text.","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"yaowei-soc"},"content":"#### Enhanced Features","lastModifiedDate":"2021-03-24"},{"lineNumber":269,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":270,"author":{"gitId":"justgnohUG"},"content":"1. Autocomplete Delete","lastModifiedDate":"2021-03-24"},{"lineNumber":271,"author":{"gitId":"justgnohUG"},"content":"    * Once the `DELETE` command is in the command box, `UP/DOWN` keys now scrolls through the contacts. The index","lastModifiedDate":"2021-03-24"},{"lineNumber":272,"author":{"gitId":"justgnohUG"},"content":"    of each contact will be autocompleted in the command box.","lastModifiedDate":"2021-03-24"},{"lineNumber":273,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":274,"author":{"gitId":"yaowei-soc"},"content":"#### [Proposed Features]","lastModifiedDate":"2021-03-24"},{"lineNumber":275,"author":{"gitId":"justgnohUG"},"content":"2. Autocomplete Edit","lastModifiedDate":"2021-03-24"},{"lineNumber":276,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":277,"author":{"gitId":"justgnohUG"},"content":"    * Once the `edit` command is in the command box,`UP/DOWN` keys now scrolls through the contacts. The index of ","lastModifiedDate":"2021-03-24"},{"lineNumber":278,"author":{"gitId":"justgnohUG"},"content":"      each contact will be autocompleted in the command box.","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"justgnohUG"},"content":"    * On `TAB` key, the possible editable flags will appear be appended into the text of the command box.    ","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"justgnohUG"},"content":"   ","lastModifiedDate":"2021-03-24"},{"lineNumber":281,"author":{"gitId":"justgnohUG"},"content":"This feature not only allows the command and index to be autocompleted, but allows autocompletion of command flags too.   ","lastModifiedDate":"2021-03-24"},{"lineNumber":282,"author":{"gitId":"justgnohUG"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":283,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":284,"author":{"gitId":"oeiyiping"},"content":"### Remark","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"oeiyiping"},"content":"The current implementation is such that `Remark` is added as an attribute of the `Person` class. `Remark` is intended ","lastModifiedDate":"2021-03-24"},{"lineNumber":287,"author":{"gitId":"oeiyiping"},"content":"as a way to allow users to add any kind of comment about a specified contact, and therefore does not require any ","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"oeiyiping"},"content":"validity check (an empty remark is also valid). Accordingly, `Remark` is an optional field that can be specified when ","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"oeiyiping"},"content":"adding/editing a contact. ","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"oeiyiping"},"content":"Initially, an alternative implementation was considered: to introduce a new `Remark` command which would be used to add","lastModifiedDate":"2021-03-24"},{"lineNumber":292,"author":{"gitId":"oeiyiping"},"content":"remarks to a contact. However the current implementation is used instead, in favour of consistency. `Remark` is ","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"oeiyiping"},"content":"after all an attribute of a `Person`. No other such attribute has its own dedicated command. As such, Remark is ","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"oeiyiping"},"content":"ultimately implemented as a field to the `add`/`edit` commands, which is consistent with all the other Person ","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"oeiyiping"},"content":"attributes.","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"DarkDestry-t"},"content":"### Fuzzy Find","lastModifiedDate":"2021-03-25"},{"lineNumber":298,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":299,"author":{"gitId":"DarkDestry-t"},"content":"The current implementation of `find` command uses the Java port of Python\u0027s ","lastModifiedDate":"2021-03-25"},{"lineNumber":300,"author":{"gitId":"DarkDestry-t"},"content":"[fuzzywuzzy algorithm](https://github.com/xdrop/fuzzywuzzy). Current implementation matches using partial match of more","lastModifiedDate":"2021-03-25"},{"lineNumber":301,"author":{"gitId":"DarkDestry-t"},"content":"than 60% similarity. The `find` command also sorts the search result in decrementing order of similarity.","lastModifiedDate":"2021-03-25"},{"lineNumber":302,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":303,"author":{"gitId":"DarkDestry-t"},"content":"#### Considerations","lastModifiedDate":"2021-03-25"},{"lineNumber":304,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":305,"author":{"gitId":"DarkDestry-t"},"content":"Key requirements for fuzzy search is the following","lastModifiedDate":"2021-03-25"},{"lineNumber":306,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":307,"author":{"gitId":"DarkDestry-t"},"content":"- 3 character name matches ","lastModifiedDate":"2021-03-25"},{"lineNumber":308,"author":{"gitId":"DarkDestry-t"},"content":"  - Fuzzy matching should support 3 character names with delta of 1 character","lastModifiedDate":"2021-03-25"},{"lineNumber":309,"author":{"gitId":"DarkDestry-t"},"content":"    - `Eva` and `Iva` - 66% similarity","lastModifiedDate":"2021-03-25"},{"lineNumber":310,"author":{"gitId":"DarkDestry-t"},"content":"    - `Tim` and `Tom` - 66% similarity","lastModifiedDate":"2021-03-25"},{"lineNumber":311,"author":{"gitId":"DarkDestry-t"},"content":"- Partial name matches","lastModifiedDate":"2021-03-25"},{"lineNumber":312,"author":{"gitId":"DarkDestry-t"},"content":"  - Name matching should support partial matches where shortened nicknames are used","lastModifiedDate":"2021-03-25"},{"lineNumber":313,"author":{"gitId":"DarkDestry-t"},"content":"    - `Ben` and `Benjamin`","lastModifiedDate":"2021-03-25"},{"lineNumber":314,"author":{"gitId":"DarkDestry-t"},"content":"    - `Sam` and `Samantha`","lastModifiedDate":"2021-03-25"},{"lineNumber":315,"author":{"gitId":"DarkDestry-t"},"content":"    - `Jon` and `Jonathan`","lastModifiedDate":"2021-03-25"},{"lineNumber":316,"author":{"gitId":"DarkDestry-t"},"content":"    ","lastModifiedDate":"2021-03-25"},{"lineNumber":317,"author":{"gitId":"DarkDestry-t"},"content":"#### Side Effects and Missed Matches","lastModifiedDate":"2021-03-25"},{"lineNumber":318,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":319,"author":{"gitId":"DarkDestry-t"},"content":"Due to the above considerations, partial matching is chosen for partial name matches and 60% threshold is chosen for 3 ","lastModifiedDate":"2021-03-25"},{"lineNumber":320,"author":{"gitId":"DarkDestry-t"},"content":"character names. However, side effects occur with these design choices.","lastModifiedDate":"2021-03-25"},{"lineNumber":321,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":322,"author":{"gitId":"DarkDestry-t"},"content":"- Middle of name matches","lastModifiedDate":"2021-03-25"},{"lineNumber":323,"author":{"gitId":"DarkDestry-t"},"content":"  - `Sam` matches with `Benjamin` with 66% partial similarity due to `jam` in `benjamin` being 1 character delta from ","lastModifiedDate":"2021-03-25"},{"lineNumber":324,"author":{"gitId":"DarkDestry-t"},"content":"    `sam`","lastModifiedDate":"2021-03-25"},{"lineNumber":325,"author":{"gitId":"DarkDestry-t"},"content":"    ","lastModifiedDate":"2021-03-25"},{"lineNumber":326,"author":{"gitId":"DarkDestry-t"},"content":"Additionally, there are also some missed out features","lastModifiedDate":"2021-03-25"},{"lineNumber":327,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":328,"author":{"gitId":"DarkDestry-t"},"content":"- Phonetically similar name matches","lastModifiedDate":"2021-03-25"},{"lineNumber":329,"author":{"gitId":"DarkDestry-t"},"content":"  - `Shawn` doesnt match with `Sean` due to it below the 60% simiarity threshold","lastModifiedDate":"2021-03-25"},{"lineNumber":330,"author":{"gitId":"DarkDestry-t"},"content":"    ","lastModifiedDate":"2021-03-25"},{"lineNumber":331,"author":{"gitId":"DarkDestry-t"},"content":"#### Potential changes","lastModifiedDate":"2021-03-25"},{"lineNumber":332,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":333,"author":{"gitId":"DarkDestry-t"},"content":"In the future, a combination of full word and partial matches can be used with weighted metrics to avoid middle of name","lastModifiedDate":"2021-03-25"},{"lineNumber":334,"author":{"gitId":"DarkDestry-t"},"content":"matches. To avoid both issue, string fuzzy search may not be sufficient. Levenshtein distance is not able to account for","lastModifiedDate":"2021-03-25"},{"lineNumber":335,"author":{"gitId":"DarkDestry-t"},"content":"phonetic differences in names and expected result when doing name searches.","lastModifiedDate":"2021-03-25"},{"lineNumber":336,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":337,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":338,"author":{"gitId":"yaowei-soc"},"content":"### Selecting Persons","lastModifiedDate":"2021-03-28"},{"lineNumber":339,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":340,"author":{"gitId":"yaowei-soc"},"content":"SelectCommand allows a user to select Person object(s) to apply actions on.","lastModifiedDate":"2021-03-28"},{"lineNumber":341,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":342,"author":{"gitId":"yaowei-soc"},"content":"#### Overview of Implementation","lastModifiedDate":"2021-03-28"},{"lineNumber":343,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":344,"author":{"gitId":"yaowei-soc"},"content":"{% include image.html url\u003d\"images/SelectCommandClassDiagram.png\" description\u003d\"Select class diagram\" %}","lastModifiedDate":"2021-03-28"},{"lineNumber":345,"author":{"gitId":"yaowei-soc"},"content":"{% include image.html url\u003d\"images/SelectCommandParserSequenceDiagram.png\" description\u003d\"Select parser sequence diagram\" %}","lastModifiedDate":"2021-03-28"},{"lineNumber":346,"author":{"gitId":"yaowei-soc"},"content":"{% include image.html url\u003d\"images/SelectCommandParserSequenceDiagram_ref.png\" description\u003d\"Select parser sequence diagram ref\" %}","lastModifiedDate":"2021-03-28"},{"lineNumber":347,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":348,"author":{"gitId":"yaowei-soc"},"content":"#### Implementation","lastModifiedDate":"2021-03-28"},{"lineNumber":349,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":350,"author":{"gitId":"yaowei-soc"},"content":"`ModelManager` contains a list of `Person` object which are selected by the user.","lastModifiedDate":"2021-03-28"},{"lineNumber":351,"author":{"gitId":"yaowei-soc"},"content":"When `SelectShowCommand` is called, a predicate will be applied onto the `filteredPersonList` to show","lastModifiedDate":"2021-03-28"},{"lineNumber":352,"author":{"gitId":"yaowei-soc"},"content":"only the selected list of `Person` objects. The application of predicate follows the same method as","lastModifiedDate":"2021-03-28"},{"lineNumber":353,"author":{"gitId":"yaowei-soc"},"content":"`FindCommand` and `ListCommand`.","lastModifiedDate":"2021-03-28"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":355,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"oeiyiping"},"content":"* prefers a Bash-like experience","lastModifiedDate":"2021-03-24"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"| Priority     | As a …​                                 | I want to …​                                             | So that I can…​                                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"oeiyiping"},"content":"| --------     | ------------------------------------------ | ------------------------------------------------------------| --------------------------------------------------------------------------------|","lastModifiedDate":"2021-03-24"},{"lineNumber":389,"author":{"gitId":"-"},"content":"| `* * *`      | new user                                   | see usage instructions                                      | refer to instructions when I forget how to use the App                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"| `* * *`      | user                                       | add a new person                                            |                                                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"| `* * *`      | user                                       | delete a person                                             | remove entries that I no longer need                                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"| `* * *`      | user                                       | find a person by name                                       | locate details of persons without having to go through the entire list          |","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"yaowei-soc"},"content":"| __`* * *`__  | user                                       | find my friends via their email address                     | find my friends easily                                                          |","lastModifiedDate":"2021-03-03"},{"lineNumber":394,"author":{"gitId":"yaowei-soc"},"content":"| __`* * *`__  | user                                       | autocomplete my commands                                    | minimise the amount of typing for a command                                     |","lastModifiedDate":"2021-03-03"},{"lineNumber":395,"author":{"gitId":"oeiyiping"},"content":"| __`* * *`__  | user                                       | set my own commands alias                                   | type and execute commands faster                                                |    ","lastModifiedDate":"2021-03-24"},{"lineNumber":396,"author":{"gitId":"oeiyiping"},"content":"| __`* * *`__    | experienced Bash user                      | use the app with Bash-like commands and options format    | work smoothly with a highly familiar and intuitive user experience              |","lastModifiedDate":"2021-03-24"},{"lineNumber":397,"author":{"gitId":"yaowei-soc"},"content":"| __`* *`__    | user                                       | find my friends without typing their exact full name        | find my friends easily                                                          |","lastModifiedDate":"2021-03-03"},{"lineNumber":398,"author":{"gitId":"yaowei-soc"},"content":"| __`* *`__    | user                                       | find my friends that have names with similar spelling easily| find my friends easily                                                          |","lastModifiedDate":"2021-03-03"},{"lineNumber":399,"author":{"gitId":"oeiyiping"},"content":"| __`* *`__    | user                                       | add remarks to my contacts                                  | easily keep track of information/comments regarding a specific contact          |","lastModifiedDate":"2021-03-24"},{"lineNumber":400,"author":{"gitId":"yaowei-soc"},"content":"| __`* *`__    | user                                       | hide private contact details                                | minimize chance of someone else seeing them by accident                         |","lastModifiedDate":"2021-03-03"},{"lineNumber":401,"author":{"gitId":"-"},"content":"| `*`          | user with many persons in the address book | sort persons by name                                        | locate a person easily                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"yaowei-soc"},"content":"**Use Case: Delete a person**","lastModifiedDate":"2021-03-03"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":411,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-03"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":413,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-03-03"},{"lineNumber":414,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2021-03-03"},{"lineNumber":415,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2021-03-03"},{"lineNumber":416,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2021-03-03"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":420,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-03"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-03"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":424,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":426,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2021-03-03"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":430,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-03"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":432,"author":{"gitId":"yaowei-soc"},"content":"* *a. At any time, User can press tab to autocomplete the field if possible","lastModifiedDate":"2021-03-03"},{"lineNumber":433,"author":{"gitId":"yaowei-soc"},"content":"    * *a1. User confirm suggestion by continuing his command","lastModifiedDate":"2021-03-03"},{"lineNumber":434,"author":{"gitId":"yaowei-soc"},"content":"    * *a2. User rejects suggestion by deleting the suggestion","lastModifiedDate":"2021-03-03"},{"lineNumber":435,"author":{"gitId":"oeiyiping"},"content":"     ","lastModifiedDate":"2021-03-24"},{"lineNumber":436,"author":{"gitId":"yaowei-soc"},"content":"      Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":437,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":438,"author":{"gitId":"yaowei-soc"},"content":"**Use case: Setting a command alias**","lastModifiedDate":"2021-03-03"},{"lineNumber":439,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":440,"author":{"gitId":"yaowei-soc"},"content":"**MSS**","lastModifiedDate":"2021-03-03"},{"lineNumber":441,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":442,"author":{"gitId":"yaowei-soc"},"content":"1. User frequently uses a command","lastModifiedDate":"2021-03-03"},{"lineNumber":443,"author":{"gitId":"yaowei-soc"},"content":"2. User sets a command alias for frequent command","lastModifiedDate":"2021-03-03"},{"lineNumber":444,"author":{"gitId":"yaowei-soc"},"content":"3. AddressBook adds alias to existing command list","lastModifiedDate":"2021-03-03"},{"lineNumber":445,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":446,"author":{"gitId":"yaowei-soc"},"content":"   Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":447,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":448,"author":{"gitId":"yaowei-soc"},"content":"**Extensions**","lastModifiedDate":"2021-03-03"},{"lineNumber":449,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":450,"author":{"gitId":"yaowei-soc"},"content":"* 2a. The alias name or command name is empty ","lastModifiedDate":"2021-03-03"},{"lineNumber":451,"author":{"gitId":"oeiyiping"},"content":"  ","lastModifiedDate":"2021-03-24"},{"lineNumber":452,"author":{"gitId":"yaowei-soc"},"content":"    Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":453,"author":{"gitId":"yaowei-soc"},"content":"  ","lastModifiedDate":"2021-03-03"},{"lineNumber":454,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":455,"author":{"gitId":"yaowei-soc"},"content":"* 2b. The command name is empty","lastModifiedDate":"2021-03-03"},{"lineNumber":456,"author":{"gitId":"oeiyiping"},"content":"  ","lastModifiedDate":"2021-03-24"},{"lineNumber":457,"author":{"gitId":"oeiyiping"},"content":"    Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":458,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":459,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":460,"author":{"gitId":"oeiyiping"},"content":"**Use case: Edit remarks of an existing contact**","lastModifiedDate":"2021-03-24"},{"lineNumber":461,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":462,"author":{"gitId":"oeiyiping"},"content":"**MSS**","lastModifiedDate":"2021-03-24"},{"lineNumber":463,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":464,"author":{"gitId":"oeiyiping"},"content":"1. User wants to edit the remarks of a specific contact","lastModifiedDate":"2021-03-24"},{"lineNumber":465,"author":{"gitId":"oeiyiping"},"content":"2. User provides a new remark to the specified contact","lastModifiedDate":"2021-03-24"},{"lineNumber":466,"author":{"gitId":"oeiyiping"},"content":"3. AddressBook updates the existing contact to have the specified remark","lastModifiedDate":"2021-03-24"},{"lineNumber":467,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":468,"author":{"gitId":"oeiyiping"},"content":"   Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":469,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":470,"author":{"gitId":"oeiyiping"},"content":"**Extensions**","lastModifiedDate":"2021-03-24"},{"lineNumber":471,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":472,"author":{"gitId":"oeiyiping"},"content":"* 2a. The provided remark is empty","lastModifiedDate":"2021-03-24"},{"lineNumber":473,"author":{"gitId":"oeiyiping"},"content":"    * 2a1. The remarks of the specified contact is emptied","lastModifiedDate":"2021-03-24"},{"lineNumber":474,"author":{"gitId":"oeiyiping"},"content":"      ","lastModifiedDate":"2021-03-24"},{"lineNumber":475,"author":{"gitId":"yaowei-soc"},"content":"      Use case ends.","lastModifiedDate":"2021-03-03"},{"lineNumber":476,"author":{"gitId":"yaowei-soc"},"content":"      ","lastModifiedDate":"2021-03-03"},{"lineNumber":477,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"yaowei-soc"},"content":"4.  A-Bash Book data must be encrypted and unbreakable by quantum computers in the next 100 years.","lastModifiedDate":"2021-03-06"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"justgnohUG":43,"tanboonji":3,"oeiyiping":39,"-":347,"yaowei-soc":71,"DarkDestry-t":41}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"# Table of Contents","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"# What is A-Bash Book?","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"A-Bash Book (ABB) is a Command Line Interface (CLI) based Employee and Business Relations Management System.","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"ABB utilises command patterns similar to Bash, hence the name, A-Bash Book (ABB).","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"ABB is built to address the growing demands of businesses especially in a climate where large amounts of business information are being stored in various places. As the need to centralise data and optimise workflow increases, businesses are challenging current standards of retrieving operational data to achieve minimum lead times.","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"With similarities to Bash, we hope to minimise the learning curve for people with existing Bash experience, yet intuitive for new users to pick up.","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"This User Guide is designed for employees who require additional information on ABB functionalities.","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"# How to Use the User Guide","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"Use the [Table of Contents](#table-of-contents) to quickly navigate around the User Guide.","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"Here are the important syntaxes to take note of that are used to place emphasis on certain texts in the User Guide.","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"| Syntax                                                                   | Description                     |","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"| ------------------------------------------------------------------------ | ------------------------------- |","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"| `Code`                                                                   | Command text                    |","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"| \u003ckbd\u003eKeyboard Input\u003c/kbd\u003e                                                | Keyboard actions                |","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"| **Bolded Text**                                                          | Important words to take note of |","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"| \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:\u003c/div\u003e | Tips and useful information     |","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"| \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:exclamation:\u003c/div\u003e      | Warning message                 |","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"# Quick start","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"1. Ensure that **Java 11** or above is installed in the computer.","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"1. Download the latest **abb.jar** from [here](https://github.com/AY2021S2-CS2103T-T12-3/tp/releases).","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"1. Copy the file to the target folder to use as the _home folder_ to contain the A-Bash Book data.","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"   See [FAQ: What is the Home Folder?](#what-is-the-home-folder) to understand more.","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note that the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"   ![Ui](images/UG_UI%20Guide.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"1. Type the command in the command box and press \u003ckbd\u003eEnter\u003c/kbd\u003e to execute it. e.g. typing **`help`** and pressing \u003ckbd\u003eEnter\u003c/kbd\u003e will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"   Some example commands to try:","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"    * **`add`**`-n John Doe -p 98765432 -e johnd@example.com -a John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"oeiyiping"},"content":"  e.g. in `add -n NAME`, `NAME` is a parameter which can be used as `add -n John Doe`.","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"  e.g `-n NAME [-t TAG]` can be used as `-n John Doe -t friend` or as `-n John Doe`.","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"* Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"  e.g. `[-t TAG]…` can be used as ` ` (i.e. 0 times), `-t friend`, `-t friend -t family` etc.","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"oeiyiping"},"content":"  e.g. if the command specifies `-n NAME -p PHONE_NUMBER`, `-p PHONE_NUMBER -n NAME` is also acceptable.","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"yaowei-soc"},"content":"* If a parameter is expected only once in the command, but is specified multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"oeiyiping"},"content":"  e.g. if you specify `-p 12341234 -p 56785678`, only `-p 56785678` will be taken.","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"oeiyiping"},"content":"Displays the entire User Guide for ease of reference.","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"yaowei-soc"},"content":"![Help Message UI](images/helpMessage.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `help`","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"**Format**: `add -n NAME -p PHONE_NUMBER -e EMAIL -c COMPANY -j JOB_TITLE -a ADDRESS [-r REMARK] [-t TAG]…`","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"yaowei-soc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"yaowei-soc"},"content":":information_source: **Notes on `add` command:**","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"yaowei-soc"},"content":"* A person can have no remark.","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"yaowei-soc"},"content":"* A person can have any number of tags (including 0).","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"yaowei-soc"},"content":"![Add Command UI](images/UG_Add%20Command.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"yaowei-soc"},"content":"**Examples**:","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"yaowei-soc"},"content":"| Example                                                                                                                                | Description                                                                                                                                                                                                                                                                  |","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"| -------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"| `add -n John Doe -p 98765432 -e johnd@example.com -c Google -j HR Manager -a John street`                                              | Adds a person named `John Doe`, with phone number `91234567`, email address `johndoe@example.com`, company `Google`, job title `HR Manager` and address `John street`.                                                                                                       |","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"| `add -n Betsy Crowe -p 1234567 -e betsycrowe@example.com -c Amazon -j Manager -a Betsy Avenue -t Recruiter -t Intern Manager`          | Adds a person named `Betsy Crowe`, with phone number `1234567`, email address `betsycrowe@example.com`, company `Amazon`, job title `Manager` and address `Betsy Avenue`. This person is also tagged with the following tags: `Recruiter` and `Intern Manager`.              |","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"| `add -n Charlie -p 7654321 -e charlie@example.com -c Facebook -j Software Engineer -a Charlie Road -t IT Support -r Emergency contact` | Adds a person named `Charlie`, with phone number `7654321`, email address `charlie@example.com`, company `Facebook`, job title `Software Engineer` and address `Charlie Road`. This person is also tagged with the tag `IT Support`, and has the remark `Emergency contact`. |","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"yaowei-soc"},"content":"Lists all persons in the address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `list`","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `edit { shown | selected | INDEX… } [-n NAME] [-p PHONE] [-c COMPANY] [-j JOB_TITLE] [-e EMAIL] [-a ADDRESS] [-r REMARK] [-t TAG]…`","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"yaowei-soc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"yaowei-soc"},"content":"**:information_source: Notes on `edit` command:**\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"yaowei-soc"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer**, i.e 1, 2, 3, …​","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"yaowei-soc"},"content":"* When editing remark, the existing remark of the person will be removed, i.e adding of remark is not cumulative.","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"yaowei-soc"},"content":"* When editing tags, the existing tags of the person will be removed, i.e adding of tags is not cumulative.","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"yaowei-soc"},"content":"* To remove the person’s remark, type `-r ` without specifying any remark after it.","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"yaowei-soc"},"content":"* To remove all the person’s tags, type `-t ` without specifying any tags after it.","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"yaowei-soc"},"content":"* To edit all the shown person, type `edit shown`","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"yaowei-soc"},"content":"* To edit all the selected person, type `edit selected` followed by the arguments","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"yaowei-soc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"yaowei-soc"},"content":"![Edit Command UI](images/UG_Edit%20Command.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"yaowei-soc"},"content":"**Examples**:","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"yaowei-soc"},"content":"| Example                                     | Description                                                                                                         |","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"yaowei-soc"},"content":"| ------------------------------------------- | ------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"yaowei-soc"},"content":"| `edit 1 -p 91234567 -e johndoe@example.com` | Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively. |","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"yaowei-soc"},"content":"| `edit 2 -n Betsy Crower -t `                | Edits the name of the 2nd person to be `Betsy Crower` and clears all of her existing tags.                          |","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"yaowei-soc"},"content":"| `edit 3 -r `                                | Clears any existing remark of the 3rd person.                                                                       |","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"yaowei-soc"},"content":"| `edit shown -r `                            | Clears any existing remark of all the displayed persons in person list.                                                  |","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"yaowei-soc"},"content":"| `edit selected -r `                         | Clears any existing remark of all the selected persons.                                                             |","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"yaowei-soc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"yaowei-soc"},"content":"**:bulb: Bulk Edit**","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"yaowei-soc"},"content":"To bulk edit, either do:","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"yaowei-soc"},"content":"* `edit 1 2 3` to edit persons at indexes 1, 2 and 3 or,","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"yaowei-soc"},"content":"* `edit shown` to edit all the shown persons or,","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"yaowei-soc"},"content":"* `edit selected` to edit all the selected persons","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"yaowei-soc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"yaowei-soc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"yaowei-soc"},"content":"**:information_source: Notes on `find` command:**\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"DarkDestry-t"},"content":"* Words are partially matched. e.g `sam` will match `Samantha`","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"DarkDestry-t"},"content":"* Similar words are matched. e.g `Shawn` with match `Shaun`","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"DarkDestry-t"},"content":"* Partially similar words will also be matched as a result of the above. e.g `Ben` will match `Elizabeth`","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"DarkDestry-t"},"content":"    * `bet` in `Elizabeth` is 1 character away from `Ben`","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"DarkDestry-t"},"content":"* Results will be sorted by similarity then dictionary order.","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"yaowei-soc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"yaowei-soc"},"content":"![Find Command UI](images/UG_Find%20Command.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"yaowei-soc"},"content":"**Examples**:","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"yaowei-soc"},"content":"| Example           | Description                          |","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"yaowei-soc"},"content":"| ----------------- | ------------------------------------ |","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"yaowei-soc"},"content":"| `find John`       | returns `john` and `John Doe`        |","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"yaowei-soc"},"content":"| `find alex david` | returns `Alex Yeoh`, `David Li`      |","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"yaowei-soc"},"content":"| `find sam`        | returns `Samantha Koh`, `Sammy Leow` |","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"yaowei-soc"},"content":"Deletes the specified person(s) from the address book.","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `delete { shown | selected | INDEX… }`","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"yaowei-soc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":223,"author":{"gitId":"yaowei-soc"},"content":"**:information_source: Notes on `delete` command:**\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"yaowei-soc"},"content":"* Deletes the person at the specified `INDEX`/`INDEX…` or shown person list or selected list.","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"yaowei-soc"},"content":"* The command **operates on the shown list** that may be modified by an earlier command.","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"yaowei-soc"},"content":"* The index **must be a positive integer**, i.e 1, 2, 3, …","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"yaowei-soc"},"content":"* To delete all the shown person, type `delete shown`","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"yaowei-soc"},"content":"* To delete all the selected person, type `delete selected`","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"yaowei-soc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"yaowei-soc"},"content":"![Delete Command UI](images/UG_Delete%20Command.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"yaowei-soc"},"content":"**Examples**:","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"yaowei-soc"},"content":"| Example                                      | Description                                                                                                           |","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"yaowei-soc"},"content":"| -------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"yaowei-soc"},"content":"| `list`\u003cbr\u003e`delete 2`                         | `list` displays all entries.\u003cbr\u003e`delete 2` deletes the second entry in the list shown.                                |","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"yaowei-soc"},"content":"| `find Betsy`\u003cbr\u003e`delete 1`                   | `find Betsy` filters entries to the find result.\u003cbr\u003e `delete 1` deletes the first entry in the filtered results list. |","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"yaowei-soc"},"content":"| `select 1 2 3`   \u003cbr\u003e      `delete selected` | Deletes selected entries 1, 2 and 3                                                                                   |","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"yaowei-soc"},"content":"| `delete shown`                               | Deletes all the displayed persons in the person list                                                                   |","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"yaowei-soc"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"yaowei-soc"},"content":"**:bulb: Bulk Delete**","lastModifiedDate":"2021-03-31"},{"lineNumber":248,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"yaowei-soc"},"content":"To bulk delete, either do `delete 1 2 3` to delete indexes 1, 2 and 3","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"yaowei-soc"},"content":"or `delete shown` to delete all the shown persons.","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"yaowei-soc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"yaowei-soc"},"content":"### Selecting persons : `select`","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"yaowei-soc"},"content":"Enables user to select person objects to apply actions on.","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"yaowei-soc"},"content":"Format: `select { clear | shown | show | INDEX… }`","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"yaowei-soc"},"content":"Sub Command Format:","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"yaowei-soc"},"content":"* `select show`","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"yaowei-soc"},"content":"* `select clear`","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"yaowei-soc"},"content":"* `select shown`","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"yaowei-soc"},"content":"* `select INDEX…`","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":266,"author":{"gitId":"yaowei-soc"},"content":"The selected person will have a highlighted index number to indicate selection status.","lastModifiedDate":"2021-03-31"},{"lineNumber":267,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"yaowei-soc"},"content":"![Select UI Example](images/UG_Select%20Indicator.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-29"},{"lineNumber":271,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"yaowei-soc"},"content":"| Example | Description |","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"yaowei-soc"},"content":"| --------------- | -------- |","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"yaowei-soc"},"content":"| `select show` | Shows the selected person(s) |","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"yaowei-soc"},"content":"| `select shown`| Select the currently shown person in the person list |","lastModifiedDate":"2021-03-29"},{"lineNumber":276,"author":{"gitId":"yaowei-soc"},"content":"| `select clear` | Clears the current selection |","lastModifiedDate":"2021-03-29"},{"lineNumber":277,"author":{"gitId":"yaowei-soc"},"content":"| `select 1` | Select the person with index 1 |","lastModifiedDate":"2021-03-29"},{"lineNumber":278,"author":{"gitId":"yaowei-soc"},"content":"| `select 1 2` | Select persons with index 1 and 2 |","lastModifiedDate":"2021-03-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"yaowei-soc"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"yaowei-soc"},"content":":exclamation: **This action is irreversible.** Do not run this command with actual data unless you want to delete all entries.","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"yaowei-soc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":290,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `clear`","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `exit`","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"yaowei-soc"},"content":"### Command Auto Completion","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"yaowei-soc"},"content":"Command Auto Completion autofills a command in the command box by pressing the \u003ckbd\u003eTab\u003c/kbd\u003e key.","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"yaowei-soc"},"content":"**Examples**:","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":304,"author":{"gitId":"yaowei-soc"},"content":"To execute the command `delete`,","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":306,"author":{"gitId":"yaowei-soc"},"content":"Typing `del` followed by \u003ckbd\u003eTab\u003c/kbd\u003e will auto complete `del` to `delete`.","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":308,"author":{"gitId":"yaowei-soc"},"content":"In the command box, it is possible to toggle through **Existing** and **Aliased** [Coming Soon] commands with \u003ckbd\u003eTab\u003c/kbd\u003e.","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":310,"author":{"gitId":"justgnohUG"},"content":"Extra auto completion features exist for some commands.","lastModifiedDate":"2021-03-17"},{"lineNumber":311,"author":{"gitId":"yaowei-soc"},"content":"See the table below for more information.","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":313,"author":{"gitId":"justgnohUG"},"content":"| Command                        | Description                                                                                                                                           |","lastModifiedDate":"2021-03-17"},{"lineNumber":314,"author":{"gitId":"yaowei-soc"},"content":"| ------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-30"},{"lineNumber":315,"author":{"gitId":"yaowei-soc"},"content":"| `delete`                       | The \u003ckbd\u003eUp\u003c/kbd\u003e/\u003ckbd\u003eDown\u003c/kbd\u003e arrow keys toggles through contacts. Appends the `index` of a contact in focus to existing text in the command box. |","lastModifiedDate":"2021-03-30"},{"lineNumber":316,"author":{"gitId":"yaowei-soc"},"content":"| `Other Commands` [Coming Soon] |                                                                                                                                                       |","lastModifiedDate":"2021-03-30"},{"lineNumber":317,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":318,"author":{"gitId":"yaowei-soc"},"content":"### Alias","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":320,"author":{"gitId":"yaowei-soc"},"content":"Alias creates shortcut command of the actual command.","lastModifiedDate":"2021-03-30"},{"lineNumber":321,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":322,"author":{"gitId":"yaowei-soc"},"content":"#### Add Alias: `alias add`","lastModifiedDate":"2021-03-30"},{"lineNumber":323,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":324,"author":{"gitId":"yaowei-soc"},"content":"Adds an alias to address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":326,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `alias add ALIAS COMMAND`","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":328,"author":{"gitId":"yaowei-soc"},"content":"**Examples**:","lastModifiedDate":"2021-03-30"},{"lineNumber":329,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":330,"author":{"gitId":"yaowei-soc"},"content":"| Example                             | Description                                                                                                                                                                                |","lastModifiedDate":"2021-03-30"},{"lineNumber":331,"author":{"gitId":"yaowei-soc"},"content":"| ----------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |","lastModifiedDate":"2021-03-30"},{"lineNumber":332,"author":{"gitId":"yaowei-soc"},"content":"| `alias add ls list`                 | Associates a new `ls` command to list, such that the ls command will behave identically to the list command (i.e ls will now generate the list of all contacts).                           |","lastModifiedDate":"2021-03-30"},{"lineNumber":333,"author":{"gitId":"yaowei-soc"},"content":"| `alias add ls list -n  -p  -e  -t ` | Associates a new `ls` command to list, such that the `ls` command will behave identically to the list command with the options (i.e `list -n  -p  -e  -t`).                                |","lastModifiedDate":"2021-03-30"},{"lineNumber":334,"author":{"gitId":"yaowei-soc"},"content":"| `alias add f find`                  | Associates a new `f` command to `find`, such that the `f` command will behave identically to the `find` command (i.e f Alex Yeoh will now return contacts equals or similar to Alex Yeoh). |","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":336,"author":{"gitId":"yaowei-soc"},"content":"#### Delete Alias: `alias delete`","lastModifiedDate":"2021-03-30"},{"lineNumber":337,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":338,"author":{"gitId":"yaowei-soc"},"content":"Deletes an existing alias from address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":339,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":340,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `alias delete ALIAS`","lastModifiedDate":"2021-03-30"},{"lineNumber":341,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":342,"author":{"gitId":"yaowei-soc"},"content":"**Examples**:","lastModifiedDate":"2021-03-30"},{"lineNumber":343,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":344,"author":{"gitId":"tanboonji"},"content":"| Example                             | Description                                                                                                                                                                                |","lastModifiedDate":"2021-03-03"},{"lineNumber":345,"author":{"gitId":"yaowei-soc"},"content":"| ----------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |","lastModifiedDate":"2021-03-30"},{"lineNumber":346,"author":{"gitId":"yaowei-soc"},"content":"| `alias delete ls`                   | Removes the alias `ls`                                                                                                                                                                     |","lastModifiedDate":"2021-03-30"},{"lineNumber":347,"author":{"gitId":"yaowei-soc"},"content":"| `alias delete d`                    | Removes the alias `d`                                                                                                                                                                      |","lastModifiedDate":"2021-03-30"},{"lineNumber":348,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":349,"author":{"gitId":"yaowei-soc"},"content":"#### List Alias: `alias list`","lastModifiedDate":"2021-03-30"},{"lineNumber":350,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":351,"author":{"gitId":"yaowei-soc"},"content":"Lists all aliases in the address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":352,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":353,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `alias list`","lastModifiedDate":"2021-03-30"},{"lineNumber":354,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":355,"author":{"gitId":"yaowei-soc"},"content":"### Filter Field Visibility: `filter`","lastModifiedDate":"2021-03-30"},{"lineNumber":356,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":357,"author":{"gitId":"yaowei-soc"},"content":"Filter command toggles visibility of fields based on input.","lastModifiedDate":"2021-03-30"},{"lineNumber":358,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":359,"author":{"gitId":"yaowei-soc"},"content":"**Format**: `filter [-OPTION…]`","lastModifiedDate":"2021-03-30"},{"lineNumber":360,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":361,"author":{"gitId":"yaowei-soc"},"content":"each option should start with a hyphen `-` e.g. `-OPTION` and be separated by a white-space.","lastModifiedDate":"2021-03-30"},{"lineNumber":362,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":363,"author":{"gitId":"yaowei-soc"},"content":"Options which are excluded will be hidden.","lastModifiedDate":"2021-03-30"},{"lineNumber":364,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"yaowei-soc"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":366,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":367,"author":{"gitId":"yaowei-soc"},"content":":information_source: Refer to [Field Summary table](#field-summary) for the available options","lastModifiedDate":"2021-03-30"},{"lineNumber":368,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":369,"author":{"gitId":"yaowei-soc"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":370,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":371,"author":{"gitId":"yaowei-soc"},"content":"![Filter Command UI](images/UG_Filter%20Command.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":372,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":373,"author":{"gitId":"yaowei-soc"},"content":"**Examples**:","lastModifiedDate":"2021-03-30"},{"lineNumber":374,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":375,"author":{"gitId":"tanboonji"},"content":"| Example        | Description                                             |","lastModifiedDate":"2021-03-03"},{"lineNumber":376,"author":{"gitId":"yaowei-soc"},"content":"| -------------- | ------------------------------------------------------- |","lastModifiedDate":"2021-03-30"},{"lineNumber":377,"author":{"gitId":"yaowei-soc"},"content":"| `filter -a `   | Shows the contact\u0027s name and address only.               |","lastModifiedDate":"2021-03-30"},{"lineNumber":378,"author":{"gitId":"yaowei-soc"},"content":"| `filter -a -p` | Shows the contact\u0027s name, address and phone number only. |","lastModifiedDate":"2021-03-30"},{"lineNumber":379,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":380,"author":{"gitId":"yaowei-soc"},"content":"### Live command suggestion [coming soon]","lastModifiedDate":"2021-03-30"},{"lineNumber":381,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":382,"author":{"gitId":"yaowei-soc"},"content":"\u003c!-- In addition to tab auto complete feature, A-Bash Book will also attempt to suggest commands available to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":383,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":384,"author":{"gitId":"yaowei-soc"},"content":"![](https://via.placeholder.com/350x150/000000/FFFFFF?text\u003dHi)","lastModifiedDate":"2021-03-30"},{"lineNumber":385,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":386,"author":{"gitId":"yaowei-soc"},"content":"Users will be able to press tab to cycle through the available options. --\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"yaowei-soc"},"content":"A-Bash Book data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-03-30"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":394,"author":{"gitId":"yaowei-soc"},"content":"A-Bash Book data is saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-03-30"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":396,"author":{"gitId":"yaowei-soc"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":398,"author":{"gitId":"yaowei-soc"},"content":":exclamation: **Caution:**","lastModifiedDate":"2021-03-30"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":400,"author":{"gitId":"yaowei-soc"},"content":"If changes to the data file renders its format invalid, A-Bash Book will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-03-30"},{"lineNumber":401,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":403,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"yaowei-soc"},"content":"### What is the Home Folder?","lastModifiedDate":"2021-03-30"},{"lineNumber":408,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":409,"author":{"gitId":"yaowei-soc"},"content":"A home folder is a file system folder where A-Bash Book stores data.","lastModifiedDate":"2021-03-30"},{"lineNumber":410,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":411,"author":{"gitId":"yaowei-soc"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":412,"author":{"gitId":"yaowei-soc"},"content":"foldername (Home Folder)","lastModifiedDate":"2021-03-30"},{"lineNumber":413,"author":{"gitId":"yaowei-soc"},"content":"├── a-bash-book.jar","lastModifiedDate":"2021-03-30"},{"lineNumber":414,"author":{"gitId":"yaowei-soc"},"content":"├── addressbook.log.0","lastModifiedDate":"2021-03-30"},{"lineNumber":415,"author":{"gitId":"yaowei-soc"},"content":"├── config.json","lastModifiedDate":"2021-03-30"},{"lineNumber":416,"author":{"gitId":"yaowei-soc"},"content":"├── data","lastModifiedDate":"2021-03-30"},{"lineNumber":417,"author":{"gitId":"yaowei-soc"},"content":"│   ├── addressbook.json","lastModifiedDate":"2021-03-30"},{"lineNumber":418,"author":{"gitId":"yaowei-soc"},"content":"│   └── aliases.json","lastModifiedDate":"2021-03-30"},{"lineNumber":419,"author":{"gitId":"yaowei-soc"},"content":"├── preferences.json","lastModifiedDate":"2021-03-30"},{"lineNumber":420,"author":{"gitId":"yaowei-soc"},"content":"```","lastModifiedDate":"2021-03-30"},{"lineNumber":421,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":422,"author":{"gitId":"yaowei-soc"},"content":"### How do I transfer my data to another Computer?","lastModifiedDate":"2021-03-30"},{"lineNumber":423,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":424,"author":{"gitId":"yaowei-soc"},"content":"Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous A-Bash Book home folder.","lastModifiedDate":"2021-03-30"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"yaowei-soc"},"content":"| Action           | Format, Examples                                                                                                                                                                                                                   |","lastModifiedDate":"2021-03-30"},{"lineNumber":431,"author":{"gitId":"tanboonji"},"content":"| ---------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-31"},{"lineNumber":432,"author":{"gitId":"tanboonji"},"content":"| **Add**          | `add -n NAME -p PHONE_NUMBER -e EMAIL -c COMPANY -j JOB_TITLE -a ADDRESS [-r REMARK] [-t TAG]…` \u003cbr\u003e e.g., `add -n James Ho -p 22224444 -e jamesho@example.com -a 123, Clementi Rd, 1234665 -r Likes ramen -t friend -t colleague` |","lastModifiedDate":"2021-03-31"},{"lineNumber":433,"author":{"gitId":"yaowei-soc"},"content":"| **Clear**        | `clear`                                                                                                                                                                                                                            |","lastModifiedDate":"2021-03-30"},{"lineNumber":434,"author":{"gitId":"yaowei-soc"},"content":"| **Delete**       | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                                                |","lastModifiedDate":"2021-03-30"},{"lineNumber":435,"author":{"gitId":"yaowei-soc"},"content":"| **Edit**         | `edit INDEX [-n NAME] [-p PHONE_NUMBER] [-e EMAIL] [-a ADDRESS] [-r REMARK] [-t TAG]…`\u003cbr\u003e e.g.,`edit 2 -n James Lee -e jameslee@example.com`                                                                                      |","lastModifiedDate":"2021-03-30"},{"lineNumber":436,"author":{"gitId":"yaowei-soc"},"content":"| **Find**         | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                                                         |","lastModifiedDate":"2021-03-30"},{"lineNumber":437,"author":{"gitId":"yaowei-soc"},"content":"| **Filter**       | `filter [-p] [-e] [-a] [-t]` \u003cbr\u003e e.g., `filter -p -a` to see only the phone number and address                                                                                                                                    |","lastModifiedDate":"2021-03-30"},{"lineNumber":438,"author":{"gitId":"yaowei-soc"},"content":"| **List**         | `list`                                                                                                                                                                                                                             |","lastModifiedDate":"2021-03-30"},{"lineNumber":439,"author":{"gitId":"yaowei-soc"},"content":"| **Help**         | `help`                                                                                                                                                                                                                             |","lastModifiedDate":"2021-03-30"},{"lineNumber":440,"author":{"gitId":"yaowei-soc"},"content":"| **Add Alias**    | `alias add [ALIAS] [COMMAND]`\u003cbr\u003e e.g. `alias add ls list`                                                                                                                                                                         |","lastModifiedDate":"2021-03-30"},{"lineNumber":441,"author":{"gitId":"yaowei-soc"},"content":"| **Delete Alias** | `alias delete [ALIAS]`\u003cbr\u003e e.g. `alias delete ls`                                                                                                                                                                                  |","lastModifiedDate":"2021-03-30"},{"lineNumber":442,"author":{"gitId":"yaowei-soc"},"content":"| **List Alias**   | `alias list`                                                                                                                                                                                                                       |","lastModifiedDate":"2021-03-30"},{"lineNumber":443,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":444,"author":{"gitId":"yaowei-soc"},"content":"## Field Summary","lastModifiedDate":"2021-03-30"},{"lineNumber":445,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":446,"author":{"gitId":"yaowei-soc"},"content":"| Mandatory | Field        | Command Flag | Restrictions                                                                                                                                                                                                                                                                                                                                                                                                          |","lastModifiedDate":"2021-03-30"},{"lineNumber":447,"author":{"gitId":"yaowei-soc"},"content":"| --------- | ------------ | ------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-30"},{"lineNumber":448,"author":{"gitId":"yaowei-soc"},"content":"| Yes       | Name         | `-n`         | Names should only contain alphanumeric characters and spaces, and it should not be blank                                                                                                                                                                                                                                                                                                                              |","lastModifiedDate":"2021-03-30"},{"lineNumber":449,"author":{"gitId":"tanboonji"},"content":"| Yes       | Phone Number | `-p`         | Phone numbers should only contain numbers, and it should be at least 3 digits long                                                                                                                                                                                                                                                                                                                                    |","lastModifiedDate":"2021-03-31"},{"lineNumber":450,"author":{"gitId":"yaowei-soc"},"content":"| Yes       | Email        | `-e`         | Emails should be of the format local-part@domain and adhere to the following constraints:\u003cbr\u003e1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (!#$%\u0026\u0027*+/\u003d?`{|}~^.-) `.\u003cbr\u003e2. This is followed by a \u0027@\u0027 and then a domain name. The domain name must:\u003cbr\u003e    - be at least 2 characters long\u003cbr\u003e    - start and end with alphanumeric characters |","lastModifiedDate":"2021-03-30"},{"lineNumber":451,"author":{"gitId":"tanboonji"},"content":"| Yes       | Company      | `-c`         | Company can take any values, and it should not be blank                                                                                                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2021-03-31"},{"lineNumber":452,"author":{"gitId":"tanboonji"},"content":"| Yes       | Job Title    | `-j`         | Job Title can take any values, and it should not be blank                                                                                                                                                                                                                                                                                                                                                             |","lastModifiedDate":"2021-03-31"},{"lineNumber":453,"author":{"gitId":"yaowei-soc"},"content":"| Yes       | Address      | `-a`         | Addresses can take any values, and it should not be blank                                                                                                                                                                                                                                                                                                                                                             |","lastModifiedDate":"2021-03-30"},{"lineNumber":454,"author":{"gitId":"yaowei-soc"},"content":"| No        | Tag          | `-t`         | Tags names should be alphanumeric and contains no spaces or symbols                                                                                                                                                                                                                                                                                                                                                   |","lastModifiedDate":"2021-03-30"},{"lineNumber":455,"author":{"gitId":"yaowei-soc"},"content":"| No        | Remark       | `-r`         | None                                                                                                                                                                                                                                                                                                                                                                                                                  |","lastModifiedDate":"2021-03-30"},{"lineNumber":456,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":457,"author":{"gitId":"yaowei-soc"},"content":"## Glossary","lastModifiedDate":"2021-03-30"},{"lineNumber":458,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":459,"author":{"gitId":"yaowei-soc"},"content":"| Term     | Explanation                                                                      |","lastModifiedDate":"2021-03-30"},{"lineNumber":460,"author":{"gitId":"yaowei-soc"},"content":"| -------- | -------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-30"},{"lineNumber":461,"author":{"gitId":"yaowei-soc"},"content":"| Bash     | The well known terminal interpreter                                              |","lastModifiedDate":"2021-03-30"},{"lineNumber":462,"author":{"gitId":"yaowei-soc"},"content":"| CLI      | Command Line Interface. A text based interface in which commands can be entered. |","lastModifiedDate":"2021-03-30"},{"lineNumber":463,"author":{"gitId":"yaowei-soc"},"content":"| GUI      | Graphical User Interface                                                         |","lastModifiedDate":"2021-03-30"},{"lineNumber":464,"author":{"gitId":"yaowei-soc"},"content":"| JSON     | JavaScript Object Notation, data storage format                                  |","lastModifiedDate":"2021-03-30"},{"lineNumber":465,"author":{"gitId":"yaowei-soc"},"content":"| Terminal | The Command Line Interface that text based commands are inputted into.           |","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"justgnohUG":5,"tanboonji":31,"oeiyiping":6,"-":139,"yaowei-soc":279,"DarkDestry-t":5}},{"path":"docs/diagrams/FilterDisplaySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"participant \":MainWindow\" as MainWindow MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"participant \":Logic\" as Logic LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"participant \":Model\" as Model LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"participant \":PersonListPanel\" as PersonListPanel MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"participant \":PersonListView\" as PersonListView MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"[-\u003e MainWindow : executeCommand(text)","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"\u0027activate MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"MainWindow -\u003e Logic : execute(text)","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"\u0027activate Logic","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"Logic -\u003e Model : updateDisplayFilter(predicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"\u0027activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"\u0027Model --\u003e Logic","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"\u0027deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"\u0027Logic --\u003e MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"\u0027deactivate Logic","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"MainWindow -\u003e PersonListPanel : updateDisplayFilter(predicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"\u0027activate PersonListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"PersonListPanel -\u003e PersonListView : refresh()","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"\u0027activate PersonListView","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"\u0027PersonListView --\u003e PersonListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"\u0027deactivate PersonListView","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"\u0027PersonListPanel --\u003e MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"\u0027deactivate PersonListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"\u0027[\u003c--MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"\u0027deactivate MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":47}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"Class UniqueAliasMap","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"Interface ReadOnlyUniqueAliasMap \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Package Person {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"Class Remark","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"Package Alias {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"Class CommandAlias","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"Class Command","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"Class Alias","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2019-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"ModelManager o--\u003e \"1\" UniqueAliasMap","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"UniqueAliasMap .up.|\u003e ReadOnlyUniqueAliasMap","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UniquePersonList o--\u003e \"*\" Person","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"Person *--\u003e Remark","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ModelManager -----\u003e\" ~* filtered list\" Person","lastModifiedDate":"2021-01-14"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"UniqueAliasMap o--\u003e \"*\" CommandAlias","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"CommandAlias *--\u003e \"1\" Command","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"CommandAlias *--\u003e \"1\" Alias","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tanboonji":13,"oeiyiping":2,"-":56}},{"path":"docs/diagrams/SelectCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"@startuml","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"!include style.puml","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"Package Commands \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"SelectIndexCommand .up.|\u003e SelectCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"SelectClearCommand .up.|\u003e SelectCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"SelectShowCommand .up.|\u003e SelectCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"@enduml","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yaowei-soc":12}},{"path":"docs/diagrams/SelectCommandParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"@startuml","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"!include style.puml","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"\u0027participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR_T4","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"participant \":SelectCommandParser\" as SelectCommandParser LOGIC_COLOR_T4","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"participant \":SelectIndexCommandParser\" as SelectIndexCommandParser LOGIC_COLOR_T4","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"participant \":SelectClearCommand\" as SelectClearCommand LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"participant \":SelectShowCommand\" as SelectShowCommand LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"\u0027[-\u003e AddressBookParser : parseCommand()","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"\u0027AddressBookParser -\u003e SelectCommandParser : parse(arguments)","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"[-\u003e SelectCommandParser: parse(arguments)","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"alt select INDEX or shown","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"  SelectCommandParser -\u003e SelectIndexCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"  ref over SelectIndexCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"    SelectIndexCommandParser parse logic","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"  end ref","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"  SelectIndexCommandParser --\u003e SelectCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"else select clear","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"  create SelectClearCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"  SelectCommandParser -\u003e SelectClearCommand: new SelectClearCommand()","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"  SelectClearCommand --\u003e SelectCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"else select show","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"  create SelectShowCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"  SelectCommandParser -\u003e SelectShowCommand : new SelectShowCommand()","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"  SelectShowCommand --\u003e SelectCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"end","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"[\u003c--SelectCommandParser : SelectCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"\u0027SelectCommandParser --\u003e AddressBookParser : SelectCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"\u0027[\u003c--AddressBookParser : Command","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"@enduml","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"@startuml","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"!include style.puml","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"participant \":SelectIndexCommandParser\" as SelectIndexCommandParser LOGIC_COLOR_T4","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"participant \":SelectIndexCommand\" as SelectIndexCommand LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as ParserUtil USER_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"group sd SelectIndexCommandParser parse logic","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"    alt is special index: shown","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"      SelectIndexCommandParser -\u003e SelectIndexCommand : new SelectIndexCommand()","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"      SelectIndexCommand --\u003e SelectIndexCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"    else indexes supplied","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"      SelectIndexCommandParser -\u003e ParserUtil : parseIndexes(args)","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"      ParserUtil --\u003e SelectIndexCommandParser: indexes","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"      SelectIndexCommandParser -\u003e SelectIndexCommand : new SelectIndexCommand(indexes)","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"      SelectIndexCommand --\u003e SelectIndexCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"    end","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"end","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"@enduml","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yaowei-soc":56}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"Interface AliasesStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"Class JsonAliasesStorage","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"StorageManager o--\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"StorageManager o--\u003e AliasesStorage","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .left.|\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .down.\u003e JsonSerializableAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"JsonSerializableAddressBookStorage .right.\u003e JsonSerializablePerson","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"JsonSerializablePerson .right.\u003e JsonAdaptedTag","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"JsonAliasesStorage .up.|\u003e AliasesStorage","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"JsonAliasesStorage .left.\u003e JsonSerializableAliases","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tanboonji":6,"-":24}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"title: A-Bash Book","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-T12-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T12-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T12-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-T12-3/tp)","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":16,"yaowei-soc":3}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"import seedu.address.storage.AliasesStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"import seedu.address.storage.JsonAliasesStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"DarkDestry-t"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        AliasesStorage aliasesStorage \u003d new JsonAliasesStorage(userPrefs.getAliasesFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, aliasesStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book, {@code storage}\u0027s aliases and","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"     * {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"     * An empty aliases will be used instead if {@code storage}\u0027s aliases is not found or if errors occur when reading","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"     * {@code storage}\u0027s aliases.","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"        ReadOnlyAddressBook initialAddressBookData;","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"            initialAddressBookData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"        Optional\u003cReadOnlyUniqueAliasMap\u003e aliasesOptional;","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"        ReadOnlyUniqueAliasMap initialAliasesData;","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"            aliasesOptional \u003d storage.readAliases();","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"            if (aliasesOptional.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"                logger.info(\"Data file not found. Will be starting with an empty Aliases\");","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"            initialAliasesData \u003d aliasesOptional.orElse(new UniqueAliasMap());","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Aliases\");","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"            initialAliasesData \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Aliases\");","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"            initialAliasesData \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"        return new ModelManager(initialAddressBookData, userPrefs, initialAliasesData);","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanboonji":31,"-":175,"DarkDestry-t":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * Returns the Aliases.","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"     * @see seedu.address.model.Model#getAliases()","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    ReadOnlyUniqueAliasMap getAliases();","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":46,"author":{"gitId":"DarkDestry-t"},"content":"    /** Returns an unmodifiable view of the sorted filtered list of persons */","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"DarkDestry-t"},"content":"    ObservableList\u003cPerson\u003e getSortedFilteredPersonList();","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"     * Returns predicate that determines PersonCard control visibility.","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"     * @return predicate that returns true if prefix linked control should be shown.","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"    DisplayFilterPredicate getDisplayFilter();","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"justgnohUG"},"content":"     * Gets a filtered list of Autocomplete commands given a \"starts-with\" value.","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"justgnohUG"},"content":"     * @param value String value to be used as \"starts-with\" value in filter","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"justgnohUG"},"content":"     * @return Returns a filtered ObservableList of commands","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"justgnohUG"},"content":"    ObservableList\u003cString\u003e getAutocompleteCommands(String value);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"     * Returns predicate that determines a Person objects selected state.","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"     * @return predicate that is true if Person object is selected","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"yaowei-soc"},"content":"    Predicate\u003cPerson\u003e getSelectedPersonPredicate();","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"     * Returns aliases in an ObservableList of String.","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"    ObservableList\u003cString\u003e getObservableStringAliases();","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"justgnohUG":8,"tanboonji":12,"-":50,"yaowei-soc":15,"DarkDestry-t":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    private boolean shouldReturnAlias \u003d false;","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText, model.getAliases());","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        shouldReturnAlias \u003d commandResult.isShowAlias();","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"            storage.saveAliases(model.getAliases());","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"    public ReadOnlyUniqueAliasMap getAliases() {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"        return model.getAliases();","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"    public ObservableList\u003cString\u003e getObservableStringAliases() {","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        return model.getObservableStringAliases();","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":101,"author":{"gitId":"DarkDestry-t"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"DarkDestry-t"},"content":"    public ObservableList\u003cPerson\u003e getSortedFilteredPersonList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"DarkDestry-t"},"content":"        return model.getSortedFilteredPersonList();","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"DarkDestry-t"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"yaowei-soc"},"content":"    public DisplayFilterPredicate getDisplayFilter() {","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"yaowei-soc"},"content":"        return model.getDisplayFilter();","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"justgnohUG"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"justgnohUG"},"content":"    public ObservableList\u003cString\u003e getAutocompleteCommands(String value) {","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"justgnohUG"},"content":"        List\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(AddCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(EditCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(ClearCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(FindCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(ListCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(FilterCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(ExitCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(HelpCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(AliasCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-21"},{"lineNumber":139,"author":{"gitId":"yaowei-soc"},"content":"        commandList.add(SelectCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"justgnohUG"},"content":"        Collections.sort(commandList);","lastModifiedDate":"2021-03-21"},{"lineNumber":141,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":"        if (shouldReturnAlias) {","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"            shouldReturnAlias \u003d false;","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":"            return getObservableStringAliases();","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"        } else {","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"justgnohUG"},"content":"            if (value \u003d\u003d null || value.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"justgnohUG"},"content":"                return FXCollections.observableList(commandList);","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"justgnohUG"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"justgnohUG"},"content":"                assert (!value.isEmpty());","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"justgnohUG"},"content":"                List\u003cString\u003e filteredCommandList \u003d commandList","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"justgnohUG"},"content":"                        .stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"justgnohUG"},"content":"                        .filter((command) -\u003e command.startsWith(value))","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"justgnohUG"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"justgnohUG"},"content":"                return FXCollections.observableList(filteredCommandList);","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"justgnohUG"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"justgnohUG"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"yaowei-soc"},"content":"    public Predicate\u003cPerson\u003e getSelectedPersonPredicate() {","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"yaowei-soc"},"content":"        return model.getSelectedPersonPredicate();","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"justgnohUG":43,"tanboonji":20,"-":81,"yaowei-soc":15,"DarkDestry-t":5}},{"path":"src/main/java/seedu/address/logic/commands/AddAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":" * Adds a command alias to the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"public class AddAliasCommand extends AliasCommand {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a command alias to the address book. \"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"            + \"Parameters: \" + ADD_SUB_COMMAND_WORD + \" ALIAS COMMAND\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + ADD_SUB_COMMAND_WORD + \" ls \" + ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New command alias added: %1$s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_DUPLICATE_ALIAS \u003d \"This alias already exists in the address book\";","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private final CommandAlias commandAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"     * Creates an AddAliasCommand to add the specified {@code commandAlias}","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public AddAliasCommand(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(commandAlias);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        this.commandAlias \u003d commandAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        if (model.hasCommandAlias(commandAlias)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ALIAS);","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        model.addAlias(commandAlias);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, commandAlias));","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"                || (other instanceof AddAliasCommand // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 commandAlias.equals(((AddAliasCommand) other).commandAlias));","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":50}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"            + PREFIX_COMPANY + \" COMPANY \"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"            + PREFIX_JOB_TITLE + \" JOB_TITLE \"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \" ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"            + \"[\" + PREFIX_REMARK + \" REMARK] \"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \" TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"            + PREFIX_COMPANY + \" Google \"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            + PREFIX_JOB_TITLE + \" Software Engineer \"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \" 311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"            + PREFIX_REMARK + \" University friend \"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \" friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \" owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanboonji":6,"oeiyiping":3,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/AliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * Represents an alias command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public abstract class AliasCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND_WORD \u003d \"alias\";","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    public static final String ADD_SUB_COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    public static final String DELETE_SUB_COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    public static final String LIST_SUB_COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add or delete a command alias to the address book. \"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"            + \"SUB_COMMAND [PARAMETERS]\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"            + \"Sub Commands: \"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            + ADD_SUB_COMMAND_WORD + \" ALIAS_NAME COMMAND_WORD, \"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"            + DELETE_SUB_COMMAND_WORD + \" ALIAS_NAME, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"            + LIST_SUB_COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"            + \"Example: \"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            + COMMAND_WORD + \" \" + ADD_SUB_COMMAND_WORD + \" ls \" + ListCommand.COMMAND_WORD + \", \"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            + COMMAND_WORD + \" \" + DELETE_SUB_COMMAND_WORD + \" l, \"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"            + COMMAND_WORD + \" \" + LIST_SUB_COMMAND_WORD;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":25}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private final boolean shouldShowHelp;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    /** Alias information should be shown to the user. */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private final boolean shouldShowAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public CommandResult(String feedbackToUser, boolean shouldShowHelp, boolean shouldShowAlias, boolean exit) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        this.shouldShowHelp \u003d shouldShowHelp;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        this.shouldShowAlias \u003d shouldShowAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        return shouldShowHelp;","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public boolean isShowAlias() {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        return shouldShowAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 shouldShowHelp \u003d\u003d otherCommandResult.shouldShowHelp","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 shouldShowAlias \u003d\u003d otherCommandResult.shouldShowAlias","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"        return Objects.hash(feedbackToUser, shouldShowHelp, shouldShowAlias, exit);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanboonji":13,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" * Deletes a command alias in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"public class DeleteAliasCommand extends AliasCommand {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a command alias in the address book. \"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"            + \"Parameters: \" + DELETE_SUB_COMMAND_WORD + \" ALIAS\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + DELETE_SUB_COMMAND_WORD + \" ls \" + ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted command alias added: %1$s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_ALIAS_NOT_FOUND \u003d \"This alias does not exist in the address book\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private final Alias targetAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    public DeleteAliasCommand(Alias targetAlias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        this.targetAlias \u003d targetAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        if (!model.hasAlias(targetAlias)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"            throw new CommandException(MESSAGE_ALIAS_NOT_FOUND);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        CommandAlias deletedCommandAlias \u003d model.getCommandAlias(targetAlias);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        model.deleteAlias(targetAlias);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, deletedCommandAlias));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"                || (other instanceof DeleteAliasCommand // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 targetAlias.equals(((DeleteAliasCommand) other).targetAlias)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":48}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.DeleteCommandParser.SELECTED;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.DeleteCommandParser.SPECIAL_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"            + \"Parameters: { shown | selected | INDEX… } (must be a valid positive integer)\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"            + \"Example:\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"            + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"            + COMMAND_WORD + \" \" + SPECIAL_INDEX + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"            + COMMAND_WORD + \" \" + SELECTED;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted person: %1$s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_DELETE_PERSONS_SUCCESS \u003d \"Deleted multiple persons:\\n%1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_NO_SELECTED \u003d \"No selected person to delete.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"    private final boolean isSpecialIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"    private final boolean isDeleteSelected;","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"     * Private constructor. Should only be called via builder.","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"     * @param isSpecialIndex","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"     * @param isDeleteSelected","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"     * @param indexes","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"    private DeleteCommand(boolean isSpecialIndex, boolean isDeleteSelected, List\u003cIndex\u003e indexes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"        targetIndexes \u003d requireNonNull(indexes);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"        this.isSpecialIndex \u003d isSpecialIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"        this.isDeleteSelected \u003d isDeleteSelected;","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"    public static DeleteCommand buildDeleteSelectedCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"        return new DeleteCommand(false, true, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"    public static DeleteCommand buildDeleteShownCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"        return new DeleteCommand(true, false, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"    public static DeleteCommand buildDeleteIndexCommand(List\u003cIndex\u003e indexes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"        return new DeleteCommand(false, false, indexes);","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"        if (isSpecialIndex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"yaowei-soc"},"content":"            return deleteAll(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"yaowei-soc"},"content":"        if (isDeleteSelected) {","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"yaowei-soc"},"content":"            return deleteSelected(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"        return deleteOneOrMultiple(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"     * Deletes one or multiple person from model.","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"yaowei-soc"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"     * @throws CommandException if index is invalid","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"yaowei-soc"},"content":"    private CommandResult deleteOneOrMultiple(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"yaowei-soc"},"content":"        // Validate indexes","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"yaowei-soc"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"yaowei-soc"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cPerson\u003e personListToDelete \u003d targetIndexes.stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"yaowei-soc"},"content":"                .map(Index::getZeroBased)","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"yaowei-soc"},"content":"                .map(lastShownList::get)","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"yaowei-soc"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"yaowei-soc"},"content":"        for (Person personToDelete : personListToDelete) {","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"yaowei-soc"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"yaowei-soc"},"content":"            stringBuilder.append(personToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"yaowei-soc"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"yaowei-soc"},"content":"        if (targetIndexes.size() \u003d\u003d 1) {","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"yaowei-soc"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"yaowei-soc"},"content":"                    String.format(MESSAGE_DELETE_PERSON_SUCCESS, stringBuilder.toString().trim()));","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"yaowei-soc"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"yaowei-soc"},"content":"                String.format(MESSAGE_DELETE_PERSONS_SUCCESS, stringBuilder.toString().trim()));","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"yaowei-soc"},"content":"     * Deletes all the person in the shown person list.","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"yaowei-soc"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"yaowei-soc"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"yaowei-soc"},"content":"    private CommandResult deleteAll(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"yaowei-soc"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"yaowei-soc"},"content":"        // Note: There is a need to clone the array list before deleting","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"yaowei-soc"},"content":"        for (Person personToDelete : new ArrayList\u003c\u003e(lastShownList)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"yaowei-soc"},"content":"            stringBuilder.append(personToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"yaowei-soc"},"content":"            stringBuilder.append(\"\\n\");","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"yaowei-soc"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"yaowei-soc"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSONS_SUCCESS, stringBuilder));","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":135,"author":{"gitId":"yaowei-soc"},"content":"    private CommandResult deleteSelected(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"yaowei-soc"},"content":"        model.applySelectedPredicate();","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"yaowei-soc"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"yaowei-soc"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"yaowei-soc"},"content":"            throw new CommandException(MESSAGE_NO_SELECTED);","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"yaowei-soc"},"content":"        return deleteAll(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 isSpecialIndex \u003d\u003d ((DeleteCommand) other).isSpecialIndex","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 isDeleteSelected \u003d\u003d ((DeleteCommand) other).isDeleteSelected","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 targetIndexes.containsAll(((DeleteCommand) other).targetIndexes)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":51,"yaowei-soc":101}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"            + \"Parameters: { shown | selected | INDEX… } (must be a positive integer) \"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"            + \"[\" + PREFIX_COMPANY + \" COMPANY] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            + \"[\" + PREFIX_JOB_TITLE + \" JOB_TITLE] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \" ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"            + \"[\" + PREFIX_REMARK + \" REMARK] \"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \" TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_EDIT_PERSONS_SUCCESS \u003d \"Edited %1$d person\";","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_NO_SELECTED \u003d \"No selected person to edit.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON_BULK \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"            \"Bulk editing will result in duplicate person in the address book.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"    private final boolean isSpecialIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"    private final boolean isEditSelected;","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"yaowei-soc"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"     * Private constructor. Should only be called via builder.","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"     * @param isSpecialIndex","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"     * @param isEditSelected","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"     * @param editPersonDescriptor","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"     * @param targetIndexes","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"yaowei-soc"},"content":"    private EditCommand(boolean isSpecialIndex, boolean isEditSelected,","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"            EditPersonDescriptor editPersonDescriptor, List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"        this.targetIndexes \u003d requireNonNull(targetIndexes);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"        this.isSpecialIndex \u003d isSpecialIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"yaowei-soc"},"content":"        this.isEditSelected \u003d isEditSelected;","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"yaowei-soc"},"content":"        this.editPersonDescriptor \u003d requireNonNull(editPersonDescriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"yaowei-soc"},"content":"     * Initializes EditCommand that edits all the selected items.","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"yaowei-soc"},"content":"     * @param descriptor details to edit the person with","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"yaowei-soc"},"content":"     * @return built {@code EditCommand}","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"yaowei-soc"},"content":"    public static EditCommand buildEditSelectedCommand(EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"yaowei-soc"},"content":"        return new EditCommand(false, true, descriptor, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"yaowei-soc"},"content":"     * Initializes EditCommand that edits all the shown items in list.","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"yaowei-soc"},"content":"     * @param descriptor details to edit the person with","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"yaowei-soc"},"content":"     * @return built {@code EditCommand}","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"yaowei-soc"},"content":"    public static EditCommand buildEditShownCommand(EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"yaowei-soc"},"content":"        return new EditCommand(true, false, descriptor, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"yaowei-soc"},"content":"     * Initializes EditCommand that edits the items from a parsed user input indexes.","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"yaowei-soc"},"content":"     * @param descriptor details to edit the person with","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"yaowei-soc"},"content":"     * @param indexes of the person in the filtered person list to edit","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"yaowei-soc"},"content":"     * @return","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"yaowei-soc"},"content":"    public static EditCommand buildEditIndexCommand(List\u003cIndex\u003e indexes,","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"yaowei-soc"},"content":"            EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"yaowei-soc"},"content":"        return new EditCommand(false, false, descriptor, indexes);","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"yaowei-soc"},"content":"        if (isSpecialIndex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"yaowei-soc"},"content":"            return editAll(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"yaowei-soc"},"content":"        if (isEditSelected) {","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"yaowei-soc"},"content":"            return editSelected(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"yaowei-soc"},"content":"        return editOneOrMultiple(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"yaowei-soc"},"content":"     * Edits one more multiple person from {@code Model} based on the targetIndexes.","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"yaowei-soc"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"yaowei-soc"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"yaowei-soc"},"content":"     * @throws CommandException if index is invalid or duplicates are found","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"yaowei-soc"},"content":"    private CommandResult editOneOrMultiple(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"yaowei-soc"},"content":"        // Validate indexes","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"yaowei-soc"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"yaowei-soc"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"yaowei-soc"},"content":"        if (targetIndexes.size() \u003d\u003d 1) {","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"yaowei-soc"},"content":"            Index targetIndex \u003d targetIndexes.get(0);","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"yaowei-soc"},"content":"            Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"yaowei-soc"},"content":"        UniquePersonList editedPersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"yaowei-soc"},"content":"        // Validate bulk index changes and existing person objects","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"yaowei-soc"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"yaowei-soc"},"content":"            Person person \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"yaowei-soc"},"content":"            validateAndAdd(model, editedPersonList, person, editPersonDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"yaowei-soc"},"content":"        // Changes for indexes are validated, proceed with updating","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"yaowei-soc"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"yaowei-soc"},"content":"            Person person \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"yaowei-soc"},"content":"            Person editedPerson \u003d createEditedPerson(person, editPersonDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"yaowei-soc"},"content":"            model.setPerson(person, editedPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"yaowei-soc"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"yaowei-soc"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSONS_SUCCESS, targetIndexes.size()));","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"yaowei-soc"},"content":"     * Edits all the person in the shown person list.","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"yaowei-soc"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"yaowei-soc"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"yaowei-soc"},"content":"     * @throws CommandException if index is invalid or duplicates are found","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"yaowei-soc"},"content":"    private CommandResult editAll(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cPerson\u003e lastShownList \u003d new ArrayList\u003c\u003e(model.getFilteredPersonList());","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"yaowei-soc"},"content":"        UniquePersonList editedPersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"yaowei-soc"},"content":"        // Validate current bulk changes and existing person objects","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"yaowei-soc"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"yaowei-soc"},"content":"            validateAndAdd(model, editedPersonList, person, editPersonDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"yaowei-soc"},"content":"        // Changes are validated, proceed with updating","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"yaowei-soc"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"yaowei-soc"},"content":"            Person editedPerson \u003d createEditedPerson(person, editPersonDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"yaowei-soc"},"content":"            model.setPerson(person, editedPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"yaowei-soc"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSONS_SUCCESS, lastShownList.size()));","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"yaowei-soc"},"content":"     * Edits all the person in the selected person list.","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"yaowei-soc"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"yaowei-soc"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"yaowei-soc"},"content":"     * @throws CommandException if index is invalid or duplicates are found or there is no selected","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"yaowei-soc"},"content":"     *                          person","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"yaowei-soc"},"content":"    private CommandResult editSelected(Model model) throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"yaowei-soc"},"content":"        model.applySelectedPredicate();","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"yaowei-soc"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"yaowei-soc"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"yaowei-soc"},"content":"            throw new CommandException(MESSAGE_NO_SELECTED);","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"yaowei-soc"},"content":"        return editAll(model);","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"yaowei-soc"},"content":"     * Checks if editing a person will introduce duplicate and adds into the {@code","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"yaowei-soc"},"content":"     * UniquePersonList}","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"yaowei-soc"},"content":"     * @param model                {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"yaowei-soc"},"content":"     * @param editedPersonList     a {@code UniquePersonList} of person that is currently being","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"yaowei-soc"},"content":"     *                             edited.","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"yaowei-soc"},"content":"     * @param person               {@code Person} current person to edit.","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"yaowei-soc"},"content":"     * @param editPersonDescriptor {@code EditPersonDescriptor} of the changes to make.","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"yaowei-soc"},"content":"     * @throws CommandException if change will introduce duplicates.","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"yaowei-soc"},"content":"    private void validateAndAdd(Model model, UniquePersonList editedPersonList, Person person,","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"yaowei-soc"},"content":"            EditPersonDescriptor editPersonDescriptor) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"yaowei-soc"},"content":"        Person editedPerson \u003d createEditedPerson(person, editPersonDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"yaowei-soc"},"content":"        if (!person.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"yaowei-soc"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON_BULK);","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"yaowei-soc"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"yaowei-soc"},"content":"            editedPersonList.add(editedPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"yaowei-soc"},"content":"        } catch (DuplicatePersonException ex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"yaowei-soc"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON_BULK);","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"tanboonji"},"content":"        Company updateCompany \u003d editPersonDescriptor.getCompany().orElse(personToEdit.getCompany());","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"tanboonji"},"content":"        JobTitle updatedJobTitle \u003d editPersonDescriptor.getJobTitle().orElse(personToEdit.getJobTitle());","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"oeiyiping"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2021-03-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"tanboonji"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updateCompany, updatedJobTitle,","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"tanboonji"},"content":"                updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":285,"author":{"gitId":"yaowei-soc"},"content":"        return targetIndexes.containsAll(e.targetIndexes)","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 isSpecialIndex \u003d\u003d ((EditCommand) other).isSpecialIndex","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 isEditSelected \u003d\u003d ((EditCommand) other).isEditSelected","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 targetIndexes.containsAll(((EditCommand) other).targetIndexes)","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":295,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":300,"author":{"gitId":"tanboonji"},"content":"        private Company company;","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"tanboonji"},"content":"        private JobTitle jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":303,"author":{"gitId":"oeiyiping"},"content":"        private Remark remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":309,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":310,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":316,"author":{"gitId":"tanboonji"},"content":"            setCompany(toCopy.company);","lastModifiedDate":"2021-03-30"},{"lineNumber":317,"author":{"gitId":"tanboonji"},"content":"            setJobTitle(toCopy.jobTitle);","lastModifiedDate":"2021-03-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":319,"author":{"gitId":"oeiyiping"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":324,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":327,"author":{"gitId":"tanboonji"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, company, jobTitle, address, remark, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":335,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":354,"author":{"gitId":"tanboonji"},"content":"        public void setCompany(Company company) {","lastModifiedDate":"2021-03-30"},{"lineNumber":355,"author":{"gitId":"tanboonji"},"content":"            this.company \u003d company;","lastModifiedDate":"2021-03-30"},{"lineNumber":356,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":357,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":358,"author":{"gitId":"tanboonji"},"content":"        public Optional\u003cCompany\u003e getCompany() {","lastModifiedDate":"2021-03-30"},{"lineNumber":359,"author":{"gitId":"tanboonji"},"content":"            return Optional.ofNullable(company);","lastModifiedDate":"2021-03-30"},{"lineNumber":360,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":361,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":362,"author":{"gitId":"tanboonji"},"content":"        public void setJobTitle(JobTitle jobTitle) {","lastModifiedDate":"2021-03-30"},{"lineNumber":363,"author":{"gitId":"tanboonji"},"content":"            this.jobTitle \u003d jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":364,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":366,"author":{"gitId":"tanboonji"},"content":"        public Optional\u003cJobTitle\u003e getJobTitle() {","lastModifiedDate":"2021-03-30"},{"lineNumber":367,"author":{"gitId":"tanboonji"},"content":"            return Optional.ofNullable(jobTitle);","lastModifiedDate":"2021-03-30"},{"lineNumber":368,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":369,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":372,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":375,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":378,"author":{"gitId":"oeiyiping"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-03-15"},{"lineNumber":379,"author":{"gitId":"oeiyiping"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":380,"author":{"gitId":"oeiyiping"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":381,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":382,"author":{"gitId":"oeiyiping"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-03-15"},{"lineNumber":383,"author":{"gitId":"oeiyiping"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":384,"author":{"gitId":"oeiyiping"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":385,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":387,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":388,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":389,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":395,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":396,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":397,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":398,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":421,"author":{"gitId":"tanboonji"},"content":"                    \u0026\u0026 getCompany().equals(e.getCompany())","lastModifiedDate":"2021-03-30"},{"lineNumber":422,"author":{"gitId":"tanboonji"},"content":"                    \u0026\u0026 getJobTitle().equals(e.getJobTitle())","lastModifiedDate":"2021-03-30"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":424,"author":{"gitId":"tanboonji"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-30"},{"lineNumber":425,"author":{"gitId":"tanboonji"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark());","lastModifiedDate":"2021-03-30"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":428,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tanboonji":35,"oeiyiping":14,"-":222,"yaowei-soc":157}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tanboonji":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":" * Sets the person list filter.","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Applied filter\";","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"    private final DisplayFilterPredicate filterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"    public FilterCommand(DisplayFilterPredicate filterPredicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"        this.filterPredicate \u003d filterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"        model.updateDisplayFilter(filterPredicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"                || (other instanceof FilterCommand) // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 filterPredicate.equals(((FilterCommand) other).filterPredicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"yaowei-soc":38}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"DarkDestry-t"},"content":"        model.updateSortedFilteredPersonList(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":42,"DarkDestry-t":1}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanboonji":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"public class ListAliasCommand extends AliasCommand {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public static final String SHOWING_ALIASES_MESSAGE \u003d \"You have %d aliases.\";","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"        int numOfAlias \u003d model.getNumOfAlias();","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        return new CommandResult(String.format(SHOWING_ALIASES_MESSAGE, numOfAlias),","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"                false, true, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tanboonji":21}},{"path":"src/main/java/seedu/address/logic/commands/SelectClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":" * Clears the selected persons that are selected by a user.","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"public class SelectClearCommand extends SelectCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Cleared selected persons\";","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"        model.clearSelectedPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"        return (other instanceof SelectClearCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":26}},{"path":"src/main/java/seedu/address/logic/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.SelectIndexCommandParser.SPECIAL_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":" * Represents a select command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"public abstract class SelectCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"    public static final String SHOW_SUB_COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"    public static final String CLEAR_SUB_COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Select or show selected persons.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"            + \"Parameters: { clear | show | shown | INDEX… }\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"            + \"Sub Commands: \" + SHOW_SUB_COMMAND_WORD + \" \" + CLEAR_SUB_COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"            + \"Examples:\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"            + COMMAND_WORD + \" \" + SHOW_SUB_COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"            + COMMAND_WORD + \" \" + CLEAR_SUB_COMMAND_WORD + \"\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"            + COMMAND_WORD + \" \" + SPECIAL_INDEX + \"\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"            + COMMAND_WORD + \" 1 2 5\";","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":21}},{"path":"src/main/java/seedu/address/logic/commands/SelectIndexCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":" * Selects person(s) in the person list.","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"public class SelectIndexCommand extends SelectCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_SHOWN_SUCCESS \u003d \"Selected all shown items\";","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_INDEX_SUCCESS \u003d \"Selected items\";","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"    private final List\u003cIndex\u003e selectedIndexes;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    private final boolean isSpecialIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"     * Initializes SelectIndexCommand with a list of parsed user input indexes.","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"     * @param indexes parsed user input indexes","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"     * @throws NullPointerException if {@code indexes} is null.","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"    public SelectIndexCommand(List\u003cIndex\u003e indexes) {","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"        selectedIndexes \u003d requireNonNull(indexes);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"        isSpecialIndex \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"     * Initializes SelectIndexCommand that selects all the shown items in list.","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"    public SelectIndexCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"        selectedIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"        isSpecialIndex \u003d true;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"        if (isSpecialIndex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"            List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"            model.updateSelectedPersonList(personList);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"            return new CommandResult(MESSAGE_SHOWN_SUCCESS);","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cPerson\u003e personList \u003d model.getSortedFilteredPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cPerson\u003e selectedPersonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"        for (Index index : selectedIndexes) {","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"            if (index.getZeroBased() \u003e\u003d personList.size()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"            Person selectedPerson \u003d personList.get(index.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"            selectedPersonList.add(selectedPerson);","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"        model.updateSelectedPersonList(selectedPersonList);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"        return new CommandResult(MESSAGE_INDEX_SUCCESS);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"                || (other instanceof SelectIndexCommand // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 ((SelectIndexCommand) other).selectedIndexes.containsAll(selectedIndexes)","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 isSpecialIndex \u003d\u003d ((SelectIndexCommand) other).isSpecialIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":73}},{"path":"src/main/java/seedu/address/logic/commands/SelectShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":" * Lists all the selected persons that are selected by a user.","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"public class SelectShowCommand extends SelectCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Showing selected items\";","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"        model.applySelectedPredicate();","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"        return (other instanceof SelectShowCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":26}},{"path":"src/main/java/seedu/address/logic/parser/AddAliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Command;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":" * Parses input arguments and creates a new AddAliasCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"public class AddAliasCommandParser implements Parser\u003cAddAliasCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"     * Used for separation of alias and command.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern ADD_ALIAS_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003calias\u003e\\\\S+)(?\u003ccommand\u003e.*)\");","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAliasCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"     * and returns an AddAliasCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public AddAliasCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        final Matcher matcher \u003d ADD_ALIAS_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        final String aliasArg \u003d matcher.group(\"alias\");","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        final String commandArg \u003d matcher.group(\"command\");","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        Alias alias \u003d ParserUtil.parseAlias(aliasArg);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        Command command \u003d ParserUtil.parseCommand(commandArg);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        CommandAlias commandAlias \u003d new CommandAlias(alias, command);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        return new AddAliasCommand(commandAlias);","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAliasCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     * and returns true if arguments are valid to be aliased. Alias cannot be aliased to","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     * adding another alias as it may cause infinite looping.","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    public boolean isValidCommandToAlias(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        return userInput.trim().isEmpty();","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":56}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"                        PREFIX_JOB_TITLE, PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"                PREFIX_COMPANY, PREFIX_JOB_TITLE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        Company company \u003d ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        JobTitle jobTitle \u003d ParserUtil.parseJobTitle(argMultimap.getValue(PREFIX_JOB_TITLE).get());","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        Person person \u003d new Person(name, phone, email, company, jobTitle, address, remark, tagList);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"     * and returns true if arguments are valid to be aliased. Only the argument in the","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"     * last prefix is allowed to be empty in order to be valid for aliasing, and all","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"     * other prefixes than the last should be valid input values.","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"    public boolean isValidCommandToAlias(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        assert !userInput.trim().isEmpty();","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"                userInput, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COMPANY, PREFIX_JOB_TITLE,","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"                PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"        // Returns false if preamble exist, which should not be for AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"        // Checks if only the last prefix argument is empty, and all other prefixes have valid input values","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        final Prefix lastPrefix \u003d ArgumentTokenizer.getLastPrefix(","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"                userInput, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COMPANY, PREFIX_JOB_TITLE,","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"                PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK).get();","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"        return ParserUtil.validatePersonAliasArgs(argMultimap, lastPrefix);","lastModifiedDate":"2021-03-21"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tanboonji":41,"oeiyiping":3,"-":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     * @param aliases aliases reference for user command input to be parsed into the aliased command","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public Command parseCommand(String userInput, ReadOnlyUniqueAliasMap aliases) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        final String alias \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        final String aliasCommand \u003d aliases.parseAliasToCommand(alias);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        matcher \u003d BASIC_COMMAND_FORMAT.matcher(aliasCommand.trim());","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        matcher.matches();","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        arguments \u003d matcher.group(\"arguments\") + arguments;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"        case AliasCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"            return new AliasCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"yaowei-soc"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"yaowei-soc"},"content":"            return new SelectCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"     * Returns true if a given user input is a valid command to be aliased.","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"    public boolean isValidCommandToAlias(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"            return new FindCommandParser().isValidCommandToAlias(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"            return new AddCommandParser().isValidCommandToAlias(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"            return new EditCommandParser().isValidCommandToAlias(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"            return new DeleteCommandParser().isValidCommandToAlias(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":"        case AliasCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"            return new AliasCommandParser().isValidCommandToAlias(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"yaowei-soc"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"yaowei-soc"},"content":"            return new SelectCommandParser().isValidCommandToAlias(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"        default:","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanboonji":62,"-":73,"yaowei-soc":11}},{"path":"src/main/java/seedu/address/logic/parser/AliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ListAliasCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":" * Parses input arguments and creates a new AliasCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"public class AliasCommandParser implements Parser\u003cAliasCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"     * Used for separation of sub command word and args.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private static final Pattern ALIAS_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003csubCommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"     * Parses arguments into alias command for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"     * @param args full command arguments","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * @return the alias command based on the arguments","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     * @throws ParseException if the arguments does not conform the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public AliasCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        final Matcher matcher \u003d ALIAS_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        final String subCommandWord \u003d matcher.group(\"subCommandWord\");","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        switch (subCommandWord) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        case AliasCommand.ADD_SUB_COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            return new AddAliasCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        case AliasCommand.DELETE_SUB_COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            return new DeleteAliasCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        case AliasCommand.LIST_SUB_COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            return new ListAliasCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        default:","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"     * Parses the given {@code String} of arguments in the context of the AliasCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"     * and returns true if arguments are valid to be aliased.","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    public boolean isValidCommandToAlias(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        final Matcher matcher \u003d ALIAS_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        matcher.matches();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        final String subCommandWord \u003d matcher.group(\"subCommandWord\");","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        switch (subCommandWord) {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        case AliasCommand.ADD_SUB_COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"            return new AddAliasCommandParser().isValidCommandToAlias(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"        case AliasCommand.DELETE_SUB_COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"            return new DeleteAliasCommandParser().isValidCommandToAlias(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"        case AliasCommand.LIST_SUB_COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        default:","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":87}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"     * Returns the number of arguments.","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"     * @return Map size","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"    public int getArgumentSize() {","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"        return argMultimap.size();","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":60,"yaowei-soc":8}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":" *     e.g. {@code some preamble text -t 11.00 -t 12.00 -k -m July}  where prefixes are {@code -t -k -m}.\u003cbr\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code -k} in the above example.\u003cbr\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code -t}","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * Gets last prefix arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"     * @return           {@code Optional\u003cPrefix\u003e} object that contains the last prefix in the arguments","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    public static Optional\u003cPrefix\u003e getLastPrefix(String argsString, Prefix... prefixes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        if (positions.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        // Sort by start position","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        positions.sort(Comparator.comparingInt(PrefixPosition::getStartPosition));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        return Optional.of(positions.get(positions.size() - 1).getPrefix());","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":89,"author":{"gitId":"oeiyiping"},"content":"     * E.g if {@code argsString} \u003d \"-e hi-p900\", {@code prefix} \u003d \"-p\" and","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"oeiyiping"},"content":"     * occurrences of \"-p\" with whitespace before it. However, if","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"oeiyiping"},"content":"     * {@code argsString} \u003d \"-e hi -p 900\", {@code prefix} \u003d \"-p\" and","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"tanboonji":23,"oeiyiping":6,"-":142}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-p\");","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-e\");","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public static final Prefix PREFIX_COMPANY \u003d new Prefix(\"-c\");","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public static final Prefix PREFIX_JOB_TITLE \u003d new Prefix(\"-j\");","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-a\");","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-t\");","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"-r\");","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanboonji":2,"oeiyiping":6,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":" * Parses input arguments and creates a new DeleteAliasCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"public class DeleteAliasCommandParser implements Parser\u003cDeleteAliasCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAliasCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     * and returns a DeleteAliasCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public DeleteAliasCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"            Alias alias \u003d ParserUtil.parseAlias(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"            return new DeleteAliasCommand(alias);","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAliasCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAliasCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     * and returns true if arguments are valid to be aliased.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public boolean isValidCommandToAlias(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"            ParserUtil.parseAlias(userInput);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":47}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"    public static final String SPECIAL_INDEX \u003d \"shown\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"    public static final String SELECTED \u003d \"selected\";","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand and returns","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"     * a DeleteCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"        if (args.trim().equals(SPECIAL_INDEX)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"            return DeleteCommand.buildDeleteShownCommand();","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"        if (args.trim().equals(SELECTED)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"            return DeleteCommand.buildDeleteSelectedCommand();","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"            return DeleteCommand.buildDeleteIndexCommand(ParserUtil.parseIndexes(args));","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand and returns","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"     * true if arguments are valid to be aliased.","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    public boolean isValidCommandToAlias(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"        if (userInput.trim().equals(SPECIAL_INDEX)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"            return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"        if (userInput.trim().equals(SELECTED)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"            return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"            parse(userInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tanboonji":15,"-":24,"yaowei-soc":28}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"    public static final String SPECIAL_INDEX \u003d \"shown\";","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"    public static final String SELECTED \u003d \"selected\";","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"                        PREFIX_JOB_TITLE, PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"        EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"        // Parse special index","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"        if (argMultimap.getPreamble().equals(SPECIAL_INDEX)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"            editPersonDescriptor \u003d parseEditPersonDescriptor(argMultimap);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"            if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"            return EditCommand.buildEditShownCommand(editPersonDescriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"        if (argMultimap.getPreamble().trim().equals(SELECTED)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"            editPersonDescriptor \u003d parseEditPersonDescriptor(argMultimap);","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"            if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"                throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"            return EditCommand.buildEditSelectedCommand(editPersonDescriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"            targetIndexes \u003d ParserUtil.parseIndexes(argMultimap.getPreamble());","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"                    pe);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"yaowei-soc"},"content":"        editPersonDescriptor \u003d parseEditPersonDescriptor(argMultimap);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"yaowei-soc"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"        return EditCommand.buildEditIndexCommand(targetIndexes, editPersonDescriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"    private EditPersonDescriptor parseEditPersonDescriptor(ArgumentMultimap argMultimap)","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY).isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"            editPersonDescriptor.setCompany(ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"        if (argMultimap.getValue(PREFIX_JOB_TITLE).isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"            editPersonDescriptor.setJobTitle(ParserUtil.parseJobTitle(argMultimap.getValue(PREFIX_JOB_TITLE).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"oeiyiping"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"oeiyiping"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"yaowei-soc"},"content":"        return editPersonDescriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"     * and returns true if arguments are valid to be aliased. Only the argument in the","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"     * last prefix is allowed to be empty in order to be valid for aliasing, and all","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"     * other prefixes than the last should be valid input values.","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"    public boolean isValidCommandToAlias(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"        if (userInput.trim().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"yaowei-soc"},"content":"        if (userInput.trim().equals(SPECIAL_INDEX)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"yaowei-soc"},"content":"            return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"yaowei-soc"},"content":"        if (userInput.trim().equals(SELECTED)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"yaowei-soc"},"content":"            return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"                PREFIX_COMPANY, PREFIX_JOB_TITLE, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"        // Returns false if index found in preamble of arguments is invalid","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"            ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"tanboonji"},"content":"        // Checks if only the last prefix argument is empty, and all other prefixes have valid input values","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"tanboonji"},"content":"        Optional\u003cPrefix\u003e optionalPrefix \u003d ArgumentTokenizer.getLastPrefix(userInput, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"tanboonji"},"content":"                PREFIX_EMAIL, PREFIX_COMPANY, PREFIX_JOB_TITLE, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"        if (optionalPrefix.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"tanboonji"},"content":"        final Prefix lastPrefix \u003d optionalPrefix.get();","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"tanboonji"},"content":"        return ParserUtil.validatePersonAliasArgs(argMultimap, lastPrefix);","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tanboonji":44,"oeiyiping":3,"-":77,"yaowei-soc":42}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand and returns","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"     * an FilterCommand object for execution.","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"        assert args !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"            return new FilterCommand(new DisplayFilterPredicate());","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"                PREFIX_COMPANY, PREFIX_JOB_TITLE, PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"        return new FilterCommand(new DisplayFilterPredicate(argMultimap));","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"    public boolean isValidCommandToAlias(String userInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"tanboonji":5,"yaowei-soc":38}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     * and returns true if arguments are valid to be aliased.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    public boolean isValidCommandToAlias(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tanboonji":9,"-":33}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"     * Returns true if {@code userInput} is a valid command to be aliased.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    boolean isValidCommandToAlias(String userInput);","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"tanboonji":6,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Command;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":" * Contains utility methods used for parsing strings and models in the various *Parser classes.","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"     * Parses {@code oneBasedIndexes} into a {@code List} of {@code Index} and returns it.","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"     * Leading and trailing whitespaces will be trimmed as well as white spaces between indexes.","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"     * @throws ParseException if a specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"    public static List\u003cIndex\u003e parseIndexes(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"        String trimmedIndexes \u003d oneBasedIndexes.trim();","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"        for (String indexStr : trimmedIndexes.split(\"\\\\s+\")) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"            Index index \u003d parseIndex(indexStr.trim());","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"            indexList.add(index);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"        return indexList;","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"oeiyiping"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"oeiyiping"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"oeiyiping"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"oeiyiping"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"oeiyiping"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"oeiyiping"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"oeiyiping"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"oeiyiping"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"oeiyiping"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"oeiyiping"},"content":"        return new Remark(remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"oeiyiping"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"tanboonji"},"content":"     * @throws ParseException if any given {@code tags} is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"tanboonji"},"content":"     * Parses {@code String alias} into a {@code Alias}.","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"tanboonji"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":"     * @throws ParseException if the given {@code alias} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"tanboonji"},"content":"    public static Alias parseAlias(String alias) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"tanboonji"},"content":"        String trimmedAlias \u003d alias.trim();","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"tanboonji"},"content":"        if (!Alias.isValidAlias(trimmedAlias)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"tanboonji"},"content":"            throw new ParseException(Alias.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"tanboonji"},"content":"        return new Alias(trimmedAlias);","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":"     * Parses {@code String command} into a {@code Command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"tanboonji"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"tanboonji"},"content":"     * @throws ParseException if the given {@code command} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"tanboonji"},"content":"    public static Command parseCommand(String command) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"tanboonji"},"content":"        String trimmedCommandWord \u003d command.trim();","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"tanboonji"},"content":"        if (!Command.isValidCommand(trimmedCommandWord)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"tanboonji"},"content":"            throw new ParseException(Command.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"tanboonji"},"content":"        return new Command(trimmedCommandWord);","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":201,"author":{"gitId":"tanboonji"},"content":"     * Validates {@code Collection\u003cString\u003e tags} except the last tag in tags.","lastModifiedDate":"2021-03-21"},{"lineNumber":202,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":203,"author":{"gitId":"tanboonji"},"content":"     * @throws ParseException if any given {@code tags}, except the last tag, is invalid.","lastModifiedDate":"2021-03-20"},{"lineNumber":204,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":205,"author":{"gitId":"tanboonji"},"content":"    public static void validateAllButLastTag(List\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":206,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(tags);","lastModifiedDate":"2021-03-20"},{"lineNumber":207,"author":{"gitId":"tanboonji"},"content":"        for (int i \u003d 0; i \u003c tags.size() - 1; i++) {","lastModifiedDate":"2021-03-20"},{"lineNumber":208,"author":{"gitId":"tanboonji"},"content":"            parseTag(tags.get(i));","lastModifiedDate":"2021-03-20"},{"lineNumber":209,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":210,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":211,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":212,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":213,"author":{"gitId":"tanboonji"},"content":"     * Validates arguments {@code ArgumentMultiMap} of a Person for command alias. All arguments except the last prefix","lastModifiedDate":"2021-03-21"},{"lineNumber":214,"author":{"gitId":"tanboonji"},"content":"     * argument is checked.","lastModifiedDate":"2021-03-20"},{"lineNumber":215,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":"     * @param argMultimap Arguments of person.","lastModifiedDate":"2021-03-20"},{"lineNumber":217,"author":{"gitId":"tanboonji"},"content":"     * @param lastPrefix Last prefix.","lastModifiedDate":"2021-03-20"},{"lineNumber":218,"author":{"gitId":"tanboonji"},"content":"     * @return True if all arguments in {@code ArgumentMultiMap argMultimap} except the last prefix argument are valid,","lastModifiedDate":"2021-03-20"},{"lineNumber":219,"author":{"gitId":"tanboonji"},"content":"     *     otherwise false is returned.","lastModifiedDate":"2021-03-20"},{"lineNumber":220,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":221,"author":{"gitId":"tanboonji"},"content":"    public static boolean validatePersonAliasArgs(ArgumentMultimap argMultimap, Prefix lastPrefix) {","lastModifiedDate":"2021-03-21"},{"lineNumber":222,"author":{"gitId":"tanboonji"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":223,"author":{"gitId":"tanboonji"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent() \u0026\u0026 lastPrefix !\u003d PREFIX_NAME) {","lastModifiedDate":"2021-03-20"},{"lineNumber":224,"author":{"gitId":"tanboonji"},"content":"                ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-20"},{"lineNumber":225,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-20"},{"lineNumber":226,"author":{"gitId":"tanboonji"},"content":"            if (argMultimap.getValue(PREFIX_PHONE).isPresent() \u0026\u0026 lastPrefix !\u003d PREFIX_PHONE) {","lastModifiedDate":"2021-03-20"},{"lineNumber":227,"author":{"gitId":"tanboonji"},"content":"                ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-20"},{"lineNumber":228,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-20"},{"lineNumber":229,"author":{"gitId":"tanboonji"},"content":"            if (argMultimap.getValue(PREFIX_EMAIL).isPresent() \u0026\u0026 lastPrefix !\u003d PREFIX_EMAIL) {","lastModifiedDate":"2021-03-20"},{"lineNumber":230,"author":{"gitId":"tanboonji"},"content":"                ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-03-20"},{"lineNumber":231,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-20"},{"lineNumber":232,"author":{"gitId":"tanboonji"},"content":"            if (argMultimap.getValue(PREFIX_COMPANY).isPresent() \u0026\u0026 lastPrefix !\u003d PREFIX_COMPANY) {","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"tanboonji"},"content":"                ParserUtil.parseCompany(argMultimap.getValue(PREFIX_COMPANY).get());","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"tanboonji"},"content":"            if (argMultimap.getValue(PREFIX_JOB_TITLE).isPresent() \u0026\u0026 lastPrefix !\u003d PREFIX_JOB_TITLE) {","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"tanboonji"},"content":"                ParserUtil.parseJobTitle(argMultimap.getValue(PREFIX_JOB_TITLE).get());","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"tanboonji"},"content":"            if (argMultimap.getValue(PREFIX_ADDRESS).isPresent() \u0026\u0026 lastPrefix !\u003d PREFIX_ADDRESS) {","lastModifiedDate":"2021-03-20"},{"lineNumber":239,"author":{"gitId":"tanboonji"},"content":"                ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-20"},{"lineNumber":240,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-20"},{"lineNumber":241,"author":{"gitId":"tanboonji"},"content":"            if (lastPrefix !\u003d PREFIX_TAG) {","lastModifiedDate":"2021-03-20"},{"lineNumber":242,"author":{"gitId":"tanboonji"},"content":"                ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-20"},{"lineNumber":243,"author":{"gitId":"tanboonji"},"content":"            } else {","lastModifiedDate":"2021-03-20"},{"lineNumber":244,"author":{"gitId":"tanboonji"},"content":"                ParserUtil.validateAllButLastTag(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-21"},{"lineNumber":245,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-20"},{"lineNumber":246,"author":{"gitId":"tanboonji"},"content":"            if (argMultimap.getValue(PREFIX_REMARK).isPresent() \u0026\u0026 lastPrefix !\u003d PREFIX_REMARK) {","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"tanboonji"},"content":"                ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-20"},{"lineNumber":250,"author":{"gitId":"tanboonji"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-20"},{"lineNumber":251,"author":{"gitId":"tanboonji"},"content":"            return false;","lastModifiedDate":"2021-03-20"},{"lineNumber":252,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":253,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":254,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":255,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"tanboonji"},"content":"     * Parses a {@code String company} into an {@code Company}.","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"tanboonji"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"tanboonji"},"content":"     * @throws ParseException if the given {@code company} is invalid.","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"tanboonji"},"content":"    public static Company parseCompany(String company) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(company);","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"tanboonji"},"content":"        String trimmedCompany \u003d company.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"tanboonji"},"content":"        if (!Company.isValidCompany(trimmedCompany)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"tanboonji"},"content":"            throw new ParseException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"tanboonji"},"content":"        return new Company(trimmedCompany);","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":270,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"tanboonji"},"content":"     * Parses a {@code String jobTitle} into an {@code JobTitle}.","lastModifiedDate":"2021-03-30"},{"lineNumber":272,"author":{"gitId":"tanboonji"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-30"},{"lineNumber":273,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"tanboonji"},"content":"     * @throws ParseException if the given {@code jobTitle} is invalid.","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"tanboonji"},"content":"    public static JobTitle parseJobTitle(String jobTitle) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(jobTitle);","lastModifiedDate":"2021-03-30"},{"lineNumber":278,"author":{"gitId":"tanboonji"},"content":"        String trimmedJobTitle \u003d jobTitle.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":279,"author":{"gitId":"tanboonji"},"content":"        if (!JobTitle.isValidJobTitle(trimmedJobTitle)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":280,"author":{"gitId":"tanboonji"},"content":"            throw new ParseException(JobTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"tanboonji"},"content":"        return new JobTitle(trimmedJobTitle);","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":284,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanboonji":132,"oeiyiping":14,"-":123,"yaowei-soc":16}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":" * E.g. \u0027-t\u0027 in \u0027add James -t friend\u0027.","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"oeiyiping":1,"-":38}},{"path":"src/main/java/seedu/address/logic/parser/SelectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectClearCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectShowCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":" * Parses input arguments and creates a new SelectCommand object.","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"public class SelectCommandParser implements Parser\u003cSelectCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"     * Used for separation of sub command word and args.","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"    private static final Pattern SELECT_COMMAND_FORMAT \u003d Pattern","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"            .compile(\"(?\u003csubCommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"    public SelectCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"        final Matcher matcher \u003d SELECT_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"        final String subCommandWord \u003d matcher.group(\"subCommandWord\");","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"        if (SelectCommand.SHOW_SUB_COMMAND_WORD.equals(subCommandWord)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"            return new SelectShowCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"        } else if (SelectCommand.CLEAR_SUB_COMMAND_WORD.equals(subCommandWord)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"            return new SelectClearCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"        return new SelectIndexCommandParser().parse(args.trim());","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"    public boolean isValidCommandToAlias(String args) {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"        if (args.trim().isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"        final Matcher matcher \u003d SELECT_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"        matcher.matches();","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"        final String subCommandWord \u003d matcher.group(\"subCommandWord\");","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"        switch (subCommandWord) {","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"        case SelectCommand.CLEAR_SUB_COMMAND_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"        case SelectCommand.SHOW_SUB_COMMAND_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"            return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"        default:","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"            return new SelectIndexCommandParser().isValidCommandToAlias(args.trim());","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":61}},{"path":"src/main/java/seedu/address/logic/parser/SelectIndexCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.commands.SelectCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectIndexCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":" * Parses input arguments and creates a new SelectIndexCommand object.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"public class SelectIndexCommandParser implements Parser\u003cSelectIndexCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"    public static final String SPECIAL_INDEX \u003d \"shown\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"    public SelectIndexCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"        if (args.equals(SPECIAL_INDEX)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"            return new SelectIndexCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"            return new SelectIndexCommand(ParserUtil.parseIndexes(args));","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"        } catch (ParseException ex) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"            throw new ParseException(MESSAGE_USAGE);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"    public boolean isValidCommandToAlias(String args) {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"            parse(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"            return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":41}},{"path":"src/main/java/seedu/address/model/DisplayFilterPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":" * Tests if a {@code Person}\u0027s field in {@code PersonCard} should be hidden. By default, all the","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":" * fields are shown if no {@code ArgumentMultimap} is provided.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"public class DisplayFilterPredicate implements Predicate\u003cPrefix\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"    private final HashMap\u003cPrefix, Boolean\u003e map;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"     * Initializes known prefixes to true. See {@code CliSyntax} for known prefixes.","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"    public DisplayFilterPredicate() {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"        map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"        map.put(PREFIX_NAME, true);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"        map.put(PREFIX_PHONE, true);","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"        map.put(PREFIX_EMAIL, true);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        map.put(PREFIX_COMPANY, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        map.put(PREFIX_JOB_TITLE, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"        map.put(PREFIX_ADDRESS, true);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"        map.put(PREFIX_TAG, true);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"        map.put(PREFIX_REMARK, true);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"     * Initializes prefixes in argumentMultimap to true if present. See {@code CliSyntax} for known","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"     * prefixes.","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"    public DisplayFilterPredicate(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"        this();","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"        if (argumentMultimap.getArgumentSize() !\u003d 0) {","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"            map.put(PREFIX_PHONE, argumentMultimap.getValue(PREFIX_PHONE).isPresent());","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"            map.put(PREFIX_EMAIL, argumentMultimap.getValue(PREFIX_EMAIL).isPresent());","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"            map.put(PREFIX_COMPANY, argumentMultimap.getValue(PREFIX_COMPANY).isPresent());","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"            map.put(PREFIX_JOB_TITLE, argumentMultimap.getValue(PREFIX_JOB_TITLE).isPresent());","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"            map.put(PREFIX_ADDRESS, argumentMultimap.getValue(PREFIX_ADDRESS).isPresent());","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"            map.put(PREFIX_TAG, argumentMultimap.getValue(PREFIX_TAG).isPresent());","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"            map.put(PREFIX_REMARK, argumentMultimap.getValue(PREFIX_REMARK).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"    public boolean test(Prefix prefix) {","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"        return map.getOrDefault(prefix, true);","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"                || (other instanceof DisplayFilterPredicate) // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 map.keySet().stream()","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"                .allMatch(e -\u003e map.get(e).equals(((DisplayFilterPredicate) other).map.get(e)));","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"tanboonji":6,"yaowei-soc":64}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"DarkDestry-t"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"DarkDestry-t"},"content":"    /** Returns an unmodifiable view of the sorted filtered person list */","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"DarkDestry-t"},"content":"    ObservableList\u003cPerson\u003e getSortedFilteredPersonList();","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"DarkDestry-t"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"DarkDestry-t"},"content":"     * Updates the comparator of the sorted filtered person list to sort by the given {@code comparator}","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"DarkDestry-t"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"DarkDestry-t"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"DarkDestry-t"},"content":"    void updateSortedFilteredPersonList(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"    /** Returns the map aliases */","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"    ReadOnlyUniqueAliasMap getAliases();","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"     * Adds the given command alias.","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"     * {@code commandAlias} must not already exist in the aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"    void addAlias(CommandAlias commandAlias);","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"     * Deletes the given alias.","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"     * The alias must exist in the aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"    void deleteAlias(Alias alias);","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"     * Returns true if an alias with the same identity as {@code alias} exists in the aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"    boolean hasAlias(Alias alias);","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"     * Returns true if a command alias with the same identity as {@code commandAlias} exists in the aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"    boolean hasCommandAlias(CommandAlias commandAlias);","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"     * Returns command alias of the alias in aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"     * If alias is not found, null is returned.","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"    CommandAlias getCommandAlias(Alias alias);","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"     * Returns the number of aliases.","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":"    int getNumOfAlias();","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"yaowei-soc"},"content":"     * Updates display filter that determines PersonCard control visibility.","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"yaowei-soc"},"content":"     * @param displayFilterPredicate that returns true if prefix linked control should be shown.","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"yaowei-soc"},"content":"    void updateDisplayFilter(DisplayFilterPredicate displayFilterPredicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"yaowei-soc"},"content":"     * Returns display filter that determines field control visibility.","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"yaowei-soc"},"content":"     * @return predicate that returns true if prefix linked control should be shown.","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"yaowei-soc"},"content":"    DisplayFilterPredicate getDisplayFilter();","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"yaowei-soc"},"content":"     * Updates the select person list by appending to the existing selection.","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"yaowei-soc"},"content":"     * Does not apply the filter on the person list.","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"yaowei-soc"},"content":"     * @param selectedPersonList appends selected person list","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"yaowei-soc"},"content":"     * @throws NullPointerException if {@code selectedPersonList} is null.","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"yaowei-soc"},"content":"    void updateSelectedPersonList(List\u003cPerson\u003e selectedPersonList);","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"yaowei-soc"},"content":"     * Clears the selected person list and lists all persons.","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"yaowei-soc"},"content":"    void clearSelectedPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"yaowei-soc"},"content":"     * Applies and update the filter of the filtered person list to show only selected.","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"yaowei-soc"},"content":"    void applySelectedPredicate();","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"yaowei-soc"},"content":"     * Returns predicate that determines a Person objects selected state.","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"yaowei-soc"},"content":"     * @return predicate that is true if Person object is selected","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"yaowei-soc"},"content":"    Predicate\u003cPerson\u003e getSelectedPersonPredicate();","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":"     * Returns aliases in an ObservableList of String.","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"tanboonji"},"content":"    ObservableList\u003cString\u003e getObservableStringAliases();","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tanboonji":42,"-":87,"DarkDestry-t":11,"yaowei-soc":37}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"DarkDestry-t"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"DarkDestry-t"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    private final UniqueAliasMap aliases;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"DarkDestry-t"},"content":"    private final SortedList\u003cPerson\u003e sortedFilteredPersons;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"    private DisplayFilterPredicate displayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"    private List\u003cPerson\u003e selectedPersonList;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * Initializes a ModelManager with the given addressBook, userPrefs, aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyUniqueAliasMap aliases) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        requireAllNonNull(addressBook, userPrefs, aliases);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \", aliases: \" + aliases","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"DarkDestry-t"},"content":"        sortedFilteredPersons \u003d new SortedList\u003c\u003e(filteredPersons);","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        this.aliases \u003d new UniqueAliasMap(aliases);","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"        displayFilterPredicate \u003d new DisplayFilterPredicate();","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"        selectedPersonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        this(new AddressBook(), new UserPrefs(), new UniqueAliasMap());","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"yaowei-soc"},"content":"        selectedPersonList.remove(target);","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":127,"author":{"gitId":"yaowei-soc"},"content":"        if (selectedPersonList.remove(target)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"yaowei-soc"},"content":"            selectedPersonList.add(editedPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":145,"author":{"gitId":"yaowei-soc"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e displayFilter) {","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"yaowei-soc"},"content":"        requireNonNull(displayFilter);","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"yaowei-soc"},"content":"        filteredPersons.setPredicate(displayFilter);","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"DarkDestry-t"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sorted Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"DarkDestry-t"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"DarkDestry-t"},"content":"    public ObservableList\u003cPerson\u003e getSortedFilteredPersonList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"DarkDestry-t"},"content":"        return sortedFilteredPersons;","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"DarkDestry-t"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"DarkDestry-t"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"DarkDestry-t"},"content":"    public void updateSortedFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"DarkDestry-t"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"DarkDestry-t"},"content":"        sortedFilteredPersons.setComparator(comparator);","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"DarkDestry-t"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"DarkDestry-t"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Display Filter Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"yaowei-soc"},"content":"    public void updateDisplayFilter(DisplayFilterPredicate displayFilterPredicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"yaowei-soc"},"content":"        this.displayFilterPredicate \u003d displayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":169,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"yaowei-soc"},"content":"    public DisplayFilterPredicate getDisplayFilter() {","lastModifiedDate":"2021-03-10"},{"lineNumber":172,"author":{"gitId":"yaowei-soc"},"content":"        return displayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"yaowei-soc"},"content":"    public void updateSelectedPersonList(List\u003cPerson\u003e selectedPersonList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"yaowei-soc"},"content":"        requireNonNull(selectedPersonList);","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"yaowei-soc"},"content":"        this.selectedPersonList.addAll(selectedPersonList);","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"yaowei-soc"},"content":"    public void clearSelectedPersonList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"yaowei-soc"},"content":"        this.selectedPersonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"yaowei-soc"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"yaowei-soc"},"content":"    public void applySelectedPredicate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"yaowei-soc"},"content":"        updateFilteredPersonList((person) -\u003e selectedPersonList.contains(person));","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"yaowei-soc"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":193,"author":{"gitId":"yaowei-soc"},"content":"    public Predicate\u003cPerson\u003e getSelectedPersonPredicate() {","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"yaowei-soc"},"content":"        return (person) -\u003e selectedPersonList.contains(person);","lastModifiedDate":"2021-03-25"},{"lineNumber":195,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":197,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"tanboonji"},"content":"    public ReadOnlyUniqueAliasMap getAliases() {","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"tanboonji"},"content":"        return aliases;","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":203,"author":{"gitId":"tanboonji"},"content":"    public ObservableList\u003cString\u003e getObservableStringAliases() {","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"tanboonji"},"content":"        return aliases.getObservableStringAliases();","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":206,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"tanboonji"},"content":"    public void addAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(commandAlias);","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":213,"author":{"gitId":"tanboonji"},"content":"    public void deleteAlias(Alias alias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":214,"author":{"gitId":"tanboonji"},"content":"        aliases.removeAlias(alias);","lastModifiedDate":"2021-03-13"},{"lineNumber":215,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":217,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":218,"author":{"gitId":"tanboonji"},"content":"    public boolean hasAlias(Alias alias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"tanboonji"},"content":"        return aliases.hasAlias(alias);","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":222,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"tanboonji"},"content":"    public boolean hasCommandAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(commandAlias);","lastModifiedDate":"2021-03-13"},{"lineNumber":226,"author":{"gitId":"tanboonji"},"content":"        return aliases.hasCommandAlias(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":228,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":230,"author":{"gitId":"tanboonji"},"content":"    public CommandAlias getCommandAlias(Alias alias) {","lastModifiedDate":"2021-03-16"},{"lineNumber":231,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-03-16"},{"lineNumber":232,"author":{"gitId":"tanboonji"},"content":"        return aliases.getCommandAlias(alias);","lastModifiedDate":"2021-03-16"},{"lineNumber":233,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":234,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":235,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":236,"author":{"gitId":"tanboonji"},"content":"    public int getNumOfAlias() {","lastModifiedDate":"2021-03-26"},{"lineNumber":237,"author":{"gitId":"tanboonji"},"content":"        return aliases.getNumOfAlias();","lastModifiedDate":"2021-03-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":256,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-03-13"},{"lineNumber":257,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 aliases.equals(other.aliases)","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"yaowei-soc"},"content":"                \u0026\u0026 selectedPersonList.containsAll(other.selectedPersonList);","lastModifiedDate":"2021-03-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanboonji":52,"-":145,"yaowei-soc":45,"DarkDestry-t":19}},{"path":"src/main/java/seedu/address/model/ReadOnlyUniqueAliasMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" * Unmodifiable view of an aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"public interface ReadOnlyUniqueAliasMap {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"     * Returns the command mapped to alias if alias is found in aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"     * Otherwise, userInput is returned.","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    String parseAliasToCommand(String userInput);","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"     * Returns an unmodifiable map of the aliases.","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"     * This map will not contain any duplicate aliases.","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    ObservableMap\u003cAlias, CommandAlias\u003e getAliases();","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"     * Returns the number of aliases.","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    int getNumOfAlias();","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     * Returns an unmodifiable ObservableList of the aliases in String.","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"     * This list will not contain any duplicate aliases.","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    ObservableList\u003cString\u003e getObservableStringAliases();","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":36}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    Path getAliasesFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"tanboonji":2,"-":16}},{"path":"src/main/java/seedu/address/model/UniqueAliasMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Command;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.exceptions.AliasNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.exceptions.DuplicateAliasException;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":" * A map of aliases to commands that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":" * An alias is considered unique by comparing using {@code Alias#equals(Object)}.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"public class UniqueAliasMap implements ReadOnlyUniqueAliasMap {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private final ObservableMap\u003cAlias, CommandAlias\u003e internalMap \u003d FXCollections.observableMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    private final ObservableMap\u003cAlias, CommandAlias\u003e internalUnmodifiableMap \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"            FXCollections.unmodifiableObservableMap(internalMap);","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    private final ObservableList\u003cString\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    private final ObservableList\u003cString\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public UniqueAliasMap() {}","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * Creates an UniqueAliasMap using the aliases in the {@code toBeCopied}","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    public UniqueAliasMap(ReadOnlyUniqueAliasMap toBeCopied) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        this();","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"     * Replaces the contents of the aliases with {@code aliases}.","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"     * {@code aliases} must not contain duplicate aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     * @throws DuplicateAliasException if there are duplicate aliases in {@code aliases}.","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    public void setAliases(Map\u003cAlias, CommandAlias\u003e aliases) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        requireAllNonNull(aliases);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        if (!aliasesAreUnique(aliases)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            throw new DuplicateAliasException();","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        internalMap.clear();","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        internalMap.putAll(aliases);","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        updateInternalList();","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"     * Resets the existing data of this {@code UniqueAliasMap} with {@code newData}.","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    public void resetData(ReadOnlyUniqueAliasMap newData) {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        setAliases(newData.getAliases());","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"     * Returns true if the aliases contains an equivalent alias as the given argument.","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"    public boolean hasAlias(Alias alias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        return internalMap.containsKey(alias);","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"     * Returns true if the aliases contains an equivalent command alias as the given argument.","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"    public boolean hasCommandAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(commandAlias);","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        return hasAlias(commandAlias.getAlias());","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"     * Adds a command alias to the aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"     * The alias must not already exist in the aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"    public void addAlias(CommandAlias toAdd) {","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"        if (hasCommandAlias(toAdd)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"            throw new DuplicateAliasException();","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"        internalMap.put(toAdd.getAlias(), toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"        internalList.add(toAdd.toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"     * Removes the equivalent alias from the aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"     * The alias must exist in the aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"     * @throws AliasNotFoundException if the alias {@code toRemove} does not exist and not found in {@code aliases}.","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"    public void removeAlias(Alias toRemove) {","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"        if (!hasAlias(toRemove)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"            throw new AliasNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"        internalMap.remove(toRemove);","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        updateInternalList();","lastModifiedDate":"2021-03-26"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"     * Returns command alias mapped to alias if alias is found in aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"     * If alias is not found, null is returned.","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"     * @param alias alias to search in aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"    public CommandAlias getCommandAlias(Alias alias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"        return internalMap.get(alias);","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"     * Returns command mapped to alias if alias is found in aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"     * If alias is not found, null is returned.","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"     * @param alias alias to search in aliases.","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"    public Command getCommand(Alias alias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"        CommandAlias commandAlias \u003d getCommandAlias(alias);","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"        if (commandAlias \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"            return null;","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"        return getCommandAlias(alias).getCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"tanboonji"},"content":"    public String parseAliasToCommand(String userInput) {","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"        Alias alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"            alias \u003d ParserUtil.parseAlias(userInput);","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"            return userInput;","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"        if (!hasAlias(alias)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"            return userInput;","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"        return getCommand(alias).toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"tanboonji"},"content":"    public ObservableMap\u003cAlias, CommandAlias\u003e getAliases() {","lastModifiedDate":"2021-03-21"},{"lineNumber":157,"author":{"gitId":"tanboonji"},"content":"        return internalUnmodifiableMap;","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"tanboonji"},"content":"    public int getNumOfAlias() {","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"tanboonji"},"content":"        return internalMap.size();","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"tanboonji"},"content":"    public String toString() {","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"tanboonji"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"tanboonji"},"content":"        for (CommandAlias commandAlias: internalMap.values()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"tanboonji"},"content":"            builder.append(commandAlias);","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"tanboonji"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"tanboonji"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"tanboonji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"tanboonji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"tanboonji"},"content":"                || (other instanceof UniqueAliasMap // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 internalMap.equals(((UniqueAliasMap) other).internalMap));","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"tanboonji"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":"        return internalMap.hashCode();","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"tanboonji"},"content":"     * Returns true if {@code aliases} contains only unique aliases.","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"tanboonji"},"content":"    private boolean aliasesAreUnique(Map\u003cAlias, CommandAlias\u003e aliases) {","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap checkDuplicate \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"tanboonji"},"content":"        for (CommandAlias commandAlias: aliases.values()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"tanboonji"},"content":"            if (checkDuplicate.hasCommandAlias(commandAlias)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"tanboonji"},"content":"                return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"tanboonji"},"content":"            checkDuplicate.addAlias(commandAlias);","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"tanboonji"},"content":"        return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":202,"author":{"gitId":"tanboonji"},"content":"    public ObservableList\u003cString\u003e getObservableStringAliases() {","lastModifiedDate":"2021-03-26"},{"lineNumber":203,"author":{"gitId":"tanboonji"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":206,"author":{"gitId":"tanboonji"},"content":"    private void updateInternalList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"tanboonji"},"content":"        internalList.clear();","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"tanboonji"},"content":"        internalList.addAll(FXCollections.observableList(","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"tanboonji"},"content":"                internalMap.values().stream().map(CommandAlias::toString).collect(Collectors.toList())));","lastModifiedDate":"2021-03-26"},{"lineNumber":210,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":211,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":212,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":212}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private Path aliasesFilePath \u003d Paths.get(\"data\" , \"aliases.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        setAliasesFilePath(newUserPrefs.getAliasesFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    public Path getAliasesFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        return aliasesFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    public void setAliasesFilePath(Path aliasesFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(aliasesFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        this.aliasesFilePath \u003d aliasesFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 aliasesFilePath.equals(o.aliasesFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, aliasesFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"        sb.append(\"\\nLocal address book data file location : \" + addressBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"        sb.append(\"\\nLocal aliases data file location : \" + aliasesFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanboonji":16,"-":84}},{"path":"src/main/java/seedu/address/model/alias/Alias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" * Represents an Alias in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * Guarantees: immutable; alias is valid as declared in {@link #isValidAlias(String)}","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"public class Alias {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"            \"Alias can take any values except spaces, and it should not be blank\";","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S+$\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    public final String alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"     * Constructs a {@code Alias}.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"     * @param alias A valid alias name.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    public Alias(String alias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        checkArgument(isValidAlias(alias), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     * Returns true if a given string is a valid alias name.","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    public static boolean isValidAlias(String test) {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"                || (other instanceof Alias // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 alias.equals(((Alias) other).alias)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        return alias.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        return alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":56}},{"path":"src/main/java/seedu/address/model/alias/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" * Represents a Command in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":" * Guarantees: immutable; command to alias is valid as declared in {@link #isValidCommand(String)}","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"public class Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"            \"Command to alias should be a valid existing command, and it should not be blank\";","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    public final String command;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"     * Constructs a {@code Command}.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"     * @param command A valid command word.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    public Command(String command) {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        checkArgument(isValidCommand(command), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     * Returns true if a given string is a valid command word.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    public static boolean isValidCommand(String test) {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        return new AddressBookParser().isValidCommandToAlias(test);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"                || (other instanceof Command // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 command.equals(((Command) other).command)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        return command.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        return command;","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":57}},{"path":"src/main/java/seedu/address/model/alias/CommandAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * Represents an Alias and Command in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"public class CommandAlias {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    private final Alias alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    private final Command command;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public CommandAlias(Alias alias, Command command) {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        requireAllNonNull(alias, command);","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    public Alias getAlias() {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        return alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public Command getCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        return command;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * Returns true if both command aliases have the same alias name.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     * This defines a weaker notion of equality between two command alias.","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    public boolean isSameCommandAlias(CommandAlias otherCommandAlias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        if (otherCommandAlias \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        return otherCommandAlias !\u003d null","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 otherCommandAlias.getAlias().equals(getAlias());","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"     * Returns true if both aliases have the same identity and data fields.","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     * This defines a stronger notion of equality between two aliases.","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"                || (other instanceof CommandAlias","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 getAlias().equals(((CommandAlias) other).getAlias()) // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 getCommand().equals(((CommandAlias) other).getCommand())); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        return Objects.hash(alias, command);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        return \"alias \" + getAlias() + \"\u003d\u0027\" + getCommand() + \"\u0027\";","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":69}},{"path":"src/main/java/seedu/address/model/alias/exceptions/AliasNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.alias.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * Signals that the operation is unable to find the specified alias.","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"public class AliasNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":6}},{"path":"src/main/java/seedu/address/model/alias/exceptions/DuplicateAliasException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.alias.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":" * Signals that the operation will result in duplicate Aliases (Aliases are considered duplicates if they have the same","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":" * alias name).","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"public class DuplicateAliasException extends RuntimeException {","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    public DuplicateAliasException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"        super(\"Operation would result in duplicate aliases\");","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"tanboonji":11}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanboonji":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Company.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" * Represents a Person\u0027s company in the address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompany(String)}","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"public class Company {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Company can take any values, and it should not be blank\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    /*","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"     * The first character of the company must not be a whitespace,","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public final String value;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"     * Constructs an {@code Company}.","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     * @param company A valid company.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    public Company(String company) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(company);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        checkArgument(isValidCompany(company), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        value \u003d company;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * Returns true if a given string is a valid company.","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    public static boolean isValidCompany(String test) {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    public String toString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        return value;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"                || (other instanceof Company // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 value.equals(((Company) other).value)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"tanboonji":57}},{"path":"src/main/java/seedu/address/model/person/JobTitle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" * Represents a Person\u0027s job title in the address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidJobTitle(String)}","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"public class JobTitle {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Job title can take any values, and it should not be blank\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    /*","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"     * The first character of the job title must not be a whitespace,","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public final String value;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"     * Constructs an {@code JobTitle}.","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     * @param jobTitle A valid job title.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    public JobTitle(String jobTitle) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(jobTitle);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        checkArgument(isValidJobTitle(jobTitle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        value \u003d jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * Returns true if a given string is a valid job title.","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    public static boolean isValidJobTitle(String test) {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    public String toString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        return value;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"                || (other instanceof JobTitle // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 value.equals(((JobTitle) other).value)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"tanboonji":57}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"DarkDestry-t"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"DarkDestry-t"},"content":"import java.util.Locale;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"DarkDestry-t"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"DarkDestry-t"},"content":"import me.xdrop.fuzzywuzzy.FuzzySearch;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"DarkDestry-t"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"DarkDestry-t"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e, Comparator\u003cPerson\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"DarkDestry-t"},"content":"    private static final int MATCH_PERCENTAGE \u003d 60;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"DarkDestry-t"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"DarkDestry-t"},"content":"        return keywords.stream().anyMatch(keyword -\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"DarkDestry-t"},"content":"            int matchPercentage \u003d match(person.getName().fullName, keyword);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"DarkDestry-t"},"content":"            logger.fine(String.format(\"Name: %s, Word: %s, Match: %d\",","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"DarkDestry-t"},"content":"                    person.getName().fullName, keyword, matchPercentage));","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"DarkDestry-t"},"content":"            return matchPercentage \u003e MATCH_PERCENTAGE;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"DarkDestry-t"},"content":"        });","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"DarkDestry-t"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"DarkDestry-t"},"content":"    private int match(String a, String b) {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"DarkDestry-t"},"content":"        return FuzzySearch.partialRatio(a, b, str -\u003e str.toLowerCase(Locale.ROOT));","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"DarkDestry-t"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"DarkDestry-t"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"DarkDestry-t"},"content":"    public int compare(Person o1, Person o2) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"DarkDestry-t"},"content":"        int o1Similarity \u003d keywords","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"DarkDestry-t"},"content":"                .stream()","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"DarkDestry-t"},"content":"                .map(keyword -\u003e match(o1.getName().fullName, keyword))","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"DarkDestry-t"},"content":"                .max(Integer::compare)","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"DarkDestry-t"},"content":"                .orElse(0);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"DarkDestry-t"},"content":"        int o2Similarity \u003d keywords","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"DarkDestry-t"},"content":"                .stream()","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"DarkDestry-t"},"content":"                .map(keyword -\u003e match(o2.getName().fullName, keyword))","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"DarkDestry-t"},"content":"                .max(Integer::compare)","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"DarkDestry-t"},"content":"                .orElse(0);","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"DarkDestry-t"},"content":"        return o2Similarity - o1Similarity \u003d\u003d 0","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"DarkDestry-t"},"content":"                ? o1.getName().fullName.compareTo(o2.getName().fullName)","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"DarkDestry-t"},"content":"                : o2Similarity - o1Similarity;","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":27,"DarkDestry-t":36}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private final Company company;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private final JobTitle jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    private final Remark remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    public Person(Name name, Phone phone, Email email, Company company, JobTitle jobTitle, Address address,","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"                  Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        requireAllNonNull(name, phone, email, company, jobTitle, address, remark, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        this.company \u003d company;","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    public Company getCompany() {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        return company;","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    public JobTitle getJobTitle() {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        return jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"        return remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"oeiyiping"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 otherPerson.getCompany().equals(getCompany())","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"                \u0026\u0026 otherPerson.getJobTitle().equals(getJobTitle())","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"oeiyiping"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark())","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"        return Objects.hash(name, phone, email, company, jobTitle, address, remark, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"                .append(\"; Company: \")","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"                .append(getCompany())","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"                .append(\"; Job Title:\")","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"                .append(getJobTitle())","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"oeiyiping"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"oeiyiping"},"content":"                .append(\"; Remark: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"oeiyiping"},"content":"                .append(getRemark());","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":148,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanboonji":22,"oeiyiping":11,"-":119}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"oeiyiping"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"oeiyiping"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"oeiyiping"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"oeiyiping"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"public class Remark {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    public final String value;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"oeiyiping"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"oeiyiping"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"        assert remark !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"        value \u003d remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"oeiyiping"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"oeiyiping"},"content":"        return value;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"oeiyiping"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"oeiyiping"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"oeiyiping"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"oeiyiping"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"oeiyiping"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"oeiyiping"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"oeiyiping":39}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    private static final Set\u003cTag\u003e EMPTY_TAG \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"                    new Company(\"Amazon\"), new JobTitle(\"Network Administrator\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK, getTagSet(\"Network+\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"                    new Company(\"Amazon\"), new JobTitle(\"Junior Software Engineer\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"                    new Remark(\"On leave from 01/04/21-05/04/21\"), getTagSet(\"Photoshop\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"                    new Company(\"Amazon\"), new JobTitle(\"HR Manager\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"                    new Remark(\"Unavailable from 2pm-3pm\"), EMPTY_TAG),","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"                    new Company(\"Amazon\"), new JobTitle(\"Database Administrator\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK, EMPTY_TAG),","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"                    new Company(\"Amazon\"), new JobTitle(\"Senior Software Engineer\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"                    new Remark (\"Emergency tech support contact\"), getTagSet(\"Photoshop\", \"Illustrator\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"                    new Company(\"Amazon\"), new JobTitle(\"Software Engineer Intern\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"                    new Remark(\"Studying Computer Science in NUS\"), getTagSet(\"Java\", \"Python\", \"C\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"            new Person(new Name(\"Samuel Lim\"), new Phone(\"94318630\"), new Email(\"samuellim@example.com\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"                    new Company(\"Google\"), new JobTitle(\"Senior Software Engineer\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"                    new Address(\"25 Crowhurst Drive\"), EMPTY_REMARK, EMPTY_TAG),","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"            new Person(new Name(\"John Tan\"), new Phone(\"87243350\"), new Email(\"johntan@example.com\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"                    new Company(\"Facebook\"), new JobTitle(\"Managing Director\"),","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"                    new Address(\"88 Watten Terrace\"), EMPTY_REMARK, EMPTY_TAG)","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tanboonji":27,"oeiyiping":2,"-":48}},{"path":"src/main/java/seedu/address/storage/AliasesStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":" * Represents a storage for {@link seedu.address.model.UniqueAliasMap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"public interface AliasesStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    Path getAliasesFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"     * Returns UniqueAliasMap data as a {@link ReadOnlyUniqueAliasMap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    Optional\u003cReadOnlyUniqueAliasMap\u003e readAliases() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     * @see #getAliasesFilePath()","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    Optional\u003cReadOnlyUniqueAliasMap\u003e readAliases(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"     * Saves the given {@link ReadOnlyUniqueAliasMap} to the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     * @param aliases cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    void saveAliases(ReadOnlyUniqueAliasMap aliases) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"     * @see #saveAliases(ReadOnlyUniqueAliasMap)","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    void saveAliases(ReadOnlyUniqueAliasMap aliases, Path filePath) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tanboonji":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCommandAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":" * Jackson-friendly version of {@link CommandAlias}.","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"class JsonAdaptedCommandAlias {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Alias\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private final String alias;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private final String command;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"     * Constructs a {@code JsonAdaptedCommandAlias} with the given alias details.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    public JsonAdaptedCommandAlias(@JsonProperty(\"alias\") String alias, @JsonProperty(\"command\") String command) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     * Converts a given {@code Alias} into this class for Jackson use.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    public JsonAdaptedCommandAlias(CommandAlias source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        alias \u003d source.getAlias().alias;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        command \u003d source.getCommand().command;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"     * Converts this Jackson-friendly adapted alias object into the model\u0027s {@code Alias} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted alias.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    public CommandAlias toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        if (alias \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Alias.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        if (!Alias.isValidAlias(alias)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            throw new IllegalValueException(Alias.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        final Alias modelAlias \u003d new Alias(alias);","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Command.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        if (!Command.isValidCommand(command)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"            throw new IllegalValueException(Command.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        final Command modelCommand \u003d new Command(command);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        return new CommandAlias(modelAlias, modelCommand);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tanboonji":63}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    private final String company;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    private final String jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    private final String remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"company\") String company,","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"                             @JsonProperty(\"jobTitle\") String jobTitle, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"                             @JsonProperty(\"remark\") String remark) {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        this.company \u003d company;","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        this.jobTitle \u003d jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"oeiyiping"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        company \u003d source.getCompany().value;","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        jobTitle \u003d source.getJobTitle().value;","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"oeiyiping"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"        if (company \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName()));","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"        if (!Company.isValidCompany(company)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"            throw new IllegalValueException(Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"        final Company modelCompany \u003d new Company(company);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"        if (jobTitle \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"                    JobTitle.class.getSimpleName()));","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"        if (!JobTitle.isValidJobTitle(jobTitle)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"            throw new IllegalValueException(JobTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"        final JobTitle modelJobTitle \u003d new JobTitle(jobTitle);","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"oeiyiping"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"oeiyiping"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"oeiyiping"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"oeiyiping"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelCompany, modelJobTitle, modelAddress,","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"                modelRemark, modelTags);","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanboonji":31,"oeiyiping":9,"-":106}},{"path":"src/main/java/seedu/address/storage/JsonAliasesStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":" * A class to access Aliases data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"public class JsonAliasesStorage implements AliasesStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAliasesStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public JsonAliasesStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public Path getAliasesFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    public Optional\u003cReadOnlyUniqueAliasMap\u003e readAliases() throws DataConversionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        return readAliases(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"     * Similar to {@link #readAliases()}.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    public Optional\u003cReadOnlyUniqueAliasMap\u003e readAliases(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        Optional\u003cJsonSerializableAliases\u003e jsonAliases \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"                filePath, JsonSerializableAliases.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        if (jsonAliases.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"            return Optional.of(jsonAliases.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    public void saveAliases(ReadOnlyUniqueAliasMap aliases) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        saveAliases(aliases, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"     * Similar to {@link #saveAliases(ReadOnlyUniqueAliasMap)}.","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"    public void saveAliases(ReadOnlyUniqueAliasMap aliases, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(aliases);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAliases(aliases), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tanboonji":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAliases.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":" * An Immutable Aliases that is serializable to JSON format.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"@JsonRootName(value \u003d \"aliases\")","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"class JsonSerializableAliases {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public static final String MESSAGE_DUPLICATE_ALIAS \u003d \"Aliases contains duplicate alias(s).\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private final List\u003cJsonAdaptedCommandAlias\u003e aliases \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * Constructs a {@code JsonSerializableAliases} with the given aliases.","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public JsonSerializableAliases(@JsonProperty(\"aliases\") List\u003cJsonAdaptedCommandAlias\u003e aliases) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        this.aliases.addAll(aliases);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     * Converts a given {@code ReadOnlyUniqueAliasMap} into this class for Jackson use.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAliases}.","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    public JsonSerializableAliases(ReadOnlyUniqueAliasMap source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        aliases.addAll(source.getAliases().values().stream().map(JsonAdaptedCommandAlias::new)","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"     * Converts this aliases into the model\u0027s {@code UniqueAliasMap} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public UniqueAliasMap toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap uniqueAliasMap \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        for (JsonAdaptedCommandAlias jsonAdaptedCommandAlias : this.aliases) {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"            CommandAlias commandAlias \u003d jsonAdaptedCommandAlias.toModelType();","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            if (uniqueAliasMap.hasCommandAlias(commandAlias)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ALIAS);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"            uniqueAliasMap.addAlias(commandAlias);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        return uniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tanboonji":61}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, AliasesStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    Optional\u003cReadOnlyUniqueAliasMap\u003e readAliases() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    void saveAliases(ReadOnlyUniqueAliasMap addressBook) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tanboonji":8,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private AliasesStorage aliasesStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}, {@code UserPrefStorage}","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * and {@code AliasesStorage}.","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"                          AliasesStorage aliasesStorage) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        this.aliasesStorage \u003d aliasesStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Aliases methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"    public Path getAliasesFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"        return aliasesStorage.getAliasesFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"    public Optional\u003cReadOnlyUniqueAliasMap\u003e readAliases() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        return readAliases(aliasesStorage.getAliasesFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"    public Optional\u003cReadOnlyUniqueAliasMap\u003e readAliases(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"        return aliasesStorage.readAliases(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"    public void saveAliases(ReadOnlyUniqueAliasMap aliases) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"        saveAliases(aliases, aliasesStorage.getAliasesFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"    public void saveAliases(ReadOnlyUniqueAliasMap aliases, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        aliasesStorage.saveAliases(aliases, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanboonji":36,"-":77}},{"path":"src/main/java/seedu/address/ui/AliasWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":" * Controller for an alias page","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"public class AliasWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    private static final String HEADER \u003d \"Your aliases:\";","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AliasWindow.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private static final String FXML \u003d \"AliasWindow.fxml\";","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    private Label aliasText;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private Label header;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    private final ReadOnlyUniqueAliasMap aliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"     * Creates a new AliasWindow.","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"     * @param root Stage to use as the root of the AliasWindow.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    public AliasWindow(Stage root, ReadOnlyUniqueAliasMap aliases) {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        super(FXML, root);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        this.aliases \u003d aliases;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        header.setText(HEADER);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        updateAliases();","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"     * Creates a new AliasWindow.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    public AliasWindow(ReadOnlyUniqueAliasMap aliases) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        this(new Stage(), aliases);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"     * Shows the alias window.","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    public void show() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        logger.fine(\"Showing alias page about the application.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        getRoot().show();","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"     * Returns true if the alias window is currently being shown.","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"     * Hides the alias window.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"    public void hide() {","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        getRoot().hide();","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"     * Focuses on the alias window.","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"    public void focus() {","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"     * Updates aliases in alias window.","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"    public void updateAliases() {","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"        aliasText.setText(aliases.toString());","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"        getRoot().sizeToScene();","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tanboonji":100}},{"path":"src/main/java/seedu/address/ui/AutocompleteListCell.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"public class AutocompleteListCell extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"    private static final String FXML \u003d \"AutocompleteListCell.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"    private Label commandName;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"     * Creates an {@code AutocompleteListCell} with the given {@code Name} to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"    public AutocompleteListCell(String name) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"        this.commandName.setText(name);","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":"        if (!(other instanceof AutocompleteListCell)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"justgnohUG"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"justgnohUG"},"content":"        // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"        AutocompleteListCell card \u003d (AutocompleteListCell) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"justgnohUG"},"content":"        return this.commandName \u003d\u003d card.commandName;","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"justgnohUG"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"justgnohUG":39}},{"path":"src/main/java/seedu/address/ui/AutocompleteListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"import com.sun.javafx.collections.ImmutableObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"justgnohUG"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"justgnohUG"},"content":"public class AutocompleteListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"justgnohUG"},"content":"    private static final String FXML \u003d \"AutocompleteListPanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AutocompleteListPanel.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"justgnohUG"},"content":"    private ListView\u003cString\u003e autocompleteListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"justgnohUG"},"content":"     * Creates a {@code AutocompleteListPanel} with an empty {@code ImmutableObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"    public AutocompleteListPanel() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"justgnohUG"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"justgnohUG"},"content":"        autocompleteListView.setItems(new ImmutableObservableList\u003c\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"        autocompleteListView.setCellFactory(listView -\u003e new AutocompleteListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"justgnohUG"},"content":"    public void updateList(ObservableList\u003cString\u003e list) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":"        autocompleteListView.setItems(FXCollections.observableList(list));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"justgnohUG"},"content":"     * Selects the previous item in the ListView and returns the result.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"justgnohUG"},"content":"     * @param callback accept value for demo purposes.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"justgnohUG"},"content":"    public void doTab(Consumer\u003cString\u003e callback) {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"justgnohUG"},"content":"        int selectedIndex \u003d autocompleteListView.getSelectionModel().getSelectedIndex();","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"justgnohUG"},"content":"        if (selectedIndex \u003d\u003d -1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"justgnohUG"},"content":"            selectedIndex \u003d 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"justgnohUG"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"justgnohUG"},"content":"            selectedIndex \u003d (selectedIndex + 1) % autocompleteListView.getItems().size();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"justgnohUG"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"justgnohUG"},"content":"        autocompleteListView.getSelectionModel().select(selectedIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"justgnohUG"},"content":"        autocompleteListView.scrollTo(selectedIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"justgnohUG"},"content":"        String value \u003d autocompleteListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"justgnohUG"},"content":"        callback.accept(value);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"justgnohUG"},"content":"     * Custom {@code ListCell} that displays the command text using a {@code AutocompleteListCell}.","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"justgnohUG"},"content":"    class AutocompleteListViewCell extends ListCell\u003cString\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"justgnohUG"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"justgnohUG"},"content":"        protected void updateItem(String value, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"justgnohUG"},"content":"            super.updateItem(value, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"justgnohUG"},"content":"            if (empty || value.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"justgnohUG"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"justgnohUG"},"content":"                setText(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"justgnohUG"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"justgnohUG"},"content":"                setGraphic(new AutocompleteListCell(value).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"justgnohUG"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"justgnohUG"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"justgnohUG"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"justgnohUG":72}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":12,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"        commandTextField.textProperty()","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"justgnohUG"},"content":"                .addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"justgnohUG"},"content":"     * Sets the commandTextField value.","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"justgnohUG"},"content":"     * @param value to set.","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"justgnohUG"},"content":"    public void setTextValue(String value) {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"justgnohUG"},"content":"        commandTextField.setText(value);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"justgnohUG"},"content":"        commandTextField.requestFocus();","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"justgnohUG"},"content":"        commandTextField.end();","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"justgnohUG"},"content":"     * Sets the callback function for a keypress.","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"justgnohUG"},"content":"     * @param callback to accept user entered text.","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"justgnohUG"},"content":"    public void setKeyUpCallback(Consumer\u003cString\u003e callback) {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"justgnohUG"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_RELEASED, keyEvent -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"justgnohUG"},"content":"            if (keyEvent.getCode() !\u003d KeyCode.TAB) {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"justgnohUG"},"content":"                callback.accept(commandTextField.getText());","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"justgnohUG"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"justgnohUG"},"content":"        });","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"justgnohUG"},"content":"    /*","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"justgnohUG"},"content":"     * TODO: the code below can be more comprehensive","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"justgnohUG"},"content":"     * Intended Idea:","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"justgnohUG"},"content":"     * E.g \"edit blah blah blah \u003cindex\u003e\": on UP/Down KeyEvents, ONLY trigger \u003cindex\u003e to change,","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"justgnohUG"},"content":"     * Same concept can be applied for other commands.","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"justgnohUG"},"content":"     * \"Last value change only\"","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"justgnohUG"},"content":"     * For now,","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"justgnohUG"},"content":"     * - Current implementation does not factor in if the command is correct","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"justgnohUG"},"content":"     * - Current implementation only checks the first keyword after splitting by space character","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"justgnohUG"},"content":"     * - Currently only works on \"Delete\"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"justgnohUG"},"content":"     * Can consider having an implementation where only the index changes","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"justgnohUG"},"content":"     * Sets the text after appending an index.","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"justgnohUG"},"content":"     * @param index to accept user entered index.","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"justgnohUG"},"content":"    public void setAndAppendIndex(String index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"justgnohUG"},"content":"        String firstCommand \u003d commandTextField.getText().split(\" \")[0];","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"justgnohUG"},"content":"        if (firstCommand.equals(DeleteCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"justgnohUG"},"content":"            commandTextField.setText(firstCommand + \" \" + index);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"justgnohUG"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":"     * Clears command box text field.","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":"    public void clearText() {","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"        commandTextField.setText(\"\");","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"justgnohUG":59,"tanboonji":7,"-":84}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.web.WebEngine;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"import javafx.scene.web.WebView;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"DarkDestry-t"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-t12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"    private WebView webView;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"oeiyiping"},"content":"    private WebEngine webEngine;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"        webEngine \u003d webView.getEngine();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"oeiyiping"},"content":"        webEngine.load(USERGUIDE_URL);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"oeiyiping":8,"-":81,"DarkDestry-t":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"justgnohUG"},"content":"    private AutocompleteListPanel autocompleteListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"justgnohUG"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"justgnohUG"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"justgnohUG"},"content":"    private StackPane autocompleteListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"justgnohUG"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_RELEASED, (KeyEvent event) -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"justgnohUG"},"content":"            if (event.getCode() \u003d\u003d KeyCode.TAB) {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"justgnohUG"},"content":"                autocompleteListPanel.doTab((value) -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"justgnohUG"},"content":"                    commandBox.setTextValue(value);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"justgnohUG"},"content":"                });","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"justgnohUG"},"content":"                event.consume();","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"justgnohUG"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"justgnohUG"},"content":"            if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"justgnohUG"},"content":"                personListPanel.selectPrev((value) -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"justgnohUG"},"content":"                    commandBox.setAndAppendIndex(value);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"justgnohUG"},"content":"                });","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"justgnohUG"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"justgnohUG"},"content":"            if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"justgnohUG"},"content":"                personListPanel.selectNext((value) -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"justgnohUG"},"content":"                    commandBox.setAndAppendIndex(value);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"justgnohUG"},"content":"                });","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"justgnohUG"},"content":"        });","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"DarkDestry-t"},"content":"        personListPanel \u003d new PersonListPanel(logic.getSortedFilteredPersonList(),","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"yaowei-soc"},"content":"                logic.getDisplayFilter(), logic.getSelectedPersonPredicate());","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"justgnohUG"},"content":"        autocompleteListPanel \u003d new AutocompleteListPanel();","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"justgnohUG"},"content":"        autocompleteListPanelPlaceholder.getChildren().add(autocompleteListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"justgnohUG"},"content":"        commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"justgnohUG"},"content":"        // Pre-populates list","lastModifiedDate":"2021-03-21"},{"lineNumber":155,"author":{"gitId":"justgnohUG"},"content":"        autocompleteListPanel.updateList(logic.getAutocompleteCommands(\"\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":156,"author":{"gitId":"justgnohUG"},"content":"        commandBox.setKeyUpCallback((value) -\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"justgnohUG"},"content":"            // Update autocomplete list on keyup","lastModifiedDate":"2021-03-21"},{"lineNumber":158,"author":{"gitId":"justgnohUG"},"content":"            autocompleteListPanel.updateList(logic.getAutocompleteCommands(value));","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"justgnohUG"},"content":"        });","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":180,"author":{"gitId":"tanboonji"},"content":"        if (helpWindow.isShowing()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"tanboonji"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"yaowei-soc"},"content":"            personListPanel.updateDisplayFilter(logic.getDisplayFilter());","lastModifiedDate":"2021-03-10"},{"lineNumber":227,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"justgnohUG":36,"tanboonji":2,"-":193,"DarkDestry-t":1,"yaowei-soc":3}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import javafx.css.PseudoClass;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"    private static final PseudoClass SELECTED_PSEUDO_CLASS \u003d PseudoClass.getPseudoClass(\"selected\");","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"     * a consequence, UI elements\u0027 variable names cannot be set to such keywords or an exception","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"     * will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"     * AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    private Label company;","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    private Label jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"oeiyiping"},"content":"    private Label remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"oeiyiping"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"    public PersonCard(Person person, int displayedIndex, Predicate\u003cPrefix\u003e displayFilter,","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"            Predicate\u003cPerson\u003e selectedPersonPredicate) {","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        company.setText(person.getCompany().value);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        jobTitle.setText(person.getJobTitle().value);","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"oeiyiping"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"        id.pseudoClassStateChanged(SELECTED_PSEUDO_CLASS, selectedPersonPredicate.test(person));","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"        // Update control visibility","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"yaowei-soc"},"content":"        phone.setVisible(displayFilter.test(PREFIX_PHONE));","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"yaowei-soc"},"content":"        phone.setManaged(displayFilter.test(PREFIX_PHONE));","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"yaowei-soc"},"content":"        address.setVisible(displayFilter.test(PREFIX_ADDRESS));","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"yaowei-soc"},"content":"        address.setManaged(displayFilter.test(PREFIX_ADDRESS));","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"yaowei-soc"},"content":"        email.setVisible(displayFilter.test(PREFIX_EMAIL));","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"yaowei-soc"},"content":"        email.setManaged(displayFilter.test(PREFIX_EMAIL));","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"        company.setVisible(displayFilter.test(PREFIX_COMPANY));","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        company.setManaged(displayFilter.test(PREFIX_COMPANY));","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"        jobTitle.setVisible(displayFilter.test(PREFIX_JOB_TITLE));","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"        jobTitle.setManaged(displayFilter.test(PREFIX_JOB_TITLE));","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"yaowei-soc"},"content":"        tags.setVisible(displayFilter.test(PREFIX_TAG));","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"yaowei-soc"},"content":"        tags.setManaged(displayFilter.test(PREFIX_TAG));","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"yaowei-soc"},"content":"        remark.setVisible(displayFilter.test(PREFIX_REMARK));","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"yaowei-soc"},"content":"        remark.setManaged(displayFilter.test(PREFIX_REMARK));","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tanboonji":12,"oeiyiping":4,"-":72,"yaowei-soc":31}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"    private DisplayFilterPredicate displayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"    private Predicate\u003cPerson\u003e selectedPersonPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList,","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"            DisplayFilterPredicate displayFilterPredicate,","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"            Predicate\u003cPerson\u003e selectPersonPredicate) {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"        this.displayFilterPredicate \u003d displayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"        this.selectedPersonPredicate \u003d selectPersonPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"     * Updates the filter used for PersonCard fields. Forces the listview to re-draw it\u0027s content.","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"     * @param displayFilterPredicate display filter","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"    public void updateDisplayFilter(DisplayFilterPredicate displayFilterPredicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"        this.displayFilterPredicate \u003d displayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"        this.personListView.refresh();","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":54,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"justgnohUG"},"content":"     * Selects the previous item in the ListView and returns the result.","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"justgnohUG"},"content":"     * @param callback accept value for demo purposes.","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"justgnohUG"},"content":"    public void selectPrev(Consumer\u003cString\u003e callback) {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"justgnohUG"},"content":"        personListView.getSelectionModel().selectPrevious();","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"justgnohUG"},"content":"        int selectedIndex \u003d personListView.getSelectionModel().getSelectedIndex();","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"justgnohUG"},"content":"        personListView.scrollTo(selectedIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"justgnohUG"},"content":"        callback.accept(String.valueOf(selectedIndex + 1));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"justgnohUG"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"justgnohUG"},"content":"     * Selects the previous item in the ListView and returns the result.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"justgnohUG"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"justgnohUG"},"content":"     * @param callback accept value for demo purposes.","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"justgnohUG"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"justgnohUG"},"content":"    public void selectNext(Consumer\u003cString\u003e callback) {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"justgnohUG"},"content":"        personListView.getSelectionModel().selectNext();","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"justgnohUG"},"content":"        int selectedIndex \u003d personListView.getSelectionModel().getSelectedIndex();","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"justgnohUG"},"content":"        personListView.scrollTo(selectedIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"justgnohUG"},"content":"        callback.accept(String.valueOf(selectedIndex + 1));","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"     * PersonCard}.","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"yaowei-soc"},"content":"                setGraphic(","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"yaowei-soc"},"content":"                        new PersonCard(person,","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"yaowei-soc"},"content":"                                getIndex() + 1,","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"yaowei-soc"},"content":"                                displayFilterPredicate, selectedPersonPredicate).getRoot());","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"justgnohUG":23,"-":48,"yaowei-soc":29}},{"path":"src/main/resources/view/AliasWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Aliases\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"            \u003cVBox minWidth\u003d\"300\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"                    \u003cLabel fx:id\u003d\"header\" text\u003d\"Label\" style\u003d\"-fx-font-weight: bold; -fx-font-size: 14\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"                        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"                            \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"                        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"                    \u003cLabel fx:id\u003d\"aliasText\" text\u003d\"Label\" style\u003d\"-fx-font-size: 12\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"                        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"                            \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"                        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"                \u003c/children\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tanboonji":34}},{"path":"src/main/resources/view/AutocompleteListCell.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"\u003cVBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"      \u003cLabel fx:id\u003d\"commandName\" alignment\u003d\"CENTER\" text\u003d\"\\$commandName\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"justgnohUG"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"justgnohUG":10}},{"path":"src/main/resources/view/AutocompleteListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"justgnohUG"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"  \u003cListView fx:id\u003d\"autocompleteListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"justgnohUG":8}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"#id:selected {","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"    -fx-background-color: green;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":20,"yaowei-soc":4}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"oeiyiping"},"content":"\u003c?import javafx.scene.web.WebView?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"\u003cfx:root title\u003d\"Help - User Guide\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"         \u003cHBox alignment\u003d\"CENTER\" minHeight\u003d\"750.0\" minWidth\u003d\"750.0\" prefWidth\u003d\"750.0\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":18,"author":{"gitId":"oeiyiping"},"content":"               \u003cWebView fx:id\u003d\"webView\" minHeight\u003d\"750.0\" minWidth\u003d\"750.0\" prefHeight\u003d\"750.0\" prefWidth\u003d\"662.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"oeiyiping"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"oeiyiping"},"content":"               \u003c/WebView\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"               \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"oeiyiping":6,"-":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"justgnohUG"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"justgnohUG"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"justgnohUG"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"justgnohUG"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"justgnohUG"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"justgnohUG"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"justgnohUG"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"justgnohUG"},"content":"            \u003cSplitPane dividerPositions\u003d\"1\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"justgnohUG"},"content":"              \u003citems\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"justgnohUG"},"content":"                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"100.0\" maxWidth\u003d\"200.0\" prefHeight\u003d\"160.0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"justgnohUG"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"justgnohUG"},"content":"                          \u003cVBox fx:id\u003d\"autocompleteList\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"justgnohUG"},"content":"                                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"justgnohUG"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"justgnohUG"},"content":"                                  \u003cStackPane fx:id\u003d\"autocompleteListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"justgnohUG"},"content":"                              \u003c/children\u003e\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"justgnohUG"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"justgnohUG"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"justgnohUG"},"content":"                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"justgnohUG"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"justgnohUG"},"content":"                    \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"justgnohUG"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"justgnohUG"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"justgnohUG"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"justgnohUG"},"content":"                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"justgnohUG"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"justgnohUG"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"justgnohUG"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"justgnohUG"},"content":"              \u003c/items\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"justgnohUG"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"justgnohUG":35,"-":38}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"      \u003cLabel fx:id\u003d\"company\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$company\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"      \u003cLabel fx:id\u003d\"jobTitle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$jobTitle\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanboonji":2,"oeiyiping":1,"-":35,"yaowei-soc":1}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"google\",","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"hr manager\",","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    \"tagged\": [ \"photoshop\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    \"remark\": \"away from 2-3pm\"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"google\",","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"hr manager\",","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    \"tagged\": [ \"photoshop\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    \"remark\": \"away from 2-3pm\"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanboonji":10,"-":11}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"google\",","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"hr manager\",","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    \"tagged\": [ \"photoshop\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    \"remark\": \"away from 2-3pm\"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanboonji":5,"-":7}},{"path":"src/test/data/JsonAliasesStorageTest/invalidAliasAliases.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"{","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"  \"aliases\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"    \"alias\": \"invalid alias\",","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"    \"command\": \"add\"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"  } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":6}},{"path":"src/test/data/JsonAliasesStorageTest/invalidAndValidAliasAliases.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"{","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"  \"aliases\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"    \"alias\": \"validAlias\",","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"    \"command\": \"add\"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"    \"alias\": \"invalid alias\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    \"command\": \"delete\"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"  } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":9}},{"path":"src/test/data/JsonAliasesStorageTest/notJsonFormatAliases.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"not json format!","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"google\",","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"hr manager\",","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    \"tagged\": [ \"photoshop\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    \"remark\": \"away from 2-3pm\"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"google\",","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"hr manager\",","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"oeiyiping"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    \"tagged\": [ \"photoshop\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    \"remark\": \"away from 2-3pm\"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanboonji":8,"oeiyiping":1,"-":12}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"google\",","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"hr manager\",","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"    \"tagged\": [ \"photoshop\" ],","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    \"remark\": \"away from 2-3pm\"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanboonji":5,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"google\",","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"hr manager\",","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"oeiyiping"},"content":"    \"remark\" : \"She likes aardvarks.\",","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"amazon\",","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"software engineer\",","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"oeiyiping"},"content":"    \"remark\" : \"He can\u0027t take beer!\",","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"amazon\",","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"network administrator\",","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"oeiyiping"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"facebook\",","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"database administrator\",","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"facebook\",","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"senior software developer\",","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"oeiyiping"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"singtel\",","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"software developer intern\",","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"oeiyiping"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    \"company\": \"m1\",","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    \"jobTitle\": \"customer service operator\",","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"oeiyiping"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanboonji":14,"oeiyiping":7,"-":46}},{"path":"src/test/data/JsonSerializableAliasesTest/duplicateAliasAliases.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"{","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"  \"aliases\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"    \"alias\": \"a\",","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"    \"command\": \"add\"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"    \"alias\": \"a\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    \"command\": \"add\"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"  } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":9}},{"path":"src/test/data/JsonSerializableAliasesTest/invalidAliasAliases.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"{","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"  \"aliases\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"    \"alias\": \"z\",","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"    \"command\": \"zzz\"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"  } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":6}},{"path":"src/test/data/JsonSerializableAliasesTest/typicalAliasesAliases.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"{","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"  \"_comment\": \"Aliases save file which contains the same Aliases values as in TypicalAliases#getTypicalAliases()\",","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"  \"aliases\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"    \"alias\" : \"a\",","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"    \"command\" : \"add\"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"    \"alias\" : \"l\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"    \"command\" : \"list\"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"    \"alias\" : \"d\",","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    \"command\" : \"delete\"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    \"alias\" : \"ed\",","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    \"command\" : \"edit\"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    \"alias\" : \"ex\",","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    \"command\" : \"exit\"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    \"alias\" : \"h\",","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    \"command\" : \"help\"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    \"alias\" : \"f\",","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    \"command\" : \"find\"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    \"alias\" : \"c\",","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    \"command\" : \"clear\"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"  } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":28}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"justgnohUG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_TITLE_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"justgnohUG"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"justgnohUG"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"justgnohUG"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":27,"author":{"gitId":"justgnohUG"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":30,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"justgnohUG"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"import seedu.address.storage.JsonAliasesStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        JsonAliasesStorage aliasesStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"                new JsonAliasesStorage(temporaryFolder.resolve(\"aliases.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, aliasesStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"        JsonAliasesStorage aliasesStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"                new JsonAliasesIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, aliasesStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"justgnohUG"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"justgnohUG"},"content":"    public void getAutocompleteCommands_returnEmptyList_whiteSpaceParameter() {","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"justgnohUG"},"content":"        List\u003cString\u003e whiteSpaceCommandList \u003d logic.getAutocompleteCommands(\" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"justgnohUG"},"content":"        List\u003cString\u003e emptyCommandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"justgnohUG"},"content":"        assertEquals(whiteSpaceCommandList, emptyCommandList);","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"justgnohUG"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"justgnohUG"},"content":"    public void getAutocompleteCommands_nullParameterReturnsSameAsEmptyParameter() {","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"justgnohUG"},"content":"        List\u003cString\u003e nullCommandList \u003d logic.getAutocompleteCommands(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"justgnohUG"},"content":"        List\u003cString\u003e emptyCommandList \u003d logic.getAutocompleteCommands(\"\");","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"justgnohUG"},"content":"        assertEquals(nullCommandList, emptyCommandList);","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"justgnohUG"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"justgnohUG"},"content":"    public void getAutocompleteCommands_existingParameter() {","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"justgnohUG"},"content":"        List\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(EditCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"justgnohUG"},"content":"        commandList.add(ExitCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"justgnohUG"},"content":"        Collections.sort(commandList);","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"justgnohUG"},"content":"        List\u003cString\u003e testList \u003d logic.getAutocompleteCommands(\"e\");","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"justgnohUG"},"content":"        assertEquals(commandList, testList);","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"justgnohUG"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":138,"author":{"gitId":"justgnohUG"},"content":"    public void getAutocompleteCommands_testLexicographical() {","lastModifiedDate":"2021-03-21"},{"lineNumber":139,"author":{"gitId":"justgnohUG"},"content":"        ObservableList\u003cString\u003e testList \u003d logic.getAutocompleteCommands(\"\");","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"justgnohUG"},"content":"        for (int i \u003d 0; i \u003c testList.size() - 1; i++) {","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"justgnohUG"},"content":"            assertTrue(testList.get(i).compareTo(testList.get(i + 1)) \u003c\u003d 0);","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"justgnohUG"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"justgnohUG"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":144,"author":{"gitId":"justgnohUG"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":181,"author":{"gitId":"tanboonji"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":212,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":213,"author":{"gitId":"tanboonji"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-03-15"},{"lineNumber":214,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":215,"author":{"gitId":"tanboonji"},"content":"    private static class JsonAliasesIoExceptionThrowingStub extends JsonAliasesStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":"        private JsonAliasesIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":217,"author":{"gitId":"tanboonji"},"content":"            super(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":218,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":219,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":220,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":221,"author":{"gitId":"tanboonji"},"content":"        public void saveAliases(ReadOnlyUniqueAliasMap aliases, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":222,"author":{"gitId":"tanboonji"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-15"},{"lineNumber":223,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":224,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"justgnohUG":40,"tanboonji":26,"oeiyiping":1,"-":158}},{"path":"src/test/java/seedu/address/logic/commands/AddAliasCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import seedu.address.testutil.CommandAliasBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":" * Contains integration tests (interaction with the Model) for {@code AddAliasCommand}.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"public class AddAliasCommandIntegrationTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    public void execute_newAlias_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        CommandAlias validCommandAlias \u003d new CommandAliasBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        expectedModel.addAlias(validCommandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        assertCommandSuccess(new AddAliasCommand(validCommandAlias), model,","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"                String.format(AddAliasCommand.MESSAGE_SUCCESS, validCommandAlias), expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public void execute_duplicateAlias_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        CommandAlias commandAliasInList \u003d new CommandAliasBuilder().withAlias(ADD_ALIAS_STRING)","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"                .withCommand(AddCommand.COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        assertCommandFailure(new AddAliasCommand(commandAliasInList), model, AddAliasCommand.MESSAGE_DUPLICATE_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":48}},{"path":"src/test/java/seedu/address/logic/commands/AddAliasCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"DarkDestry-t"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"import seedu.address.testutil.CommandAliasBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"public class AddAliasCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    public void constructor_nullCommandAlias_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAliasCommand(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    public void execute_commandAliasAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        ModelStubAcceptingCommandAliasAdded modelStub \u003d new ModelStubAcceptingCommandAliasAdded();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        CommandAlias validCommandAlias \u003d new CommandAliasBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        CommandResult commandResult \u003d new AddAliasCommand(validCommandAlias).execute(modelStub);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        assertEquals(String.format(AddAliasCommand.MESSAGE_SUCCESS, validCommandAlias),","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        assertEquals(Arrays.asList(validCommandAlias), modelStub.aliasesAdded);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    public void execute_duplicateCommandAlias_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        CommandAlias validCommandAlias \u003d new CommandAliasBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        AddAliasCommand addAliasCommand \u003d new AddAliasCommand(validCommandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        ModelStub modelStub \u003d new ModelStubWithCommandAlias(validCommandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        assertThrows(CommandException.class, AddAliasCommand.MESSAGE_DUPLICATE_ALIAS, () -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"                addAliasCommand.execute(modelStub));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        CommandAlias add \u003d new CommandAliasBuilder().withAlias(\"a\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        CommandAlias delete \u003d new CommandAliasBuilder().withAlias(\"d\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        AddAliasCommand addAddCommand \u003d new AddAliasCommand(add);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        AddAliasCommand addDeleteCommand \u003d new AddAliasCommand(delete);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        assertTrue(addAddCommand.equals(addAddCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        AddAliasCommand addAddCommandCopy \u003d new AddAliasCommand(add);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        assertTrue(addAddCommand.equals(addAddCommandCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"        assertFalse(addAddCommand.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"        assertFalse(addAddCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        assertFalse(addAddCommand.equals(addDeleteCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"tanboonji"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"tanboonji"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"DarkDestry-t"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"DarkDestry-t"},"content":"        public ObservableList\u003cPerson\u003e getSortedFilteredPersonList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"DarkDestry-t"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"DarkDestry-t"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"DarkDestry-t"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"DarkDestry-t"},"content":"        public void updateSortedFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"DarkDestry-t"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"DarkDestry-t"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"tanboonji"},"content":"        public ReadOnlyUniqueAliasMap getAliases() {","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"tanboonji"},"content":"        public void updateDisplayFilter(DisplayFilterPredicate displayFilterPredicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"tanboonji"},"content":"        public void addAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"tanboonji"},"content":"        public void deleteAlias(Alias alias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"tanboonji"},"content":"        public boolean hasAlias(Alias alias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"tanboonji"},"content":"        public boolean hasCommandAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"tanboonji"},"content":"        public CommandAlias getCommandAlias(Alias alias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"tanboonji"},"content":"        public DisplayFilterPredicate getDisplayFilter() {","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"yaowei-soc"},"content":"        public void updateSelectedPersonList(List\u003cPerson\u003e selectedPersonList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"tanboonji"},"content":"        public int getNumOfAlias() {","lastModifiedDate":"2021-03-26"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":218,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":219,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"yaowei-soc"},"content":"        public void clearSelectedPersonList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"yaowei-soc"},"content":"        public void applySelectedPredicate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":229,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":230,"author":{"gitId":"yaowei-soc"},"content":"        public Predicate\u003cPerson\u003e getSelectedPersonPredicate() {","lastModifiedDate":"2021-03-25"},{"lineNumber":231,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-25"},{"lineNumber":232,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":233,"author":{"gitId":"tanboonji"},"content":"        public ObservableList\u003cString\u003e getObservableStringAliases() {","lastModifiedDate":"2021-03-26"},{"lineNumber":234,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":235,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":236,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"tanboonji"},"content":"     * A Model stub that contains a single commandAlias.","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"tanboonji"},"content":"    private class ModelStubWithCommandAlias extends ModelStub {","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"tanboonji"},"content":"        private final CommandAlias commandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"tanboonji"},"content":"        ModelStubWithCommandAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"tanboonji"},"content":"            requireNonNull(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"tanboonji"},"content":"            this.commandAlias \u003d commandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"tanboonji"},"content":"        public boolean hasCommandAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"tanboonji"},"content":"            requireNonNull(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"tanboonji"},"content":"            return this.commandAlias.isSameCommandAlias(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":256,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"tanboonji"},"content":"     * A Model stub that always accept the commandAlias being added.","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"tanboonji"},"content":"    private class ModelStubAcceptingCommandAliasAdded extends ModelStub {","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"tanboonji"},"content":"        final ArrayList\u003cCommandAlias\u003e aliasesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":261,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"tanboonji"},"content":"        public boolean hasCommandAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"tanboonji"},"content":"            requireNonNull(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"tanboonji"},"content":"            return aliasesAdded.stream().anyMatch(commandAlias::isSameCommandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"tanboonji"},"content":"        public void addAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"tanboonji"},"content":"            requireNonNull(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"tanboonji"},"content":"            aliasesAdded.add(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":272,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":273,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":274,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":275,"author":{"gitId":"tanboonji"},"content":"        public ReadOnlyUniqueAliasMap getAliases() {","lastModifiedDate":"2021-03-17"},{"lineNumber":276,"author":{"gitId":"tanboonji"},"content":"            return new UniqueAliasMap();","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":278,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":279,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":280,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":248,"DarkDestry-t":11,"yaowei-soc":21}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tanboonji":3,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"DarkDestry-t"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"DarkDestry-t"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"DarkDestry-t"},"content":"        public ObservableList\u003cPerson\u003e getSortedFilteredPersonList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"DarkDestry-t"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"DarkDestry-t"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"DarkDestry-t"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"DarkDestry-t"},"content":"        public void updateSortedFilteredPersonList(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"DarkDestry-t"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"DarkDestry-t"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"tanboonji"},"content":"        public ReadOnlyUniqueAliasMap getAliases() {","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"yaowei-soc"},"content":"        public void updateDisplayFilter(DisplayFilterPredicate displayFilterPredicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-10"},{"lineNumber":175,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":176,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":177,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"tanboonji"},"content":"        public void addAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"tanboonji"},"content":"        public void deleteAlias(Alias alias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"tanboonji"},"content":"        public boolean hasAlias(Alias alias) {","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"tanboonji"},"content":"        public boolean hasCommandAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"tanboonji"},"content":"        public CommandAlias getCommandAlias(Alias alias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":203,"author":{"gitId":"yaowei-soc"},"content":"        public DisplayFilterPredicate getDisplayFilter() {","lastModifiedDate":"2021-03-10"},{"lineNumber":204,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-10"},{"lineNumber":205,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":206,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"yaowei-soc"},"content":"        public void updateSelectedPersonList(List\u003cPerson\u003e selectedPersonList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":213,"author":{"gitId":"tanboonji"},"content":"        public int getNumOfAlias() {","lastModifiedDate":"2021-03-26"},{"lineNumber":214,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"yaowei-soc"},"content":"        public void clearSelectedPersonList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"yaowei-soc"},"content":"        public void applySelectedPredicate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"yaowei-soc"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":228,"author":{"gitId":"yaowei-soc"},"content":"        public Predicate\u003cPerson\u003e getSelectedPersonPredicate() {","lastModifiedDate":"2021-03-25"},{"lineNumber":229,"author":{"gitId":"yaowei-soc"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-25"},{"lineNumber":230,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":231,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":233,"author":{"gitId":"tanboonji"},"content":"        public ObservableList\u003cString\u003e getObservableStringAliases() {","lastModifiedDate":"2021-03-26"},{"lineNumber":234,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":235,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tanboonji":41,"-":194,"DarkDestry-t":12,"yaowei-soc":33}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tanboonji":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"tanboonji":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"oeiyiping"},"content":"    public static final String VALID_REMARK_AMY \u003d \"She likes to ski.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"oeiyiping"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    public static final String VALID_COMPANY_AMY \u003d \"Google\";","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    public static final String VALID_COMPANY_BOB \u003d \"Apple\";","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    public static final String VALID_JOB_TITLE_AMY \u003d \"Database Administrator\";","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    public static final String VALID_JOB_TITLE_BOB \u003d \"Senior Software Developer\";","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    public static final String VALID_ALIAS_ADD \u003d \"a\";","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"oeiyiping"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + \" \" + VALID_REMARK_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    public static final String COMPANY_DESC_AMY \u003d \" \" + PREFIX_COMPANY + VALID_COMPANY_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    public static final String COMPANY_DESC_BOB \u003d \" \" + PREFIX_COMPANY + \" \" + VALID_COMPANY_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    public static final String JOB_TITLE_DESC_AMY \u003d \" \" + PREFIX_JOB_TITLE + VALID_JOB_TITLE_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    public static final String JOB_TITLE_DESC_BOB \u003d \" \" + PREFIX_JOB_TITLE + \" \" + VALID_JOB_TITLE_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"    public static final String ALIAS_DESC_ADD \u003d \" \" + VALID_ALIAS_ADD;","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    public static final String COMMAND_DESC_ADD \u003d \" \" + AddCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    public static final String INVALID_COMPANY_DESC \u003d \" \" + PREFIX_COMPANY; // empty string not allowed for company","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"    public static final String INVALID_JOB_TITLE_DESC \u003d \" \"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"            + PREFIX_JOB_TITLE; // empty string not allowed for job title","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"    public static final String INVALID_ALIAS \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"    public static final String INVALID_COMMAND \u003d \"zzz\";","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"    public static final String INVALID_ALIAS_DESC \u003d \" \" + INVALID_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"    public static final String INVALID_COMMAND_DESC \u003d \" \" + INVALID_COMMAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"    public static final String EMPTY_NAME_DESC \u003d \" \" + PREFIX_NAME;","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"    public static final String EMPTY_PHONE_DESC \u003d \" \" + PREFIX_PHONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"    public static final String EMPTY_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL;","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"    public static final String EMPTY_COMPANY_DESC \u003d \" \" + PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"    public static final String EMPTY_JOB_TITLE_DESC \u003d \" \" + PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"    public static final String EMPTY_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"    public static final String EMPTY_TAG_DESC \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"    public static final String EMPTY_REMARK_DESC \u003d \" \" + PREFIX_REMARK;","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"                .withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"                .withCompany(VALID_COMPANY_AMY).withJobTitle(VALID_JOB_TITLE_AMY).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"                .withCompany(VALID_COMPANY_BOB).withJobTitle(VALID_JOB_TITLE_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tanboonji":39,"oeiyiping":4,"-":123}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAliasCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.DELETE_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.INVALID_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalCommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":" * {@code DeleteAliasCommand}.","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"public class DeleteAliasCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    public void execute_validAlias_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        CommandAlias commandAliasToDelete \u003d getTypicalCommandAlias();","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        Alias aliasToDelete \u003d getTypicalAlias();","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        DeleteAliasCommand deleteAliasCommand \u003d new DeleteAliasCommand(aliasToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d String.format(DeleteAliasCommand.MESSAGE_SUCCESS, commandAliasToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        expectedModel.deleteAlias(aliasToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        assertCommandSuccess(deleteAliasCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    public void execute_aliasNotFound_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        DeleteAliasCommand deleteAliasCommand \u003d new DeleteAliasCommand(INVALID_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        assertCommandFailure(deleteAliasCommand, model, DeleteAliasCommand.MESSAGE_ALIAS_NOT_FOUND);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        DeleteAliasCommand deleteFirstCommand \u003d new DeleteAliasCommand(ADD_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        DeleteAliasCommand deleteSecondCommand \u003d new DeleteAliasCommand(DELETE_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        DeleteAliasCommand deleteFirstCommandCopy \u003d new DeleteAliasCommand(ADD_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":73}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"            getTypicalAliases());","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"        Person personToDelete \u003d model.getFilteredPersonList()","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand deleteCommand \u003d DeleteCommand.buildDeleteIndexCommand(","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"                Collections.singletonList(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"                .format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"                model.getAliases());","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_validIndexesUnfilteredList_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"        Person personToDelete \u003d model.getFilteredPersonList()","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList()","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"                .get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand deleteCommand \u003d DeleteCommand.buildDeleteIndexCommand(","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"                List.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"                .format(DeleteCommand.MESSAGE_DELETE_PERSONS_SUCCESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"                        personToDelete + \"\\n\" + secondPersonToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"                model.getAliases());","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.deletePerson(secondPersonToDelete);","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand deleteCommand \u003d DeleteCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"                .buildDeleteIndexCommand(Collections.singletonList(outOfBoundIndex));","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_invalidIndexesUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"        Index secondOutOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand deleteCommand \u003d DeleteCommand.buildDeleteIndexCommand(","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"yaowei-soc"},"content":"                List.of(outOfBoundIndex, secondOutOfBoundIndex));","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand deleteCommand \u003d DeleteCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"yaowei-soc"},"content":"                .buildDeleteIndexCommand(Collections.singletonList(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand deleteCommand \u003d DeleteCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"yaowei-soc"},"content":"                .buildDeleteIndexCommand(Collections.singletonList(outOfBoundIndex));","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_deleteSelected_failureNoSelected() {","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandFailure(DeleteCommand.buildDeleteSelectedCommand(), model,","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"yaowei-soc"},"content":"                DeleteCommand.MESSAGE_NO_SELECTED);","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand deleteFirstCommand \u003d DeleteCommand.buildDeleteIndexCommand(","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"yaowei-soc"},"content":"                Collections.singletonList(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand deleteSecondCommand \u003d DeleteCommand.buildDeleteIndexCommand(","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"yaowei-soc"},"content":"                Collections.singletonList(INDEX_SECOND_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d DeleteCommand.buildDeleteIndexCommand(","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"yaowei-soc"},"content":"                Collections.singletonList(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(deleteFirstCommandCopy, deleteFirstCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(DeleteCommand.buildDeleteShownCommand(),","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"yaowei-soc"},"content":"                DeleteCommand.buildDeleteShownCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(deleteFirstCommand, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(deleteFirstCommand, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(deleteSecondCommand, deleteFirstCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tanboonji":2,"-":96,"yaowei-soc":66}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"DarkDestry-t"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"DarkDestry-t"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(INDEX_FIRST_PERSON),","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"                descriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"DarkDestry-t"},"content":"        expectedModel.setPerson(model.getSortedFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_bulkEditPhoneSpecifiedIndexes_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"        Person personA \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"        Person personB \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"        // Bulk edit phone number","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"        final String phoneNumber \u003d \"99998888\";","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"        Person editedPersonA \u003d new PersonBuilder(personA).withPhone(phoneNumber).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"yaowei-soc"},"content":"        Person editedPersonB \u003d new PersonBuilder(personB).withPhone(phoneNumber).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.setPerson(","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"yaowei-soc"},"content":"                model.getSortedFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()),","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"yaowei-soc"},"content":"                editedPersonA);","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.setPerson(","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"                model.getSortedFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased()),","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"                editedPersonB);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSONS_SUCCESS, 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(phoneNumber)","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"                .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditIndexCommand(List.of(INDEX_FIRST_PERSON, INDEX_THIRD_PERSON),","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"                descriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_shownEditPhone_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"yaowei-soc"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"yaowei-soc"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"yaowei-soc"},"content":"        // Bulk edit phone number","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"yaowei-soc"},"content":"        final String phoneNumber \u003d \"99998888\";","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"yaowei-soc"},"content":"        for (Person person : model.getFilteredPersonList()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"yaowei-soc"},"content":"            Person editedPerson \u003d new PersonBuilder(person).withPhone(phoneNumber).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"yaowei-soc"},"content":"            expectedModel.setPerson(person, editedPerson);","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"yaowei-soc"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"yaowei-soc"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSONS_SUCCESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"yaowei-soc"},"content":"                expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"yaowei-soc"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(phoneNumber)","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"yaowei-soc"},"content":"                .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditShownCommand(descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_selectedEditPhone_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"yaowei-soc"},"content":"        model.updateSelectedPersonList(model.getFilteredPersonList().subList(0, 1));","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"yaowei-soc"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"yaowei-soc"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.updateSelectedPersonList(expectedModel.getFilteredPersonList().subList(0, 1));","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"yaowei-soc"},"content":"        // Edit phone number","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"yaowei-soc"},"content":"        final String phoneNumber \u003d \"99998888\";","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"yaowei-soc"},"content":"        Person person \u003d expectedModel.getFilteredPersonList()","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"yaowei-soc"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"yaowei-soc"},"content":"        Person editedPerson \u003d new PersonBuilder(person).withPhone(phoneNumber).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.setPerson(person, editedPerson);","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"yaowei-soc"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"yaowei-soc"},"content":"                .format(EditCommand.MESSAGE_EDIT_PERSONS_SUCCESS, 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"yaowei-soc"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(phoneNumber)","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"yaowei-soc"},"content":"                .build();","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditSelectedCommand(descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_selectedEditPhone_failureNoSelected() {","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"yaowei-soc"},"content":"        // Edit phone number","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"yaowei-soc"},"content":"        final String phoneNumber \u003d \"99998888\";","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"yaowei-soc"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(phoneNumber)","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"yaowei-soc"},"content":"                .build();","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditSelectedCommand(descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_NO_SELECTED);","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_shownEditName_expectFailure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"yaowei-soc"},"content":"        // Bulk edit phone number","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"yaowei-soc"},"content":"        final String name \u003d \"test\";","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"yaowei-soc"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(name).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditShownCommand(descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON_BULK);","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"DarkDestry-t"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getSortedFilteredPersonList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"DarkDestry-t"},"content":"        Person lastPerson \u003d model.getSortedFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditIndexCommand(Collections.singletonList(indexLastPerson),","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"yaowei-soc"},"content":"                descriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"tanboonji"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"tanboonji"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditIndexCommand(Collections.singletonList(INDEX_FIRST_PERSON),","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"yaowei-soc"},"content":"                new EditPersonDescriptor());","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"yaowei-soc"},"content":"        Person editedPerson \u003d model.getSortedFilteredPersonList()","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"yaowei-soc"},"content":"                .get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"tanboonji"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":196,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditIndexCommand(Collections.singletonList(INDEX_FIRST_PERSON),","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":201,"author":{"gitId":"tanboonji"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"tanboonji"},"content":"                new AddressBook(model.getAddressBook()), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":212,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(INDEX_SECOND_PERSON), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":224,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditIndexCommand(Collections.singletonList(INDEX_FIRST_PERSON),","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditIndexCommand(Collections.singletonList(outOfBoundIndex),","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"yaowei-soc"},"content":"                descriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":251,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand editCommand \u003d EditCommand.buildEditIndexCommand(Collections.singletonList(outOfBoundIndex),","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":259,"author":{"gitId":"yaowei-soc"},"content":"        final EditCommand standardCommand \u003d EditCommand.buildEditIndexCommand(","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"yaowei-soc"},"content":"                Collections.singletonList(INDEX_FIRST_PERSON), DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"yaowei-soc"},"content":"        final EditCommand commandWithIndexes \u003d EditCommand.buildEditIndexCommand(VALID_INDEXES, DESC_AMY);","lastModifiedDate":"2021-03-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":265,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand commandWithSameValues \u003d EditCommand.buildEditIndexCommand(","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"yaowei-soc"},"content":"                Collections.singletonList(INDEX_FIRST_PERSON), copyDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"DarkDestry-t"},"content":"        assertEquals(commandWithSameValues, standardCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":269,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(EditCommand.buildEditIndexCommand(VALID_INDEXES, DESC_AMY),","lastModifiedDate":"2021-03-31"},{"lineNumber":270,"author":{"gitId":"yaowei-soc"},"content":"                EditCommand.buildEditIndexCommand(VALID_INDEXES, DESC_AMY));","lastModifiedDate":"2021-03-31"},{"lineNumber":271,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(EditCommand.buildEditShownCommand(DESC_AMY),","lastModifiedDate":"2021-03-31"},{"lineNumber":272,"author":{"gitId":"yaowei-soc"},"content":"                EditCommand.buildEditShownCommand(DESC_AMY));","lastModifiedDate":"2021-03-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":275,"author":{"gitId":"DarkDestry-t"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":276,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(commandWithIndexes, commandWithIndexes);","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":279,"author":{"gitId":"DarkDestry-t"},"content":"        assertNotEquals(standardCommand, null);","lastModifiedDate":"2021-03-14"},{"lineNumber":280,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(commandWithIndexes, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":283,"author":{"gitId":"DarkDestry-t"},"content":"        assertNotEquals(new ClearCommand(), standardCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":286,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(EditCommand.buildEditIndexCommand(Collections.singletonList(INDEX_SECOND_PERSON), DESC_AMY),","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"yaowei-soc"},"content":"                standardCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(commandWithIndexes, standardCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":291,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(EditCommand.buildEditIndexCommand(Collections.singletonList(INDEX_FIRST_PERSON), DESC_BOB),","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"yaowei-soc"},"content":"                standardCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(EditCommand.buildEditIndexCommand(VALID_INDEXES, DESC_BOB),","lastModifiedDate":"2021-03-31"},{"lineNumber":294,"author":{"gitId":"yaowei-soc"},"content":"                standardCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"tanboonji":9,"-":152,"DarkDestry-t":9,"yaowei-soc":127}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tanboonji":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"class FilterCommandTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_modelUpdated_success() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"        ArgumentMultimap argumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"        argumentMultimap.put(PREFIX_ADDRESS, \"\");","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate displayFilterPredicate \u003d new DisplayFilterPredicate(","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"                argumentMultimap);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(displayFilterPredicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"        // before executing","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(model.getDisplayFilter(), displayFilterPredicate);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"        filterCommand.execute(model);","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"        // after executing","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(model.getDisplayFilter(), displayFilterPredicate);","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"        final ArgumentMultimap addressMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"        addressMultimap.put(PREFIX_ADDRESS, \"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"        final ArgumentMultimap remarkMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"        addressMultimap.put(PREFIX_REMARK, \"\");","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"        final DisplayFilterPredicate addressOnlyPredicate \u003d new DisplayFilterPredicate(","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"                addressMultimap);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"        final DisplayFilterPredicate remarkOnlyPredicate \u003d new DisplayFilterPredicate(","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"                remarkMultimap);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"        final FilterCommand standardCommand \u003d new FilterCommand(new DisplayFilterPredicate());","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"        final FilterCommand addressPredicateCommand \u003d new FilterCommand(addressOnlyPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"        final FilterCommand remarkPredicateCommand \u003d new FilterCommand(remarkOnlyPredicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"        final FilterCommand dupeAddressPredicateCommand \u003d new FilterCommand(addressOnlyPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"        final FilterCommand commandWithSameValues \u003d new FilterCommand(new DisplayFilterPredicate());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"        // same predicate, default -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(commandWithSameValues, standardCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"        // same predicate, address -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(addressPredicateCommand, dupeAddressPredicateCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(addressPredicateCommand, addressPredicateCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(standardCommand, null);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(addressPredicateCommand, null);","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"yaowei-soc"},"content":"        // different command types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(new ClearCommand(), standardCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"yaowei-soc"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(addressPredicateCommand, standardCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(addressPredicateCommand, remarkPredicateCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"tanboonji":2,"yaowei-soc":76}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"DarkDestry-t"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"DarkDestry-t"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"DarkDestry-t"},"content":"        assertEquals(findFirstCommandCopy, findFirstCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"DarkDestry-t"},"content":"        assertNotEquals(findFirstCommand, 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"DarkDestry-t"},"content":"        assertNotEquals(findFirstCommand, null);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"DarkDestry-t"},"content":"        assertNotEquals(findSecondCommand, findFirstCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"DarkDestry-t"},"content":"        assertEquals(Collections.emptyList(), model.getSortedFilteredPersonList());","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"DarkDestry-t"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getSortedFilteredPersonList());","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tanboonji":3,"-":72,"DarkDestry-t":8}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tanboonji":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListAliasCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.ListAliasCommand.SHOWING_ALIASES_MESSAGE;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListAliasCommand.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"public class ListAliasCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public void execute_listAlias_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"                String.format(SHOWING_ALIASES_MESSAGE, model.getNumOfAlias()), false, true, false);","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        assertCommandSuccess(new ListAliasCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":25}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tanboonji":3,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/SelectClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"public class SelectClearCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"    private Model model;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"                model.getAliases());","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"        // set all to selected initially","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"        model.updateSelectedPersonList(model.getFilteredPersonList());","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_modelUpdated_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandSuccess(new SelectClearCommand(), model, SelectClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"                expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"    public void equals() {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"        SelectClearCommand command \u003d new SelectClearCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"        // same object -\u003e equals","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(command, command);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"        // different object -\u003e equals","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(new SelectClearCommand(), new SelectClearCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"        // different types -\u003e not equals","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(command, new SelectShowCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"        // null -\u003e not equals","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(null, command);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"        // 1 -\u003e not equals","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(1, command);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":54}},{"path":"src/test/java/seedu/address/logic/commands/SelectIndexCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"public class SelectIndexCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"    private Model model;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"                model.getAliases());","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"    public void initialize_nullIndexes_throwsException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SelectIndexCommand(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_selectShownModelUpdated_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"        SelectIndexCommand command \u003d new SelectIndexCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cPerson\u003e personList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.updateSelectedPersonList(personList);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandSuccess(command, model, SelectIndexCommand.MESSAGE_SHOWN_SUCCESS,","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"                expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_selectIndexModelUpdated_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"        SelectIndexCommand command \u003d new SelectIndexCommand(VALID_INDEXES);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cPerson\u003e personList \u003d expectedModel.getFilteredPersonList().subList(0, 3);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.updateSelectedPersonList(personList);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandSuccess(command, model, SelectIndexCommand.MESSAGE_INDEX_SUCCESS,","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"                expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"    public void equals() {","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cIndex\u003e validIndexes \u003d new ArrayList\u003c\u003e(VALID_INDEXES);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cIndex\u003e validIndexesReversed \u003d new ArrayList\u003c\u003e(VALID_INDEXES);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"        Collections.reverse(validIndexesReversed);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"        // same indexes -\u003e equals","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(new SelectIndexCommand(validIndexes), new SelectIndexCommand(validIndexes));","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"        // same indexes, different order -\u003e equals","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(new SelectIndexCommand(validIndexes),","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"yaowei-soc"},"content":"                new SelectIndexCommand(validIndexesReversed));","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"yaowei-soc"},"content":"        // different instance, same values -\u003e equals","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(new SelectIndexCommand(), new SelectIndexCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"        // different command -\u003e not equals","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(new SelectIndexCommand(), new ListCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"        // different indexes -\u003e not equals","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(new SelectIndexCommand(), new SelectIndexCommand(validIndexes));","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"        // different types -\u003e not equals","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(null, new SelectIndexCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(1, new SelectIndexCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":87}},{"path":"src/test/java/seedu/address/logic/commands/SelectShowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"public class SelectShowCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"    private Model model;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalAliases());","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(),","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"                model.getAliases());","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_showEmpty_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.applySelectedPredicate();","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandSuccess(new SelectShowCommand(), model, SelectShowCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"                expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_selectAllShowAll_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"        model.updateSelectedPersonList(model.getFilteredPersonList());","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.updateSelectedPersonList(expectedModel.getFilteredPersonList());","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.applySelectedPredicate();","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandSuccess(new SelectShowCommand(), model, SelectShowCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"                expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(expectedModel.getFilteredPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"    public void execute_selectOneShowOne_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cPerson\u003e oneItemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"        oneItemList","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"                .add(model.getFilteredPersonList().get(model.getFilteredPersonList().size() - 1));","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"        model.updateSelectedPersonList(oneItemList);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.updateSelectedPersonList(oneItemList);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"        expectedModel.applySelectedPredicate();","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"        assertCommandSuccess(new SelectShowCommand(), model, SelectShowCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"                expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(expectedModel.getFilteredPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":62}},{"path":"src/test/java/seedu/address/logic/parser/AddAliasCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ALIAS_DESC_ADD;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMAND_DESC_ADD;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ALIAS_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMMAND_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ALIAS_ADD;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_COMMAND_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"import seedu.address.testutil.CommandAliasBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"public class AddAliasCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private AddAliasCommandParser parser \u003d new AddAliasCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        CommandAlias expectedCommandAlias \u003d new CommandAliasBuilder(ADD_COMMAND_ALIAS).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, ALIAS_DESC_ADD + COMMAND_DESC_ADD,","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"                new AddAliasCommand(expectedCommandAlias));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAliasCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        // missing alias, therefore command taken as alias, showing command format error","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, COMMAND_DESC_ADD, Command.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        // missing command","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, ALIAS_DESC_ADD, Command.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        // all fields missing","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        // empty alias, therefore command taken as alias, showing command format error","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, INVALID_ALIAS_DESC + COMMAND_DESC_ADD, Command.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        // invalid command","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, ALIAS_DESC_ADD + INVALID_COMMAND_DESC, Command.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    public void parse_validAddAliasCommandAlias_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        // empty value","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, \"\");","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    public void parse_invalidAddAliasCommandAlias_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        // non-empty value (does not allow alias add command to be aliased)","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_ALIAS_ADD);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":68}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_ADDRESS_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_COMPANY_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_EMAIL_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_JOB_TITLE_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_NAME_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_PHONE_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_REMARK_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_TAG_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOB_TITLE_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_TITLE_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_TITLE_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":33,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_TITLE_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"        // multiple companies - last company accepted","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"        // multiple job titles - last job title accepted","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_AMY + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"        // multiple remarks - last remark accepted","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_AMY + REMARK_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"        // zero tags","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + COMPANY_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"                        + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY,","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"        expectedPerson \u003d new PersonBuilder(AMY).withRemark(\"\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"        // no remark","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + COMPANY_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"                        + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"        // missing company prefix","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_COMPANY_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"tanboonji"},"content":"        // missing job title prefix","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"                + VALID_JOB_TITLE_BOB + ADDRESS_DESC_BOB + REMARK_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + VALID_ADDRESS_BOB + REMARK_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + VALID_ADDRESS_BOB + REMARK_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_BOB,","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_BOB,","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"tanboonji"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_BOB,","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":"        // invalid company","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_COMPANY_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_BOB,","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"tanboonji"},"content":"                Company.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"tanboonji"},"content":"        // invalid job title","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"tanboonji"},"content":"                + INVALID_JOB_TITLE_DESC + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_BOB,","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"tanboonji"},"content":"                JobTitle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + REMARK_DESC_BOB,","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"tanboonji"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + INVALID_TAG_DESC + REMARK_DESC_BOB,","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"tanboonji"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_BOB + INVALID_ADDRESS_DESC + VALID_TAG_HUSBAND + REMARK_DESC_BOB,","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":213,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_BOB,","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"tanboonji"},"content":"    public void parse_validAddCommandAlias_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"tanboonji"},"content":"        // whitespace only","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, PREAMBLE_WHITESPACE);","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"tanboonji"},"content":"        // empty name argument","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, EMPTY_NAME_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"tanboonji"},"content":"        // empty email argument","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, EMPTY_EMAIL_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"tanboonji"},"content":"        // empty company argument","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, EMPTY_COMPANY_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"tanboonji"},"content":"        // empty job title argument","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, EMPTY_JOB_TITLE_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"tanboonji"},"content":"        // empty address argument","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, EMPTY_ADDRESS_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"tanboonji"},"content":"        // empty phone argument","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, EMPTY_PHONE_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"tanboonji"},"content":"        // empty tag argument","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, EMPTY_TAG_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"tanboonji"},"content":"        // empty remark argument","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, EMPTY_REMARK_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"tanboonji"},"content":"        // empty last name argument","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, PHONE_DESC_AMY + EMAIL_DESC_AMY + COMPANY_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY + EMPTY_NAME_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"tanboonji"},"content":"        // empty last email argument","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + COMPANY_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY + EMPTY_EMAIL_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":254,"author":{"gitId":"tanboonji"},"content":"        // empty last company argument","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY + EMPTY_COMPANY_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"tanboonji"},"content":"        // empty last job title argument","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY + EMPTY_JOB_TITLE_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"tanboonji"},"content":"        // empty last address argument","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY + EMPTY_ADDRESS_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"tanboonji"},"content":"        // empty last phone argument","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY + COMPANY_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"tanboonji"},"content":"                + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY + EMPTY_PHONE_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"tanboonji"},"content":"        // empty last tag argument","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":272,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY + EMPTY_TAG_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":273,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"tanboonji"},"content":"        // empty last remark argument","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + EMPTY_REMARK_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":278,"author":{"gitId":"tanboonji"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":279,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":280,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":283,"author":{"gitId":"tanboonji"},"content":"        // allow multiple names","lastModifiedDate":"2021-03-17"},{"lineNumber":284,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":285,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":288,"author":{"gitId":"tanboonji"},"content":"        // allow multiple phones","lastModifiedDate":"2021-03-17"},{"lineNumber":289,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":290,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":293,"author":{"gitId":"tanboonji"},"content":"        // allow multiple emails","lastModifiedDate":"2021-03-17"},{"lineNumber":294,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":295,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"tanboonji"},"content":"        // allow multiple companies","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"tanboonji"},"content":"        // allow multiple job titles","lastModifiedDate":"2021-03-30"},{"lineNumber":304,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_AMY + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":308,"author":{"gitId":"tanboonji"},"content":"        // allow multiple addresses","lastModifiedDate":"2021-03-17"},{"lineNumber":309,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":310,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":313,"author":{"gitId":"tanboonji"},"content":"        // allow multiple tags","lastModifiedDate":"2021-03-17"},{"lineNumber":314,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":315,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":316,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":317,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":318,"author":{"gitId":"tanboonji"},"content":"        // allow multiple remarks","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":320,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":321,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":322,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":323,"author":{"gitId":"tanboonji"},"content":"        // multiple names - last name accepted - empty name argument at start of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":324,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, EMPTY_NAME_DESC + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":326,"author":{"gitId":"tanboonji"},"content":"                + NAME_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":328,"author":{"gitId":"tanboonji"},"content":"        // multiple phones - last phone accepted - empty phone argument in middle of user input discarded","lastModifiedDate":"2021-03-17"},{"lineNumber":329,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + EMPTY_PHONE_DESC + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":330,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":331,"author":{"gitId":"tanboonji"},"content":"                + PHONE_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":332,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":333,"author":{"gitId":"tanboonji"},"content":"        // multiple emails - last email accepted - empty email argument in middle of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":334,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMPTY_EMAIL_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":336,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":337,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":338,"author":{"gitId":"tanboonji"},"content":"        // multiple companies - last address accepted - empty address argument in middle of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":339,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":340,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":341,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_COMPANY_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":342,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":343,"author":{"gitId":"tanboonji"},"content":"        // multiple job titles - last address accepted - empty address argument in middle of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":344,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":345,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":346,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_JOB_TITLE_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":347,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":348,"author":{"gitId":"tanboonji"},"content":"        // multiple addresses - last address accepted - empty address argument in middle of user input discarded","lastModifiedDate":"2021-03-17"},{"lineNumber":349,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":350,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + EMPTY_ADDRESS_DESC + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":351,"author":{"gitId":"tanboonji"},"content":"                + ADDRESS_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":352,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":353,"author":{"gitId":"tanboonji"},"content":"        // multiple remarks - last address accepted - empty address argument in middle of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":354,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":355,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + EMPTY_REMARK_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":356,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":357,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":358,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":359,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":360,"author":{"gitId":"tanboonji"},"content":"    public void parse_invalidAddCommandAlias_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":361,"author":{"gitId":"tanboonji"},"content":"        // empty name argument at start of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":362,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, EMPTY_NAME_DESC + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":363,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":364,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"tanboonji"},"content":"        // empty phone argument in middle of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":366,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_AMY + EMPTY_PHONE_DESC + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":367,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":368,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":369,"author":{"gitId":"tanboonji"},"content":"        // empty email argument in middle of user input","lastModifiedDate":"2021-03-17"},{"lineNumber":370,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMPTY_EMAIL_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":371,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":372,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":373,"author":{"gitId":"tanboonji"},"content":"        // empty company argument in middle of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":374,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":375,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_COMPANY_DESC + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":376,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":377,"author":{"gitId":"tanboonji"},"content":"        // empty job title argument in middle of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":378,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":379,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + EMPTY_JOB_TITLE_DESC + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":380,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":381,"author":{"gitId":"tanboonji"},"content":"        // empty address argument in middle of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":382,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":383,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + EMPTY_ADDRESS_DESC + TAG_DESC_FRIEND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":384,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":385,"author":{"gitId":"tanboonji"},"content":"        // empty tag argument at start of user input (tags not allowed to be empty at all)","lastModifiedDate":"2021-03-17"},{"lineNumber":386,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, EMPTY_TAG_DESC + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":387,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":388,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":389,"author":{"gitId":"tanboonji"},"content":"        // empty tag argument in middle of user input (tags not allowed to be empty at all)","lastModifiedDate":"2021-03-17"},{"lineNumber":390,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMPTY_TAG_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":391,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":392,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":393,"author":{"gitId":"tanboonji"},"content":"        // multiple tags - empty tag argument at start of user input (tags not allowed to be empty at all)","lastModifiedDate":"2021-03-17"},{"lineNumber":394,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, EMPTY_TAG_DESC + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":395,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":396,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":397,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":398,"author":{"gitId":"tanboonji"},"content":"        // multiple tags - empty tag argument in the middle of user input (tags not allowed to be empty at all)","lastModifiedDate":"2021-03-17"},{"lineNumber":399,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMPTY_TAG_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":400,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":401,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":402,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":403,"author":{"gitId":"tanboonji"},"content":"        // invalid name","lastModifiedDate":"2021-03-17"},{"lineNumber":404,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":405,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":406,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":407,"author":{"gitId":"tanboonji"},"content":"        // invalid phone","lastModifiedDate":"2021-03-17"},{"lineNumber":408,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":409,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":410,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":411,"author":{"gitId":"tanboonji"},"content":"        // invalid email","lastModifiedDate":"2021-03-17"},{"lineNumber":412,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":413,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":414,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":415,"author":{"gitId":"tanboonji"},"content":"        // invalid company","lastModifiedDate":"2021-03-30"},{"lineNumber":416,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":417,"author":{"gitId":"tanboonji"},"content":"                + INVALID_COMPANY_DESC + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":418,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":419,"author":{"gitId":"tanboonji"},"content":"        // invalid job title","lastModifiedDate":"2021-03-30"},{"lineNumber":420,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":421,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + INVALID_JOB_TITLE_DESC + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":422,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":423,"author":{"gitId":"tanboonji"},"content":"        // invalid address","lastModifiedDate":"2021-03-17"},{"lineNumber":424,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":425,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":426,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":427,"author":{"gitId":"tanboonji"},"content":"        // invalid tag","lastModifiedDate":"2021-03-17"},{"lineNumber":428,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":429,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + INVALID_TAG_DESC + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":430,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":431,"author":{"gitId":"tanboonji"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":432,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":433,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":434,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":435,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":436,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":437,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tanboonji":326,"oeiyiping":2,"-":109}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ListAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectClearCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectIndexCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectShowCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"import seedu.address.testutil.CommandAliasBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"import seedu.address.testutil.CommandAliasUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    private final UniqueAliasMap emptyAliases \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person), emptyAliases);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD, emptyAliases) instanceof ClearCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"                ClearCommand.COMMAND_WORD + \" 3\", emptyAliases) instanceof ClearCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased(), emptyAliases);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(DeleteCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"                .buildDeleteIndexCommand(Collections.singletonList(INDEX_FIRST_PERSON)), command);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"        DeleteCommand commandMultipleIndexes \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + VALID_INDEXES_STRING, emptyAliases);","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(DeleteCommand.buildDeleteIndexCommand(VALID_INDEXES), commandMultipleIndexes);","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor), emptyAliases);","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"yaowei-soc"},"content":"                        .buildEditIndexCommand(Collections.singletonList(INDEX_FIRST_PERSON), descriptor),","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"yaowei-soc"},"content":"                command);","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD, emptyAliases) instanceof ExitCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\", emptyAliases) instanceof ExitCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"                FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")), emptyAliases);","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"yaowei-soc"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(PREFIX_ADDRESS.toString(), PREFIX_PHONE.toString(),","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"yaowei-soc"},"content":"                PREFIX_EMAIL.toString());","lastModifiedDate":"2021-03-11"},{"lineNumber":114,"author":{"gitId":"yaowei-soc"},"content":"        ArgumentMultimap argumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"yaowei-soc"},"content":"        argumentMultimap.put(PREFIX_ADDRESS, \"\");","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"yaowei-soc"},"content":"        argumentMultimap.put(PREFIX_PHONE, \"\");","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"yaowei-soc"},"content":"        argumentMultimap.put(PREFIX_EMAIL, \"\");","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate displayFilterPredicate \u003d new DisplayFilterPredicate(argumentMultimap);","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(FilterCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"                + keywords.stream().collect(Collectors.joining(\" \")), emptyAliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(new FilterCommand(displayFilterPredicate), command);","lastModifiedDate":"2021-03-11"},{"lineNumber":122,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD, emptyAliases) instanceof HelpCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\", emptyAliases) instanceof HelpCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD, emptyAliases) instanceof ListCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\", emptyAliases) instanceof ListCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"tanboonji"},"content":"    public void parseCommand_aliasAdd() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"tanboonji"},"content":"        CommandAlias commandAlias \u003d new CommandAliasBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"tanboonji"},"content":"        AddAliasCommand command \u003d (AddAliasCommand) parser.parseCommand(","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"tanboonji"},"content":"                CommandAliasUtil.getAddAliasCommand(commandAlias), emptyAliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"        assertEquals(new AddAliasCommand(commandAlias), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"    public void parseCommand_aliasDelete() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":"        DeleteAliasCommand command \u003d (DeleteAliasCommand) parser.parseCommand(DeleteAliasCommand.COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"                + \" \" + DeleteAliasCommand.DELETE_SUB_COMMAND_WORD + \" \" + getTypicalAlias(), emptyAliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"        assertEquals(new DeleteAliasCommand(getTypicalAlias()), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"    public void parseCommand_aliasList() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(ListAliasCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"tanboonji"},"content":"                + ListAliasCommand.LIST_SUB_COMMAND_WORD, emptyAliases) instanceof ListAliasCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parseCommand(ListAliasCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"tanboonji"},"content":"                + ListAliasCommand.LIST_SUB_COMMAND_WORD + \" 3\", emptyAliases) instanceof ListAliasCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"yaowei-soc"},"content":"    public void parseCommand_select() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"yaowei-soc"},"content":"                SelectCommand.COMMAND_WORD + \" \" + SelectIndexCommandParser.SPECIAL_INDEX,","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"yaowei-soc"},"content":"                emptyAliases) instanceof SelectIndexCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"yaowei-soc"},"content":"                SelectCommand.COMMAND_WORD + \" \" + VALID_INDEXES_STRING,","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"yaowei-soc"},"content":"                emptyAliases) instanceof SelectIndexCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"yaowei-soc"},"content":"                SelectCommand.COMMAND_WORD + \" \" + SelectCommand.CLEAR_SUB_COMMAND_WORD,","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"yaowei-soc"},"content":"                emptyAliases) instanceof SelectClearCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"yaowei-soc"},"content":"                SelectCommand.COMMAND_WORD + \" \" + SelectCommand.SHOW_SUB_COMMAND_WORD,","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"yaowei-soc"},"content":"                emptyAliases) instanceof SelectShowCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"yaowei-soc"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"yaowei-soc"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\", emptyAliases));","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"tanboonji"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":"                \"unknownCommand\", emptyAliases));","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tanboonji":52,"-":86,"yaowei-soc":49}},{"path":"src/test/java/seedu/address/logic/parser/AliasCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMMAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ListAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"import seedu.address.testutil.CommandAliasBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"import seedu.address.testutil.CommandAliasUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"public class AliasCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private final AliasCommandParser parser \u003d new AliasCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public void parseCommand_aliasAdd() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        CommandAlias commandAlias \u003d new CommandAliasBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        AddAliasCommand command \u003d (AddAliasCommand) parser.parse(AddAliasCommand.ADD_SUB_COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"                + CommandAliasUtil.getCommandAliasDetails(commandAlias));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        assertEquals(new AddAliasCommand(commandAlias), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    public void parseCommand_aliasDelete() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        DeleteAliasCommand command \u003d (DeleteAliasCommand) parser.parse(DeleteAliasCommand.DELETE_SUB_COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"                + \" \" + getTypicalAlias());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        assertEquals(new DeleteAliasCommand(getTypicalAlias()), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    public void parseCommand_aliasList() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parse(ListAliasCommand.LIST_SUB_COMMAND_WORD) instanceof ListAliasCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.parse(ListAliasCommand.LIST_SUB_COMMAND_WORD + \" 3\") instanceof ListAliasCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            -\u003e parser.parse(\"\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_UNKNOWN_COMMAND), ()","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"            -\u003e parser.parse(AliasCommand.COMMAND_WORD + \" unknownSubCommand\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    public void parse_validAddCommandAlias_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"        // whitespace only","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, PREAMBLE_WHITESPACE);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        // alias add","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, AliasCommand.ADD_SUB_COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        // alias delete","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, AliasCommand.DELETE_SUB_COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        // alias list","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, AliasCommand.LIST_SUB_COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"    public void parse_invalidAddCommandAlias_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"        // invalid alias sub command","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, INVALID_COMMAND);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":83}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    private void assertOptionalPrefixEmpty(Optional\u003cPrefix\u003e optionalPrefix) {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        assertTrue(optionalPrefix.isEmpty());","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    private void assertOptionalPrefixPresent(Optional\u003cPrefix\u003e optionalPrefix) {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"        assertTrue(optionalPrefix.isPresent());","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"    public void getLastPrefix_noArguments_returnsEmptyOptionalPrefix() {","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"        String argsString \u003d \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"        Optional\u003cPrefix\u003e optionalPrefix \u003d ArgumentTokenizer.getLastPrefix(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"        assertOptionalPrefixEmpty(optionalPrefix);","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"tanboonji"},"content":"    public void getLastPrefix_oneArgument_returnsPresentOptionalPrefix() {","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"        String argsString \u003d \"SomePreambleString p/ pSlash joined\";","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"tanboonji"},"content":"        Optional\u003cPrefix\u003e optionalPrefix \u003d ArgumentTokenizer.getLastPrefix(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"tanboonji"},"content":"        assertOptionalPrefixPresent(optionalPrefix);","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"tanboonji"},"content":"        argsString \u003d \"SomePreambleString -tjoined\";","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"tanboonji"},"content":"        optionalPrefix \u003d ArgumentTokenizer.getLastPrefix(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"tanboonji"},"content":"        assertOptionalPrefixPresent(optionalPrefix);","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"tanboonji"},"content":"        argsString \u003d \"SomePreambleString ^Qjoined\";","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"tanboonji"},"content":"        optionalPrefix \u003d ArgumentTokenizer.getLastPrefix(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"tanboonji"},"content":"        assertOptionalPrefixPresent(optionalPrefix);","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"tanboonji"},"content":"    public void getLastPrefix_multipleArguments_returnsPresentOptionalPrefix() {","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"        String argsString \u003d \"SomePreambleString p/ pSlash joined -tjoined -t not joined ^Qjoined\";","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":"        Optional\u003cPrefix\u003e optionalPrefix \u003d ArgumentTokenizer.getLastPrefix(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"tanboonji"},"content":"        assertOptionalPrefixPresent(optionalPrefix);","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"tanboonji":39,"-":150}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"     * Asserts that the validCommandToAlias of {@code userInput} by {@code parser} is successful.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    public static void assertValidCommandToAliasSuccess(Parser parser, String userInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        assertTrue(parser.isValidCommandToAlias(userInput));","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful.","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    public static void assertValidCommandToAliasFailure(Parser parser, String userInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        assertFalse(parser.isValidCommandToAlias(userInput));","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"tanboonji":16,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAliasCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.INVALID_ALIAS_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":" * outside of the DeleteAliasCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":" * same path through the DeleteAliasCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"public class DeleteAliasCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    private DeleteAliasCommandParser parser \u003d new DeleteAliasCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, ADD_ALIAS_STRING, new DeleteAliasCommand(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, INVALID_ALIAS_STRING,","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    public void parse_validAddCommandAlias_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        // whitespace only","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, PREAMBLE_WHITESPACE);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        // valid alias","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, ADD_ALIAS_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public void parse_invalidAddCommandAlias_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        // invalid alias","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, INVALID_ALIAS_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":53}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.DeleteCommandParser.SELECTED;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.DeleteCommandParser.SPECIAL_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalIndexes.INVALID_INDEX_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalIndexes.NEGATIVE_INDEX_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEX_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalIndexes.ZERO_INDEX_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_validArgsSingleIndex_returnsDeleteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, VALID_INDEX_STRING,","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"                DeleteCommand.buildDeleteIndexCommand(Collections.singletonList(INDEX_FIRST_PERSON)));","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_validArgsMultipleIndex_returnsDeleteCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, VALID_INDEXES_STRING, DeleteCommand.buildDeleteIndexCommand(VALID_INDEXES));","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_shown_returnsDeleteCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, SPECIAL_INDEX, DeleteCommand.buildDeleteShownCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_selected_returnsDeleteCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, SELECTED, DeleteCommand.buildDeleteSelectedCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_validArgsShown_returnsDeleteCommand() {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, SPECIAL_INDEX, DeleteCommand.buildDeleteShownCommand());","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"    public void parse_validAddCommandAlias_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        // whitespace only","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, PREAMBLE_WHITESPACE);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        // valid index","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"        // shown","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasSuccess(parser, SPECIAL_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"        // selected","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasSuccess(parser, SELECTED);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"    public void parse_invalidAddCommandAlias_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"        // negative index","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NEGATIVE_INDEX_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"        // zero index","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, ZERO_INDEX_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"        // invalid arguments being parsed","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, INVALID_INDEX_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"tanboonji":28,"-":31,"yaowei-soc":34}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_ADDRESS_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_COMPANY_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_EMAIL_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_JOB_TITLE_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_NAME_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_PHONE_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_REMARK_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMPTY_TAG_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_JOB_TITLE_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_TITLE_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.JOB_TITLE_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_TITLE_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.EditCommandParser.SELECTED;","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.EditCommandParser.SPECIAL_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalIndexes.INVALID_INDEX_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalIndexes.NEGATIVE_INDEX_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES;","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEX_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalIndexes.ZERO_INDEX_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"yaowei-soc"},"content":"        assertParseFailure(parser, NEGATIVE_INDEX_STRING + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":108,"author":{"gitId":"yaowei-soc"},"content":"        assertParseFailure(parser, ZERO_INDEX_STRING + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"yaowei-soc"},"content":"        assertParseFailure(parser, INVALID_INDEX_STRING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, \"1\" + INVALID_COMPANY_DESC, Company.MESSAGE_CONSTRAINTS); // invalid company","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"        assertParseFailure(parser, \"1\" + INVALID_JOB_TITLE_DESC,","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"                JobTitle.MESSAGE_CONSTRAINTS); // invalid job title","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"yaowei-soc"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"yaowei-soc"},"content":"                .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"yaowei-soc"},"content":"                .withCompany(VALID_COMPANY_AMY).withJobTitle(VALID_JOB_TITLE_AMY)","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"yaowei-soc"},"content":"                .withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_allFieldsSpecifiedMultipleIndex_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"yaowei-soc"},"content":"        String userInput \u003d VALID_INDEXES_STRING + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand expectedCommand \u003d EditCommand.buildEditIndexCommand(VALID_INDEXES, descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"yaowei-soc"},"content":"        expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"yaowei-soc"},"content":"        expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"tanboonji"},"content":"        // company","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"tanboonji"},"content":"        userInput \u003d targetIndex.getOneBased() + COMPANY_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withCompany(VALID_COMPANY_AMY).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"yaowei-soc"},"content":"        expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"tanboonji"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"tanboonji"},"content":"        // job title","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"tanboonji"},"content":"        userInput \u003d targetIndex.getOneBased() + JOB_TITLE_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":223,"author":{"gitId":"tanboonji"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withJobTitle(VALID_JOB_TITLE_AMY).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"yaowei-soc"},"content":"        expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"yaowei-soc"},"content":"        expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"yaowei-soc"},"content":"        expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":241,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"tanboonji"},"content":"        // remark","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"tanboonji"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"tanboonji"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"yaowei-soc"},"content":"        expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":261,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":273,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":281,"author":{"gitId":"yaowei-soc"},"content":"        expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":282,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":292,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand expectedCommand \u003d EditCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"yaowei-soc"},"content":"                .buildEditIndexCommand(Collections.singletonList(targetIndex), descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":294,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_resetTagsShown_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"yaowei-soc"},"content":"        String userInput \u003d SPECIAL_INDEX + TAG_EMPTY;","lastModifiedDate":"2021-03-31"},{"lineNumber":301,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"yaowei-soc"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand expectedCommand \u003d EditCommand.buildEditShownCommand(descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":304,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":305,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":306,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":307,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":308,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":309,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_resetTagsSelected_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":310,"author":{"gitId":"yaowei-soc"},"content":"        String userInput \u003d EditCommandParser.SELECTED + TAG_EMPTY;","lastModifiedDate":"2021-03-31"},{"lineNumber":311,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":312,"author":{"gitId":"yaowei-soc"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-31"},{"lineNumber":313,"author":{"gitId":"yaowei-soc"},"content":"        EditCommand expectedCommand \u003d EditCommand.buildEditSelectedCommand(descriptor);","lastModifiedDate":"2021-03-31"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":317,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":318,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":319,"author":{"gitId":"tanboonji"},"content":"    public void parse_validAddCommandAlias_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":320,"author":{"gitId":"tanboonji"},"content":"        // whitespace only","lastModifiedDate":"2021-03-17"},{"lineNumber":321,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, PREAMBLE_WHITESPACE);","lastModifiedDate":"2021-03-17"},{"lineNumber":322,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":323,"author":{"gitId":"tanboonji"},"content":"        // valid index","lastModifiedDate":"2021-03-17"},{"lineNumber":324,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":325,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":326,"author":{"gitId":"yaowei-soc"},"content":"        // shown","lastModifiedDate":"2021-03-31"},{"lineNumber":327,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasSuccess(parser, SPECIAL_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":328,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":329,"author":{"gitId":"yaowei-soc"},"content":"        // selected","lastModifiedDate":"2021-03-31"},{"lineNumber":330,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasSuccess(parser, SELECTED);","lastModifiedDate":"2021-03-31"},{"lineNumber":331,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":332,"author":{"gitId":"tanboonji"},"content":"        // empty name argument","lastModifiedDate":"2021-03-17"},{"lineNumber":333,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + EMPTY_NAME_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":334,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":335,"author":{"gitId":"tanboonji"},"content":"        // empty phone argument","lastModifiedDate":"2021-03-30"},{"lineNumber":336,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + EMPTY_PHONE_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":337,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":338,"author":{"gitId":"tanboonji"},"content":"        // empty email argument","lastModifiedDate":"2021-03-17"},{"lineNumber":339,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + EMPTY_EMAIL_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":340,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":341,"author":{"gitId":"tanboonji"},"content":"        // empty company argument","lastModifiedDate":"2021-03-30"},{"lineNumber":342,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + EMPTY_COMPANY_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":343,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":344,"author":{"gitId":"tanboonji"},"content":"        // empty job title argument","lastModifiedDate":"2021-03-30"},{"lineNumber":345,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + EMPTY_JOB_TITLE_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":346,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":347,"author":{"gitId":"tanboonji"},"content":"        // empty address argument","lastModifiedDate":"2021-03-17"},{"lineNumber":348,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + EMPTY_ADDRESS_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":349,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":350,"author":{"gitId":"tanboonji"},"content":"        // empty tag argument","lastModifiedDate":"2021-03-17"},{"lineNumber":351,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + EMPTY_TAG_DESC);","lastModifiedDate":"2021-03-17"},{"lineNumber":352,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":353,"author":{"gitId":"tanboonji"},"content":"        // empty remark argument","lastModifiedDate":"2021-03-30"},{"lineNumber":354,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + EMPTY_REMARK_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":355,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":356,"author":{"gitId":"tanboonji"},"content":"        // empty last name argument","lastModifiedDate":"2021-03-17"},{"lineNumber":357,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":358,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":359,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_NAME_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":360,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":361,"author":{"gitId":"tanboonji"},"content":"        // empty last phone argument","lastModifiedDate":"2021-03-30"},{"lineNumber":362,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":363,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":364,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_PHONE_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":366,"author":{"gitId":"tanboonji"},"content":"        // empty last email argument","lastModifiedDate":"2021-03-17"},{"lineNumber":367,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":368,"author":{"gitId":"tanboonji"},"content":"                + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":369,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_EMAIL_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":370,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":371,"author":{"gitId":"tanboonji"},"content":"        // empty last company argument","lastModifiedDate":"2021-03-30"},{"lineNumber":372,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":373,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":374,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_COMPANY_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":375,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":376,"author":{"gitId":"tanboonji"},"content":"        // empty last job title argument","lastModifiedDate":"2021-03-30"},{"lineNumber":377,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":378,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":379,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_JOB_TITLE_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":380,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":381,"author":{"gitId":"tanboonji"},"content":"        // empty last address argument","lastModifiedDate":"2021-03-30"},{"lineNumber":382,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":383,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":384,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_ADDRESS_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":385,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":386,"author":{"gitId":"tanboonji"},"content":"        // empty last tag argument","lastModifiedDate":"2021-03-17"},{"lineNumber":387,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":388,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":389,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_TAG_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":390,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":391,"author":{"gitId":"tanboonji"},"content":"        // empty last remark argument","lastModifiedDate":"2021-03-30"},{"lineNumber":392,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":393,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":394,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_REMARK_DESC);","lastModifiedDate":"2021-03-30"},{"lineNumber":395,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":396,"author":{"gitId":"tanboonji"},"content":"        // allow multiple names","lastModifiedDate":"2021-03-17"},{"lineNumber":397,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":398,"author":{"gitId":"tanboonji"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":399,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":400,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":401,"author":{"gitId":"tanboonji"},"content":"        // allow multiple phones","lastModifiedDate":"2021-03-17"},{"lineNumber":402,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":403,"author":{"gitId":"tanboonji"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":404,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":405,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":406,"author":{"gitId":"tanboonji"},"content":"        // allow multiple emails","lastModifiedDate":"2021-03-17"},{"lineNumber":407,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":408,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + EMAIL_DESC_BOB + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":409,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":410,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":411,"author":{"gitId":"tanboonji"},"content":"        // allow multiple addresses","lastModifiedDate":"2021-03-17"},{"lineNumber":412,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":413,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_BOB + JOB_TITLE_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":414,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":415,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":416,"author":{"gitId":"tanboonji"},"content":"        // allow multiple tags","lastModifiedDate":"2021-03-17"},{"lineNumber":417,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":418,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":419,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND + REMARK_DESC_BOB);","lastModifiedDate":"2021-03-30"},{"lineNumber":420,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":421,"author":{"gitId":"tanboonji"},"content":"        // multiple names - last name accepted - empty name argument at start of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":422,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + EMPTY_NAME_DESC + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":423,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":424,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY + NAME_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":425,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":426,"author":{"gitId":"tanboonji"},"content":"        // multiple phones - last phone accepted - empty phone argument in middle of user input discarded","lastModifiedDate":"2021-03-17"},{"lineNumber":427,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + EMPTY_PHONE_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":428,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":429,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY + PHONE_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":430,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":431,"author":{"gitId":"tanboonji"},"content":"        // multiple emails - last email accepted - empty email argument in middle of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":432,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":433,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_EMAIL_DESC + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":434,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY + EMAIL_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":435,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":436,"author":{"gitId":"tanboonji"},"content":"        // multiple companies - last email accepted - empty email argument in middle of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":437,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":438,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + EMPTY_COMPANY_DESC + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":439,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY + COMPANY_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":440,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":441,"author":{"gitId":"tanboonji"},"content":"        // multiple job titles - last email accepted - empty email argument in middle of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":442,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":443,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + EMPTY_JOB_TITLE_DESC + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":444,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY + JOB_TITLE_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":445,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":446,"author":{"gitId":"tanboonji"},"content":"        // multiple addresses - last address accepted - empty address argument in middle of user input discarded","lastModifiedDate":"2021-03-17"},{"lineNumber":447,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":448,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + EMPTY_ADDRESS_DESC + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":449,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY + ADDRESS_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":450,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":451,"author":{"gitId":"tanboonji"},"content":"        // multiple remarks - last address accepted - empty address argument in middle of user input discarded","lastModifiedDate":"2021-03-30"},{"lineNumber":452,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":453,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":454,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_REMARK_DESC + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":455,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":456,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":457,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":458,"author":{"gitId":"tanboonji"},"content":"    public void parse_invalidAddCommandAlias_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":459,"author":{"gitId":"tanboonji"},"content":"        // negative index","lastModifiedDate":"2021-03-17"},{"lineNumber":460,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, NEGATIVE_INDEX_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":461,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":462,"author":{"gitId":"tanboonji"},"content":"        // zero index","lastModifiedDate":"2021-03-17"},{"lineNumber":463,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, ZERO_INDEX_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":464,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":465,"author":{"gitId":"tanboonji"},"content":"        // invalid arguments being parsed","lastModifiedDate":"2021-03-17"},{"lineNumber":466,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, INVALID_INDEX_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":467,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":468,"author":{"gitId":"tanboonji"},"content":"        // invalid index","lastModifiedDate":"2021-03-17"},{"lineNumber":469,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, INVALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":470,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND);","lastModifiedDate":"2021-03-17"},{"lineNumber":471,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":472,"author":{"gitId":"tanboonji"},"content":"        // empty name argument at start of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":473,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + EMPTY_NAME_DESC + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":474,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":475,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":476,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":477,"author":{"gitId":"tanboonji"},"content":"        // empty phone argument in middle of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":478,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_AMY + EMPTY_PHONE_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":479,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":480,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":481,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":482,"author":{"gitId":"tanboonji"},"content":"        // empty email argument in middle of user input","lastModifiedDate":"2021-03-17"},{"lineNumber":483,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":484,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_EMAIL_DESC + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":485,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":486,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":487,"author":{"gitId":"tanboonji"},"content":"        // empty company argument in middle of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":488,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":489,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + EMPTY_COMPANY_DESC + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":490,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":491,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":492,"author":{"gitId":"tanboonji"},"content":"        // empty job title argument in middle of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":493,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":494,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + EMPTY_JOB_TITLE_DESC + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":495,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":496,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":497,"author":{"gitId":"tanboonji"},"content":"        // empty address argument in middle of user input","lastModifiedDate":"2021-03-30"},{"lineNumber":498,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":499,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + EMPTY_ADDRESS_DESC + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-30"},{"lineNumber":500,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":501,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":502,"author":{"gitId":"tanboonji"},"content":"        // empty tag argument at start of user input (tags not allowed to be empty at all)","lastModifiedDate":"2021-03-17"},{"lineNumber":503,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + EMPTY_TAG_DESC + NAME_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":504,"author":{"gitId":"tanboonji"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":505,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":506,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":507,"author":{"gitId":"tanboonji"},"content":"        // empty tag argument in middle of user input (tags not allowed to be empty at all)","lastModifiedDate":"2021-03-17"},{"lineNumber":508,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":509,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_TAG_DESC + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":510,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":511,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":512,"author":{"gitId":"tanboonji"},"content":"        // multiple tags - empty tag argument at start of user input (tags not allowed to be empty at all)","lastModifiedDate":"2021-03-17"},{"lineNumber":513,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + EMPTY_TAG_DESC + NAME_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":514,"author":{"gitId":"tanboonji"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":515,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":516,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":517,"author":{"gitId":"tanboonji"},"content":"        // multiple tags - empty tag argument in the middle of user input (tags not allowed to be empty at all)","lastModifiedDate":"2021-03-17"},{"lineNumber":518,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":519,"author":{"gitId":"tanboonji"},"content":"                + EMPTY_TAG_DESC + EMAIL_DESC_AMY + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":520,"author":{"gitId":"tanboonji"},"content":"                + TAG_DESC_FRIEND + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":521,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":522,"author":{"gitId":"tanboonji"},"content":"        // invalid name","lastModifiedDate":"2021-03-17"},{"lineNumber":523,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":524,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":525,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":526,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":527,"author":{"gitId":"tanboonji"},"content":"        // invalid phone","lastModifiedDate":"2021-03-17"},{"lineNumber":528,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":529,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":530,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":531,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":532,"author":{"gitId":"tanboonji"},"content":"        // invalid email","lastModifiedDate":"2021-03-17"},{"lineNumber":533,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":534,"author":{"gitId":"tanboonji"},"content":"                + INVALID_EMAIL_DESC + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":535,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":536,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":537,"author":{"gitId":"tanboonji"},"content":"        // invalid company","lastModifiedDate":"2021-03-30"},{"lineNumber":538,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":539,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + INVALID_COMPANY_DESC + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":540,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":541,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":542,"author":{"gitId":"tanboonji"},"content":"        // invalid job title","lastModifiedDate":"2021-03-30"},{"lineNumber":543,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":544,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_AMY + INVALID_JOB_TITLE_DESC + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":545,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":546,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":547,"author":{"gitId":"tanboonji"},"content":"        // invalid address","lastModifiedDate":"2021-03-17"},{"lineNumber":548,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":549,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":550,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":551,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":552,"author":{"gitId":"tanboonji"},"content":"        // invalid tag","lastModifiedDate":"2021-03-17"},{"lineNumber":553,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasFailure(parser, VALID_INDEX_STRING + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-17"},{"lineNumber":554,"author":{"gitId":"tanboonji"},"content":"                + EMAIL_DESC_BOB + COMPANY_DESC_AMY + JOB_TITLE_DESC_AMY + ADDRESS_DESC_BOB + INVALID_TAG_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":555,"author":{"gitId":"tanboonji"},"content":"                + REMARK_DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":556,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":557,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"tanboonji":281,"-":202,"yaowei-soc":74}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.model.DisplayFilterPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"class FilterCommandParserTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"    private final FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_emptyArgs_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(new DisplayFilterPredicate());","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, \"\", expectedFilterCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_allFields_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        String arguments \u003d PREFIX_PHONE + \" \" + PREFIX_EMAIL + \" \" + PREFIX_COMPANY + \" \" + PREFIX_JOB_TITLE + \" \"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"                + PREFIX_ADDRESS + \" \" + PREFIX_TAG + \" \" + PREFIX_REMARK;","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(arguments, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"                PREFIX_COMPANY, PREFIX_JOB_TITLE, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"                new DisplayFilterPredicate(argumentMultimap));","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, arguments, expectedFilterCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_someFields_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"        String arguments \u003d PREFIX_ADDRESS + \" \" + PREFIX_TAG + \" \" + PREFIX_REMARK;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(arguments, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"                PREFIX_COMPANY, PREFIX_JOB_TITLE, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"                new DisplayFilterPredicate(argumentMultimap));","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, arguments, expectedFilterCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    public void parse_validAddCommandAlias_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        // there are no filter commands that cannot be aliased - parser always return true","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        assertValidCommandToAliasSuccess(parser, PREAMBLE_WHITESPACE);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    public void parse_invalidAddCommandAlias_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        // there are no filter commands that cannot be aliased - parser always return true","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"tanboonji":21,"yaowei-soc":39}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.INVALID_INDEX_STRING;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.OUT_OF_RANGE_INDEX_STRING;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEX_STRING;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_COMPANY \u003d \" \";","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_JOB_TITLE \u003d \" \";","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    private static final String VALID_COMPANY \u003d \"Google\";","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    private static final String VALID_JOB_TITLE \u003d \"Software Engineer\";","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(INVALID_INDEX_STRING));","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"                MESSAGE_INVALID_INDEX, () -\u003e ParserUtil.parseIndex(OUT_OF_RANGE_INDEX_STRING));","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(VALID_INDEX_STRING));","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"yaowei-soc"},"content":"                PREAMBLE_WHITESPACE + INDEX_FIRST_PERSON.getOneBased() + PREAMBLE_WHITESPACE));","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"    public void parseIndexes_invalidInput_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"                MESSAGE_INVALID_INDEX, () -\u003e ParserUtil.parseIndexes(INVALID_INDEX_STRING));","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"    public void parseIndexes_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"        String inputString \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"                INDEX_FIRST_PERSON.getOneBased() + PREAMBLE_WHITESPACE + OUT_OF_RANGE_INDEX_STRING;","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"yaowei-soc"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"yaowei-soc"},"content":"                MESSAGE_INVALID_INDEX, () -\u003e ParserUtil.parseIndexes(inputString));","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"yaowei-soc"},"content":"    public void parseIndexes_validInput_success() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cIndex\u003e parsedIndexes \u003d ParserUtil.parseIndexes(VALID_INDEXES_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(VALID_INDEXES, parsedIndexes);","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"yaowei-soc"},"content":"    public void parseIndexes_validInputWithWhitespace_success() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"yaowei-soc"},"content":"        String inputString \u003d VALID_INDEXES.stream()","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"yaowei-soc"},"content":"                .map(Index::getOneBased).map(String::valueOf)","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"yaowei-soc"},"content":"                .collect(Collectors.joining(PREAMBLE_WHITESPACE));","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"yaowei-soc"},"content":"        List\u003cIndex\u003e parsedIndexes \u003d ParserUtil.parseIndexes(inputString);","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(VALID_INDEXES, parsedIndexes);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"tanboonji"},"content":"    public void parseCompany_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCompany((String) null));","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"tanboonji"},"content":"    public void parseCompany_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"tanboonji"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCompany(INVALID_COMPANY));","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"tanboonji"},"content":"    public void parseCompany_validValueWithoutWhitespace_returnsCompany() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"tanboonji"},"content":"        Company expectedCompany \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2021-03-30"},{"lineNumber":210,"author":{"gitId":"tanboonji"},"content":"        assertEquals(expectedCompany, ParserUtil.parseCompany(VALID_COMPANY));","lastModifiedDate":"2021-03-30"},{"lineNumber":211,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"tanboonji"},"content":"    public void parseCompany_validValueWithWhitespace_returnsTrimmedCompany() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"tanboonji"},"content":"        String companyWithWhitespace \u003d WHITESPACE + VALID_COMPANY + WHITESPACE;","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":"        Company expectedCompany \u003d new Company(VALID_COMPANY);","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"tanboonji"},"content":"        assertEquals(expectedCompany, ParserUtil.parseCompany(companyWithWhitespace));","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"tanboonji"},"content":"    public void parseJobTitle_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseJobTitle((String) null));","lastModifiedDate":"2021-03-30"},{"lineNumber":223,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":224,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"tanboonji"},"content":"    public void parseJobTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"tanboonji"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseJobTitle(INVALID_JOB_TITLE));","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":229,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"tanboonji"},"content":"    public void parseJobTitle_validValueWithoutWhitespace_returnsJobTitle() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":232,"author":{"gitId":"tanboonji"},"content":"        JobTitle expectedJobTitle \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"tanboonji"},"content":"        assertEquals(expectedJobTitle, ParserUtil.parseJobTitle(VALID_JOB_TITLE));","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"tanboonji"},"content":"    public void parseJobTitle_validValueWithWhitespace_returnsTrimmedJobTitle() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"tanboonji"},"content":"        String jobTitleWithWhitespace \u003d WHITESPACE + VALID_JOB_TITLE + WHITESPACE;","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"tanboonji"},"content":"        JobTitle expectedJobTitle \u003d new JobTitle(VALID_JOB_TITLE);","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"tanboonji"},"content":"        assertEquals(expectedJobTitle, ParserUtil.parseJobTitle(jobTitleWithWhitespace));","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":284,"author":{"gitId":"yaowei-soc"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(","lastModifiedDate":"2021-03-25"},{"lineNumber":285,"author":{"gitId":"yaowei-soc"},"content":"                Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2021-03-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"tanboonji":52,"-":192,"yaowei-soc":45}},{"path":"src/test/java/seedu/address/logic/parser/SelectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasFailure;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertValidCommandToAliasSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.INVALID_INDEX_STRING;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.NEGATIVE_INDEX_STRING;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.OUT_OF_RANGE_INDEX_STRING;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.ZERO_INDEX_STRING;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectClearCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectIndexCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectShowCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"public class SelectCommandParserTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"    private final SelectCommandParser parser \u003d new SelectCommandParser();","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_selectShown_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"        SelectCommand selectIndexCommand \u003d new SelectIndexCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + SelectIndexCommandParser.SPECIAL_INDEX,","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"                selectIndexCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_selectIndexes_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"        SelectCommand selectIndexCommand \u003d new SelectIndexCommand(VALID_INDEXES);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_INDEXES_STRING, selectIndexCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_selectShow_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"        SelectCommand selectShowCommand \u003d new SelectShowCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \" + SelectCommand.SHOW_SUB_COMMAND_WORD,","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"                selectShowCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_selectClear_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"        SelectCommand selectClearCommand \u003d new SelectClearCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \" + SelectCommand.CLEAR_SUB_COMMAND_WORD,","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"                selectClearCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_invalidSelect_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE,","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_validAddCommandAlias_returnsTrue() {","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"        // whitespace only","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasSuccess(parser, PREAMBLE_WHITESPACE);","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"        // show","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasSuccess(parser,","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"                PREAMBLE_WHITESPACE + SelectCommand.SHOW_SUB_COMMAND_WORD);","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"        // clear","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasSuccess(parser,","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"yaowei-soc"},"content":"                PREAMBLE_WHITESPACE + SelectCommand.CLEAR_SUB_COMMAND_WORD);","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"yaowei-soc"},"content":"        // shown","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasSuccess(parser,","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"                PREAMBLE_WHITESPACE + SelectIndexCommandParser.SPECIAL_INDEX);","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"        // indexes","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasSuccess(parser,","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"                PREAMBLE_WHITESPACE + VALID_INDEXES_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_validAddCommandAlias_returnsFalse() {","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"        // invalid sub command","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasFailure(parser, INVALID_INDEX_STRING);","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"yaowei-soc"},"content":"        // invalid index string","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasFailure(parser, NEGATIVE_INDEX_STRING);","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"yaowei-soc"},"content":"        // out of range index","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasFailure(parser, OUT_OF_RANGE_INDEX_STRING);","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"yaowei-soc"},"content":"        // zero index string","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"yaowei-soc"},"content":"        assertValidCommandToAliasFailure(parser, ZERO_INDEX_STRING);","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":96}},{"path":"src/test/java/seedu/address/logic/parser/SelectIndexCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.INVALID_INDEX_STRING;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.testutil.TypicalIndexes.VALID_INDEXES_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.commands.SelectIndexCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"public class SelectIndexCommandParserTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"    private final SelectIndexCommandParser parser \u003d new SelectIndexCommandParser();","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_selectShown_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"        SelectCommand selectIndexCommand \u003d new SelectIndexCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, SelectIndexCommandParser.SPECIAL_INDEX,","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"                selectIndexCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_validIndexes_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"        SelectCommand selectIndexCommand \u003d new SelectIndexCommand(VALID_INDEXES);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"        assertParseSuccess(parser, VALID_INDEXES_STRING, selectIndexCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_invalidIndexes_failure() {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"        assertParseFailure(parser, INVALID_INDEX_STRING, SelectCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_emptyArgs_failure() {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"        assertParseFailure(parser, \"\", SelectCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"    public void parse_invalidSubCommand_failure() {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"        assertParseFailure(parser, \"invalid subcommand\", SelectCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"yaowei-soc":45}},{"path":"src/test/java/seedu/address/model/DisplayFilterPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yaowei-soc"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"yaowei-soc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"class DisplayFilterPredicateTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    private ArgumentMultimap addressMultimap;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"yaowei-soc"},"content":"    private ArgumentMultimap fullMultimap;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"yaowei-soc"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"yaowei-soc"},"content":"    public void initializeArguments() {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"yaowei-soc"},"content":"        addressMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"yaowei-soc"},"content":"        addressMultimap.put(PREFIX_ADDRESS, \"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"yaowei-soc"},"content":"        fullMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"yaowei-soc"},"content":"        fullMultimap.put(PREFIX_NAME, \"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"yaowei-soc"},"content":"        fullMultimap.put(PREFIX_ADDRESS, \"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"yaowei-soc"},"content":"        fullMultimap.put(PREFIX_EMAIL, \"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        fullMultimap.put(PREFIX_COMPANY, \"\");","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        fullMultimap.put(PREFIX_JOB_TITLE, \"\");","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"yaowei-soc"},"content":"        fullMultimap.put(PREFIX_TAG, \"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"yaowei-soc"},"content":"        fullMultimap.put(PREFIX_PHONE, \"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"yaowei-soc"},"content":"        fullMultimap.put(PREFIX_REMARK, \"\");","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"yaowei-soc"},"content":"    public void test_predicateEqualsCheck_allEquals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate emptyArgs \u003d new DisplayFilterPredicate();","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate defaultArgs \u003d new DisplayFilterPredicate(new ArgumentMultimap());","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate addressArgs \u003d new DisplayFilterPredicate(addressMultimap);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate dupeAddressArgs \u003d new DisplayFilterPredicate(addressMultimap);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate fullArgs \u003d new DisplayFilterPredicate(fullMultimap);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(emptyArgs, defaultArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(emptyArgs, fullArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(emptyArgs, defaultArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(addressArgs, addressArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"yaowei-soc"},"content":"        assertEquals(addressArgs, dupeAddressArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"yaowei-soc"},"content":"    public void test_predicateEqualsCheck_allNotEquals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate emptyArgs \u003d new DisplayFilterPredicate();","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate addressArgs \u003d new DisplayFilterPredicate(addressMultimap);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate fullArgs \u003d new DisplayFilterPredicate(fullMultimap);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(emptyArgs, addressArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(addressArgs, fullArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(1, emptyArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(1, addressArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(1, fullArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(null, emptyArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(null, addressArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"yaowei-soc"},"content":"        assertNotEquals(null, fullArgs);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"yaowei-soc"},"content":"    public void test_defaultArgs_allTrue() {","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate displayFilterPredicate \u003d new DisplayFilterPredicate();","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_ADDRESS));","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_NAME));","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_EMAIL));","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_TAG));","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_PHONE));","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_REMARK));","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"yaowei-soc"},"content":"    public void test_emptyArgMap_allTrue() {","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate displayFilterPredicate \u003d new DisplayFilterPredicate(","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"yaowei-soc"},"content":"                new ArgumentMultimap());","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_ADDRESS));","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_NAME));","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_EMAIL));","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_TAG));","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_PHONE));","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_REMARK));","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"yaowei-soc"},"content":"    public void test_argMapNameAlwaysTrue_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"yaowei-soc"},"content":"        ArgumentMultimap argumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"yaowei-soc"},"content":"        argumentMultimap.put(PREFIX_ADDRESS, \"\");","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate displayFilterPredicate \u003d new DisplayFilterPredicate(","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"yaowei-soc"},"content":"                argumentMultimap);","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_NAME));","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_ADDRESS));","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(displayFilterPredicate.test(PREFIX_EMAIL));","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(displayFilterPredicate.test(PREFIX_TAG));","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(displayFilterPredicate.test(PREFIX_PHONE));","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(displayFilterPredicate.test(PREFIX_REMARK));","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"yaowei-soc"},"content":"    public void test_argMapNameTrueOthersFalse_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"yaowei-soc"},"content":"        ArgumentMultimap argumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"yaowei-soc"},"content":"        argumentMultimap.put(PREFIX_NAME, \"\");","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate displayFilterPredicate \u003d new DisplayFilterPredicate(","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"yaowei-soc"},"content":"                argumentMultimap);","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_NAME));","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(displayFilterPredicate.test(PREFIX_ADDRESS));","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(displayFilterPredicate.test(PREFIX_EMAIL));","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(displayFilterPredicate.test(PREFIX_TAG));","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(displayFilterPredicate.test(PREFIX_PHONE));","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(displayFilterPredicate.test(PREFIX_REMARK));","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"yaowei-soc"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"yaowei-soc"},"content":"    public void test_argMapFilledAllTrue_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"yaowei-soc"},"content":"        DisplayFilterPredicate displayFilterPredicate \u003d new DisplayFilterPredicate(fullMultimap);","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_ADDRESS));","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_NAME));","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_EMAIL));","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_TAG));","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_PHONE));","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"yaowei-soc"},"content":"        assertTrue(displayFilterPredicate.test(PREFIX_REMARK));","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"yaowei-soc"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"yaowei-soc"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"tanboonji":4,"yaowei-soc":134}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_COMMAND_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.DELETE_COMMAND_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.EDIT_COMMAND_ALIAS;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"import seedu.address.testutil.UniqueAliasMapBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        assertEquals(new UniqueAliasMap(), new UniqueAliasMap(modelManager.getAliases()));","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"    public void hasAlias_nullAlias_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasAlias(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCommandAlias(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"    public void hasAlias_aliasNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        assertFalse(modelManager.hasAlias(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"        assertFalse(modelManager.hasCommandAlias(ADD_COMMAND_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"    public void hasAlias_aliasInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"        modelManager.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"        assertTrue(modelManager.hasAlias(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"        assertTrue(modelManager.hasCommandAlias(ADD_COMMAND_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"    public void getCommandAlias_aliasInAddressBook_returnsCommandAlias() {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"        modelManager.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"        assertEquals(modelManager.getCommandAlias(ADD_ALIAS), ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"    public void getCommandAlias_aliasNotInAddressBook_returnsNull() {","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"        assertEquals(modelManager.getCommandAlias(ADD_ALIAS), null);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"    public void getObservableStringAliases_withAliases_returnsSameAliases() {","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"        modelManager.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":"        modelManager.addAlias(DELETE_COMMAND_ALIAS);","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"        modelManager.addAlias(EDIT_COMMAND_ALIAS);","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"tanboonji"},"content":"        assertEquals(modelManager.getObservableStringAliases().get(0), ADD_COMMAND_ALIAS.toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"tanboonji"},"content":"        assertEquals(modelManager.getObservableStringAliases().get(1), DELETE_COMMAND_ALIAS.toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"tanboonji"},"content":"        assertEquals(modelManager.getObservableStringAliases().get(2), EDIT_COMMAND_ALIAS.toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap aliases \u003d new UniqueAliasMapBuilder().withCommandAlias(ADD_COMMAND_ALIAS)","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"                .withCommandAlias(DELETE_COMMAND_ALIAS).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap differentAliases \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, aliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, aliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"tanboonji"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, aliases)));","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":171,"author":{"gitId":"tanboonji"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, aliases)));","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"        // different aliases -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, differentAliases)));","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":176,"author":{"gitId":"yaowei-soc"},"content":"        // different selectedPersonList -\u003e return false","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"yaowei-soc"},"content":"        modelManagerCopy.updateSelectedPersonList(modelManagerCopy.getFilteredPersonList());","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"yaowei-soc"},"content":"        assertFalse(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, aliases)));","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tanboonji":57,"-":128,"yaowei-soc":3}},{"path":"src/test/java/seedu/address/model/UniqueAliasMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_COMMAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_COMMAND_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.DELETE_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.INVALID_ALIAS_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.exceptions.AliasNotFoundException;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.exceptions.DuplicateAliasException;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"public class UniqueAliasMapTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    private final UniqueAliasMap aliases \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        assertEquals(Collections.emptyMap(), aliases.getAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e aliases.resetData(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    public void resetData_withValidReadOnlyUniqueAliasMap_replacesData() {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap newData \u003d getTypicalAliases();","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        aliases.resetData(newData);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        assertEquals(newData, aliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    public void resetData_withDuplicateAliases_throwsDuplicateAliasException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        // Two aliases with the same identity fields","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"        Map\u003cAlias, CommandAlias\u003e newAliases \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        newAliases.put(ADD_ALIAS, ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        newAliases.put(DELETE_ALIAS, ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMapStub newData \u003d new UniqueAliasMapStub(newAliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        assertThrows(DuplicateAliasException.class, () -\u003e aliases.resetData(newData));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    public void hasAlias_nullAlias_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e aliases.hasAlias(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"    public void hasCommandAlias_nullCommandAlias_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e aliases.hasCommandAlias(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"    public void hasAlias_aliasNotInAliases_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"        assertFalse(aliases.hasAlias(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"    public void hasCommandAlias_commandAliasNotInAliases_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        assertFalse(aliases.hasCommandAlias(ADD_COMMAND_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"    public void hasAlias_aliasInAliases_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"        assertTrue(aliases.hasAlias(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"    public void hasCommandAlias_commandAliasInAliases_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"        assertTrue(aliases.hasCommandAlias(ADD_COMMAND_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"    public void getAliases_modifyAlias_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e aliases.getAliases().remove(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e aliases.getAliases().put(ADD_ALIAS, ADD_COMMAND_ALIAS));","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"    public void addAlias_nullAlias_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e aliases.addAlias(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"    public void addAlias_duplicatePerson_throwsDuplicateAliasException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"        assertThrows(DuplicateAliasException.class, () -\u003e aliases.addAlias(ADD_COMMAND_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"    public void removeAlias_nullAlias_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e aliases.removeAlias(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"    public void removeAlias_aliasDoesNotExist_throwsAliasNotFoundException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"        assertThrows(AliasNotFoundException.class, () -\u003e aliases.removeAlias(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"    public void removeAlias_existingAlias_removesAlias() {","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"        aliases.removeAlias(ADD_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap expectedAliases \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"        assertEquals(expectedAliases, aliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"tanboonji"},"content":"    public void getCommandAlias_existingAlias_returnsAlias() {","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"tanboonji"},"content":"        assertEquals(ADD_COMMAND_ALIAS, aliases.getCommandAlias(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"tanboonji"},"content":"    public void getCommandAlias_aliasDoesNotExist_returnsNull() {","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"tanboonji"},"content":"        assertNull(aliases.getCommandAlias(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"tanboonji"},"content":"    public void getCommand_existingAlias_returnsAlias() {","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"tanboonji"},"content":"        assertEquals(ADD_COMMAND, aliases.getCommand(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"tanboonji"},"content":"    public void getCommand_aliasDoesNotExist_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"tanboonji"},"content":"        assertNull(aliases.getCommand(ADD_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"tanboonji"},"content":"    public void parseAliasToCommand_existingAliasDoesNotExist_returnsCommandAliasInString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"tanboonji"},"content":"        assertEquals(AddCommand.COMMAND_WORD, aliases.parseAliasToCommand(ADD_ALIAS_STRING));","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"tanboonji"},"content":"    public void parseAliasToCommand_aliasDoesNotExist_returnsUserInput() {","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"tanboonji"},"content":"        assertEquals(INVALID_ALIAS_STRING, aliases.parseAliasToCommand(INVALID_ALIAS_STRING));","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"tanboonji"},"content":"    public void getNumOfAlias_noAlias_returnsZero() {","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap emptyMap \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"tanboonji"},"content":"        assertEquals(emptyMap.getAliases().size(), aliases.getNumOfAlias());","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"tanboonji"},"content":"    public void getNumOfAlias_oneAlias_returnsOne() {","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap testMap \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"tanboonji"},"content":"        testMap.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"tanboonji"},"content":"        assertEquals(testMap.getAliases().size(), aliases.getNumOfAlias());","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"tanboonji"},"content":"    public void getObservableStringAliases_modifyStringAlias_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"tanboonji"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e aliases.getObservableStringAliases().remove(0));","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"tanboonji"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e aliases.getObservableStringAliases().add(\"error\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"tanboonji"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"tanboonji"},"content":"        // same empty aliases","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"tanboonji"},"content":"        assertEquals(new UniqueAliasMap(), aliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"tanboonji"},"content":"        // same aliases","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"tanboonji"},"content":"        aliases.resetData(getTypicalAliases());","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"tanboonji"},"content":"        assertEquals(getTypicalAliases(), aliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"tanboonji"},"content":"        // different aliases","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"tanboonji"},"content":"        assertNotEquals(new UniqueAliasMap(), aliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"tanboonji"},"content":"     * A stub ReadOnlyUniqueAliasMap whose aliases can violate interface constraints.","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"tanboonji"},"content":"    private static class UniqueAliasMapStub implements ReadOnlyUniqueAliasMap {","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"tanboonji"},"content":"        private final ObservableMap\u003cAlias, CommandAlias\u003e internalList \u003d FXCollections.observableMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-21"},{"lineNumber":204,"author":{"gitId":"tanboonji"},"content":"        private final ObservableMap\u003cAlias, CommandAlias\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":205,"author":{"gitId":"tanboonji"},"content":"                FXCollections.unmodifiableObservableMap(internalList);","lastModifiedDate":"2021-03-21"},{"lineNumber":206,"author":{"gitId":"tanboonji"},"content":"        private final ObservableList\u003cString\u003e internalStringList \u003d FXCollections.emptyObservableList();","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"tanboonji"},"content":"        private final ObservableList\u003cString\u003e internalUnmodifiableStringList \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"tanboonji"},"content":"                FXCollections.unmodifiableObservableList(internalStringList);","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMapStub(Map\u003cAlias, CommandAlias\u003e aliases) {","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"tanboonji"},"content":"            internalList.putAll(aliases);","lastModifiedDate":"2021-03-21"},{"lineNumber":212,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"tanboonji"},"content":"        public ObservableMap\u003cAlias, CommandAlias\u003e getAliases() {","lastModifiedDate":"2021-03-21"},{"lineNumber":216,"author":{"gitId":"tanboonji"},"content":"            return internalUnmodifiableList;","lastModifiedDate":"2021-03-21"},{"lineNumber":217,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"tanboonji"},"content":"        public String parseAliasToCommand(String userInput) {","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":224,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":225,"author":{"gitId":"tanboonji"},"content":"        public int getNumOfAlias() {","lastModifiedDate":"2021-03-26"},{"lineNumber":226,"author":{"gitId":"tanboonji"},"content":"            return internalList.size();","lastModifiedDate":"2021-03-26"},{"lineNumber":227,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":228,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":229,"author":{"gitId":"tanboonji"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":230,"author":{"gitId":"tanboonji"},"content":"        public ObservableList\u003cString\u003e getObservableStringAliases() {","lastModifiedDate":"2021-03-26"},{"lineNumber":231,"author":{"gitId":"tanboonji"},"content":"            return internalUnmodifiableStringList;","lastModifiedDate":"2021-03-26"},{"lineNumber":232,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":233,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":235}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public void setAliasesFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAliasesFilePath(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"tanboonji":6,"-":21}},{"path":"src/test/java/seedu/address/model/alias/AliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.INVALID_ALIAS_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"public class AliasTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Alias(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    public void constructor_invalidAlias_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        // empty alias","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Alias(\"\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        // alias with whitespace in between","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Alias(INVALID_ALIAS_STRING));","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public void isValidAlias() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        // null name","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e Alias.isValidAlias(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        // alias with alphabets","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Alias.isValidAlias(\"abc\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        // alias with numbers","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Alias.isValidAlias(\"123\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        // alias with symbols","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Alias.isValidAlias(\"!@#\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        // alias with alphabets and numbers","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Alias.isValidAlias(\"abc123\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        // alias with alphabet and symbols","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Alias.isValidAlias(\"abc!@#\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"        // alias with numbers and symbols","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Alias.isValidAlias(\"123!@#\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        // alias with alphabets, numbers and symbols","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Alias.isValidAlias(\"abc123!@#\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    public void isSameAlias() {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"        assertEquals(ADD_ALIAS, new Alias(ADD_ALIAS_STRING));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":59}},{"path":"src/test/java/seedu/address/model/alias/CommandAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_COMMAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_COMMAND_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.DELETE_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.DELETE_COMMAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"public class CommandAliasTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandAlias(null, null));","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandAlias(ADD_ALIAS, null));","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandAlias(null, ADD_COMMAND));","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    public void isSameCommandAlias_sameCommandAlias_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        // same alias, same command -\u003e true","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        assertTrue(ADD_COMMAND_ALIAS.isSameCommandAlias(new CommandAlias(ADD_ALIAS, ADD_COMMAND)));","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        // same alias, different command -\u003e true","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        assertTrue(ADD_COMMAND_ALIAS.isSameCommandAlias(new CommandAlias(ADD_ALIAS, DELETE_COMMAND)));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public void isSameCommandAlias_differentCommandAlias_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        // different alias, different command -\u003e true","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        assertFalse(ADD_COMMAND_ALIAS.isSameCommandAlias(new CommandAlias(DELETE_ALIAS, DELETE_COMMAND)));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        // different alias, same command -\u003e true","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        assertFalse(ADD_COMMAND_ALIAS.isSameCommandAlias(new CommandAlias(DELETE_ALIAS, ADD_COMMAND)));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    public void isSameCommandAlias() {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        assertEquals(ADD_COMMAND_ALIAS, new CommandAlias(ADD_ALIAS, ADD_COMMAND));","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":46}},{"path":"src/test/java/seedu/address/model/alias/CommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_COMMAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.INVALID_COMMAND_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":" * More specific command testing with arguments and sub commands for {@code isValidCommand} is done through the","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":" * {@code AddressBookParserTest} and individual command parser tests. This is because {@code isValidCommand} calls","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":" * {@code isValidCommandToAlias} in the {@code AddressBookParser}.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"public class CommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Command(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public void constructor_invalidCommand_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        // empty command","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Command(\"\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        // invalid command","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Command(INVALID_COMMAND_STRING));","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    public void isValidCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        // null name","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e Command.isValidCommand(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        // valid clear command","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Command.isValidCommand(ClearCommand.COMMAND_WORD));","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        // valid exit command","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Command.isValidCommand(ExitCommand.COMMAND_WORD));","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"        // valid list command","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Command.isValidCommand(ListCommand.COMMAND_WORD));","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        // valid help command","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Command.isValidCommand(HelpCommand.COMMAND_WORD));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"    public void isSameCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        assertEquals(ADD_COMMAND, new Command(AddCommand.COMMAND_WORD));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":60}},{"path":"src/test/java/seedu/address/model/person/CompanyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"public class CompanyTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Company(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    public void constructor_invalidCompany_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        String invalidCompany \u003d \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Company(invalidCompany));","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    public void isValidCompany() {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        // null company","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e Company.isValidCompany(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        // invalid companies","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        assertFalse(Company.isValidCompany(\"\")); // empty string","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        assertFalse(Company.isValidCompany(\" \")); // spaces only","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        // valid companies","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Company.isValidCompany(\"Google\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Company.isValidCompany(\"C\")); // one character","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        assertTrue(Company.isValidCompany(\"Edward Hopper House Museum \u0026 Study Center\")); // long company name","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"tanboonji":36}},{"path":"src/test/java/seedu/address/model/person/JobTitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"public class JobTitleTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e new JobTitle(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    public void constructor_invalidJobTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"        String invalidJobTitle \u003d \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new JobTitle(invalidJobTitle));","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    public void isValidJobTitle() {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"        // null job title","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e JobTitle.isValidJobTitle(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        // invalid job titles","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        assertFalse(JobTitle.isValidJobTitle(\"\")); // empty string","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        assertFalse(JobTitle.isValidJobTitle(\" \")); // spaces only","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        // valid job titles","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        assertTrue(JobTitle.isValidJobTitle(\"Software Engineer\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        assertTrue(JobTitle.isValidJobTitle(\"S\")); // one character","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        assertTrue(JobTitle.isValidJobTitle(\"Advanced Certification Administrator: ACA\")); // long job title","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"tanboonji":36}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"DarkDestry-t"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"DarkDestry-t"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"DarkDestry-t"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"DarkDestry-t"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"DarkDestry-t"},"content":"        assertEquals(firstPredicateCopy, firstPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"DarkDestry-t"},"content":"        assertNotEquals(firstPredicate, 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"DarkDestry-t"},"content":"        assertNotEquals(firstPredicate, null);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"DarkDestry-t"},"content":"        assertNotEquals(secondPredicate, firstPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"DarkDestry-t"},"content":"        // Similar name keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"DarkDestry-t"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Shaun\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"DarkDestry-t"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Shawn Koh\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"DarkDestry-t"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Shawny Lim \").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"DarkDestry-t"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Carol\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"DarkDestry-t"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Gordon\").withPhone(\"12345\")","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"DarkDestry-t"},"content":"    @Test void test_nameComparatorSort_compare() {","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"DarkDestry-t"},"content":"        Comparator\u003cPerson\u003e comparator \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Shaun\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"DarkDestry-t"},"content":"        // Sort by similarity","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"DarkDestry-t"},"content":"        Person p1 \u003d new PersonBuilder().withName(\"Shawn Koh\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"DarkDestry-t"},"content":"        Person p2 \u003d new PersonBuilder().withName(\"Shaun Lim\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"DarkDestry-t"},"content":"        assertTrue(comparator.compare(p1, p2) \u003e 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"DarkDestry-t"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"DarkDestry-t"},"content":"        // Sort lexicographically","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"DarkDestry-t"},"content":"        Person p3 \u003d new PersonBuilder().withName(\"Shawny Lim\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"DarkDestry-t"},"content":"        Person p4 \u003d new PersonBuilder().withName(\"Shawn Koh\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"DarkDestry-t"},"content":"        assertTrue(comparator.compare(p3, p4) \u003e 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"DarkDestry-t"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":68,"DarkDestry-t":29}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedCommandAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.storage.JsonAdaptedCommandAlias.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_COMMAND_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.INVALID_ALIAS_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.INVALID_COMMAND_STRING;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"public class JsonAdaptedCommandAliasTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_validCommandAliasDetails_returnsCommandAlias() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedCommandAlias commandAlias \u003d new JsonAdaptedCommandAlias(ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        assertEquals(ADD_COMMAND_ALIAS, commandAlias.toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_invalidAlias_throwsIllegalValueException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedCommandAlias commandAlias \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"                new JsonAdaptedCommandAlias(INVALID_ALIAS_STRING, AddCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d Alias.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, commandAlias::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_nullAlias_throwsIllegalValueException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedCommandAlias commandAlias \u003d new JsonAdaptedCommandAlias(null, AddCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Alias.class.getSimpleName());","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, commandAlias::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_invalidCommand_throwsIllegalValueException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedCommandAlias commandAlias \u003d new JsonAdaptedCommandAlias(ADD_ALIAS_STRING, INVALID_COMMAND_STRING);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d Command.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, commandAlias::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_nullCommand_throwsIllegalValueException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedCommandAlias commandAlias \u003d new JsonAdaptedCommandAlias(ADD_ALIAS_STRING, null);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Command.class.getSimpleName());","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, commandAlias::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":55}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_COMPANY \u003d \" \";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"    private static final String INVALID_JOB_TITLE \u003d \" \";","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    private static final String VALID_COMPANY \u003d BENSON.getCompany().toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    private static final String VALID_JOB_TITLE \u003d BENSON.getJobTitle().toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_invalidCompany_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d Company.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_nullCompany_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Company.class.getSimpleName());","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_invalidJobTitle_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"                INVALID_JOB_TITLE, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d JobTitle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_nullJobTitle_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"                null, VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, JobTitle.class.getSimpleName());","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, INVALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, null, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"tanboonji"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_COMPANY,","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"tanboonji"},"content":"                VALID_JOB_TITLE, VALID_ADDRESS, invalidTags, VALID_REMARK);","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanboonji":57,"oeiyiping":1,"-":95}},{"path":"src/test/java/seedu/address/storage/JsonAliasesStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ADD_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ALIAS_ADD_COMMAND_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.ALIAS_DELETE_COMMAND_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"public class JsonAliasesStorageTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAliasesStorageTest\");","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    @TempDir","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public void readAliases_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAliases(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    private java.util.Optional\u003cReadOnlyUniqueAliasMap\u003e readAliases(String filePath) throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        return new JsonAliasesStorage(Paths.get(filePath)).readAliases(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"                : null;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"        assertFalse(readAliases(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAliases(\"notJsonFormatAliases.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    public void readAliases_invalidAliasAliases_throwDataConversionException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAliases(\"invalidAliasAliases.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"    public void readAliases_invalidAndValidAliasAliases_throwDataConversionException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAliases(\"invalidAndValidAliasAliases.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"    public void readAndSaveAliases_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAliases.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap original \u003d getTypicalAliases();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"        JsonAliasesStorage jsonAliasesStorage \u003d new JsonAliasesStorage(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        jsonAliasesStorage.saveAliases(original, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"        ReadOnlyUniqueAliasMap readBack \u003d jsonAliasesStorage.readAliases(filePath).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        assertEquals(original, new UniqueAliasMap(readBack));","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        original.addAlias(ALIAS_ADD_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"        original.removeAlias(ADD_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"        jsonAliasesStorage.saveAliases(original, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"        readBack \u003d jsonAliasesStorage.readAliases(filePath).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"        assertEquals(original, new UniqueAliasMap(readBack));","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        original.addAlias(ALIAS_DELETE_COMMAND_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"        jsonAliasesStorage.saveAliases(original); // file path not specified","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"        readBack \u003d jsonAliasesStorage.readAliases().get(); // file path not specified","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"        assertEquals(original, new UniqueAliasMap(readBack));","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"    public void saveAliases_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAliases(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"     * Saves {@code aliases} at the specified {@code filePath}.","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"tanboonji"},"content":"    private void saveAliases(ReadOnlyUniqueAliasMap aliases, String filePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"tanboonji"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"            new JsonAliasesStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"                    .saveAliases(aliases, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"    public void saveAliases_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAliases(new UniqueAliasMap(), null));","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":109}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAliasesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import seedu.address.testutil.TypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"public class JsonSerializableAliasesTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAliasesTest\");","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    private static final Path TYPICAL_ALIASES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalAliasesAliases.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"    private static final Path INVALID_ALIAS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidAliasAliases.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    private static final Path DUPLICATE_ALIAS_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateAliasAliases.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_typicalAliasesFile_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"        JsonSerializableAliases dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_ALIASES_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"                JsonSerializableAliases.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap aliasesFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap typicalAliasesAliases \u003d TypicalAliases.getTypicalAliases();","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"        assertEquals(aliasesFromFile, typicalAliasesAliases);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_invalidAliasFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"        JsonSerializableAliases dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ALIAS_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"                JsonSerializableAliases.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    public void toModelType_duplicateAliases_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        JsonSerializableAliases dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ALIAS_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"                JsonSerializableAliases.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAliases.MESSAGE_DUPLICATE_ALIAS,","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":47}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.testutil.TypicalAliases.getTypicalAliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.ReadOnlyUniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        JsonAliasesStorage aliasesStorage \u003d new JsonAliasesStorage(getTempFilePath(\"al\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, aliasesStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"    public void aliasesReadSave() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        /*","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"         * {@link JsonAliasesStorage} class.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"         * More extensive testing of Aliases saving/reading is done in {@link JsonAliasesStorageTest} class.","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"         */","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap original \u003d getTypicalAliases();","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"        storageManager.saveAliases(original);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"        ReadOnlyUniqueAliasMap retrieved \u003d storageManager.readAliases().get();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"        assertEquals(original, new UniqueAliasMap(retrieved));","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"    public void getUserPrefsFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"        assertNotNull(storageManager.getUserPrefsFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"tanboonji"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"tanboonji"},"content":"    public void getAliasesFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"tanboonji"},"content":"        assertNotNull(storageManager.getAliasesFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanboonji":28,"-":67}},{"path":"src/test/java/seedu/address/testutil/CommandAliasBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * A utility class to help with building CommandAlias objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"public class CommandAliasBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"    public static final String DEFAULT_ALIAS \u003d \"aa\";","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    public static final String DEFAULT_COMMAND \u003d \"alias add\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    private Alias alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"    private Command command;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"     * Creates a {@code CommandAliasBuilder} with the default values.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    public CommandAliasBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"        alias \u003d new Alias(DEFAULT_ALIAS);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        command \u003d new Command(DEFAULT_COMMAND);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"     * Initializes the CommandAliasBuilder with the data of {@code commandAliasToCopy}.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    public CommandAliasBuilder(CommandAlias commandAliasToCopy) {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"        alias \u003d commandAliasToCopy.getAlias();","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"        command \u003d commandAliasToCopy.getCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"     * Sets the {@code Alias} of the {@code CommandAlias} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"    public CommandAliasBuilder withAlias(String alias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"        this.alias \u003d new Alias(alias);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"     * Sets the {@code Command} of the {@code CommandAlias} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    public CommandAliasBuilder withCommand(String command) {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        this.command \u003d new Command(command);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"    public CommandAlias build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"        return new CommandAlias(alias, command);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":54}},{"path":"src/test/java/seedu/address/testutil/CommandAliasUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" * A utility class for CommandAlias.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"public class CommandAliasUtil {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"     * Returns an add alias command string for adding the {@code commandAlias}.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"    public static String getAddAliasCommand(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"        return AddAliasCommand.COMMAND_WORD + \" \" + AddAliasCommand.ADD_SUB_COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"                + getCommandAliasDetails(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"     * Returns the part of command string for the given {@code commandAlias}\u0027s details.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public static String getCommandAliasDetails(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"        return commandAlias.getAlias() + \" \" + commandAlias.getCommand();","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":26}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"        descriptor.setCompany(person.getCompany());","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"        descriptor.setJobTitle(person.getJobTitle());","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"oeiyiping"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"oeiyiping"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"oeiyiping"},"content":"     * Sets the {@code Remark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"oeiyiping"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"oeiyiping"},"content":"    public EditPersonDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"oeiyiping"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"oeiyiping"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"oeiyiping"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"tanboonji"},"content":"     * Sets the {@code Company} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"tanboonji"},"content":"    public EditPersonDescriptorBuilder withCompany(String company) {","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"tanboonji"},"content":"        descriptor.setCompany(new Company(company));","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"tanboonji"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"tanboonji"},"content":"     * Sets the {@code JobTitle} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"tanboonji"},"content":"    public EditPersonDescriptorBuilder withJobTitle(String jobTitle) {","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"tanboonji"},"content":"        descriptor.setJobTitle(new JobTitle(jobTitle));","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"tanboonji"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tanboonji":20,"oeiyiping":10,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.Company;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.person.JobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"oeiyiping"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    public static final String DEFAULT_COMPANY \u003d \"Singtel\";","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public static final String DEFAULT_JOB_TITLE \u003d \"Intern\";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"oeiyiping"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    private Company company;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    private JobTitle jobTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"oeiyiping"},"content":"    private Remark remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"        company \u003d new Company(DEFAULT_COMPANY);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"        jobTitle \u003d new JobTitle(DEFAULT_JOB_TITLE);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"oeiyiping"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"        company \u003d personToCopy.getCompany();","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"        jobTitle \u003d personToCopy.getJobTitle();","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"oeiyiping"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"oeiyiping"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"oeiyiping"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"oeiyiping"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"oeiyiping"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"oeiyiping"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"oeiyiping"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"oeiyiping"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"tanboonji"},"content":"     * Sets the {@code Company} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"tanboonji"},"content":"    public PersonBuilder withCompany(String company) {","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"tanboonji"},"content":"        this.company \u003d new Company(company);","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"tanboonji"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"tanboonji"},"content":"     * Sets the {@code JobTitle} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"tanboonji"},"content":"    public PersonBuilder withJobTitle(String jobTitle) {","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"tanboonji"},"content":"        this.jobTitle \u003d new JobTitle(jobTitle);","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"tanboonji"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":132,"author":{"gitId":"tanboonji"},"content":"        return new Person(name, phone, email, company, jobTitle, address, remark, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tanboonji":27,"oeiyiping":13,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_TITLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"        sb.append(PREFIX_COMPANY + person.getCompany().value + \" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"        sb.append(PREFIX_JOB_TITLE + person.getJobTitle().value + \" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"oeiyiping"},"content":"        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"oeiyiping"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"        descriptor.getCompany().ifPresent(company -\u003e sb.append(PREFIX_COMPANY).append(company.value).append(\" \"));","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"        descriptor.getJobTitle().ifPresent(jobTitle -\u003e sb.append(PREFIX_JOB_TITLE).append(jobTitle.value).append(\" \"));","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"oeiyiping"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tanboonji":6,"oeiyiping":4,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalAliases.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ListAliasCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Alias;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":" * A utility class containing a list of {@code CommandAlias} and {@code Alias} objects to be used in tests.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"public class TypicalAliases {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias ADD_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"a\")","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"            .withCommand(AddCommand.COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias LIST_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"l\")","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"            .withCommand(ListCommand.COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias DELETE_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"d\")","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"            .withCommand(DeleteCommand.COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias EDIT_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"ed\")","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"            .withCommand(EditCommand.COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias EXIT_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"ex\")","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"tanboonji"},"content":"            .withCommand(ExitCommand.COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias HELP_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"h\")","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            .withCommand(HelpCommand.COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias FIND_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"f\")","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"            .withCommand(FindCommand.COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias CLEAR_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"c\")","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"tanboonji"},"content":"            .withCommand(ClearCommand.COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"    public static final Alias ADD_ALIAS \u003d new Alias(\"a\");","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"tanboonji"},"content":"    public static final Command ADD_COMMAND \u003d new Command(AddCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"    public static final Alias DELETE_ALIAS \u003d new Alias(\"d\");","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"    public static final Command DELETE_COMMAND \u003d new Command(DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"tanboonji"},"content":"    public static final Alias INVALID_ALIAS \u003d new Alias(\"zzz\");","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"    public static final String ADD_ALIAS_STRING \u003d \"a\";","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"tanboonji"},"content":"    public static final String DELETE_ALIAS_STRING \u003d \"d\";","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"    public static final String INVALID_ALIAS_STRING \u003d \"z z\";","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"    public static final String INVALID_COMMAND_STRING \u003d \"zzz\";","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias ALIAS_ADD_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"aa\")","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"tanboonji"},"content":"            .withCommand(AddAliasCommand.COMMAND_WORD + \" \" + AddAliasCommand.ADD_SUB_COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias ALIAS_DELETE_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"ad\")","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"            .withCommand(DeleteAliasCommand.COMMAND_WORD + \" \" + DeleteAliasCommand.DELETE_SUB_COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"tanboonji"},"content":"    public static final CommandAlias ALIAS_LIST_COMMAND_ALIAS \u003d new CommandAliasBuilder().withAlias(\"al\")","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"            .withCommand(ListAliasCommand.COMMAND_WORD + \" \" + ListAliasCommand.LIST_SUB_COMMAND_WORD).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"tanboonji"},"content":"    private TypicalAliases() {} // prevents instantiation","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"tanboonji"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"tanboonji"},"content":"    public static UniqueAliasMap getTypicalAliases() {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"tanboonji"},"content":"        UniqueAliasMap aliases \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"        for (CommandAlias commandAlias : getTypicalCommandAliases()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"tanboonji"},"content":"            aliases.addAlias(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"tanboonji"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"tanboonji"},"content":"        return aliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"tanboonji"},"content":"    public static List\u003cCommandAlias\u003e getTypicalCommandAliases() {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"tanboonji"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ADD_COMMAND_ALIAS, LIST_COMMAND_ALIAS, DELETE_COMMAND_ALIAS,","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"tanboonji"},"content":"                EDIT_COMMAND_ALIAS, EXIT_COMMAND_ALIAS, HELP_COMMAND_ALIAS, FIND_COMMAND_ALIAS, CLEAR_COMMAND_ALIAS));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"tanboonji"},"content":"    public static CommandAlias getTypicalCommandAlias() {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"tanboonji"},"content":"        return ADD_COMMAND_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"tanboonji"},"content":"    public static Alias getTypicalAlias() {","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"tanboonji"},"content":"        return ADD_ALIAS;","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":89}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"yaowei-soc"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"yaowei-soc"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"yaowei-soc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"yaowei-soc"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"yaowei-soc"},"content":"    public static final List\u003cIndex\u003e VALID_INDEXES \u003d Arrays","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"yaowei-soc"},"content":"            .asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON, INDEX_THIRD_PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"yaowei-soc"},"content":"    public static final String VALID_INDEXES_STRING \u003d VALID_INDEXES.stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"yaowei-soc"},"content":"            .map(Index::getOneBased).map(String::valueOf)","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"yaowei-soc"},"content":"            .collect(Collectors.joining(\" \"));","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"    public static final String NEGATIVE_INDEX_STRING \u003d \"-5\";","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"yaowei-soc"},"content":"    public static final String OUT_OF_RANGE_INDEX_STRING \u003d Long.toString(Integer.MAX_VALUE + 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"    public static final String ZERO_INDEX_STRING \u003d \"0\";","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"    public static final String INVALID_INDEX_STRING \u003d \"1 some random string\";","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public static final String VALID_INDEX_STRING \u003d \"1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"tanboonji":4,"-":12,"yaowei-soc":11}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_TITLE_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_JOB_TITLE_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"oeiyiping"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"oeiyiping"},"content":"            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"            .withTags(\"friends\").withCompany(\"google\").withJobTitle(\"hr manager\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"oeiyiping"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"tanboonji"},"content":"            .withTags(\"owesMoney\", \"friends\").withCompany(\"amazon\").withJobTitle(\"software engineer\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"tanboonji"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"tanboonji"},"content":"            .withCompany(\"amazon\").withJobTitle(\"network administrator\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"tanboonji"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"tanboonji"},"content":"            .withCompany(\"facebook\").withJobTitle(\"database administrator\").withTags(\"friends\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"tanboonji"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"tanboonji"},"content":"            .withCompany(\"facebook\").withJobTitle(\"senior software developer\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"tanboonji"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"tanboonji"},"content":"            .withCompany(\"singtel\").withJobTitle(\"software developer intern\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"tanboonji"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"tanboonji"},"content":"            .withCompany(\"m1\").withJobTitle(\"customer service operator\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"tanboonji"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"tanboonji"},"content":"            .withCompany(\"starhub\").withJobTitle(\"director\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"tanboonji"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"tanboonji"},"content":"            .withCompany(\"temasek holdings\").withJobTitle(\"cto\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"oeiyiping"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"tanboonji"},"content":"            .withCompany(VALID_COMPANY_AMY).withJobTitle(VALID_JOB_TITLE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"oeiyiping"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"tanboonji"},"content":"            .withCompany(VALID_COMPANY_BOB).withJobTitle(VALID_JOB_TITLE_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"oeiyiping"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"tanboonji":22,"oeiyiping":7,"-":62}},{"path":"src/test/java/seedu/address/testutil/UniqueAliasMapBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanboonji"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.UniqueAliasMap;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"tanboonji"},"content":"import seedu.address.model.alias.CommandAlias;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"tanboonji"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"tanboonji"},"content":" * A utility class to help with building UniqueAliasMap objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"tanboonji"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"tanboonji"},"content":" *     {@code UniqueAliasMap aliases \u003d new UniqueAliasMapBuilder().withCommandAlias(\"a\").withCommandAlias(\"e\").build();}","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"tanboonji"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"tanboonji"},"content":"public class UniqueAliasMapBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"tanboonji"},"content":"    private UniqueAliasMap aliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"tanboonji"},"content":"    public UniqueAliasMapBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"tanboonji"},"content":"        aliases \u003d new UniqueAliasMap();","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"tanboonji"},"content":"    public UniqueAliasMapBuilder(UniqueAliasMap aliases) {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"tanboonji"},"content":"        this.aliases \u003d aliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"tanboonji"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"tanboonji"},"content":"     * Adds a new {@code CommandAlias} to the {@code UniqueAliasMap} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"tanboonji"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"tanboonji"},"content":"    public UniqueAliasMapBuilder withCommandAlias(CommandAlias commandAlias) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"tanboonji"},"content":"        aliases.addAlias(commandAlias);","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"tanboonji"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"tanboonji"},"content":"    public UniqueAliasMap build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"tanboonji"},"content":"        return aliases;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"tanboonji"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"tanboonji"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"tanboonji"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"tanboonji":35}}]
