[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W13-4/tp/actions)","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"# Teaching Assistant","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"Teaching Assistant is a desktop application that provides Secondary School or Junior College teachers with an efficient tool to keep track of their **schedules, contacts and tasks** easily.","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"While it has a GUI, most of the user interactions rely on typing commands as user inputs.","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"## Getting Started","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"Head over to the [User Guide](https://github.com/AY2021S2-CS2103T-W13-4/tp/blob/master/docs/UserGuide.md) to start using Teaching Assistant!","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"## Developer Guide","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"Take a look at our [Developer Guide](https://github.com/AY2021S2-CS2103T-W13-4/tp/blob/master/docs/DeveloperGuide.md) if you want to know more about our project.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"## Authors","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"Teaching Assistant is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org) and will be maintained by [our team](https://github.com/AY2021S2-CS2103T-W13-4/tp/blob/master/docs/AboutUs.md).","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"nicholastanvis":15,"goatygoatygoat":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tsh22":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"## Team Members","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"### Lee Rong Jieh","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"\u003cimg src\u003d\"images/lrj689.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"[[github](https://github.com/lrj689)]","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"### Loh Jun Yong Kevin","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"\u003cimg src\u003d\"images/kevinlohjunyong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"[[github](https://github.com/kevinlohjunyong)]","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"### Nicholas Tanvis","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"\u003cimg src\u003d\"images/nicholastanvis.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"[[github](http://github.com/nicholastanvis)]","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"### Shen Yang","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"\u003cimg src\u003d\"images/goatygoatygoat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"[[github](http://github.com/goatygoatygoat)]","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"tsh22"},"content":"### Toh Sihui","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"tsh22"},"content":"\u003cimg src\u003d\"images/tsh22.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"tsh22"},"content":"[[github](http://github.com/tsh22)]","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"## Responsibilities","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"Member | Responsibility 1 | Responsibility 2","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"-- | -- | --","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"Rong Jieh | Deliverables | Task IC","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"Kevin Loh | Documentation | Schedule IC","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"Nicholas | Testing | Contact IC","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"Shen Yang | Code Quality | Scheduling","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"Toh Sihui | Tool Expert | Integration","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"lrj689":3,"tsh22":3,"nicholastanvis":15,"-":26,"goatygoatygoat":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"# Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"### [Proposed] Enquire if time interval is free","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"The proposed enquiry mechanism provides users a quick way to find out if certain time intervals are available.","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"An outline of the proposed implementation is as follows:","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"The `AddressBookParser` should accept another case of command word `free` which eventually returns `CheckFreeCommand`","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"back to Logic Manager.","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"This command is then executed to return `CommandResult` which is either shown on the command result field of the GUI as:","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":"* \"Free\"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":"* Or the task that is occupying that time interval","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"The following activity diagram summarizes what happens when a user executes the new command:","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"![Free Intervals Activity Diagram](images/FreeIntervalActivityDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"The `ModelManager` class will be required to implement `checkIfFree` method which eventually checks the interval","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"provided by the user against all tasks\u0027 `LocalDateTime` attribute in","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"`UniqueTaskList#checkIfFree(start, end)`.","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"The following sequence diagram outlines how the enquiry operation works:","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"![Free Intervals Sequence Diagram](images/FreeIntervalSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"tsh22"},"content":"Note: Details in Model class and `CheckFreeCommandParser` have been omitted for simplicity.","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"### [Proposed] Merge Schedule and Task","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"The proposed merger attempts to combine the functionalities of both the Task and Schedule classes. \\","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"As the Task and Schedule classes are similar in features, we can merge them into an Entry class for maintainability.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"![Entry Class](images/EntryClassDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"Previously, we allowed schedules and tasks to be added separately through using two commands, `sadd` and `tadd`. \\","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"Combining them into an Entry task, we propose a \"eadd\" command.","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"Below, we can see the before and after activity diagrams involving this merger.","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"**Before:** \\","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"![Schedule and Task Activity](images/ScheduleAndTaskActivityDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"**After:** \\","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"![Entry Activity](images/EntryActivityDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"### [Proposed] Filtering entries via tags","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"Following the proposal above, there were no commands that utilise the tags attached to the objects. Hence,","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"this proposal aims to allow filtering these entries via their tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":"The Model class will be required to implement the `updateFilteredEntryList` which can incorporate","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"`updateFilteredTaskList` or `updateFilteredScheduleList` implemented in the previous two classes. This method will","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"then accept an argument of type `EntryTagContainsKeywordsPredicate`.","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"nicholastanvis"},"content":"The following diagram omits the parser object created, namely `FilterEntryCommandParser` for simplicity.","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"nicholastanvis"},"content":"![Filtering Entries](images/FilterEntrySequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":60,"author":{"gitId":"nicholastanvis"},"content":"**Design consideration**","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"nicholastanvis"},"content":"1. Allow filtering by more than one tag.","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"nicholastanvis"},"content":"1. Decide whether the filtering above considers Union or Intersection of tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"### [Proposed] List entry feature","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"The proposed list entry mechanism allows users to see all of their schedules, or see them by day or by week.","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"An outline of the proposed implementation is as follows:","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"The AddressBookParser should accept another case of command word `elist` which eventually returns a `ListEntryCommand` ","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"back to `LogicManager`. This command can take in three arguments: an empty string, the string “day” or the string “week”. ","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"The arguments will be parsed by the `ListEntryCommandParser` to determine the behaviour of `ListEntryFormatPredicate`.","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"Then, `updateFilteredEntryList` method in the `Model` interface is called, passing in the `ListEntryFormatPredicate` as ","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"an argument.","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"The following activity diagram (Fig 2.3.1) summarizes what happens when a user executes the list entry command.","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"![Listing entries activity diagram](images/ListEntryActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"goatygoatygoat"},"content":"Fig 2.3.1","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"goatygoatygoat"},"content":"The following sequence diagram (Fig 2.3.2) shows how the list entry operation works:","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"goatygoatygoat"},"content":"![Listing entries](images/ListEntrySequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"goatygoatygoat"},"content":"Fig 2.3.2","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"nicholastanvis"},"content":"# Appendix: Requirements","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":87,"author":{"gitId":"nicholastanvis"},"content":"## Product Scope","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2021-03-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":91,"author":{"gitId":"tsh22"},"content":"* Are JC/Secondary school teachers","lastModifiedDate":"2021-03-04"},{"lineNumber":92,"author":{"gitId":"tsh22"},"content":"* Do not have their schedules and students\u0027 contacts digitalised","lastModifiedDate":"2021-03-04"},{"lineNumber":93,"author":{"gitId":"tsh22"},"content":"* Prefer to use typing over mouse/voice commands","lastModifiedDate":"2021-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":95,"author":{"gitId":"tsh22"},"content":"**Value proposition**: efficient tool to keep track of schedules and tasks as well as find and add student contact","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"tsh22"},"content":"information easily.","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":98,"author":{"gitId":"nicholastanvis"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"nicholastanvis"},"content":"## User Stories","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"nicholastanvis"},"content":"### Contacts","lastModifiedDate":"2021-03-04"},{"lineNumber":103,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"nicholastanvis"},"content":"Priority | As a... | I want to... | So that I can...","lastModifiedDate":"2021-03-04"},{"lineNumber":105,"author":{"gitId":"nicholastanvis"},"content":"--- | --- | --- | ---","lastModifiedDate":"2021-03-04"},{"lineNumber":106,"author":{"gitId":"nicholastanvis"},"content":"high | teacher | add a contact | have a consolidated list of contacts that I require","lastModifiedDate":"2021-03-04"},{"lineNumber":107,"author":{"gitId":"nicholastanvis"},"content":"high | teacher | delete a contact | remove a contact I no longer need","lastModifiedDate":"2021-03-04"},{"lineNumber":108,"author":{"gitId":"nicholastanvis"},"content":"medium | teacher | edit a contact | modify contact details without going through the tedious process of removing and re-adding the contact","lastModifiedDate":"2021-03-04"},{"lineNumber":109,"author":{"gitId":"nicholastanvis"},"content":"high | teacher | find and view a contact based on name | quickly find the details of a specific contact I need","lastModifiedDate":"2021-03-04"},{"lineNumber":110,"author":{"gitId":"nicholastanvis"},"content":"high | teacher | list all contacts | keep track of the contacts of all the people I have saved","lastModifiedDate":"2021-03-04"},{"lineNumber":111,"author":{"gitId":"nicholastanvis"},"content":"medium | teacher | filter contacts via tags | categorise and find a group of contacts easily","lastModifiedDate":"2021-03-04"},{"lineNumber":112,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":113,"author":{"gitId":"nicholastanvis"},"content":"### Schedules","lastModifiedDate":"2021-03-04"},{"lineNumber":114,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"nicholastanvis"},"content":"Priority | As a... | I want to... | So that I can...","lastModifiedDate":"2021-03-04"},{"lineNumber":116,"author":{"gitId":"nicholastanvis"},"content":"--- | --- | --- | ---","lastModifiedDate":"2021-03-04"},{"lineNumber":117,"author":{"gitId":"nicholastanvis"},"content":"high | teacher | add an event into my schedule | have a consolidated list of events","lastModifiedDate":"2021-03-04"},{"lineNumber":118,"author":{"gitId":"nicholastanvis"},"content":"high | teacher | delete an event from my schedule | remove events that have been cancelled","lastModifiedDate":"2021-03-04"},{"lineNumber":119,"author":{"gitId":"nicholastanvis"},"content":"medium | teacher | edit an event in my schedule | modify event details without going through the tedious process of removing and re-adding the event","lastModifiedDate":"2021-03-04"},{"lineNumber":120,"author":{"gitId":"nicholastanvis"},"content":"high | teacher | list my schedule according to day/week | view my schedule in a more organised way","lastModifiedDate":"2021-03-04"},{"lineNumber":121,"author":{"gitId":"nicholastanvis"},"content":"high | teacher | find and view an event based on name | see the details of an event I have saved","lastModifiedDate":"2021-03-04"},{"lineNumber":122,"author":{"gitId":"nicholastanvis"},"content":"low | teacher | list all the timings in my schedule when I am free | check the timings when I am free","lastModifiedDate":"2021-03-04"},{"lineNumber":123,"author":{"gitId":"nicholastanvis"},"content":"low | teacher | view all events in my schedule for a specific time period | check if I am free during that timing","lastModifiedDate":"2021-03-04"},{"lineNumber":124,"author":{"gitId":"nicholastanvis"},"content":"medium | teacher | filter events via tags | categorise and find events easily","lastModifiedDate":"2021-03-04"},{"lineNumber":125,"author":{"gitId":"nicholastanvis"},"content":"medium | teacher | mark and event as done | keep track of what events are remaining","lastModifiedDate":"2021-03-04"},{"lineNumber":126,"author":{"gitId":"nicholastanvis"},"content":"medium | teacher | link a contact with my schedule if necessary | easily access the contact details of the person relevant to my schedule","lastModifiedDate":"2021-03-04"},{"lineNumber":127,"author":{"gitId":"nicholastanvis"},"content":"low | teacher | get notified of upcoming schedules on the same day | be reminded of upcoming events","lastModifiedDate":"2021-03-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"tsh22"},"content":"### Tasks","lastModifiedDate":"2021-03-04"},{"lineNumber":130,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"tsh22"},"content":"Priority | As a... | I want to... | So that I can...","lastModifiedDate":"2021-03-04"},{"lineNumber":132,"author":{"gitId":"tsh22"},"content":"--------- | --------- | -------------- | -----------------","lastModifiedDate":"2021-03-04"},{"lineNumber":133,"author":{"gitId":"tsh22"},"content":"high | teacher | add a task into my tasks list | have a consolidated list of my tasks","lastModifiedDate":"2021-03-04"},{"lineNumber":134,"author":{"gitId":"tsh22"},"content":"high | teacher | delete a task from my tasks list | I can remove tasks that I no longer have to do","lastModifiedDate":"2021-03-04"},{"lineNumber":135,"author":{"gitId":"tsh22"},"content":"medium | teacher | edit a task in my tasks list | modify task details without going through the tedious process of removing and re-adding it","lastModifiedDate":"2021-03-04"},{"lineNumber":136,"author":{"gitId":"tsh22"},"content":"high | teacher | list my tasks according to module/week/day | view my tasks in a more organised way","lastModifiedDate":"2021-03-04"},{"lineNumber":137,"author":{"gitId":"tsh22"},"content":"high | teacher | find and view a task by name | see the details of a task I have saved","lastModifiedDate":"2021-03-04"},{"lineNumber":138,"author":{"gitId":"tsh22"},"content":"medium | teacher | filter for tasks via tags | categorise and find tasks easily","lastModifiedDate":"2021-03-04"},{"lineNumber":139,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":140,"author":{"gitId":"tsh22"},"content":"### Others","lastModifiedDate":"2021-03-04"},{"lineNumber":141,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"tsh22"},"content":"Priority | As a... | I want to... | So that I can...","lastModifiedDate":"2021-03-04"},{"lineNumber":143,"author":{"gitId":"tsh22"},"content":"--------- | --------- | -------------- | -----------------","lastModifiedDate":"2021-03-04"},{"lineNumber":144,"author":{"gitId":"tsh22"},"content":"high | forgetful user | be prompted for the commands’ syntax | type all commands without memorising their syntax","lastModifiedDate":"2021-03-04"},{"lineNumber":145,"author":{"gitId":"tsh22"},"content":"medium | teacher | access the guide or the commands list | eliminate the need to memorise all the commands","lastModifiedDate":"2021-03-04"},{"lineNumber":146,"author":{"gitId":"tsh22"},"content":"low | teacher | confirm crucial commands with a confirmation message | avoid entering the wrong command","lastModifiedDate":"2021-03-04"},{"lineNumber":147,"author":{"gitId":"tsh22"},"content":"low | user adopting this products | clear all my contacts from the address book | clear dummy data easily when I use the app for testing","lastModifiedDate":"2021-03-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"nicholastanvis"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"nicholastanvis"},"content":"## Use Cases","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":153,"author":{"gitId":"nicholastanvis"},"content":"### Use case: Delete a contact","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"lrj689"},"content":"1. User requests to list all contacts.","lastModifiedDate":"2021-03-04"},{"lineNumber":158,"author":{"gitId":"lrj689"},"content":"2. Teaching Assistant shows a list of all contacts.","lastModifiedDate":"2021-03-04"},{"lineNumber":159,"author":{"gitId":"lrj689"},"content":"3. User requests to delete a specific contact in this list.","lastModifiedDate":"2021-03-04"},{"lineNumber":160,"author":{"gitId":"nicholastanvis"},"content":"4. Teaching Assistant deletes the contact.","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"lrj689"},"content":"* 3a. The given index is empty.","lastModifiedDate":"2021-03-04"},{"lineNumber":172,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":173,"author":{"gitId":"lrj689"},"content":"    * 3a1. Teaching Assistant shows an error message.","lastModifiedDate":"2021-03-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"lrj689"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":179,"author":{"gitId":"nicholastanvis"},"content":"### Use case: Add a schedule","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"lrj689"},"content":"**MSS**","lastModifiedDate":"2021-03-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"lrj689"},"content":"1. User requests to add a schedule.","lastModifiedDate":"2021-03-04"},{"lineNumber":184,"author":{"gitId":"lrj689"},"content":"2. AddressBook adds the schedule into the list.","lastModifiedDate":"2021-03-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":186,"author":{"gitId":"lrj689"},"content":"   Use case ends.","lastModifiedDate":"2021-03-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"lrj689"},"content":"**Extensions**","lastModifiedDate":"2021-03-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"lrj689"},"content":"* 2a. The given date(s) are invalid.","lastModifiedDate":"2021-03-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":192,"author":{"gitId":"lrj689"},"content":"    * 2a1. Teaching Assistant shows an error message.","lastModifiedDate":"2021-03-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":194,"author":{"gitId":"lrj689"},"content":"      Use case ends.","lastModifiedDate":"2021-03-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"lrj689"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":198,"author":{"gitId":"nicholastanvis"},"content":"### Use case: Delete a schedule","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"lrj689"},"content":"**MSS**","lastModifiedDate":"2021-03-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"lrj689"},"content":"1. User request to list schedules.","lastModifiedDate":"2021-03-04"},{"lineNumber":203,"author":{"gitId":"lrj689"},"content":"2. Teaching Assistant shows a list of schedules.","lastModifiedDate":"2021-03-04"},{"lineNumber":204,"author":{"gitId":"lrj689"},"content":"3. User requests to delete a specific schedule in the list.","lastModifiedDate":"2021-03-04"},{"lineNumber":205,"author":{"gitId":"lrj689"},"content":"4. Teaching Assistant deletes the schedule.","lastModifiedDate":"2021-03-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"lrj689"},"content":"   Use case ends.","lastModifiedDate":"2021-03-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"lrj689"},"content":"**Extensions**","lastModifiedDate":"2021-03-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"lrj689"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"lrj689"},"content":"  Use case ends.","lastModifiedDate":"2021-03-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"lrj689"},"content":"* 3a. The given schedule name is invalid.","lastModifiedDate":"2021-03-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":217,"author":{"gitId":"lrj689"},"content":"    * 3a1. Teaching Assistant shows an error message.","lastModifiedDate":"2021-03-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"lrj689"},"content":"      Use case ends.","lastModifiedDate":"2021-03-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"nicholastanvis"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":223,"author":{"gitId":"nicholastanvis"},"content":"## Non-Functional Requirements","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"lrj689"},"content":"1. Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2021-03-04"},{"lineNumber":226,"author":{"gitId":"tsh22"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"tsh22"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"lrj689"},"content":"3. The system should be usable by a novice who has never used virtual management applications.","lastModifiedDate":"2021-03-04"},{"lineNumber":229,"author":{"gitId":"lrj689"},"content":"4. The user interface should be intuitive enough for users who are not IT-savvy.","lastModifiedDate":"2021-03-04"},{"lineNumber":230,"author":{"gitId":"lrj689"},"content":"5. The product is offered as an open source software.","lastModifiedDate":"2021-03-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":232,"author":{"gitId":"nicholastanvis"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"nicholastanvis"},"content":"## Glossary","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"nicholastanvis"},"content":"### JC","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"goatygoatygoat"},"content":"Junior College (JC) is the post-secondary education level where students are preparing for university.","lastModifiedDate":"2021-03-04"},{"lineNumber":238,"author":{"gitId":"goatygoatygoat"},"content":"JC is also the high-school equivalent in other countries. Hence, JC teachers may be packed with consultation","lastModifiedDate":"2021-03-04"},{"lineNumber":239,"author":{"gitId":"goatygoatygoat"},"content":"schedules which can leverage our software.","lastModifiedDate":"2021-03-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"nicholastanvis"},"content":"### Mainstream OS","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"goatygoatygoat"},"content":"Mainstream operating systems are the current operating systems with a significant market share, namely Windows, Linux,","lastModifiedDate":"2021-03-04"},{"lineNumber":243,"author":{"gitId":"goatygoatygoat"},"content":"Unix, and OS-X.","lastModifiedDate":"2021-03-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"nicholastanvis"},"content":"### MSS","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"goatygoatygoat"},"content":"Main Success Scenario (MSS) defines the optimal outcome of our commands, i.e. in the case where no errors occurred.","lastModifiedDate":"2021-03-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"nicholastanvis"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"tsh22":45,"lrj689":32,"nicholastanvis":64,"-":88,"goatygoatygoat":20}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"_Teaching Assistant_ is a desktop application that helps **JC/Secondary school teachers** have an efficient tool to keep","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"track of their **schedules, contacts and tasks easily.** While it has a GUI, most of the user interactions rely on typing commands as user inputs.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"This is a mockup of our UI.","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"---","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"* Users will be prompted for further inputs upon entering any command with parameters.","lastModifiedDate":"2021-03-04"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"* Items in the square brackets are optional. Users can choose to leave the field empty.","lastModifiedDate":"2021-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"---","lastModifiedDate":"2021-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"### Viewing help","lastModifiedDate":"2021-03-04"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"Shows a message with all the commands.","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"---","lastModifiedDate":"2021-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"### Adding a contact","lastModifiedDate":"2021-03-04"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"Adds a person\u0027s information into the address book.","lastModifiedDate":"2021-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"Format: `add n/NAME p/NUMBER e/EMAIL [t/TAG]`","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"* `add n/Danny p/98765432 e/danny@email.com`","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"* `add n/Amy p/12345678 e/amy@email.com CS2101`","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"### Finding a contact","lastModifiedDate":"2021-03-04"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"Finds an existing contact by name in the address book.","lastModifiedDate":"2021-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"* The search is case-insensitive e.g. amy will match Amy","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"* `find Amy`","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"### Listing contacts","lastModifiedDate":"2021-03-04"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"Lists all the contacts in the address book.","lastModifiedDate":"2021-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"### Deleting a contact","lastModifiedDate":"2021-03-04"},{"lineNumber":55,"author":{"gitId":"nicholastanvis"},"content":"Deletes an existing contact with the specified name in the address book.","lastModifiedDate":"2021-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"Format: `delete NAME`","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"nicholastanvis"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":60,"author":{"gitId":"nicholastanvis"},"content":"* `delete Danny`","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":62,"author":{"gitId":"nicholastanvis"},"content":"---","lastModifiedDate":"2021-03-04"},{"lineNumber":63,"author":{"gitId":"KevinLohJunYong"},"content":"### Adding a schedule","lastModifiedDate":"2021-03-04"},{"lineNumber":64,"author":{"gitId":"KevinLohJunYong"},"content":"Adds a new schedule into the schedule list.","lastModifiedDate":"2021-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":66,"author":{"gitId":"nicholastanvis"},"content":"Format: `sadd n/NAME sd/START_DATE ed/END_DATE [t/TAG]`","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":68,"author":{"gitId":"KevinLohJunYong"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":69,"author":{"gitId":"nicholastanvis"},"content":"* `sadd n/meeting 2021-02-15T21:00:00 2021-02-15T23:00:00`","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"nicholastanvis"},"content":"* `sadd n/consultation 2021-02-15T23:00:00 2021-02-15T23:59:59 important`","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":72,"author":{"gitId":"KevinLohJunYong"},"content":"### Finding a schedule","lastModifiedDate":"2021-03-04"},{"lineNumber":73,"author":{"gitId":"KevinLohJunYong"},"content":"Finds an existing schedule by name in the schedule list.","lastModifiedDate":"2021-03-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":75,"author":{"gitId":"nicholastanvis"},"content":"Format: `sfind KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"KevinLohJunYong"},"content":"* `The search is case-insensitive e.g. meeting will match Meeting`","lastModifiedDate":"2021-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":78,"author":{"gitId":"KevinLohJunYong"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":79,"author":{"gitId":"nicholastanvis"},"content":"* `sfind meeting`","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":81,"author":{"gitId":"KevinLohJunYong"},"content":"### Listing schedules today (of the same week)","lastModifiedDate":"2021-03-04"},{"lineNumber":82,"author":{"gitId":"nicholastanvis"},"content":"Lists all the schedules by today/this week.","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":84,"author":{"gitId":"nicholastanvis"},"content":"Format: `slist [day/week]`","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"nicholastanvis"},"content":"- No argument: listing all schedules","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"nicholastanvis"},"content":"- Day: listing schedules for today","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"nicholastanvis"},"content":"- Week: listing schedules for the next 7 days","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":89,"author":{"gitId":"KevinLohJunYong"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":90,"author":{"gitId":"nicholastanvis"},"content":"* `slist`","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"nicholastanvis"},"content":"* `slist day`","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"nicholastanvis"},"content":"* `slist week`","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":94,"author":{"gitId":"KevinLohJunYong"},"content":"### Deleting a schedule","lastModifiedDate":"2021-03-04"},{"lineNumber":95,"author":{"gitId":"KevinLohJunYong"},"content":"Deletes an existing schedule with the specified name in the schedule list.","lastModifiedDate":"2021-03-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":97,"author":{"gitId":"nicholastanvis"},"content":"Format: `sdelete NAME`","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":99,"author":{"gitId":"KevinLohJunYong"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":100,"author":{"gitId":"nicholastanvis"},"content":"* `sdelete meeting`","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":102,"author":{"gitId":"nicholastanvis"},"content":"---","lastModifiedDate":"2021-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":104,"author":{"gitId":"lrj689"},"content":"### Adding a task","lastModifiedDate":"2021-03-04"},{"lineNumber":105,"author":{"gitId":"lrj689"},"content":"Adds a task into the task list.","lastModifiedDate":"2021-03-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"nicholastanvis"},"content":"Format: `tadd n/NAME d/DATE [t/TAG]`","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"lrj689"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":110,"author":{"gitId":"nicholastanvis"},"content":"* `tadd slides 2021-02-15 CS2100`","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"lrj689"},"content":"### Finding a task","lastModifiedDate":"2021-03-04"},{"lineNumber":113,"author":{"gitId":"lrj689"},"content":"Finds an existing task by name in the task list.","lastModifiedDate":"2021-03-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"nicholastanvis"},"content":"Format: `tfind KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"lrj689"},"content":"* The search is case-insensitive e.g. slides will match Slides","lastModifiedDate":"2021-03-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"lrj689"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":119,"author":{"gitId":"nicholastanvis"},"content":"* `tfind slides`","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"nicholastanvis"},"content":"### Listing tasks by day/week","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"nicholastanvis"},"content":"Lists all the tasks by today/this week.","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"nicholastanvis"},"content":"Format: `tlist [day/week]`","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"nicholastanvis"},"content":"- No argument: listing all schedules","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"nicholastanvis"},"content":"- Day: listing schedules for today","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"nicholastanvis"},"content":"- Week: listing schedules for the next 7 days","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"lrj689"},"content":"Example(s):","lastModifiedDate":"2021-03-04"},{"lineNumber":130,"author":{"gitId":"nicholastanvis"},"content":"* `tlist`","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"nicholastanvis"},"content":"* `tlist day`","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"nicholastanvis"},"content":"* `tlist week`","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"lrj689"},"content":"### Deleting a task","lastModifiedDate":"2021-03-04"},{"lineNumber":135,"author":{"gitId":"lrj689"},"content":"Deletes an existing task with the specified name in the task list.","lastModifiedDate":"2021-03-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"nicholastanvis"},"content":"Format: `tdelete NAME`","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"nicholastanvis"},"content":"* `tdelete slides`","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"lrj689"},"content":"---","lastModifiedDate":"2021-03-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2021-03-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"tsh22"},"content":"### Others","lastModifiedDate":"2021-03-04"},{"lineNumber":147,"author":{"gitId":"tsh22"},"content":"Action | Format","lastModifiedDate":"2021-03-04"},{"lineNumber":148,"author":{"gitId":"tsh22"},"content":"------- | ------------------","lastModifiedDate":"2021-03-04"},{"lineNumber":149,"author":{"gitId":"tsh22"},"content":"**View all commands** | `help`","lastModifiedDate":"2021-03-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"tsh22"},"content":"### Address Book","lastModifiedDate":"2021-03-04"},{"lineNumber":152,"author":{"gitId":"tsh22"},"content":"Action | Format","lastModifiedDate":"2021-03-04"},{"lineNumber":153,"author":{"gitId":"tsh22"},"content":"-------- | ------------------","lastModifiedDate":"2021-03-04"},{"lineNumber":154,"author":{"gitId":"tsh22"},"content":"**Add** | `add n/NAME p/NUMBER e/EMAIL [t/TAG]`","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"tsh22"},"content":"**Find and View (by name)** | `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"tsh22"},"content":"**Delete** | `delete NAME`","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"tsh22"},"content":"### Schedule","lastModifiedDate":"2021-03-04"},{"lineNumber":160,"author":{"gitId":"tsh22"},"content":"Action | Format","lastModifiedDate":"2021-03-04"},{"lineNumber":161,"author":{"gitId":"tsh22"},"content":"-------- | ------------------","lastModifiedDate":"2021-03-04"},{"lineNumber":162,"author":{"gitId":"tsh22"},"content":"**Add** | `sadd n/NAME sd/START_DATE ed/END_DATE [t/TAG]`","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"tsh22"},"content":"**Find and View (by name)** | `sfind KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"tsh22"},"content":"**List (by day/week)** | `slist [day/week]`","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"tsh22"},"content":"**Delete** | `sdelete NAME`","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"tsh22"},"content":"### Tasks","lastModifiedDate":"2021-03-04"},{"lineNumber":168,"author":{"gitId":"tsh22"},"content":"Action | Format","lastModifiedDate":"2021-03-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"-------- | ------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"tsh22"},"content":"**Add** | `tadd n/NAME d/DATE [t/TAG]`","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"tsh22"},"content":"**Find and View (by name)** | `tfind KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"tsh22"},"content":"**List (by day/week)** | `tlist [day/week]`","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"tsh22"},"content":"**Delete** | `tdelete NAME`","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lrj689":12,"tsh22":23,"nicholastanvis":58,"-":66,"goatygoatygoat":2,"KevinLohJunYong":12}},{"path":"docs/diagrams/EntryActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"start","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":":User executes \"eadd\";","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":":Instantiates an Entry object;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":":Saves to Storage;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"stop","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"nicholastanvis":7}},{"path":"docs/diagrams/EntryClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"skinparam arrowColor RED","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"class EntryDescription {","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"  + {static} MESSAGE_CONSTRAINTS : String","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"  + {static} VALIDATION_REGEX : String","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"  + description : String","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"  + {static} isValidDescription() : boolean","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"  + EntryDescription()","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"class DateTime {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"  + {static} MESSAGE_CONSTRAINTS : String","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"  + value : LocalDateTime","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"  + {static} isValidDateTime() : boolean","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"  + DateTime(String)","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"  + getDateTime() : LocalDateTime","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"class Tag {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"  + {static} MESSAGE_CONSTRAINTS : String","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"  + {static} VALIDATION_REGEX : String","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"  + tagName : string","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"  + {static} isValidTagName() : boolean","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"  + Tag(String)","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"class Entry {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"  - description : EntryDescription","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"  - startDate : LocalDateTime","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"  - endDate : LocalDateTime","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"  - tags : HashSet\u003cTag\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"  + Schedule(...)","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"Entry -right-\u003e \"1\" EntryDescription","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"Entry -down-\u003e \"2\" DateTime","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"DateTime -right[hidden]-\u003e Tag","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"EntryDescription -down[hidden]-\u003e Tag","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"Entry -\u003e \"*\" Tag","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"nicholastanvis":49}},{"path":"docs/diagrams/FilterEntrySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"participant \"f:FilterEntryCommand\" as FilterEntryCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"[-\u003e LogicManager : execute(\"efilter tag\")","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"efilter tag\")","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"create FilterEntryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"AddressBookParser -\u003e FilterEntryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"activate FilterEntryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"FilterEntryCommand -\u003e AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"deactivate FilterEntryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"LogicManager -\u003e FilterEntryCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"activate FilterEntryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"FilterEntryCommand -\u003e Model : updateFilteredEntryList(predicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"Model --\u003e FilterEntryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"FilterEntryCommand --\u003e LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"deactivate FilterEntryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"nicholastanvis":44}},{"path":"docs/diagrams/FreeIntervalActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"start","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":":User executes \"free\" and specifies interval;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"if () then ([free])","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"    :GUI shows \"Free\" to user;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"else ([not free])","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"    :GUI shows task occupying interval;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"endif","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"stop","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"tsh22":13}},{"path":"docs/diagrams/FreeIntervalSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"participant \":CheckFreeCommandParser\" as CheckFreeCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"participant \"c:CheckFreeCommand\" as CheckFreeCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"autoactivate on","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"[-\u003e LogicManager : execute(\"free\")","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"free\")","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"create CheckFreeCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"AddressBookParser -\u003e CheckFreeCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"return","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"AddressBookParser -\u003e CheckFreeCommandParser : parse(start, end)","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"create CheckFreeCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"tsh22"},"content":"CheckFreeCommandParser -\u003e CheckFreeCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"tsh22"},"content":"return c","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"tsh22"},"content":"CheckFreeCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"tsh22"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"tsh22"},"content":"destroy CheckFreeCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"tsh22"},"content":"LogicManager -\u003e CheckFreeCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"tsh22"},"content":"CheckFreeCommand -\u003e Model : checkIfFree(start, end)","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"tsh22"},"content":"return","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"tsh22"},"content":"create CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"tsh22"},"content":"CheckFreeCommand -\u003e CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"tsh22"},"content":"return","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"tsh22"},"content":"CheckFreeCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"tsh22"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"tsh22"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"tsh22":48}},{"path":"docs/diagrams/ListEntryActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":":User executes \"elist\" and specifies arguments;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"if () then ([argument is empty])","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    :GUI lists all user\u0027s schedules;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"else ([else])","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    if () then ([argument is \"day\"])","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"        :GUI lists user\u0027s schedules by day;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    else ([else])","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        :GUI lists user\u0027s schedules by week;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    endif","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"endif","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"goatygoatygoat":15}},{"path":"docs/diagrams/ListEntrySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"participant \":ListEntryCommandParser\" as ListEntryCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"participant \":ListEntryFormatPredicate\" as ListEntryFormatPredicate LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"participant \"listEntryCommand:ListEntryCommand\" as ListEntryCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"[-\u003e LogicManager : execute(\"elist day\")","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"activate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"elist day\")","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"create ListEntryCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"AddressBookParser -\u003e ListEntryCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"activate ListEntryCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"deactivate ListEntryCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"AddressBookParser -\u003e ListEntryCommandParser : parse(\"day\")","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"activate ListEntryCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"create ListEntryFormatPredicate","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryCommandParser -\u003e ListEntryFormatPredicate","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"activate ListEntryFormatPredicate","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryFormatPredicate --\u003e ListEntryCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"deactivate ListEntryFormatPredicate","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"create ListEntryCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryCommandParser -\u003e ListEntryCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"activate ListEntryCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryCommand --\u003e ListEntryCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"deactivate ListEntryCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"deactivate ListEntryCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"destroy ListEntryCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"LogicManager -\u003e ListEntryCommand : execute()","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"activate ListEntryCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryCommand -\u003e Model : updateFilteredEntryList(predicate)","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"activate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"Model --\u003e ListEntryCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"deactivate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"create CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryCommand -\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"activate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"CommandResult --\u003e ListEntryCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"ListEntryCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"deactivate ListEntryCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"goatygoatygoat":77}},{"path":"docs/diagrams/ScheduleAndTaskActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"start","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":":User executes \"sadd\" or \"tadd\";","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"if () then ([\"sadd\"])","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"    :Instantiates a Schedule object;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"else ([else])","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"    :Instantiates a Task object;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"endif","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"    :Saves to Storage;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"stop","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"nicholastanvis":11}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"title: Teaching Assistant","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W13-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W13-4/tp/actions)","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W13-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W13-4/tp)","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"_Teaching Assistant_ is a desktop application that helps **JC/Secondary school teachers** have an efficient tool to keep","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"track of their **schedules, contacts and tasks easily.** While it has a GUI, most of the user interactions relies on typing commands as user inputs.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":"* If you are interested in using _Teaching Assistant_, head over to the [_Quick Start_ section of the **User","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":"  Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"* If you are interested about developing _Teaching Assistant_, the [**Developer Guide**](DeveloperGuide.html) is a good place to","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"  start.","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"  , [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"tsh22":11,"-":11}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    private static final double DEFAULT_HEIGHT \u003d 700;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lrj689":2,"-":77}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"    public static final String MESSAGE_SCHEDULES_LISTED_OVERVIEW \u003d \"%1$d schedules listed!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"    public static final String MESSAGE_TASK_DOES_NOT_EXIST \u003d \"The task provided does not exist\";","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"    public static final String MESSAGE_SCHEDULE_DOES_NOT_EXIST \u003d \"The schedule provided does not exist!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lrj689":1,"nicholastanvis":2,"-":12,"goatygoatygoat":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"tsh22"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"tsh22"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"tsh22"},"content":"    /** Returns an unmodifiable view of the filtered list of schedules */","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"tsh22"},"content":"    ObservableList\u003cSchedule\u003e getFilteredScheduleList();","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tsh22":8,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"tsh22"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"tsh22"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"tsh22"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"tsh22"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"tsh22"},"content":"    public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"tsh22"},"content":"        return model.getFilteredScheduleList();","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tsh22":12,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":" * Adds a schedule to the address book.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"public class AddScheduleCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"    public static final String COMMAND_WORD \u003d \"sadd\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a schedule to the address book. \"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"            + PREFIX_START_DATE + \"START_DATE \"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"            + PREFIX_END_DATE + \"END_DATE \"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"            + PREFIX_NAME + \"Exam period \"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"            + PREFIX_START_DATE + \"2021-04-20 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"            + PREFIX_END_DATE + \"2021-04-27 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"            + PREFIX_TAG + \"is added\";","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New schedule added: %1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"KevinLohJunYong"},"content":"    public static final String MESSAGE_DUPLICATE_SCHEDULE \u003d \"This schedule already exists in the address book\";","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"    private final Schedule toAdd;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"     * Creates an AddCommand to add the specified {@code Schedule}","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"KevinLohJunYong"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"KevinLohJunYong"},"content":"    public AddScheduleCommand(Schedule schedule) {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"KevinLohJunYong"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"KevinLohJunYong"},"content":"        toAdd \u003d schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"KevinLohJunYong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"KevinLohJunYong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"KevinLohJunYong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"KevinLohJunYong"},"content":"        if (model.hasSchedule(toAdd)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"KevinLohJunYong"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"KevinLohJunYong"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"KevinLohJunYong"},"content":"        model.addSchedule(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"KevinLohJunYong"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"KevinLohJunYong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"KevinLohJunYong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"KevinLohJunYong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"KevinLohJunYong"},"content":"                || (other instanceof AddScheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"KevinLohJunYong"},"content":"                \u0026\u0026 toAdd.equals(((AddScheduleCommand) other).toAdd));","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"KevinLohJunYong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"KevinLohJunYong"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicholastanvis":9,"KevinLohJunYong":55}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":" * Adds a task to Teaching Assistant.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"    public static final String COMMAND_WORD \u003d \"tadd\";","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list. \"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"            + PREFIX_NAME + \"Complete assignment 1 \"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"            + PREFIX_DATE + \"2021-03-17 \"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"            + PREFIX_TAG + \"CS2100\";","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list\";","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"     * Creates an AddTaskCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"     * @param task task object","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"                || (other instanceof AddTaskCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"lrj689":61}},{"path":"src/main/java/seedu/address/logic/commands/DeleteScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.ScheduleDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":" * Deletes a schedule identified using its description","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"public class DeleteScheduleCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"    public static final String COMMAND_WORD \u003d \"sdelete\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"            + \": Deletes the schedule identified by the description used in the schedule list.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"            + \"Parameters: NAME\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"            + \"Example: \" + COMMAND_WORD + \" meeting\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"    public static final String MESSAGE_DELETE_SCHEDULE_SUCCESS \u003d \"Deleted schedule: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"    private final ScheduleDescription targetScheduleDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"    public DeleteScheduleCommand(ScheduleDescription targetScheduleDescription) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"        this.targetScheduleDescription \u003d targetScheduleDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"        List\u003cSchedule\u003e lastShownScheduleList \u003d model.getFilteredScheduleList();","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"        boolean scheduleDeleted \u003d false;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"        for (Schedule schedule : lastShownScheduleList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"            if (targetScheduleDescription.toString().equals(schedule.getScheduleDescription().toString())) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"                model.deleteSchedule(schedule);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"                scheduleDeleted \u003d true;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"                break;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"        if (scheduleDeleted) {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_SCHEDULE_SUCCESS, targetScheduleDescription));","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"            throw new CommandException(Messages.MESSAGE_SCHEDULE_DOES_NOT_EXIST);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"nicholastanvis"},"content":"                || (other instanceof DeleteScheduleCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"nicholastanvis"},"content":"                \u0026\u0026 targetScheduleDescription.equals(((DeleteScheduleCommand) other).targetScheduleDescription));","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"nicholastanvis":58}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":" * Deletes a task identified using its description","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    public static final String COMMAND_WORD \u003d \"tdelete\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"            + \": Deletes the task identified by the description used in the task list.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"            + \"Parameters: NAME\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"            + \"Example: \" + COMMAND_WORD + \" exam\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"    private final TaskDescription targetTaskDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"    public DeleteTaskCommand(TaskDescription targetTaskDescription) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"        this.targetTaskDescription \u003d targetTaskDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"        boolean taskDeleted \u003d false;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"        for (Task task : lastShownTaskList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"            if (targetTaskDescription.toString().equals(task.getTaskDescription().toString())) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"                model.deleteTask(task);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"                taskDeleted \u003d true;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"                break;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"        if (taskDeleted) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, targetTaskDescription));","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"            throw new CommandException(Messages.MESSAGE_TASK_DOES_NOT_EXIST);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"                || (other instanceof DeleteTaskCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"                \u0026\u0026 targetTaskDescription.equals(((DeleteTaskCommand) other).targetTaskDescription));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lrj689":59}},{"path":"src/main/java/seedu/address/logic/commands/FindScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.ScheduleNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":" * Finds and lists all schedules whose description contains any of the argument keywords.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"public class FindScheduleCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"    public static final String COMMAND_WORD \u003d \"sfind\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all schedules whose description contain any of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"    private final ScheduleNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"    public FindScheduleCommand(ScheduleNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"        model.updateFilteredScheduleList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"                String.format(Messages.MESSAGE_SCHEDULES_LISTED_OVERVIEW, model.getFilteredScheduleList().size()));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"                || (other instanceof FindScheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"                \u0026\u0026 predicate.equals(((FindScheduleCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicholastanvis":42}},{"path":"src/main/java/seedu/address/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":"    public static final String COMMAND_WORD \u003d \"tfind\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose descriptions contain any of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"            + \"Example: \" + COMMAND_WORD + \" homework CS2103T\";","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"    private final TaskNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"tsh22"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"tsh22"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"tsh22"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"tsh22"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"tsh22"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"tsh22"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"tsh22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"tsh22"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"tsh22"},"content":"                || (other instanceof FindTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"tsh22"},"content":"                \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"tsh22"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tsh22":41}},{"path":"src/main/java/seedu/address/logic/commands/ListScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.schedule.ListScheduleFormatPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"public class ListScheduleCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    public static final String COMMAND_WORD \u003d \"slist\";","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all schedules \"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"            + \"by displaying them as a list sorted by date. Schedules can also be listed by day/week.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"            + \"Possible parameters: day/week \\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"            + \"Example: \" + COMMAND_WORD + \" week\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    private final ListScheduleFormatPredicate predicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    public ListScheduleCommand(ListScheduleFormatPredicate predicate) {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        model.updateFilteredScheduleList(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"                String.format(Messages.MESSAGE_SCHEDULES_LISTED_OVERVIEW, model.getFilteredScheduleList().size()));","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"                || (other instanceof ListScheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"                \u0026\u0026 predicate.equals(((ListScheduleCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"goatygoatygoat":37}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.ListTaskFormatPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    public static final String COMMAND_WORD \u003d \"tlist\";","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all tasks \"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"            + \"by displaying them as a list sorted by date. Tasks can also be listed by day/week.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"            + \"Possible parameters: day/week \\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"            + \"Example: \" + COMMAND_WORD + \" week\";","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    private final ListTaskFormatPredicate predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    public ListTaskCommand(ListTaskFormatPredicate predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"                || (other instanceof ListTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"                \u0026\u0026 predicate.equals(((ListTaskCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"goatygoatygoat":38}},{"path":"src/main/java/seedu/address/logic/parser/AddScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KevinLohJunYong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"KevinLohJunYong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"KevinLohJunYong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"KevinLohJunYong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"KevinLohJunYong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"KevinLohJunYong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.schedule.DateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.model.schedule.ScheduleDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"KevinLohJunYong"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"KevinLohJunYong"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"KevinLohJunYong"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"KevinLohJunYong"},"content":"public class AddScheduleCommandParser implements Parser\u003cAddScheduleCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"KevinLohJunYong"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"KevinLohJunYong"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"KevinLohJunYong"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"KevinLohJunYong"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"KevinLohJunYong"},"content":"    public AddScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"KevinLohJunYong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"KevinLohJunYong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_START_DATE, PREFIX_END_DATE, PREFIX_TAG);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_START_DATE, PREFIX_END_DATE)","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"KevinLohJunYong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"KevinLohJunYong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"KevinLohJunYong"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"KevinLohJunYong"},"content":"        String description \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"KevinLohJunYong"},"content":"        ScheduleDescription scheduleDescription \u003d ParserUtil.parseScheduleDescription(description);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"        DateTime startDate \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_START_DATE).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        DateTime endDate \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_END_DATE).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"KevinLohJunYong"},"content":"        Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"KevinLohJunYong"},"content":"        Schedule schedule \u003d new Schedule(scheduleDescription, startDate, endDate, tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"KevinLohJunYong"},"content":"        return new AddScheduleCommand(schedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"KevinLohJunYong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"KevinLohJunYong"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"KevinLohJunYong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"KevinLohJunYong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"KevinLohJunYong"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"KevinLohJunYong"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"KevinLohJunYong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"KevinLohJunYong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"KevinLohJunYong"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"goatygoatygoat":4,"KevinLohJunYong":52}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"        TaskDescription taskDescription \u003d ParserUtil.parseTaskDescription((argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"        Date date \u003d ParserUtil.parseDate((argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"        Task task \u003d new Task(taskDescription, date, tagList);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"lrj689":43,"goatygoatygoat":2}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.logic.commands.DeleteScheduleCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.logic.commands.FindScheduleCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.logic.commands.ListScheduleCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"KevinLohJunYong"},"content":"        case AddScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"KevinLohJunYong"},"content":"            return new AddScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"nicholastanvis"},"content":"        case DeleteScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"nicholastanvis"},"content":"            return new DeleteScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"nicholastanvis"},"content":"        case FindScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"nicholastanvis"},"content":"            return new FindScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"tsh22"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"tsh22"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"goatygoatygoat"},"content":"        case ListScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"goatygoatygoat"},"content":"            return new ListScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"goatygoatygoat"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"goatygoatygoat"},"content":"            return new ListTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lrj689":8,"tsh22":4,"nicholastanvis":8,"-":76,"goatygoatygoat":8,"KevinLohJunYong":3}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"KevinLohJunYong"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"    public static final Prefix PREFIX_END_DATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lrj689":1,"-":14,"KevinLohJunYong":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.logic.commands.DeleteScheduleCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.ScheduleDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":" * Parses input arguments and creates a new DeleteScheduleCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"public class DeleteScheduleCommandParser implements Parser\u003cDeleteScheduleCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"     * Parses the given {@code String} of arguments in the context of DeleteScheduleCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"     * and returns a DeleteScheduleCommand object for execution","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"     * @throws ParseException if the user does not conform to the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"    public DeleteScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, DeleteScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        ScheduleDescription scheduleDescription \u003d new ScheduleDescription(trimmedArgs);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"        return new DeleteScheduleCommand(scheduleDescription);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"nicholastanvis":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"     * Parses the given {@code String} of arguments in the context of DeleteTaskCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"     * and returns a DeleteTaskCommand object for execution","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"     * @throws ParseException if the user does not conform to the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"        TaskDescription taskDescription \u003d new TaskDescription(trimmedArgs);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"        return new DeleteTaskCommand(taskDescription);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lrj689":29}},{"path":"src/main/java/seedu/address/logic/parser/FindScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.logic.commands.FindScheduleCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.ScheduleNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":" * Parses input arguments and creates a new FindScheduleCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"public class FindScheduleCommandParser implements Parser\u003cFindScheduleCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"     * Parses the given {@code String} of arguments in the context of the FindScheduleCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"     * and returns a FindScheduleCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"    public FindScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"        return new FindScheduleCommand(new ScheduleNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicholastanvis":32}},{"path":"src/main/java/seedu/address/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":"     * and returns a FindTaskCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"        return new FindTaskCommand(new TaskNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"tsh22"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"tsh22":29}},{"path":"src/main/java/seedu/address/logic/parser/ListScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.logic.commands.ListScheduleCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.schedule.ListScheduleFormatPredicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":" * Parses input arguments and creates a new ListScheduleCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"public class ListScheduleCommandParser implements Parser\u003cListScheduleCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * Parses the given {@code String} of arguments in the context of the ListScheduleCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * and returns a ListScheduleCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    public ListScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        ListScheduleCommand listScheduleCommand \u003d new ListScheduleCommand(","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"                new ListScheduleFormatPredicate(trimmedArgs));","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        if (trimmedArgs.equals(\"day\") || trimmedArgs.equals(\"week\") || trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"            return listScheduleCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"goatygoatygoat":30}},{"path":"src/main/java/seedu/address/logic/parser/ListTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.ListTaskFormatPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":" * Parses input arguments and creates a new ListTaskCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"public class ListTaskCommandParser implements Parser\u003cListTaskCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * Parses the given {@code String} of arguments in the context of the ListTaskCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * and returns a ListTaskCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    public ListTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        ListTaskCommand listTaskCommand \u003d new ListTaskCommand(new ListTaskFormatPredicate(trimmedArgs));","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"        if (trimmedArgs.equals(\"day\") || trimmedArgs.equals(\"week\") || trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"            return listTaskCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"goatygoatygoat":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.schedule.DateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.ScheduleDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"nicholastanvis"},"content":"     * Parses a {@code String description} into a {@code ScheduleDescription}.","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"nicholastanvis"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"nicholastanvis"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"nicholastanvis"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"nicholastanvis"},"content":"    public static ScheduleDescription parseScheduleDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"nicholastanvis"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"nicholastanvis"},"content":"        if (!ScheduleDescription.isValidName(trimmedDescription)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"nicholastanvis"},"content":"            throw new ParseException(ScheduleDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"nicholastanvis"},"content":"        return new ScheduleDescription(trimmedDescription);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"     * Parses a {@code String task description} into a {@code TaskDescription}","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"lrj689"},"content":"     * @throws ParseException if the given {@code description} is invalid","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"lrj689"},"content":"    public static TaskDescription parseTaskDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"lrj689"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"lrj689"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"lrj689"},"content":"        if (!TaskDescription.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"lrj689"},"content":"            throw new ParseException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"lrj689"},"content":"        return new TaskDescription(trimmedDescription);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"goatygoatygoat"},"content":"     * Parses a {@code String dateStr} into a {@code Date}.","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"goatygoatygoat"},"content":"    public static Date parseDate(String dateStr) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(dateStr);","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"goatygoatygoat"},"content":"        String trimmedDate \u003d dateStr.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"goatygoatygoat"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"goatygoatygoat"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"goatygoatygoat"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"goatygoatygoat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"goatygoatygoat"},"content":"     * Parses a {@code String dateTimeStr} into a {@code DateTime}.","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"goatygoatygoat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"goatygoatygoat"},"content":"    public static DateTime parseDateTime(String dateTimeStr) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"goatygoatygoat"},"content":"        requireNonNull(dateTimeStr);","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"goatygoatygoat"},"content":"        String trimmedDateTime \u003d dateTimeStr.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"goatygoatygoat"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"goatygoatygoat"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"goatygoatygoat"},"content":"        return new DateTime(trimmedDateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lrj689":15,"nicholastanvis":21,"-":124,"goatygoatygoat":21}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.UniqueScheduleList;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"    private final UniqueScheduleList schedules;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"        schedules \u003d new UniqueScheduleList();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"     * Replaces the contents of the schedule list with {@code schedules}.","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":"     * {@code schedules} must not contain duplicate schedules.","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"    public void setSchedules(List\u003cSchedule\u003e schedules) {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"        this.schedules.setSchedules(schedules);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":80,"author":{"gitId":"lrj689"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"lrj689"},"content":"        setSchedules(newData.getScheduleList());","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"nicholastanvis"},"content":"    //// schedule methods","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"nicholastanvis"},"content":"     * Returns true if a schedule with the same identity as {@code schedule} exists in the schedule list.","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"nicholastanvis"},"content":"    public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"nicholastanvis"},"content":"        return schedules.contains(schedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"nicholastanvis"},"content":"     * Adds a schedule to the schedule list.","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"nicholastanvis"},"content":"     * The schedule must not already exist in the schedule list.","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"lrj689"},"content":"    public void addSchedule(Schedule schedule) {","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"lrj689"},"content":"        schedules.add(schedule);","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"nicholastanvis"},"content":"     * Removes a schedule {@code key} from the schedule list.","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"nicholastanvis"},"content":"     * {@code key} must exist in the schedule list.","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"nicholastanvis"},"content":"    public void removeSchedule(Schedule key) {","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"nicholastanvis"},"content":"        schedules.remove(key);","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"nicholastanvis"},"content":"    //// task methods","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"nicholastanvis"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"lrj689"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"lrj689"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"lrj689"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"nicholastanvis"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"nicholastanvis"},"content":"     * The task must not already exist in the task list.","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"lrj689"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"lrj689"},"content":"        tasks.add(t);","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"lrj689"},"content":"     * Removes {@code target} from this {@code AddressBook}.","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"lrj689"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"lrj689"},"content":"    public void removeTask(Task target) {","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"lrj689"},"content":"        tasks.remove(target);","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":185,"author":{"gitId":"nicholastanvis"},"content":"    public ObservableList\u003cSchedule\u003e getScheduleList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"nicholastanvis"},"content":"        return schedules.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"goatygoatygoat"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"goatygoatygoat"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":193,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lrj689":43,"nicholastanvis":35,"-":119,"goatygoatygoat":9}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    Predicate\u003cSchedule\u003e PREDICATE_SHOW_ALL_SCHEDULES \u003d unused -\u003e true;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"nicholastanvis"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task list.","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"nicholastanvis"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"nicholastanvis"},"content":"     * Adds the given task.","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"nicholastanvis"},"content":"     * {@code task} must not already exist in the task list.","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"nicholastanvis"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"nicholastanvis"},"content":"     * Deletes the given task.","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"nicholastanvis"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"nicholastanvis"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"nicholastanvis"},"content":"     * Adds the given schedule.","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"nicholastanvis"},"content":"     * {@code schedule} must not already exist in the schedule list.","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"nicholastanvis"},"content":"    void addSchedule(Schedule schedule);","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"nicholastanvis"},"content":"     * Returns true if a schedule with the same identity as {@code schedule} exists in the schedule list.","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"nicholastanvis"},"content":"    boolean hasSchedule(Schedule schedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"nicholastanvis"},"content":"     * Deletes the given schedule.","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"nicholastanvis"},"content":"     * The schedule must exist in the schedule list.","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"nicholastanvis"},"content":"    void deleteSchedule(Schedule schedule);","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"nicholastanvis"},"content":"    /** Returns an unmodifiable view of the filtered schedule list */","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"nicholastanvis"},"content":"    ObservableList\u003cSchedule\u003e getFilteredScheduleList();","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"nicholastanvis"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"nicholastanvis"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"nicholastanvis"},"content":"    void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"goatygoatygoat"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"goatygoatygoat"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"goatygoatygoat"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"goatygoatygoat"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"goatygoatygoat"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"goatygoatygoat"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lrj689":12,"nicholastanvis":37,"-":87,"goatygoatygoat":9,"KevinLohJunYong":2}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"    private final FilteredList\u003cSchedule\u003e filteredSchedules;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"        filteredSchedules \u003d new FilteredList\u003c\u003e(this.addressBook.getScheduleList());","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"nicholastanvis"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d Address Book \u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"lrj689"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d Schedule \u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"nicholastanvis"},"content":"    public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"nicholastanvis"},"content":"        return addressBook.hasSchedule(schedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"lrj689"},"content":"     * adds a {@code Schedule} into schedule list","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"lrj689"},"content":"    public void addSchedule(Schedule schedule) {","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"lrj689"},"content":"        addressBook.addSchedule(schedule);","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"lrj689"},"content":"        updateFilteredScheduleList(PREDICATE_SHOW_ALL_SCHEDULES);","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"lrj689"},"content":"    public void deleteSchedule(Schedule schedule) {","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"lrj689"},"content":"        addressBook.removeSchedule(schedule);","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"nicholastanvis"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d Task \u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"lrj689"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"lrj689"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"lrj689"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"lrj689"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"lrj689"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"lrj689"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"lrj689"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"lrj689"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"lrj689"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Schedule List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"lrj689"},"content":"     * Returns an unmodifiable view of the list of {@code Schedule} backed by the internal list of","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"lrj689"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"lrj689"},"content":"    public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"lrj689"},"content":"        return filteredSchedules;","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"KevinLohJunYong"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"lrj689"},"content":"    public void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate) {","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"lrj689"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"lrj689"},"content":"        filteredSchedules.setPredicate(predicate);","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"lrj689"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"lrj689"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"lrj689"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"goatygoatygoat"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":205,"author":{"gitId":"goatygoatygoat"},"content":"        return filteredTasks;","lastModifiedDate":"2021-03-15"},{"lineNumber":206,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":207,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":208,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":209,"author":{"gitId":"goatygoatygoat"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"goatygoatygoat"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"goatygoatygoat"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":212,"author":{"gitId":"KevinLohJunYong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":213,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":214,"author":{"gitId":"lrj689"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d misc \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lrj689":47,"nicholastanvis":21,"-":150,"goatygoatygoat":10,"KevinLohJunYong":6}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"     * Returns an unmodifiable view of the schedules list.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"     * This list will not contain any duplicate schedules.","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    ObservableList\u003cSchedule\u003e getScheduleList();","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lrj689":7,"tsh22":6,"-":17}},{"path":"src/main/java/seedu/address/model/schedule/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Schedule\u0027s datetime in Teaching Assistant.","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"public class DateTime {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"            \"Dates should be in the format yyyy-mm-ddThh:mm:ss. Time must be in the 24-hour clock notation.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"     * @param datetime A valid datetime.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    public DateTime(String datetime) {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        requireNonNull(datetime);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        checkArgument(isValidDateTime(datetime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        value \u003d LocalDateTime.parse(datetime);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     * Returns true if a given string is a valid datetime.","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    public static boolean isValidDateTime(String dateStr) {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME; //for LocalDate","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"            dateTimeFormatter.parse(dateStr);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"        return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"        return value;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"        return value.toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"                || (other instanceof DateTime","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"                \u0026\u0026 value.equals(((DateTime) other).value));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"goatygoatygoat":64}},{"path":"src/main/java/seedu/address/model/schedule/ListScheduleFormatPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"public class ListScheduleFormatPredicate implements Predicate\u003cSchedule\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    private final String keyword;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    public ListScheduleFormatPredicate(String keyword) {","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean test(Schedule schedule) {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        LocalDate today \u003d LocalDate.from(LocalDateTime.now());","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        LocalDate yesterday \u003d today.plusDays(-1);","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        LocalDate lastday \u003d today.plusDays(7);","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        LocalDate startDate \u003d LocalDate.from(schedule.getStartDate());","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        if (keyword.equals(\"day\")) {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"            return today.equals(startDate);","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (keyword.equals(\"week\")) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"            return startDate.isAfter(yesterday) \u0026\u0026 startDate.isBefore(lastday);","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"goatygoatygoat":29}},{"path":"src/main/java/seedu/address/model/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":" * Represents a Schedule in Teaching Assistant","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"public class Schedule {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"    private final ScheduleDescription scheduleDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    private final DateTime startDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    private final DateTime endDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"     * Every field must be present and not null","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    public Schedule(ScheduleDescription scheduleDescription, DateTime startDate,","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"                    DateTime endDate, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"        requireAllNonNull(scheduleDescription, startDate, endDate, tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"        this.scheduleDescription \u003d scheduleDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"    public ScheduleDescription getScheduleDescription() {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"        return scheduleDescription;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"    public LocalDateTime getStartDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"        return startDate.getDateTime();","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    public LocalDateTime getEndDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"        return endDate.getDateTime();","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"nicholastanvis"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"nicholastanvis"},"content":"     * Returns true if both schedules have the same name.","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"nicholastanvis"},"content":"     * This defines a weaker notion of equality between two schedules.","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"nicholastanvis"},"content":"    public boolean isSameSchedule(Schedule otherSchedule) {","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"nicholastanvis"},"content":"        if (otherSchedule \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"nicholastanvis"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"nicholastanvis"},"content":"        return otherSchedule !\u003d null","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"nicholastanvis"},"content":"                \u0026\u0026 otherSchedule.getScheduleDescription().equals(getScheduleDescription());","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"nicholastanvis"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"nicholastanvis"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"nicholastanvis"},"content":"        builder.append(getScheduleDescription())","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"nicholastanvis"},"content":"                .append(\"; Start Date: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"nicholastanvis"},"content":"                .append(getStartDate())","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"nicholastanvis"},"content":"                .append(\"; End Date: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"nicholastanvis"},"content":"                .append(getEndDate());","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"nicholastanvis"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"nicholastanvis"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"nicholastanvis"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"nicholastanvis"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"nicholastanvis"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicholastanvis":74,"goatygoatygoat":9}},{"path":"src/main/java/seedu/address/model/schedule/ScheduleComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"public class ScheduleComparator implements Comparator\u003cSchedule\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    public int compare(Schedule a, Schedule b) {","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"        if (a.getStartDate().isBefore(b.getStartDate())) {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"            return -1;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"            return 1;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"goatygoatygoat":15}},{"path":"src/main/java/seedu/address/model/schedule/ScheduleDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"public class ScheduleDescription {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"    public final String description;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"     * Constructs a ScheduleDescription","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"     * @param description valid description","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"    public ScheduleDescription(String description) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"        checkArgument(isValidName(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"        return description;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"                || (other instanceof seedu.address.model.schedule.ScheduleDescription // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"                \u0026\u0026 description.equals(((ScheduleDescription) other).description)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"nicholastanvis"},"content":"        return description.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicholastanvis":53}},{"path":"src/main/java/seedu/address/model/schedule/ScheduleNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":" * Tests that a {@code Schedule}\u0027s {@code ScheduleDescription} matches any of the keywords given.","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"public class ScheduleNameContainsKeywordsPredicate implements Predicate\u003cSchedule\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"    public ScheduleNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    public boolean test(Schedule schedule) {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"        String scheduleDescription \u003d schedule.getScheduleDescription().description;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(scheduleDescription, keyword));","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"                || (other instanceof ScheduleNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"                \u0026\u0026 keywords.equals(((ScheduleNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicholastanvis":32}},{"path":"src/main/java/seedu/address/model/schedule/UniqueScheduleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.exceptions.DuplicateScheduleException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"import seedu.address.model.schedule.exceptions.ScheduleNotFoundException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"public class UniqueScheduleList implements Iterable\u003cSchedule\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"    private final ObservableList\u003cSchedule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"    private final ObservableList\u003cSchedule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"     * Returns true if the list contains an equivalent schedule as the given argument.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"    public boolean contains(Schedule toCheck) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        return internalList.stream().anyMatch(toCheck::isSameSchedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"     * Adds a schedule to the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"     * The schedule must not already exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"    public void add(Schedule toAdd) {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"            throw new DuplicateScheduleException();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"        FXCollections.sort(internalList, new ScheduleComparator());","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"     * Replaces the schedule {@code target} in the list with {@code editedSchedule}.","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"     * The schedule identity of {@code editedSchedule} must not be the same as another existing schedule in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"    public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"        requireAllNonNull(target, editedSchedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"nicholastanvis"},"content":"            throw new ScheduleNotFoundException();","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"        if (!target.isSameSchedule(editedSchedule) \u0026\u0026 contains(editedSchedule)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"nicholastanvis"},"content":"            throw new DuplicateScheduleException();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"nicholastanvis"},"content":"        internalList.set(index, editedSchedule);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"nicholastanvis"},"content":"     * Removes the equivalent schedule from the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"nicholastanvis"},"content":"     * The schedule must exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"nicholastanvis"},"content":"    public void remove(Schedule toRemove) {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"nicholastanvis"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"nicholastanvis"},"content":"            throw new ScheduleNotFoundException();","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"nicholastanvis"},"content":"    public void setSchedules(UniqueScheduleList replacement) {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"nicholastanvis"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"nicholastanvis"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"nicholastanvis"},"content":"     * Replaces the contents of this list with {@code schedules}.","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"nicholastanvis"},"content":"     * {@code schedules} must not contain duplicate schedules.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"nicholastanvis"},"content":"    public void setSchedules(List\u003cSchedule\u003e schedules) {","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"nicholastanvis"},"content":"        requireAllNonNull(schedules);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"nicholastanvis"},"content":"        if (!schedulesAreUnique(schedules)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"nicholastanvis"},"content":"            throw new DuplicateScheduleException();","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"nicholastanvis"},"content":"        internalList.setAll(schedules);","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"nicholastanvis"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"nicholastanvis"},"content":"    public ObservableList\u003cSchedule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"nicholastanvis"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"nicholastanvis"},"content":"    public Iterator\u003cSchedule\u003e iterator() {","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"nicholastanvis"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"nicholastanvis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"nicholastanvis"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"nicholastanvis"},"content":"                || (other instanceof UniqueScheduleList // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"nicholastanvis"},"content":"                \u0026\u0026 internalList.equals(((UniqueScheduleList) other).internalList));","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"nicholastanvis"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"nicholastanvis"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"nicholastanvis"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"nicholastanvis"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"nicholastanvis"},"content":"     * Returns true if {@code schedules} contains only unique schedules.","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"nicholastanvis"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"nicholastanvis"},"content":"    private boolean schedulesAreUnique(List\u003cSchedule\u003e schedules) {","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"nicholastanvis"},"content":"        for (int i \u003d 0; i \u003c schedules.size() - 1; i++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"nicholastanvis"},"content":"            for (int j \u003d i + 1; j \u003c schedules.size(); j++) {","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"nicholastanvis"},"content":"                if (schedules.get(i).isSameSchedule(schedules.get(j))) {","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"nicholastanvis"},"content":"                    return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"nicholastanvis"},"content":"                }","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"nicholastanvis"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"nicholastanvis"},"content":"        return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicholastanvis":126,"goatygoatygoat":1}},{"path":"src/main/java/seedu/address/model/schedule/exceptions/DuplicateScheduleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.model.schedule.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"public class DuplicateScheduleException extends RuntimeException {","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"    public DuplicateScheduleException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"        super(\"Operation would result in duplicate schedules\");","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicholastanvis":7}},{"path":"src/main/java/seedu/address/model/schedule/exceptions/ScheduleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"package seedu.address.model.schedule.exceptions;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"public class ScheduleNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"nicholastanvis":4}},{"path":"src/main/java/seedu/address/model/task/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Task\u0027s datetime in Teaching Assistant.","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"public class Date {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"            \"Dates should be in the format yyyy-mm-dd.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    public final LocalDate value;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    public Date(String date) {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        value \u003d LocalDate.parse(date);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    public static boolean isValidDate(String dateStr) {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE; //for LocalDate","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"            dateTimeFormatter.parse(dateStr);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"        return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"        return value;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"        return value.toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"                || (other instanceof Date","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"                \u0026\u0026 value.equals(((Date) other).value));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"goatygoatygoat":64}},{"path":"src/main/java/seedu/address/model/task/ListTaskFormatPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"public class ListTaskFormatPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    private final String keyword;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    public ListTaskFormatPredicate(String keyword) {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        LocalDate yesterday \u003d today.plusDays(-1);","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        LocalDate lastday \u003d today.plusDays(7);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        if (keyword.equals(\"day\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"            return today.equals(task.getDate());","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (keyword.equals(\"week\")) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"            return task.getDate().isAfter(yesterday) \u0026\u0026 task.getDate().isBefore(lastday);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"goatygoatygoat":27}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":" * Represents a Task in the Teaching Assistant","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"public class Task {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"    private final TaskDescription taskDescription;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    private final Date date;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"     * Every field must be present and not null","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    public Task(TaskDescription taskDescription, Date date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"        requireAllNonNull(taskDescription, date, tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"    public TaskDescription getTaskDescription() {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"        return taskDescription;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"        return date.getDate();","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"                \u0026\u0026 otherTask.getTaskDescription().equals(getTaskDescription());","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"        builder.append(getTaskDescription())","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"                .append(getDate());","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lrj689":71,"goatygoatygoat":3}},{"path":"src/main/java/seedu/address/model/task/TaskComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    public int compare(Task a, Task b) {","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"        if (a.getDate().isBefore(b.getDate())) {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"            return -1;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"            return 1;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"goatygoatygoat":15}},{"path":"src/main/java/seedu/address/model/task/TaskDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"public class TaskDescription {","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"    public final String description;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"     * Constructs a TaskDescription","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"     * @param description valid description","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    public TaskDescription(String description) {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"        return description;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"                || (other instanceof seedu.address.model.task.TaskDescription // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"                \u0026\u0026 description.equals(((TaskDescription) other).description)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"        return description.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lrj689":56}},{"path":"src/main/java/seedu/address/model/task/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":" * Tests that a {@code Task}\u0027s {@code TaskDescription} matches any of the keywords given.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getTaskDescription().description, keyword));","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"                || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"                \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lrj689":31}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"        FXCollections.sort(internalList, new TaskComparator());","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing task in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"lrj689"},"content":"     * Replaces the contents of this list with {@code task}.","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"lrj689"},"content":"     * {@code tasks} must not contain duplicate task.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"lrj689"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"lrj689"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"lrj689"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"lrj689"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"lrj689"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"lrj689"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"lrj689"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"lrj689"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"lrj689"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"lrj689"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"lrj689"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"lrj689"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"lrj689"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"lrj689"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"lrj689"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"lrj689"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"lrj689"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"lrj689"},"content":"     * Returns true if {@code tasks} contains only unique persons.","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"lrj689"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"lrj689"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"lrj689"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"lrj689"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"lrj689"},"content":"                    return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"lrj689"},"content":"                }","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"lrj689"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"lrj689"},"content":"        return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lrj689":126,"goatygoatygoat":1}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lrj689":7}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lrj689":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.schedule.DateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.schedule.ScheduleDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"public class JsonAdaptedSchedule {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Schedule\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"    private final String scheduleDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    private final String startDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"    private final String endDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"     * Constructs a {@code JsonAdaptedSchedule} with the given schedule details.","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"    public JsonAdaptedSchedule(@JsonProperty(\"scheduleDescription\") String scheduleDescription,","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"                               @JsonProperty(\"startDateTime\") String startDateTime,","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"                               @JsonProperty(\"endDateTime\") String endDateTime,","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"        this.scheduleDescription \u003d scheduleDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"     * converts a given {@code Schedule} into this class for Jackson use","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"     * @param source","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"    public JsonAdaptedSchedule(Schedule source) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"        scheduleDescription \u003d source.getScheduleDescription().description;","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"        startDateTime \u003d source.getStartDate().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"        endDateTime \u003d source.getEndDate().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"     * Converts this Jackson-friendly adapted schedule object into the model\u0027s {@code Schedule} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"    public Schedule toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"        final List\u003cTag\u003e scheduleTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"            scheduleTags.add(tag.toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"        if (scheduleDescription \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, ScheduleDescription.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"        if (!ScheduleDescription.isValidName(scheduleDescription)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"            throw new IllegalValueException(ScheduleDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"        final ScheduleDescription modelScheduleDescription \u003d new ScheduleDescription(scheduleDescription);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"lrj689"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"lrj689"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, DateTime.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"goatygoatygoat"},"content":"        final DateTime modelStartDateTime \u003d new DateTime(startDateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"lrj689"},"content":"        if (endDateTime \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"lrj689"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"goatygoatygoat"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, DateTime.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"goatygoatygoat"},"content":"        final DateTime modelEndDateTime \u003d new DateTime(endDateTime);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"lrj689"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(scheduleTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"lrj689"},"content":"        return new Schedule(modelScheduleDescription, modelStartDateTime, modelEndDateTime, modelTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lrj689":86,"goatygoatygoat":5}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lrj689"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lrj689"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lrj689"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lrj689"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lrj689"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lrj689"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.Date;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.TaskDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lrj689"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lrj689"},"content":" * Jackson-friendly version of {@link Task}","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lrj689"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lrj689"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    private final String taskDeadline;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lrj689"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"lrj689"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lrj689"},"content":"    public JsonAdaptedTask(@JsonProperty(\"taskDescription\") String taskDescription,","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lrj689"},"content":"                           @JsonProperty(\"taskDeadline\") String taskDeadline,","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lrj689"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"        this.taskDeadline \u003d taskDeadline;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"lrj689"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lrj689"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"        taskDescription \u003d source.getTaskDescription().description;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lrj689"},"content":"        taskDeadline \u003d source.getDate().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lrj689"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"lrj689"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"lrj689"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lrj689"},"content":"     * Converts this Jackson-friendly adapted schedule oject into the model\u0027s {@code Task} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lrj689"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"lrj689"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lrj689"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lrj689"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"lrj689"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"lrj689"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"lrj689"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"lrj689"},"content":"        if (taskDescription \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"lrj689"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"lrj689"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TaskDescription.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lrj689"},"content":"        if (!TaskDescription.isValidDescription(taskDescription)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"            throw new IllegalValueException(TaskDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"        final TaskDescription modelTaskDescription \u003d new TaskDescription(taskDescription);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"        if (taskDeadline \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"        final Date modelTaskDeadline \u003d new Date(taskDeadline);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"lrj689"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"lrj689"},"content":"        return new Task(modelTaskDescription, modelTaskDeadline, modelTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"lrj689"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"lrj689"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lrj689":80,"goatygoatygoat":3}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"lrj689"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s)\";","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lrj689"},"content":"    private static final String MESSAGE_DUPLICATE_SCHEDULE \u003d \"Schedule list contains duplicate schedule(s)\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"lrj689"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lrj689"},"content":"    private final List\u003cJsonAdaptedSchedule\u003e schedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"lrj689"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lrj689"},"content":"                                       @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks,","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lrj689"},"content":"                                       @JsonProperty(\"schedules\") List\u003cJsonAdaptedSchedule\u003e schedules) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"lrj689"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lrj689"},"content":"        this.schedules.addAll(schedules);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"lrj689"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lrj689"},"content":"        schedules.addAll(source.getScheduleList().stream().map(JsonAdaptedSchedule::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"lrj689"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lrj689"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"lrj689"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"lrj689"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"lrj689"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"lrj689"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"lrj689"},"content":"        for (JsonAdaptedSchedule jsonAdaptedSchedule : schedules) {","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"lrj689"},"content":"            Schedule schedule \u003d jsonAdaptedSchedule.toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"lrj689"},"content":"            if (addressBook.hasSchedule(schedule)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"lrj689"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"lrj689"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"lrj689"},"content":"            addressBook.addSchedule(schedule);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lrj689":29,"-":59}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"tsh22"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"tsh22"},"content":"    private ScheduleListPanel scheduleListPanel;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"tsh22"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"tsh22"},"content":"    private StackPane scheduleListPanelPlaceholder;","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"tsh22"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"tsh22"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"tsh22"},"content":"        scheduleListPanel \u003d new ScheduleListPanel(logic.getFilteredScheduleList());","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"tsh22"},"content":"        scheduleListPanelPlaceholder.getChildren().add(scheduleListPanel.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tsh22":14,"-":196}},{"path":"src/main/java/seedu/address/ui/ScheduleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":" * An UI component that displays information of a {@code Schedule}.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"public class ScheduleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"    private static final String FXML \u003d \"ScheduleListCard.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"    public final Schedule schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"    private Label scheduleDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"    private Label startDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"tsh22"},"content":"    private Label endDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"tsh22"},"content":"    private Label startTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"tsh22"},"content":"    private Label endTime;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"tsh22"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"tsh22"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"tsh22"},"content":"     * Creates a {@code ScheduleCode} to display.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"tsh22"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"tsh22"},"content":"    public ScheduleCard(Schedule schedule) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"tsh22"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"tsh22"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"tsh22"},"content":"        scheduleDescription.setText(schedule.getScheduleDescription().description);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"tsh22"},"content":"        startDate.setText(\"From: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"tsh22"},"content":"                + schedule.getStartDate().format(DateTimeFormatter.ofPattern(\"E, dd MMM yyyy h:mm a\")));","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"tsh22"},"content":"        endDate.setText(\"To: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"tsh22"},"content":"                + schedule.getEndDate().format(DateTimeFormatter.ofPattern(\"E, dd MMM yyyy h:mm a\")));","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"tsh22"},"content":"        schedule.getTags().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"tsh22"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"tsh22"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"tsh22"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"tsh22":51}},{"path":"src/main/java/seedu/address/ui/ScheduleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":" * Panel containing the list of schedules.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"public class ScheduleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"    private static final String FXML \u003d \"ScheduleListPanel.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ScheduleListPanel.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"    private ListView\u003cSchedule\u003e scheduleListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"     * Creates a {@code ScheduleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"    public ScheduleListPanel(ObservableList\u003cSchedule\u003e scheduleList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"tsh22"},"content":"        scheduleListView.setItems(scheduleList);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"tsh22"},"content":"        scheduleListView.setCellFactory(listView -\u003e new ScheduleListPanel.ScheduleListViewCell());","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"tsh22"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"tsh22"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Schedule} using a {@code ScheduleCard}.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"tsh22"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"tsh22"},"content":"    class ScheduleListViewCell extends ListCell\u003cSchedule\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"tsh22"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"tsh22"},"content":"        protected void updateItem(Schedule schedule, boolean empty) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"tsh22"},"content":"            super.updateItem(schedule, empty);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"tsh22"},"content":"            if (empty || schedule \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"tsh22"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"tsh22"},"content":"                setText(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"tsh22"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"tsh22"},"content":"                setGraphic(new ScheduleCard(schedule).getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"tsh22"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"tsh22"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"tsh22"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"tsh22":48}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"    public final Task task;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"    private Label taskDescription;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"    private Label date;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"tsh22"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"tsh22"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"tsh22"},"content":"     * Creates a {@code TaskCode} to display.","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"tsh22"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"tsh22"},"content":"    public TaskCard(Task task) {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"tsh22"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"tsh22"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"tsh22"},"content":"        taskDescription.setText(task.getTaskDescription().description);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"tsh22"},"content":"        date.setText(task.getDate().format(DateTimeFormatter.ofPattern(\"E, dd MMM yyyy\")));","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"tsh22"},"content":"        task.getTags().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"tsh22"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"tsh22"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"tsh22"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"tsh22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"tsh22"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"tsh22"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"tsh22"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"tsh22"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"tsh22"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"tsh22"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"tsh22"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"tsh22"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"tsh22"},"content":"        // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"tsh22"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"tsh22"},"content":"        return taskDescription.getText().equals(card.taskDescription.getText())","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"tsh22"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"tsh22"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"tsh22":60}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"tsh22"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"tsh22"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListPanel.TaskListViewCell());","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"tsh22"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"tsh22"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"tsh22"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"tsh22"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"tsh22"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"tsh22"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"tsh22"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"tsh22"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"tsh22"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"tsh22"},"content":"                setText(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"tsh22"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"tsh22"},"content":"                setGraphic(new TaskCard(task).getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"tsh22"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"tsh22"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"tsh22"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"tsh22"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"tsh22":48}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"         title\u003d\"Teaching Assistant\" minWidth\u003d\"700\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"tsh22"},"content":"                \u003cGridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"tsh22"},"content":"                    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"tsh22"},"content":"                        \u003cColumnConstraints percentWidth\u003d\"33.333\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"tsh22"},"content":"                        \u003cColumnConstraints percentWidth\u003d\"33.333\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"tsh22"},"content":"                        \u003cColumnConstraints percentWidth\u003d\"33.333\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"tsh22"},"content":"                    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"tsh22"},"content":"                    \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"tsh22"},"content":"                          VBox.vgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"tsh22"},"content":"                        \u003cLabel text\u003d\"Contacts\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":66,"author":{"gitId":"tsh22"},"content":"                    \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"tsh22"},"content":"                          VBox.vgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"tsh22"},"content":"                        \u003cLabel text\u003d\"Tasks\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"tsh22"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"tsh22"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"tsh22"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"tsh22"},"content":"                        \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"tsh22"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"tsh22"},"content":"                    \u003cVBox fx:id\u003d\"scheduleList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"tsh22"},"content":"                          VBox.vgrow\u003d\"ALWAYS\" GridPane.columnIndex\u003d\"2\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"tsh22"},"content":"                        \u003cLabel text\u003d\"Schedules\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"tsh22"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"tsh22"},"content":"                            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"tsh22"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"tsh22"},"content":"                        \u003cStackPane fx:id\u003d\"scheduleListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"tsh22"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"tsh22"},"content":"                \u003c/GridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tsh22":32,"-":57}},{"path":"src/main/resources/view/ScheduleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"                \u003cLabel fx:id\u003d\"scheduleDescription\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"            \u003cLabel fx:id\u003d\"startDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"            \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"tsh22"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"tsh22":28}},{"path":"src/main/resources/view/ScheduleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"    \u003cListView fx:id\u003d\"scheduleListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"tsh22":8}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"tsh22"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"tsh22"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"tsh22"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"tsh22"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"tsh22"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"tsh22"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"tsh22"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"tsh22"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"tsh22"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"tsh22"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"tsh22"},"content":"                \u003cLabel fx:id\u003d\"taskDescription\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"tsh22"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"tsh22"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"tsh22"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"tsh22"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"tsh22"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"tsh22"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"tsh22":27}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsh22"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"tsh22"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"tsh22"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"tsh22"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"tsh22"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"tsh22"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"tsh22":8}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"lrj689"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"  \"schedules\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lrj689":3,"-":12}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"  \"schedules\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lrj689":3,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"lrj689"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lrj689"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lrj689"},"content":"  \"schedules\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lrj689":3,"-":13}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"lrj689"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lrj689"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lrj689"},"content":"  \"schedules\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lrj689":3,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"lrj689"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lrj689"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lrj689"},"content":"  \"schedules\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lrj689":3,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"KevinLohJunYong"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"lrj689"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"lrj689"},"content":"        public boolean hasTask(Task toAdd) {","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"lrj689"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"lrj689"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"lrj689"},"content":"        public void addTask(Task toAdd) {","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"lrj689"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"lrj689"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"lrj689"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"lrj689"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"nicholastanvis"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"nicholastanvis"},"content":"        public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"nicholastanvis"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"KevinLohJunYong"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"nicholastanvis"},"content":"        public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"nicholastanvis"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"nicholastanvis"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"nicholastanvis"},"content":"        public void deleteSchedule(Schedule schedule) {","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"KevinLohJunYong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"KevinLohJunYong"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"KevinLohJunYong"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"goatygoatygoat"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"goatygoatygoat"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"goatygoatygoat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":187,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"KevinLohJunYong"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"nicholastanvis"},"content":"        public void addSchedule(Schedule schedule) {","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"KevinLohJunYong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"KevinLohJunYong"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"nicholastanvis"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":195,"author":{"gitId":"nicholastanvis"},"content":"        public void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"nicholastanvis"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"nicholastanvis"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"nicholastanvis"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"goatygoatygoat"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"goatygoatygoat"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"goatygoatygoat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"lrj689":15,"nicholastanvis":19,"-":194,"goatygoatygoat":10,"KevinLohJunYong":9}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"lrj689"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"goatygoatygoat"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"lrj689"},"content":"        private final ObservableList\u003cSchedule\u003e schedules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"goatygoatygoat"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"goatygoatygoat"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"goatygoatygoat"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"goatygoatygoat"},"content":"            return tasks;","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"goatygoatygoat"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"lrj689"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"lrj689"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"lrj689"},"content":"        public ObservableList\u003cSchedule\u003e getScheduleList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"lrj689"},"content":"            return schedules;","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"lrj689"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"lrj689":7,"-":102,"goatygoatygoat":7}}]
