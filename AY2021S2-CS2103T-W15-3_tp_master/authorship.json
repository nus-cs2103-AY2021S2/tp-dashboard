[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-W15-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-W15-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### JJIMY","lastModifiedDate":"2021-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"JJIMY is a restaurant management app for managing food orders, ingredient inventory, etc via Command Line Interface (CLI). \u003cbr/\u003e ","lastModifiedDate":"2021-02-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"For the detailed documentation of this project, see the **[JJIMY Product Website](https://ay2021s2-cs2103t-w15-3.github.io/tp/)**","lastModifiedDate":"2021-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Value Proposition","lastModifiedDate":"2021-02-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"- Keep track of customers’ contacts and preferences","lastModifiedDate":"2021-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"- Keep track of customers’ orders","lastModifiedDate":"2021-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"- Keep track of the food inventory","lastModifiedDate":"2021-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"- Keep track of which ingredients to restock","lastModifiedDate":"2021-02-15"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"### Acknowledgeemnts","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"Sharptail":8,"-":10}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"java {","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    ignoreFailures \u003d true","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Sharptail":4,"-":72,"jamesleeht":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"You can reach us at the email `jjimy@comp.nus.edu.sg`","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"### Ian Chan Kit Wai","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/ianckw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"[[github](http://github.com/IanCKW)]","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/ian.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"* Role: Team Lead","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"* In Charge of: Food Orders","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"### James Lee Hong Thern","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/jamesleeht.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"[[github](https://github.com/jamesleeht)]","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/james.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"* Role: Testing","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"* In Charge of: Food Inventory","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"### Guan Yang Ze","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/guanyz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"[[github](http://github.com/guanyz)]","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/yangze.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"* Role: Documentation","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"* In Charge of: Shopping List","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"### Lee Kang Ting Marcus","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/kangtinglee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"[[github](http://github.com/kangtinglee)]","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/marcus.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"* Role: Integration","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"* In Charge of: Contact","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"### Kong Jian Wei","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/sharptail.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"[[github](http://github.com/Sharptail)]","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/jianwei.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"* Role: Code Quality","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"* In Charge of: Menu","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"Sharptail":31,"-":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"guanyz"},"content":"### Design enhancements","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"guanyz"},"content":"#### Model update","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"jamesleeht"},"content":"The model has been updated to contain new classes for the `menu`, `inventory`, and `order` components (`Dish`, `Ingredient`, and `Order` classes respectively), in addition to the original `Person` class for the `contact` component.","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"jamesleeht"},"content":"`Person` class has had field classes `Phone`, `Address` and `Email` removed. `Tag` has also been replaced with `String` instead. The validation functionality will be moved to other classes.","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"jamesleeht"},"content":"`UniquePersonList` has been adapted to `UniqueItemList\u003cT\u003e`, with every model class implementing the `Item` interface.","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"jamesleeht"},"content":"Every component has its own `Book` class which uses `UniqueItemList\u003cT\u003e`, which have thgir functionality exposed through the `ModelManager` class (Facade pattern).","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"guanyz"},"content":"#### Storage update","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"jamesleeht"},"content":"The storage has been updated to handle the new classes and their relevant `Book` classes. ","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"jamesleeht"},"content":"Sample data has also been added for each book. JSON serializability of each class is ensured via the use of `Jackson` annotations.","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"jamesleeht"},"content":"No `JsonAdaptedPerson` or similar classes are used. Instead, the model class is directly annotated for deserialization.","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"guanyz"},"content":"#### Component Parser","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"guanyz"},"content":"The `ComponentParser` mechanism is facilitated by `JJIMYParser` with a general command input format of","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"guanyz"},"content":"    [component] [command] [arguments]","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"guanyz"},"content":"`JJIMYParser` will read in the first word of the input which is the `[component]` and pass the command on to the respective component parser (one of `CustomerParser`, `MenuParser`, `OrderParser` and `InventoryParser`) that implements `ComponentParser`. The component word is stripped by `JJIMYParser`, so the relevant `ComponentParser` receives an input format of","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"guanyz"},"content":"    [command] [arguments]","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"guanyz"},"content":"Finally, the respective `ComponentParser` will read in the `[command]` and return their respective `ComponentCommand` to be executed by `LogicManager`.","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"guanyz"},"content":"The following sequence diagram shows how a `CustomerAddCommand` operation is parsed and executed.","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"guanyz"},"content":"![Sequence diagram for a CustomerAddCommand](images/JJIMYParserSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"Sharptail"},"content":"The following activity diagram summarizes what happens when a user executes a new command.","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"guanyz"},"content":"![Activity diagram for a new command](images/JJIMYParserActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"#### Parser validation","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"jamesleeht"},"content":"Validation of fields through regex are moved out of the model classes and into their own classes.","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"Apart from regex, validation is also done through looking up of the model to ensure that no invalid links to other model classes (E.g. an order linking to a non-existing Dish) happens.","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"guanyz"},"content":"#### Data consistency","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"kangtinglee"},"content":"To ensure data consistency, some calls of the `delete` function have cascading effects. ","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"kangtinglee"},"content":"##### Deletion of Person objects","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"kangtinglee"},"content":"When a `Person` is deleted from the model, all `Order`s related to that `Person` should also be deleted, since that `Person` no longer exists. This is illustrated in the following sequence diagram:","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"guanyz"},"content":"![Diagram showing example of cascading deletion](images/CascadingDeletionCustomers.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"guanyz"},"content":"As seen from the above sequence diagram, when `deletePerson` is called on `ModelManager`, it first deletes the `Person`","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"guanyz"},"content":"from `PersonBook`. Then, it retrieves the entire order list from `OrderBook` and checks each individual `Order`. If the","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"guanyz"},"content":"`Order` is associated with the `Person`, then the `Order` is removed by `ModelManger` via the `deleteOrder` method. This","lastModifiedDate":"2021-03-25"},{"lineNumber":191,"author":{"gitId":"guanyz"},"content":"check is done via `Order::isFromCustomer` which returns `true` if the `Order` is associated with the `Customer` and","lastModifiedDate":"2021-03-25"},{"lineNumber":192,"author":{"gitId":"guanyz"},"content":"`false` otherwise.","lastModifiedDate":"2021-03-25"},{"lineNumber":193,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"kangtinglee"},"content":"##### Deletion of Ingredient objects","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":196,"author":{"gitId":"kangtinglee"},"content":"Another key instance of data consistency occurs between the `Ingredient` and `Dish` classes. The deletion of an Ingredient also affects all the dishes that use that ingredient and hence, those `Dish`es will also be removed.","lastModifiedDate":"2021-03-26"},{"lineNumber":197,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":198,"author":{"gitId":"kangtinglee"},"content":"When an `Ingredient` is being attempted to be deleted, a check is first done to see if any `Dish` uses that `Ingredient`. If no `Dish` uses the `Ingredient`, then it is deleted immediately.","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"kangtinglee"},"content":"However, in the event that there are `Dish`es that use the `Ingredient` in question, then a warning will be displayed and users will be required to re-enter their command but with a `-f` flag to confirm that they want to also delete all `Dish`es associated with the `Ingredient`.","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":202,"author":{"gitId":"kangtinglee"},"content":"##### Logging of Order object","lastModifiedDate":"2021-03-26"},{"lineNumber":203,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"kangtinglee"},"content":"Data consistency extends beyond deletion. When `Order` objects are created, the `Ingredient`s and their quantities are tabulated from the `Dish`es and their respective quantities. ","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"kangtinglee"},"content":"The quantity of each `Ingredient` is then decremented by the corresponding amount. ","lastModifiedDate":"2021-03-26"},{"lineNumber":206,"author":{"gitId":"kangtinglee"},"content":"This automated data link ensures that the restaurant owner will be notified when they are attempting to place orders for dishes that have insufficient stock to produce.","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"guanyz"},"content":"#### Concurrent list display","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":210,"author":{"gitId":"guanyz"},"content":"To increase the efficiency of adding food orders, the GUI has been improved to display two lists at the same time. The customer list will always be shown on the left column whereas the right column will display one of the other components.","lastModifiedDate":"2021-03-25"},{"lineNumber":211,"author":{"gitId":"guanyz"},"content":" ","lastModifiedDate":"2021-03-25"},{"lineNumber":212,"author":{"gitId":"guanyz"},"content":"Which component list is shown on the right will depend on the component of the last command input. For example, using a `menu add` command will cause the right side to display the menu list, whereas `order add` will show the right side to display the order list. However, using a command on the `customer` component will only update the left list and not affect the right list.","lastModifiedDate":"2021-03-25"},{"lineNumber":213,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"guanyz"},"content":"#### \\[Proposed\\] Data archiving","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":216,"author":{"gitId":"guanyz"},"content":"It is proposed that the general use case for removing `Order` objects from the currently displayed list will become not to delete them, but to *archive* them for future reference (e.g. accounting purposes). This will be achieved with a `completed` field within each Order object, which will determine whether they are displayed in the currently active order list or in the archived order list.","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"guanyz"},"content":"### Command enhancements","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"guanyz"},"content":"#### Add command","lastModifiedDate":"2021-03-25"},{"lineNumber":221,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":222,"author":{"gitId":"guanyz"},"content":"The `add` command is implemented for all four components and can be called from the CLI input with the general form","lastModifiedDate":"2021-03-25"},{"lineNumber":223,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":224,"author":{"gitId":"guanyz"},"content":"\t[component] add [arguments...]","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"Sharptail"},"content":"\t","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"guanyz"},"content":"The arguments differ depending on what component the `add` command is being called on. (For more details, see the description of individual `add` commands in the [User Guide](https://ay2021s2-cs2103t-w15-3.github.io/tp/UserGuide.html).) ","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"guanyz"},"content":"For details on how the command is parsed, refer to the explanation in the [Component Parser description](#component-parser). After the command is successfully parsed into an add `Command` object (e.g. `MenuAddCommand`), the `Command` object is executed by the `LogicManager`; the `add` commands\u0027 `execute` methods include validation routines to ensure the item to be added is both valid and not a duplicate of an item in the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":229,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"guanyz"},"content":"Finally, the `ModelManager` is called to add the item to the relevant `Book`, and a `CommandResult` object is returned, which causes the `MainWindow` to update to display the result. The following sequence diagram shows how the `MainWindow` is updated after a `menu add` command is called by the user. Note that, as detailed in the [concurrent list display description](#concurrent-list-display), the right-hand side of the `MainWindow` will be updated to show the new state of the menu.","lastModifiedDate":"2021-03-25"},{"lineNumber":231,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"guanyz"},"content":"![Sequence diagram showing GUI update caused by a MenuAddCommand](images/MenuAddGUI.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"guanyz"},"content":"#### Delete command","lastModifiedDate":"2021-03-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"guanyz"},"content":"The `delete` command is implemented for all four components and can be called from the CLI input with the form","lastModifiedDate":"2021-03-25"},{"lineNumber":237,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":238,"author":{"gitId":"guanyz"},"content":"\t[component] delete [arguments...]","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":240,"author":{"gitId":"guanyz"},"content":"The argument for the `delete` command is always the (1-indexed) index of the item to be deleted, *as shown in the currently displayed list* .","lastModifiedDate":"2021-03-25"},{"lineNumber":241,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":242,"author":{"gitId":"guanyz"},"content":"For details on how the command is parsed, refer to the explanation in the [Component Parser description](#component-parser). After the command is successfully parsed into an delete `Command` object (e.g. `MenuDeleteCommand`), the `Command` object is executed by the `LogicManager`; the `delete` commands\u0027 `execute` methods include validation routines to ensure the index selected is a valid index.","lastModifiedDate":"2021-03-25"},{"lineNumber":243,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":244,"author":{"gitId":"guanyz"},"content":"Finally, the `ModelManager` is called to delete the item from the relevant `Book`, and a `CommandResult` object is returned, which causes the `MainWindow` to update to display the result.","lastModifiedDate":"2021-03-25"},{"lineNumber":245,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":246,"author":{"gitId":"guanyz"},"content":"In some cases, use of the `delete` command may trigger cascading `delete`s on other lists to maintain data consistency. For more information, see the [data consistency section](#data-consistency) of this Developer Guide.","lastModifiedDate":"2021-03-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":248,"author":{"gitId":"guanyz"},"content":"After execution, the GUI\u0027s displayed list is updated in a similar fashion to the GUI update caused by the [add command](#add-command).","lastModifiedDate":"2021-03-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":250,"author":{"gitId":"guanyz"},"content":"#### List command","lastModifiedDate":"2021-03-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":252,"author":{"gitId":"guanyz"},"content":"The `list` command is implemented for all four components and can be called from the CLI input with the form","lastModifiedDate":"2021-03-25"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":254,"author":{"gitId":"IanCKW"},"content":"\t[component] list","lastModifiedDate":"2021-03-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":256,"author":{"gitId":"guanyz"},"content":"There are no arguments for the `list` command. ","lastModifiedDate":"2021-03-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":258,"author":{"gitId":"guanyz"},"content":"Unlike the other commands, the `list` command has no specific parsers beyond the base component parsers (e.g. `MenuParser`; there is **no** `MenuListParser`), since there are no further arguments to parse. Therefore, the `Command` object is created directly by the base component parser and returned to be executed into a `CommandResult` object. The `CommandResult` is used to update the GUI, as explained in the [concurrent list display description](#concurrent-list-display).","lastModifiedDate":"2021-03-25"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":260,"author":{"gitId":"guanyz"},"content":"The following sequence diagram shows how the GUI is updated from `MainWindow` after a `menu list` command is called by the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":261,"author":{"gitId":"guanyz"},"content":"![Sequence diagram showing GUI update caused by a MenuListCommand](images/MenuListGUI.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":263,"author":{"gitId":"guanyz"},"content":"#### \\[Proposed\\] Find command","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":265,"author":{"gitId":"guanyz"},"content":"The `find` command will be implemented for all four components and can be called from the CLI input with the general form","lastModifiedDate":"2021-03-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"guanyz"},"content":"\t[component] find [arguments...]","lastModifiedDate":"2021-03-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"guanyz"},"content":"The arguments of the `find` command will always be the keyword(s) to be searched for.","lastModifiedDate":"2021-03-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":271,"author":{"gitId":"guanyz"},"content":"The `find` command will be parsed in a similar way to other commands (see the [Component Parser description](#component-parser)). The `find` command will update the `FilteredList` object to only contain items that match the keywords and return a `CommandResult` object to update the GUI, in a similar fashion to the GUI update caused by the [add command](#add-command).","lastModifiedDate":"2021-03-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":273,"author":{"gitId":"guanyz"},"content":"#### \\[Proposed\\] Edit command","lastModifiedDate":"2021-03-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":275,"author":{"gitId":"guanyz"},"content":"The `edit` command will be implemented for all four components and can be called from the CLI input with the general form","lastModifiedDate":"2021-03-25"},{"lineNumber":276,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":277,"author":{"gitId":"guanyz"},"content":"\t[component] edit [arguments...]","lastModifiedDate":"2021-03-25"},{"lineNumber":278,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"guanyz"},"content":"Similar to the implementation of the `add` command, the arguments will differ depending on what component the `edit` command is being called on.","lastModifiedDate":"2021-03-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"guanyz"},"content":"The `edit` command will be parsed in a similar way to other commands (see the [Component Parser description](#component-parser)). The `edit` command will select an object from the *currently displayed list* via its (1-indexed) index and create a new object with the same parameters, except for the parameters given as arguments to be updated. ","lastModifiedDate":"2021-03-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"guanyz"},"content":"This new object will replace an object in the current book and return a `CommandResult` object to update the GUI from `MainWindow`, in a similar fashion to the GUI update caused by the [add command](#add-command).","lastModifiedDate":"2021-03-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"IanCKW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-02"},{"lineNumber":298,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"IanCKW"},"content":"* has a need to manage a significant number of contacts, orders, menu items and inventory","lastModifiedDate":"2021-03-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"IanCKW"},"content":"**Value proposition**: manage contacts, orders, menu items and inventory faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"guanyz"},"content":"| Priority | As a...                        | I want to...                                               | So that I can...                                            |","lastModifiedDate":"2021-03-02"},{"lineNumber":319,"author":{"gitId":"guanyz"},"content":"| -------- | ------------------------------ | ---------------------------------------------------------- | ----------------------------------------------------------- |","lastModifiedDate":"2021-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"| `* * *`  | new user                       | see usage instructions                                     | refer to instructions when I forget how to use the App      |","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"guanyz"},"content":"| `* * *`  | fast typer                     | be able to input by CLI                                    | key in commands faster                                      |","lastModifiedDate":"2021-03-02"},{"lineNumber":322,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | add a customer\u0027s contact                                   | keep track of each customer\u0027s details                       |","lastModifiedDate":"2021-03-02"},{"lineNumber":323,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | remove a customer\u0027s contact                                | remove customers who no longer patronize the restaurant     |","lastModifiedDate":"2021-03-02"},{"lineNumber":324,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | add dishes to the menu                                     | keep track of dishes being offered                          |","lastModifiedDate":"2021-03-02"},{"lineNumber":325,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | remove dishes from the menu                                | remove dishes that are not being offered anymore            |","lastModifiedDate":"2021-03-02"},{"lineNumber":326,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | add food orders to the order list                          | keep track of the food I need to prepare                    |","lastModifiedDate":"2021-03-02"},{"lineNumber":327,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | remove food orders from the order list                     | remove the order if my customers changed their minds        |","lastModifiedDate":"2021-03-02"},{"lineNumber":328,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | add the ingredients that I have restocked to the inventory | know which ingredients I have in stock                      |","lastModifiedDate":"2021-03-02"},{"lineNumber":329,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | remove ingredients from the food inventory                 | remove an ingredient I have just used                       |","lastModifiedDate":"2021-03-02"},{"lineNumber":330,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | view a list of ingredients from the food inventory         | so I know which ingredients I have in stock                 |","lastModifiedDate":"2021-03-16"},{"lineNumber":331,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | add tasks to my shopping list        \t\t\t | so I can remember which items to restock                    |","lastModifiedDate":"2021-03-16"},{"lineNumber":332,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | remove tasks from my shopping list    \t\t         | so I can remove tasks I don\u0027t need anymore                  |","lastModifiedDate":"2021-03-16"},{"lineNumber":333,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | view all tasks to my shopping list                         | so I can view which items to restock                        |","lastModifiedDate":"2021-03-16"},{"lineNumber":334,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | add dishes to the menu list                                | so I can keep track of the dishes being offered             |","lastModifiedDate":"2021-03-16"},{"lineNumber":335,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | remove dishes to the menu list                             | so I can remove dishes that are not being offered anymore   |","lastModifiedDate":"2021-03-16"},{"lineNumber":336,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | view all dishes to the menu list                           | so I can view all the dishes being offered                  |","lastModifiedDate":"2021-03-16"},{"lineNumber":337,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | view the list of food orders                               | so I know which dishes to prepare                           |","lastModifiedDate":"2021-03-16"},{"lineNumber":338,"author":{"gitId":"guanyz"},"content":"| `* *`    | restaurant owner               | edit a customer\u0027s contact                                  | rectify typos for customer errors                           |","lastModifiedDate":"2021-03-02"},{"lineNumber":339,"author":{"gitId":"guanyz"},"content":"| `* *`    | user with many contacts        | find a customer\u0027s contact                                  | quickly locate the contact details of a particular customer |","lastModifiedDate":"2021-03-02"},{"lineNumber":340,"author":{"gitId":"guanyz"},"content":"| `* *`    | owner with a large menu        | find a dish on the menu                                    | quickly locate details of a dish on the menu                |","lastModifiedDate":"2021-03-02"},{"lineNumber":341,"author":{"gitId":"guanyz"},"content":"| `* *`    | owner of a busy restaurant     | find a food order from the order list                      | quickly locate the details of an order I\u0027m working on       |","lastModifiedDate":"2021-03-02"},{"lineNumber":342,"author":{"gitId":"guanyz"},"content":"| `* *`    | owner with a complex inventory | find the quantity of an ingredient in the food inventory   | quickly check how much of a certain ingredient I have left  |","lastModifiedDate":"2021-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":349,"author":{"gitId":"IanCKW"},"content":"**Use case: Request help**","lastModifiedDate":"2021-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":353,"author":{"gitId":"IanCKW"},"content":"1.  User requests help","lastModifiedDate":"2021-03-02"},{"lineNumber":354,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY displays a list of commands","lastModifiedDate":"2021-03-02"},{"lineNumber":355,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":356,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":357,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":358,"author":{"gitId":"IanCKW"},"content":"**Use case: Exit**","lastModifiedDate":"2021-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"IanCKW"},"content":"1.  User requests to exit","lastModifiedDate":"2021-03-02"},{"lineNumber":363,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY exits","lastModifiedDate":"2021-03-02"},{"lineNumber":364,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":365,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":366,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":367,"author":{"gitId":"IanCKW"},"content":"**Use case: Add a contact**","lastModifiedDate":"2021-03-02"},{"lineNumber":368,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":369,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":370,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":371,"author":{"gitId":"IanCKW"},"content":"1.  User requests to add a contact","lastModifiedDate":"2021-03-02"},{"lineNumber":372,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY adds the contact","lastModifiedDate":"2021-03-02"},{"lineNumber":373,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":374,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":375,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":376,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":377,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":378,"author":{"gitId":"IanCKW"},"content":"* 1a. JIMMY detects duplicate","lastModifiedDate":"2021-03-02"},{"lineNumber":379,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":380,"author":{"gitId":"IanCKW"},"content":"\t* 1a1. JIMMY shows an error message","lastModifiedDate":"2021-03-02"},{"lineNumber":381,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":382,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":383,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":384,"author":{"gitId":"IanCKW"},"content":"**Use case: List all contacts**","lastModifiedDate":"2021-03-02"},{"lineNumber":385,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":386,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":387,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":388,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":389,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":390,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":391,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":392,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":393,"author":{"gitId":"IanCKW"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2021-03-02"},{"lineNumber":394,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":395,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":396,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":397,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":398,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":399,"author":{"gitId":"IanCKW"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":400,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY deletes the contact","lastModifiedDate":"2021-03-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"IanCKW"},"content":"**Use case: Find a contact**","lastModifiedDate":"2021-03-02"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"guanyz"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":420,"author":{"gitId":"IanCKW"},"content":"1. User requests to list contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":421,"author":{"gitId":"IanCKW"},"content":"2. JJIMY shows a list of contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":422,"author":{"gitId":"IanCKW"},"content":"3. User requests to find contacts based on keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":423,"author":{"gitId":"IanCKW"},"content":"4. JJIMY returns a list of matching contacts for the keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":427,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"IanCKW"},"content":"* 3a. The given keywords do not match any contacts.","lastModifiedDate":"2021-03-02"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"IanCKW"},"content":"**Use case: Add a menu item**","lastModifiedDate":"2021-03-02"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":442,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":443,"author":{"gitId":"IanCKW"},"content":"1.  User requests to add a menu item","lastModifiedDate":"2021-03-02"},{"lineNumber":444,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY adds the menu item","lastModifiedDate":"2021-03-02"},{"lineNumber":445,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":446,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":447,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":448,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":449,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":450,"author":{"gitId":"IanCKW"},"content":"* 1a. JIMMY detects duplicate","lastModifiedDate":"2021-03-02"},{"lineNumber":451,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":452,"author":{"gitId":"IanCKW"},"content":"\t* 1a1. JIMMY shows an error message","lastModifiedDate":"2021-03-02"},{"lineNumber":453,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":454,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":455,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":456,"author":{"gitId":"IanCKW"},"content":"**Use case: List all menu items**","lastModifiedDate":"2021-03-02"},{"lineNumber":457,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":458,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":459,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":460,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":461,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":462,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":463,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"IanCKW"},"content":"**Use case: Delete a menu item from the menu**","lastModifiedDate":"2021-03-02"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":468,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":469,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":470,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":471,"author":{"gitId":"IanCKW"},"content":"3.  User requests to delete a specific menu item in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":472,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY deletes the menu item","lastModifiedDate":"2021-03-02"},{"lineNumber":473,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":474,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":475,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":476,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"IanCKW"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"IanCKW"},"content":"**Use case: Find a menu item**","lastModifiedDate":"2021-03-02"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"guanyz"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":492,"author":{"gitId":"IanCKW"},"content":"1. User requests to list menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":493,"author":{"gitId":"IanCKW"},"content":"2. JJIMY shows a list of menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":494,"author":{"gitId":"IanCKW"},"content":"3. User requests to find menu items based on keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":495,"author":{"gitId":"IanCKW"},"content":"4. JJIMY returns a list of matching menu items for the keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":498,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":499,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":502,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":503,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":504,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":505,"author":{"gitId":"IanCKW"},"content":"* 3a. The given keywords do not match any menu item.","lastModifiedDate":"2021-03-02"},{"lineNumber":506,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":507,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":508,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":509,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":510,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":511,"author":{"gitId":"IanCKW"},"content":"**Use case: Add an order**","lastModifiedDate":"2021-03-02"},{"lineNumber":512,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":513,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":514,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":515,"author":{"gitId":"IanCKW"},"content":"1.  User requests to add an order","lastModifiedDate":"2021-03-02"},{"lineNumber":516,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY adds the order","lastModifiedDate":"2021-03-02"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":518,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":520,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":522,"author":{"gitId":"IanCKW"},"content":"* 1a. JIMMY detects duplicate","lastModifiedDate":"2021-03-02"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":524,"author":{"gitId":"IanCKW"},"content":"\t* 1a1. JIMMY shows an error message","lastModifiedDate":"2021-03-02"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":526,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":528,"author":{"gitId":"IanCKW"},"content":"**Use case: List all orders**","lastModifiedDate":"2021-03-02"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":530,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":532,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list orders","lastModifiedDate":"2021-03-02"},{"lineNumber":533,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of orders","lastModifiedDate":"2021-03-02"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":535,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"IanCKW"},"content":"**Use case: Delete an order**","lastModifiedDate":"2021-03-02"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":539,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":541,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list orders","lastModifiedDate":"2021-03-02"},{"lineNumber":542,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of orders","lastModifiedDate":"2021-03-02"},{"lineNumber":543,"author":{"gitId":"IanCKW"},"content":"3.  User requests to delete a specific order in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":544,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY deletes the order","lastModifiedDate":"2021-03-02"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":546,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":548,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":550,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":551,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":552,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":554,"author":{"gitId":"IanCKW"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":555,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":556,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":557,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":558,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":560,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":561,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":562,"author":{"gitId":"IanCKW"},"content":"**Use case: Find an order**","lastModifiedDate":"2021-03-02"},{"lineNumber":563,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":564,"author":{"gitId":"guanyz"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":565,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":566,"author":{"gitId":"IanCKW"},"content":"1. User requests to list orders","lastModifiedDate":"2021-03-02"},{"lineNumber":567,"author":{"gitId":"IanCKW"},"content":"2. JJIMY shows a list of orders","lastModifiedDate":"2021-03-02"},{"lineNumber":568,"author":{"gitId":"IanCKW"},"content":"3. User requests to find orders based on keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":569,"author":{"gitId":"IanCKW"},"content":"4. JJIMY returns a list of matching orders for the keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":570,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":571,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":572,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":573,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":574,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":575,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":576,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":577,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":578,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":579,"author":{"gitId":"IanCKW"},"content":"* 3a. The given keywords do not match any order.","lastModifiedDate":"2021-03-02"},{"lineNumber":580,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":581,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":582,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":583,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":584,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":585,"author":{"gitId":"IanCKW"},"content":"**Use case: Add an inventory item**","lastModifiedDate":"2021-03-02"},{"lineNumber":586,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":587,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":588,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":589,"author":{"gitId":"IanCKW"},"content":"1.  User requests to add an inventory item","lastModifiedDate":"2021-03-02"},{"lineNumber":590,"author":{"gitId":"IanCKW"},"content":"2.  If the quantity is 0, JJIMY adds a new ingredient, otherwise it increments the quantity","lastModifiedDate":"2021-03-02"},{"lineNumber":591,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":592,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":593,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":594,"author":{"gitId":"IanCKW"},"content":"**Use case: List all inventory items**","lastModifiedDate":"2021-03-02"},{"lineNumber":595,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":596,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":597,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":598,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":599,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":600,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":601,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":602,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":603,"author":{"gitId":"IanCKW"},"content":"**Use case: Delete an inventory item**","lastModifiedDate":"2021-03-02"},{"lineNumber":604,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":605,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":606,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":607,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":608,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":609,"author":{"gitId":"IanCKW"},"content":"3.  User requests to delete a specific inventory item in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":610,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY deletes the inventory item","lastModifiedDate":"2021-03-02"},{"lineNumber":611,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":612,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":613,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":614,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":615,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":616,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":617,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":618,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":619,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":620,"author":{"gitId":"IanCKW"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":621,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":622,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":623,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":624,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":625,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":626,"author":{"gitId":"IanCKW"},"content":"**Use case: Decrease the quantity of an inventory item**","lastModifiedDate":"2021-03-02"},{"lineNumber":627,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":628,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":629,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":630,"author":{"gitId":"IanCKW"},"content":"1. User requests to list all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":631,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":632,"author":{"gitId":"IanCKW"},"content":"3.  User requests to decrease the quantity of a specific inventory item in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":633,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY decreases the quantity inventory item","lastModifiedDate":"2021-03-02"},{"lineNumber":634,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":635,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":636,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":637,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":638,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":639,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":640,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":641,"author":{"gitId":"IanCKW"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":642,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":643,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":644,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":645,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":646,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":647,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":648,"author":{"gitId":"IanCKW"},"content":"**Use case: Find a inventory item**","lastModifiedDate":"2021-03-02"},{"lineNumber":649,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":650,"author":{"gitId":"guanyz"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":651,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":652,"author":{"gitId":"IanCKW"},"content":"1. User requests to list all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":653,"author":{"gitId":"IanCKW"},"content":"2. JJIMY shows a list of all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":654,"author":{"gitId":"IanCKW"},"content":"3. User requests to find inventory items based on keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":655,"author":{"gitId":"IanCKW"},"content":"4. JJIMY returns a list of matching inventory items for the keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":656,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":657,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":658,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":659,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":660,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":661,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":662,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":663,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":664,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":665,"author":{"gitId":"IanCKW"},"content":"* 3a. The given keywords do not match any inventory item.","lastModifiedDate":"2021-03-02"},{"lineNumber":666,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":667,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":668,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":669,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":670,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":671,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":672,"author":{"gitId":"IanCKW"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-03-02"},{"lineNumber":673,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":674,"author":{"gitId":"IanCKW"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-03-02"},{"lineNumber":675,"author":{"gitId":"guanyz"},"content":"2.  Should be able to hold up to 2000 total items (contacts, menu items, inventory stock) without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-04"},{"lineNumber":676,"author":{"gitId":"guanyz"},"content":"3.  Should be able to complete any single request within 200ms.","lastModifiedDate":"2021-03-04"},{"lineNumber":677,"author":{"gitId":"guanyz"},"content":"4.  Should work entirely client-side, without involving a remote server.","lastModifiedDate":"2021-03-04"},{"lineNumber":678,"author":{"gitId":"guanyz"},"content":"5.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-04"},{"lineNumber":679,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":680,"author":{"gitId":"IanCKW"},"content":"### Glossary","lastModifiedDate":"2021-03-02"},{"lineNumber":681,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":682,"author":{"gitId":"guanyz"},"content":"* **Inventory**: A list of necessary food ingredients and their associated stock quantities","lastModifiedDate":"2021-03-04"},{"lineNumber":683,"author":{"gitId":"guanyz"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS X","lastModifiedDate":"2021-03-04"},{"lineNumber":684,"author":{"gitId":"IanCKW"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"kangtinglee":17,"Sharptail":5,"-":272,"guanyz":116,"IanCKW":264,"jamesleeht":10}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"JJIMY is a **desktop app for managing your restaurant, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, JJIMY can get your restaurant management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"2. Download the latest `JJIMY.jar` from here.","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for JJIMY.","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"5. Type in command in the command box and press Enter to execute it.","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"6. Refer to the [Features](#features) below for command details.","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"### General","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"#### `help` - Access help page","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"#### `exit` - Exit application","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"### `contacts`","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"#### `list` - List all contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"Format: ","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"contacts list","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"#### `add` - Add a contact","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"Format: ","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"contacts add n/[NAME] p/[PHONE_NUMBER] e/[EMAIL] a/[ADDRESS]","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"#### `delete` - Delete contact","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"contacts delete [INDEX]","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"#### `find` - Find contact","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"contacts find [KEYWORD] [MORE KEYWORDS]","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"### `menu`","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"#### `list` - List all dishes","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"Format: ","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"menu list","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"#### `add` - Add a dish","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"Format: ","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"menu add n/[NAME] p/[PRICE]  ","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"#### `delete` - Delete a dish from the menu","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"menu delete [INDEX]","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"#### `find` - Find dish","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"menu find [KEYWORD] [MORE KEYWORDS]","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"### `orders`","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"#### `list` - List all orders","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"Format: ","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"orders list","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"#### `add` - Add an order","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"Format: ","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"orders add n/[CUSTOMER_NAME] dt/[DELIVERY_DATETIME] (DD-MM-YYYY HH:MM) d/[DISH_NAME] q/[QUANTITY]...  ","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"#### `delete` - Delete an order","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"orders delete [INDEX]","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"#### `find` - Find an order","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"orders find [KEYWORD] [MORE KEYWORDS]","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"### `inventory`","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"#### `list` - List all items","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"Format: ","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"inventory list","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"#### `add` - Add an item","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"Note:","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"If the ingredient already exists, its listed quantity will be incremented.","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"Format: ","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"inventory add n/[INGREDIENT_NAME] q/[QUANTITY]","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"#### `decrease` - Decrease quantity of item","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"jamesleeht"},"content":"inventory decrease [INDEX] [QUANTITY]","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"jamesleeht"},"content":"#### `delete` - Delete an item","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"jamesleeht"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":144,"author":{"gitId":"jamesleeht"},"content":"inventory delete [INDEX]","lastModifiedDate":"2021-03-02"},{"lineNumber":145,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"jamesleeht"},"content":"#### `find` - Find an item","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"jamesleeht"},"content":"Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"jamesleeht"},"content":"inventory find [KEYWORD] [MORE KEYWORDS]","lastModifiedDate":"2021-03-02"},{"lineNumber":151,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"jamesleeht"},"content":"In progress","lastModifiedDate":"2021-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":39,"jamesleeht":122}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(personBook)","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"jamesleeht":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"title: JJIMY","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-W15-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-W15-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"**JJIMY is a restaurant management app for managing food orders, ingredient inventory, etc via Command Line Interface (CLI). \u003cbr/\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"* If you are interested in using JJIMY, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"* If you are interested about developing JJIMY, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Sharptail":6,"-":13}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.ReadOnlyDishBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.ReadOnlyIngredientBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.ReadOnlyOrderBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.dish.JsonDishBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.ingredient.JsonIngredientBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.order.JsonOrderBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        BookStorage\u003cReadOnlyPersonBook\u003e addressBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"                new JsonPersonBookStorage(userPrefs.getPersonBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        BookStorage\u003cReadOnlyDishBook\u003e dishBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"                new JsonDishBookStorage(userPrefs.getDishBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        BookStorage\u003cReadOnlyIngredientBook\u003e ingredientBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"                new JsonIngredientBookStorage(userPrefs.getIngredientBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"        BookStorage\u003cReadOnlyOrderBook\u003e orderBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"                new JsonOrderBookStorage(userPrefs.getOrderBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        storage \u003d new StorageManager(addressBookStorage, dishBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"                ingredientBookStorage, orderBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyPersonBook initialPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyDishBook initialDishBook \u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyIngredientBook initialIngredientBook \u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyOrderBook initialOrderBook \u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"            Optional\u003cReadOnlyPersonBook\u003e personBookOptional \u003d storage.readPersonBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"            if (!personBookOptional.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"                logger.info(\"Data file not found. Will be starting with a sample PersonBook\");","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"            initialPersonBook \u003d personBookOptional.orElseGet(SampleDataUtil::getSamplePersonBook);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty PersonBook\");","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"            initialPersonBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PersonBook\");","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"            initialPersonBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"            Optional\u003cReadOnlyDishBook\u003e dishBookOptional \u003d storage.readDishBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"            if (!dishBookOptional.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"                logger.info(\"Data file not found. Will be starting with a sample DishBook\");","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"            initialDishBook \u003d dishBookOptional.orElseGet(SampleDataUtil::getSampleDishBook);","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty DishBook\");","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"            initialDishBook \u003d new DishBook();","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty DishBook\");","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"            initialDishBook \u003d new DishBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"            Optional\u003cReadOnlyIngredientBook\u003e ingredientBookOptional \u003d storage.readIngredientBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"            if (!ingredientBookOptional.isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"                logger.info(\"Data file not found. Will be starting with a sample IngredientBook\");","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"            initialIngredientBook \u003d ingredientBookOptional.orElseGet(SampleDataUtil::getSampleIngredientBook);","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty IngredientBook\");","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"            initialIngredientBook \u003d new IngredientBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty IngredientBook\");","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"jamesleeht"},"content":"            initialIngredientBook \u003d new IngredientBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"jamesleeht"},"content":"            Optional\u003cReadOnlyOrderBook\u003e orderBookOptional \u003d storage.readOrderBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"jamesleeht"},"content":"            if (!orderBookOptional.isPresent()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"jamesleeht"},"content":"                logger.info(\"Data file not found. Will be starting with a sample OrderBook\");","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"jamesleeht"},"content":"            initialOrderBook \u003d orderBookOptional.orElseGet(SampleDataUtil::getSampleOrderBook);","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty OrderBook\");","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"jamesleeht"},"content":"            initialOrderBook \u003d new OrderBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty OrderBook\");","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"jamesleeht"},"content":"            initialOrderBook \u003d new OrderBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"jamesleeht"},"content":"        return new ModelManager(initialPersonBook, initialDishBook, initialIngredientBook, initialOrderBook, userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":172,"jamesleeht":74}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    // General","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    // Items","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_PERSON \u003d \"person\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_PERSONS \u003d \"persons\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_DISH \u003d \"dish\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_DISHES \u003d \"dishes\";","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_INGREDIENT \u003d \"ingredient\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_INGREDIENTS \u003d \"ingredients\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_ORDER \u003d \"order\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_ORDERS \u003d \"orders\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    // Item messages","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_INVALID_ITEM_DISPLAYED_INDEX \u003d \"The %s index provided is invalid\";","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_ITEMS_LISTED_OVERVIEW \u003d \"%1$d %s listed!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"-":11,"jamesleeht":15}},{"path":"src/main/java/seedu/address/commons/core/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":" * Pair stores key value pair","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":" * @param \u003cK\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":" * @param \u003cV\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public class Pair\u003cK, V\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    private final K key;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    private final V value;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"     * Constructor","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"     * @param key","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"     * @param value","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    public Pair(@JsonProperty(\"key\") K key, @JsonProperty(\"value\") V value) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"        this.key \u003d key;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"     * Gets key method","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"     * @return","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    public K getKey() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        return key;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"     * Get value method","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"     * @return","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public V getValue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        return value;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"     * equals method","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"     * @param o","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"     * @return","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        if (o instanceof Pair) {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            Pair pair \u003d (Pair) o;","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"            if (key !\u003d null ? !key.equals(pair.key) : pair.key !\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"                return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"            if (value !\u003d null ? !value.equals(pair.value) : pair.value !\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"                return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Sharptail":3,"IanCKW":23,"jamesleeht":38}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    ReadOnlyPersonBook getAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"    ObservableList\u003cDish\u003e getFilteredDishList();","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"    ObservableList\u003cIngredient\u003e getFilteredInventoryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":48,"IanCKW":8,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.JJIMYParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    private final JJIMYParser jjimyParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        jjimyParser \u003d new JJIMYParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[USER INPUT \u003d \" + commandText + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        Command command \u003d jjimyParser.parseCompo(commandText);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"            storage.savePersonBook(model.getAddressBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            storage.saveDishBook(model.getDishBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"            storage.saveIngredientBook(model.getIngredientBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"            storage.saveOrderBook(model.getOrderBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    public ReadOnlyPersonBook getAddressBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"IanCKW"},"content":"    public ObservableList\u003cDish\u003e getFilteredDishList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"IanCKW"},"content":"        return model.getFilteredDishList();","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"IanCKW"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredInventoryList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"IanCKW"},"content":"        return model.getFilteredIngredientList();","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"IanCKW"},"content":"    //@Override","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"IanCKW"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"IanCKW"},"content":"        return model.getFilteredIngredientList();","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"IanCKW"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"IanCKW"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"        return model.getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Sharptail":5,"-":72,"IanCKW":23,"jamesleeht":7}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"    public enum CRtype {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"        PERSON, DISH, INGREDIENT, ORDER, SHOPPING, HELPOREXIT, NONE","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    private CRtype type \u003d CRtype.HELPOREXIT;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"     * and {@code type}","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"    public CommandResult(String feedbackToUser, CRtype type) {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"        this.type \u003d CRtype.NONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"IanCKW"},"content":"    public CRtype type() {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"IanCKW"},"content":"        return type;","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":75,"IanCKW":15}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"customer\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            + \": Adds a person to the address book. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    public CustomerAddCommand(Person person) {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof CustomerAddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 toAdd.equals(((CustomerAddCommand) other).toAdd));","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":11,"-":59,"IanCKW":2}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class CustomerClearCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"        model.setAddressBook(new PersonBook());","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":4,"-":18,"IanCKW":1,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"public class CustomerDeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"customer\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted person: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    public CustomerDeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete),","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof CustomerDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((CustomerDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":11,"-":43,"IanCKW":3,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"public class CustomerEditCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"    public CustomerEditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson),","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"        String updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"        String updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"        String updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"        String updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"        List\u003cString\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"        if (!(other instanceof CustomerEditCommand)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand e \u003d (CustomerEditCommand) other;","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"        private String name;","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"        private String phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"        private String email;","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"        private String address;","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"        private List\u003cString\u003e tags;","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"jamesleeht"},"content":"        public void setName(String name) {","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cString\u003e getName() {","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"jamesleeht"},"content":"        public void setPhone(String phone) {","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cString\u003e getPhone() {","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"        public void setEmail(String email) {","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cString\u003e getEmail() {","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"jamesleeht"},"content":"        public void setAddress(String address) {","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cString\u003e getAddress() {","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"jamesleeht"},"content":"        public void setTags(List\u003cString\u003e tags) {","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"jamesleeht"},"content":"            this.tags \u003d (tags !\u003d null) ? new ArrayList\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getTags() {","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"jamesleeht"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableList(tags)) : Optional.empty();","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Sharptail":7,"-":190,"IanCKW":2,"jamesleeht":25}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"public class CustomerFindCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private final PersonNameContainsWordsPredicate predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public CustomerFindCommand(PersonNameContainsWordsPredicate predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"                String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                        model.getFilteredPersonList().size(),","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"                        Messages.ITEM_PERSONS),","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof CustomerFindCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 predicate.equals(((CustomerFindCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Sharptail":6,"-":34,"IanCKW":1,"jamesleeht":6}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"public class CustomerListCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"-":21,"IanCKW":6}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":" * Adds a person to the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"public class InventoryAddCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"inventory\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"            + \": Adds an ingredient to the inventory. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \"QUANTITY\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"potato \"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \"51\";","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New ingredient added: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"This ingredient already exists in the inventory\";","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"    private final Ingredient toAdd;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"    public InventoryAddCommand(Ingredient ingredient) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        toAdd \u003d ingredient;","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        // Check model has ingredient here throw MESSAGE_DUPLICATE_INGREDIENT","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"        if (model.hasIngredient(toAdd)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"        model.addIngredient(toAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.INGREDIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof InventoryAddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 toAdd.equals(((InventoryAddCommand) other).toAdd));","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":47,"guanyz":14,"IanCKW":2}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"public class InventoryDeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"inventory\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            + \": Deletes the ingredient identified by the index number used in the displayed inventory.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_INGREDIENT_SUCCESS \u003d \"Deleted ingredient: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    public InventoryDeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kangtinglee"},"content":"        List\u003cIngredient\u003e lastShownList \u003d model.getFilteredIngredientList();","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_INGREDIENT));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"        Ingredient ingredientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"kangtinglee"},"content":"        model.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        // Delete dish here from model","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INGREDIENT_SUCCESS, ingredientToDelete),","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.INGREDIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof InventoryDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((InventoryDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":9,"Sharptail":48,"IanCKW":2,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public class InventoryFindCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all ingredients whose names contain any of \"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"            + \"Example: \" + COMMAND_WORD + \" tomato fish lemon\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    private final IngredientNameContainsWordsPredicate predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public InventoryFindCommand(IngredientNameContainsWordsPredicate predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        model.updateFilteredIngredientList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"                String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"                        model.getFilteredIngredientList().size(),","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                        Messages.ITEM_INGREDIENTS),","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"                CommandResult.CRtype.INGREDIENT);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof InventoryFindCommand // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 predicate.equals(((InventoryFindCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jamesleeht":44}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class InventoryListCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all ingredients\";","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.INGREDIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":5,"-":20,"IanCKW":1}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":" * Adds a dish to the menu.","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"public class MenuAddCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"menu\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD + \": Adds a dish to the menu. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"            + PREFIX_PRICE + \"PRICE\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"Fries \"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"            + PREFIX_PRICE + \"5.10\";","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New dish added: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"This dish already exists in the menu\";","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"    private final Dish toAdd;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"     * Creates an MenuAddCommand to add the specified {@code Dish}","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"    public MenuAddCommand(Dish dish) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(dish);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        toAdd \u003d dish;","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"        if (model.hasDish(toAdd)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DISH);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"        model.addDish(toAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), CommandResult.CRtype.DISH);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof MenuAddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 toAdd.equals(((MenuAddCommand) other).toAdd));","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":45,"guanyz":14,"IanCKW":1}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":" * Deletes a dish identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"public class MenuDeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"menu\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            + \": Deletes the dish identified by the index number used in the displayed menu.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_DISH_SUCCESS \u003d \"Deleted dish: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    public MenuDeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kangtinglee"},"content":"        List\u003cDish\u003e lastShownList \u003d model.getFilteredDishList();","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_DISH));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"        Dish dishToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"kangtinglee"},"content":"        model.deleteDish(dishToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DISH_SUCCESS, dishToDelete),","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.DISH);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof MenuDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((MenuDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":8,"Sharptail":48,"IanCKW":2,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class MenuListCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all dishes\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.DISH);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":4,"-":20,"IanCKW":2}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":" * Adds a person to the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"public class OrderAddCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"order\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"            + \" Adds an order to the order list. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"CUSTOMER_NAME \"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"            + PREFIX_DATETIME + \"DELIVERY_DATETIME (DD-MM-YYYY HH:MM) \"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_DISH + \"DISH \"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \" QUANTITY]...\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"            + PREFIX_DATETIME + \"14-02-2021 18:30 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"            + PREFIX_DISH + \"1 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \"1 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"            + PREFIX_DISH + \"3 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \"1\";","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order added: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in the order list\";","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_CUSTOMER_NOT_FOUND \u003d \"This customer doesn\u0027t exist in the address book\";","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_DISH_NOT_FOUND \u003d \"This dish doesn\u0027t exist on the menu\";","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"    private final String datetime;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"    private final String customerName;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"    private final List\u003cPair\u003cInteger, Integer\u003e\u003e dishNumberQuantityList;","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"    public OrderAddCommand(String datetime, String customerName,","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"                           List\u003cPair\u003cInteger, Integer\u003e\u003e dishNumberQuantityList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"        this.customerName \u003d customerName;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"        this.dishNumberQuantityList \u003d dishNumberQuantityList;","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"        Person customer \u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"        boolean foundCustomer \u003d false;","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"        for (Person person : model.getFilteredPersonList()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"            if (person.getName().toString().equals(customerName)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"                customer \u003d person;","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"                foundCustomer \u003d true;","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"        if (!foundCustomer) {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_CUSTOMER_NOT_FOUND);","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"        assert (customer !\u003d null) : \" Attempting to construct order with non-existent customer\";","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"guanyz"},"content":"        for (int idx \u003d 0; idx \u003c dishNumberQuantityList.size(); idx++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"guanyz"},"content":"            Integer dishID \u003d dishNumberQuantityList.get(idx).getKey() - 1;","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"guanyz"},"content":"            Integer dishQuant \u003d dishNumberQuantityList.get(idx).getValue();","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"guanyz"},"content":"            if (dishID \u003e\u003d model.getFilteredDishList().size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"                throw new CommandException(MESSAGE_DISH_NOT_FOUND);","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"guanyz"},"content":"            Dish dish \u003d model.getFilteredDishList().get(dishID);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"guanyz"},"content":"            Pair\u003cDish, Integer\u003e dishQuantPair \u003d new Pair\u003c\u003e(dish, dishQuant);","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"guanyz"},"content":"            dishQuantityList.add(dishQuantPair);","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"guanyz"},"content":"        Order toAdd \u003d new Order(datetime, customer, dishQuantityList);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"guanyz"},"content":"        if (model.hasOrder(toAdd)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"guanyz"},"content":"        model.addOrder(toAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), CommandResult.CRtype.ORDER);","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof OrderAddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 datetime.equals(((OrderAddCommand) other).datetime)","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 customerName.equals(((OrderAddCommand) other).customerName)","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 dishNumberQuantityList.equals(((OrderAddCommand) other).dishNumberQuantityList));","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":49,"guanyz":66,"IanCKW":1,"jamesleeht":1}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"public class OrderDeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"order\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            + \": Deletes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted order: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    public OrderDeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_ORDER));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"        Order orderToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"kangtinglee"},"content":"        model.deleteOrder(orderToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete),","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.ORDER);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof OrderDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((OrderDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":10,"Sharptail":46,"IanCKW":2,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class OrderListCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all orders\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.ORDER);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":4,"-":20,"IanCKW":2}},{"path":"src/main/java/seedu/address/logic/commands/shopping/ShoppingAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.shopping;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.ingredient.IngredientStub;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":" * Adds a person to the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class ShoppingAddCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [Insert Usage Here]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"This ingredient already exists in the shopping list\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    private final IngredientStub toAdd;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public ShoppingAddCommand(IngredientStub ingredient) {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        toAdd \u003d ingredient;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        // Check model has ingredient here throw MESSAGE_DUPLICATE_DISH","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        // Add ingredient to model here","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), CommandResult.CRtype.SHOPPING);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof ShoppingAddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 toAdd.equals(((ShoppingAddCommand) other).toAdd));","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":48,"IanCKW":1}},{"path":"src/main/java/seedu/address/logic/commands/shopping/ShoppingDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.shopping;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"public class ShoppingDeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [Insert Usage Here]\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_INGREDIENT_SUCCESS \u003d \"Deleted Ingredient: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public ShoppingDeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kangtinglee"},"content":"        List\u003cIngredient\u003e lastShownList \u003d model.getFilteredIngredientList();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"kangtinglee"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_INGREDIENT));","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"kangtinglee"},"content":"        Ingredient ingredientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"kangtinglee"},"content":"        model.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INGREDIENT_SUCCESS, ingredientToDelete),","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.SHOPPING);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof ShoppingDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((ShoppingDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":10,"Sharptail":42,"IanCKW":2,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/shopping/ShoppingListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.shopping;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class ShoppingListCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all in shopping list\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.SHOPPING);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":4,"-":20,"IanCKW":2}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"q/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    public static final Prefix PREFIX_DISH \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":15,"guanyz":4}},{"path":"src/main/java/seedu/address/logic/parser/JJIMYParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.CustomerParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.InventoryParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.MenuParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.OrderParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.ShoppingParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":" * Parses user input.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"public class JJIMYParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     * Used for initial separation of component word and args.","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    private static final Pattern BASIC_COMPO_FORMAT \u003d Pattern.compile(\"(?\u003ccompoWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(JJIMYParser.class);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"    public Command parseCompo(String userInput) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMPO_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        final String compoWord \u003d matcher.group(\"compoWord\");","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMPONENT \u003d \" + compoWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        switch (compoWord) {","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        case CustomerParser.COMPONENT_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"            return new CustomerParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        case OrderParser.COMPONENT_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            return new OrderParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        case InventoryParser.COMPONENT_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"            return new InventoryParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"        case ShoppingParser.COMPONENT_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"            return new ShoppingParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"        case MenuParser.COMPONENT_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"            return new MenuParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"        default:","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":75,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    public static String parseName(String name) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        return trimmedName;","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"    public static String parsePhone(String phone) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        return trimmedPhone;","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    public static String parseAddress(String address) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        return trimmedAddress;","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"    public static String parseEmail(String email) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        return trimmedEmail;","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"    public static String parseTag(String tag) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        return trimmedTag;","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"    public static List\u003cString\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"        return new ArrayList\u003c\u003e(tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":86,"jamesleeht":14}},{"path":"src/main/java/seedu/address/logic/parser/commands/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Sharptail":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/commands/customer/CustomerAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommandParser implements Parser\u003cCustomerAddCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    public CustomerAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        String phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        String email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        String address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"        List\u003cString\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        return new CustomerAddCommand(person);","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Sharptail":11,"-":43,"jamesleeht":6}},{"path":"src/main/java/seedu/address/logic/parser/commands/customer/CustomerDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class CustomerDeleteCommandParser implements Parser\u003cCustomerDeleteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public CustomerDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            return new CustomerDeleteCommand(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":8,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/commands/customer/CustomerEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"public class CustomerEditCommandParser implements Parser\u003cCustomerEditCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    public CustomerEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"                    CustomerEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(CustomerEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"        return new CustomerEditCommand(index, editPersonDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"    private Optional\u003cList\u003cString\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":13,"-":71,"jamesleeht":3}},{"path":"src/main/java/seedu/address/logic/parser/commands/customer/CustomerFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"public class CustomerFindCommandParser implements Parser\u003cCustomerFindCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    public CustomerFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        return new CustomerFindCommand(new PersonNameContainsWordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":6,"-":26,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/parser/commands/inventory/InventoryAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.inventory.InventoryAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"public class InventoryAddCommandParser implements Parser\u003cInventoryAddCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    public InventoryAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_QUANTITY);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_QUANTITY)","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, InventoryAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"        String name \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"        int quantity \u003d Integer.parseInt(argMultimap.getValue(PREFIX_QUANTITY).get().trim());","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"        Ingredient ingredient \u003d new Ingredient(name, quantity);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        return new InventoryAddCommand(ingredient);","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":37,"guanyz":15}},{"path":"src/main/java/seedu/address/logic/parser/commands/inventory/InventoryDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.inventory.InventoryDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class InventoryDeleteCommandParser implements Parser\u003cInventoryDeleteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public InventoryDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            return new InventoryDeleteCommand(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, InventoryDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":8,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/commands/inventory/InventoryFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.logic.parser.commands.inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryFindCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"public class InventoryFindCommandParser implements Parser\u003cInventoryFindCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public InventoryFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, InventoryFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        return new InventoryFindCommand(new IngredientNameContainsWordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jamesleeht":32}},{"path":"src/main/java/seedu/address/logic/parser/commands/menu/MenuAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"import static java.lang.Double.parseDouble;","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":" * Parses input arguments and creates a new MenuAddCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"public class MenuAddCommandParser implements Parser\u003cMenuAddCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public MenuAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PRICE)","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MenuAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"        String name \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"        double price \u003d parseDouble(argMultimap.getValue(PREFIX_PRICE).get().trim());","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cIngredient, Integer\u003e\u003e ingredientQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"        Dish dish \u003d new Dish(name, price, ingredientQuantityList);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        return new MenuAddCommand(dish);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":37,"guanyz":19,"jamesleeht":1}},{"path":"src/main/java/seedu/address/logic/parser/commands/menu/MenuDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class MenuDeleteCommandParser implements Parser\u003cMenuDeleteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public MenuDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            return new MenuDeleteCommand(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MenuDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":8,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/commands/order/OrderAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"public class OrderAddCommandParser implements Parser\u003cOrderAddCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public OrderAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATETIME, PREFIX_DISH, PREFIX_QUANTITY);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATETIME, PREFIX_DISH, PREFIX_QUANTITY)","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, OrderAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"        String customer \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"        String datetime \u003d argMultimap.getValue(PREFIX_DATETIME).get().trim(); // not used in v1.2","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"        List\u003cString\u003e dishNums \u003d argMultimap.getAllValues(PREFIX_DISH);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"        List\u003cString\u003e dishQuants \u003d argMultimap.getAllValues(PREFIX_QUANTITY);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cInteger, Integer\u003e\u003e dishQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"        for (int idx \u003d 0; idx \u003c dishNums.size(); idx++) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"            Pair\u003cInteger, Integer\u003e orderComponent \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(Integer.parseInt(dishNums.get(idx)),","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"                            Integer.parseInt(dishQuants.get(idx)));","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"            dishQuantityList.add(orderComponent);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"        return new OrderAddCommand(datetime, customer, dishQuantityList);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":39,"guanyz":25,"jamesleeht":1}},{"path":"src/main/java/seedu/address/logic/parser/commands/order/OrderDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class OrderDeleteCommandParser implements Parser\u003cOrderDeleteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public OrderDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            return new OrderDeleteCommand(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, OrderDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":8,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/commands/shopping/ShoppingAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.shopping;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.shopping.ShoppingAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.ingredient.IngredientStub;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"public class ShoppingAddCommandParser implements Parser\u003cShoppingAddCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    public ShoppingAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        IngredientStub ingredient \u003d new IngredientStub();","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        return new ShoppingAddCommand(ingredient);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":36}},{"path":"src/main/java/seedu/address/logic/parser/commands/shopping/ShoppingDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.shopping;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.shopping.ShoppingDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class ShoppingDeleteCommandParser implements Parser\u003cShoppingDeleteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public ShoppingDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            return new ShoppingDeleteCommand(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShoppingDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":8,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/components/ComponentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"public interface ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     * Used for initial separation of component word and args.","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":27}},{"path":"src/main/java/seedu/address/logic/parser/components/CustomerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerClearCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerAddCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerDeleteCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerEditCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerFindCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"public class CustomerParser implements ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"customer\";","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerParser.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMMAND \u003d \" + commandWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        case CustomerAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"            return new CustomerAddCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        case CustomerEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"            return new CustomerEditCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        case CustomerDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"            return new CustomerDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        case CustomerClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"            return new CustomerClearCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"        case CustomerFindCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"            return new CustomerFindCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"        case CustomerListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"            return new CustomerListCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":34,"-":38}},{"path":"src/main/java/seedu/address/logic/parser/components/InventoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryAddCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryDeleteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryFindCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryListCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.inventory.InventoryAddCommandParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.inventory.InventoryDeleteCommandParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.inventory.InventoryFindCommandParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"public class InventoryParser implements ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"inventory\";","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InventoryParser.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMMAND \u003d \" + commandWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        case InventoryAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"            return new InventoryAddCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        case InventoryDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"kangtinglee"},"content":"            return new InventoryDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        case InventoryFindCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"            return new InventoryFindCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        case InventoryListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"            return new InventoryListCommand();","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":1,"Sharptail":15,"-":36,"guanyz":1,"IanCKW":1,"jamesleeht":10}},{"path":"src/main/java/seedu/address/logic/parser/components/MenuParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.commands.menu.MenuAddCommandParser;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.menu.MenuDeleteCommandParser;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"public class MenuParser implements ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"menu\";","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MenuParser.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMMAND \u003d \" + commandWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        case MenuAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"            return new MenuAddCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        case MenuDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kangtinglee"},"content":"            return new MenuDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        case MenuListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"            return new MenuListCommand();","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":2,"Sharptail":18,"-":36,"guanyz":2,"IanCKW":1}},{"path":"src/main/java/seedu/address/logic/parser/components/OrderParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.commands.order.OrderAddCommandParser;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.order.OrderDeleteCommandParser;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"public class OrderParser implements ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"order\";","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderParser.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMMAND \u003d \" + commandWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        case OrderAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"            return new OrderAddCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        case OrderDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"kangtinglee"},"content":"            return new OrderDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        case OrderListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"            return new OrderListCommand();","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":2,"Sharptail":18,"-":36,"guanyz":2,"IanCKW":1}},{"path":"src/main/java/seedu/address/logic/parser/components/ShoppingParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.shopping.ShoppingAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.shopping.ShoppingDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.shopping.ShoppingListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.shopping.ShoppingDeleteCommandParser;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"public class ShoppingParser implements ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"shop\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        final String messageNotImplemented \u003d COMPONENT_WORD + \" \" + commandWord + \" is still work in progress!\";","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        case ShoppingAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(messageNotImplemented);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"            // return new ShoppingAddCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        case ShoppingDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"            return new ShoppingDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        case ShoppingListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"            return new ShoppingListCommand();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":2,"Sharptail":17,"-":36,"IanCKW":1}},{"path":"src/main/java/seedu/address/model/Book.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"public interface Book {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":4}},{"path":"src/main/java/seedu/address/model/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"public interface Item {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"     * Check if item is same as another item (loose equality)","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"     * @param other","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    public boolean isSame(Item other);","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":10}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"kangtinglee"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.ReadOnlyDishBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.ReadOnlyIngredientBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.ReadOnlyOrderBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    Path getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    void setPersonBookFilePath(Path personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    void setAddressBook(ReadOnlyPersonBook addressBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    ReadOnlyPersonBook getAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"kangtinglee"},"content":"     * Returns the {@code Person} object at the specified index on the UI","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"kangtinglee"},"content":"    Person getPersonByIndex(int i);","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DishBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"    void setDishBook(ReadOnlyDishBook dishBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    ReadOnlyDishBook getDishBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if a dish with the same name as {@code dish} exists in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    boolean hasDish(Dish dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"     * Deletes the given dish.","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"     * The dish must exist.","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"    void deleteDish(Dish dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"     * Adds the given dish.","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"     * {@code dish} must not already exist","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"    void addDish(Dish dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"     * Replaces the given dish {@code target} with {@code editedDish}.","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"     * The person identity of {@code editedDish} must not be the same as another existing dish in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"    void setDish(Dish target, Dish editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"jamesleeht"},"content":"    ObservableList\u003cDish\u003e getFilteredDishList();","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"jamesleeht"},"content":"     * Updates the filter of the filtered dish list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"jamesleeht"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"jamesleeht"},"content":"    void updateFilteredDishList(Predicate\u003cDish\u003e predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"kangtinglee"},"content":"    /** Returns a list of dishes that use a particular ingredient */","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"kangtinglee"},"content":"    List\u003cDish\u003e getDishesByIngredients(Ingredient ingredient);","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d IngredientBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"jamesleeht"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"jamesleeht"},"content":"    void setIngredientBook(ReadOnlyIngredientBook ingredientBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"jamesleeht"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"jamesleeht"},"content":"    ReadOnlyIngredientBook getIngredientBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if ingredient with the same name as {@code ingredient} exists in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"jamesleeht"},"content":"    boolean hasIngredient(Ingredient ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"jamesleeht"},"content":"     * Deletes the given ingredient.","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"     * The ingredient must exist.","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"jamesleeht"},"content":"    void deleteIngredient(Ingredient ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"     * Adds the given ingredient.","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"jamesleeht"},"content":"     * {@code ingredient} must not already exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"    void addIngredient(Ingredient ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"     * Replaces the given ingredient {@code target} with {@code editedIngredient}.","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"jamesleeht"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"jamesleeht"},"content":"     * The person identity of {@code editedIngredient} must not be the same as another existing ingredient.","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"jamesleeht"},"content":"    void setIngredient(Ingredient target, Ingredient editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"jamesleeht"},"content":"    /** Returns an unmodifiable view of the filtered ingredient list */","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"jamesleeht"},"content":"    ObservableList\u003cIngredient\u003e getFilteredIngredientList();","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"jamesleeht"},"content":"     * Updates the filter of the filtered ingredient list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"jamesleeht"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"jamesleeht"},"content":"    void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OrderBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"jamesleeht"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"jamesleeht"},"content":"    void setOrderBook(ReadOnlyOrderBook orderBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"jamesleeht"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"jamesleeht"},"content":"    ReadOnlyOrderBook getOrderBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if a dish with the same name as {@code dish} exists in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"jamesleeht"},"content":"    boolean hasOrder(Order order);","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"kangtinglee"},"content":"     * Deletes the given order.","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"kangtinglee"},"content":"     * The order must exist.","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"jamesleeht"},"content":"    void deleteOrder(Order order);","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":212,"author":{"gitId":"kangtinglee"},"content":"     * Deletes a list of orders.","lastModifiedDate":"2021-03-26"},{"lineNumber":213,"author":{"gitId":"kangtinglee"},"content":"     * The orders must exist.","lastModifiedDate":"2021-03-26"},{"lineNumber":214,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"kangtinglee"},"content":"    void deleteOrders(List\u003cOrder\u003e orders);","lastModifiedDate":"2021-03-26"},{"lineNumber":216,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":218,"author":{"gitId":"jamesleeht"},"content":"     * Adds the given person.","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"jamesleeht"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"jamesleeht"},"content":"    void addOrder(Order order);","lastModifiedDate":"2021-03-13"},{"lineNumber":222,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"jamesleeht"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2021-03-13"},{"lineNumber":225,"author":{"gitId":"jamesleeht"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":226,"author":{"gitId":"jamesleeht"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":227,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":228,"author":{"gitId":"jamesleeht"},"content":"    void setOrder(Order target, Order editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":230,"author":{"gitId":"kangtinglee"},"content":"    /** Returns an unmodifiable view of the filtered order list */","lastModifiedDate":"2021-03-26"},{"lineNumber":231,"author":{"gitId":"jamesleeht"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":233,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"jamesleeht"},"content":"     * Updates the filter of the filtered ingredient list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"jamesleeht"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"jamesleeht"},"content":"    void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"kangtinglee"},"content":"    /** Returns an list of the orders belonging to a particular customer */","lastModifiedDate":"2021-03-26"},{"lineNumber":240,"author":{"gitId":"kangtinglee"},"content":"    List\u003cOrder\u003e getOrdersFromPerson(Person target);","lastModifiedDate":"2021-03-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kangtinglee":21,"-":84,"jamesleeht":136}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kangtinglee"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.ReadOnlyDishBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.ReadOnlyIngredientBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.ReadOnlyOrderBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    private final PersonBook personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    private final DishBook dishBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    private final IngredientBook ingredientBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    private final OrderBook orderBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    private final FilteredList\u003cDish\u003e filteredDishes;","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    private final FilteredList\u003cIngredient\u003e filteredIngredients;","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    private final FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"     * Initializes a ModelManager with the given books and userPrefs.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    public ModelManager(ReadOnlyPersonBook personBook, ReadOnlyDishBook dishBook,","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"                        ReadOnlyIngredientBook ingredientBook, ReadOnlyOrderBook orderBook,","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        requireAllNonNull(personBook, userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Initializing with address book: \" + personBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        this.personBook \u003d new PersonBook(personBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        this.dishBook \u003d new DishBook(dishBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientBook \u003d new IngredientBook(ingredientBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        this.orderBook \u003d new OrderBook(orderBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.personBook.getPersonList());","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        filteredDishes \u003d new FilteredList\u003c\u003e(this.dishBook.getDishList());","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        filteredIngredients \u003d new FilteredList\u003c\u003e(this.ingredientBook.getIngredientList());","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.orderBook.getOrderList());","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"    public ModelManager(ReadOnlyPersonBook personBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        requireAllNonNull(personBook, userPrefs);","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Initializing with address book: \" + personBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        this.personBook \u003d new PersonBook(personBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        this.dishBook \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientBook \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"kangtinglee"},"content":"        this.orderBook \u003d new OrderBook();","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.personBook.getPersonList());","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"        filteredDishes \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        filteredIngredients \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"kangtinglee"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.orderBook.getOrderList());","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        this(new PersonBook(), new DishBook(), new IngredientBook(), new OrderBook(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    public Path getPersonBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"        return userPrefs.getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"    public void setPersonBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setPersonBookFilePath(addressBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"    public void setAddressBook(ReadOnlyPersonBook addressBook) {","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"        this.personBook.resetData(addressBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"    public ReadOnlyPersonBook getAddressBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"        return personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"jamesleeht"},"content":"        return personBook.hasPerson(person);","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"kangtinglee"},"content":"    public Person getPersonByIndex(int i) {","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"kangtinglee"},"content":"        return getFilteredPersonList().get(i);","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"kangtinglee"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":152,"author":{"gitId":"kangtinglee"},"content":"        personBook.removePerson(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e deletionList \u003d getOrdersFromPerson(target);","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"kangtinglee"},"content":"        deleteOrders(deletionList);","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"kangtinglee"},"content":"        assert !personBook.hasPerson(target);","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : deletionList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"kangtinglee"},"content":"            assert !hasOrder(o);","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"kangtinglee"},"content":"            logger.fine(String.format(\"Order %s belonging to %s deleted by cascade\", o, target));","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"kangtinglee"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":166,"author":{"gitId":"kangtinglee"},"content":"        personBook.addPerson(person);","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"kangtinglee"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":169,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":170,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":171,"author":{"gitId":"kangtinglee"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":172,"author":{"gitId":"kangtinglee"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":173,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":174,"author":{"gitId":"kangtinglee"},"content":"        personBook.setPerson(target, editedPerson);","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":176,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":177,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":178,"author":{"gitId":"kangtinglee"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"kangtinglee"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":180,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":181,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"kangtinglee"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"kangtinglee"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":186,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":187,"author":{"gitId":"kangtinglee"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":189,"author":{"gitId":"kangtinglee"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":190,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"kangtinglee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Dishes \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"kangtinglee"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"kangtinglee"},"content":"    public void setDishBook(ReadOnlyDishBook dishBook) {","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"kangtinglee"},"content":"        this.dishBook.resetData(dishBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"kangtinglee"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"kangtinglee"},"content":"    public ReadOnlyDishBook getDishBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"kangtinglee"},"content":"        return dishBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"kangtinglee"},"content":"     * Returns true if a dish with the same name as {@code dish} exists in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"kangtinglee"},"content":"    public boolean hasDish(Dish dish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":213,"author":{"gitId":"kangtinglee"},"content":"        return dishBook.hasDish(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":214,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":215,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":216,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":217,"author":{"gitId":"kangtinglee"},"content":"     * Deletes the given dish.","lastModifiedDate":"2021-03-13"},{"lineNumber":218,"author":{"gitId":"kangtinglee"},"content":"     * The dish must exist.","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"kangtinglee"},"content":"    public void deleteDish(Dish target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"kangtinglee"},"content":"        dishBook.removeDish(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":222,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":225,"author":{"gitId":"kangtinglee"},"content":"     * Adds the given dish.","lastModifiedDate":"2021-03-13"},{"lineNumber":226,"author":{"gitId":"kangtinglee"},"content":"     * {@code dish} must not already exist","lastModifiedDate":"2021-03-13"},{"lineNumber":227,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":228,"author":{"gitId":"kangtinglee"},"content":"    public void addDish(Dish dish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"kangtinglee"},"content":"        dishBook.addDish(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":230,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":233,"author":{"gitId":"kangtinglee"},"content":"     * Replaces the given dish {@code target} with {@code editedDish}.","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"kangtinglee"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":235,"author":{"gitId":"kangtinglee"},"content":"     * The person identity of {@code editedDish} must not be the same as another existing dish in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":236,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":237,"author":{"gitId":"kangtinglee"},"content":"    public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":238,"author":{"gitId":"kangtinglee"},"content":"        requireAllNonNull(target, editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":239,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":240,"author":{"gitId":"kangtinglee"},"content":"        dishBook.setDish(target, editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":241,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":242,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":243,"author":{"gitId":"kangtinglee"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2021-03-13"},{"lineNumber":244,"author":{"gitId":"kangtinglee"},"content":"    public ObservableList\u003cDish\u003e getFilteredDishList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":245,"author":{"gitId":"kangtinglee"},"content":"        return filteredDishes;","lastModifiedDate":"2021-03-13"},{"lineNumber":246,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":247,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":248,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"kangtinglee"},"content":"    public void updateFilteredDishList(Predicate\u003cDish\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"kangtinglee"},"content":"        filteredDishes.setPredicate(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":254,"author":{"gitId":"kangtinglee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Ingredients \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":255,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":256,"author":{"gitId":"kangtinglee"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":257,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":258,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":259,"author":{"gitId":"kangtinglee"},"content":"    public void setIngredientBook(ReadOnlyIngredientBook ingredientBook) {","lastModifiedDate":"2021-03-13"},{"lineNumber":260,"author":{"gitId":"kangtinglee"},"content":"        this.ingredientBook.resetData(ingredientBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":261,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":262,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":263,"author":{"gitId":"kangtinglee"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2021-03-13"},{"lineNumber":264,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":265,"author":{"gitId":"kangtinglee"},"content":"    public ReadOnlyIngredientBook getIngredientBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":266,"author":{"gitId":"kangtinglee"},"content":"        return ingredientBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":267,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":268,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":269,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":270,"author":{"gitId":"kangtinglee"},"content":"     * Returns true if a ingredient with the same name as {@code ingredient} exists in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":271,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":272,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":273,"author":{"gitId":"kangtinglee"},"content":"    public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":274,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":275,"author":{"gitId":"kangtinglee"},"content":"        return ingredientBook.hasIngredient(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":276,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":277,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":278,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":279,"author":{"gitId":"kangtinglee"},"content":"     * Deletes the given ingredient.","lastModifiedDate":"2021-03-13"},{"lineNumber":280,"author":{"gitId":"kangtinglee"},"content":"     * The ingredient must exist.","lastModifiedDate":"2021-03-13"},{"lineNumber":281,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":282,"author":{"gitId":"kangtinglee"},"content":"    public void deleteIngredient(Ingredient target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":283,"author":{"gitId":"kangtinglee"},"content":"        ingredientBook.removeIngredient(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":284,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":285,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":286,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":287,"author":{"gitId":"kangtinglee"},"content":"     * Adds the given ingredient.","lastModifiedDate":"2021-03-13"},{"lineNumber":288,"author":{"gitId":"kangtinglee"},"content":"     * {@code ingredient} must not already exist","lastModifiedDate":"2021-03-13"},{"lineNumber":289,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":290,"author":{"gitId":"kangtinglee"},"content":"    public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":291,"author":{"gitId":"kangtinglee"},"content":"        ingredientBook.addIngredient(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":292,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":293,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":294,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":295,"author":{"gitId":"kangtinglee"},"content":"     * Replaces the given ingredient {@code target} with {@code editedIngredient}.","lastModifiedDate":"2021-03-13"},{"lineNumber":296,"author":{"gitId":"kangtinglee"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":297,"author":{"gitId":"kangtinglee"},"content":"     * The person identity of {@code editedIngredient} must not be the same as another existing ingredient.","lastModifiedDate":"2021-03-14"},{"lineNumber":298,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":299,"author":{"gitId":"kangtinglee"},"content":"    public void setIngredient(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":300,"author":{"gitId":"kangtinglee"},"content":"        requireAllNonNull(target, editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":301,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":302,"author":{"gitId":"kangtinglee"},"content":"        ingredientBook.setIngredient(target, editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":303,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":304,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":305,"author":{"gitId":"kangtinglee"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2021-03-13"},{"lineNumber":306,"author":{"gitId":"kangtinglee"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":307,"author":{"gitId":"kangtinglee"},"content":"        return filteredIngredients;","lastModifiedDate":"2021-03-13"},{"lineNumber":308,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":309,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":310,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"kangtinglee"},"content":"    public void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"kangtinglee"},"content":"        filteredIngredients.setPredicate(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":314,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":315,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":316,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":317,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":318,"author":{"gitId":"kangtinglee"},"content":"    /** Returns a list of dishes that use a particular ingredient */","lastModifiedDate":"2021-03-26"},{"lineNumber":319,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cDish\u003e getDishesByIngredients(Ingredient ingredient) {","lastModifiedDate":"2021-03-26"},{"lineNumber":320,"author":{"gitId":"kangtinglee"},"content":"        List\u003cDish\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":321,"author":{"gitId":"kangtinglee"},"content":"        List\u003cDish\u003e dishes \u003d getDishBook().getDishList();","lastModifiedDate":"2021-03-26"},{"lineNumber":322,"author":{"gitId":"kangtinglee"},"content":"        for (Dish d : dishes) {","lastModifiedDate":"2021-03-26"},{"lineNumber":323,"author":{"gitId":"kangtinglee"},"content":"            if (d.contains(ingredient)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":324,"author":{"gitId":"kangtinglee"},"content":"                result.add(d);","lastModifiedDate":"2021-03-26"},{"lineNumber":325,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":326,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":327,"author":{"gitId":"kangtinglee"},"content":"        return result;","lastModifiedDate":"2021-03-26"},{"lineNumber":328,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":329,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":330,"author":{"gitId":"kangtinglee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Orders \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":331,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":332,"author":{"gitId":"kangtinglee"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":333,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":334,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":335,"author":{"gitId":"kangtinglee"},"content":"    public void setOrderBook(ReadOnlyOrderBook orderBook) {","lastModifiedDate":"2021-03-13"},{"lineNumber":336,"author":{"gitId":"kangtinglee"},"content":"        this.orderBook.resetData(orderBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":337,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":338,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":339,"author":{"gitId":"kangtinglee"},"content":"    /** Returns the OrderBook */","lastModifiedDate":"2021-03-24"},{"lineNumber":340,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":341,"author":{"gitId":"kangtinglee"},"content":"    public ReadOnlyOrderBook getOrderBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":342,"author":{"gitId":"kangtinglee"},"content":"        return orderBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":343,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":344,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":345,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":346,"author":{"gitId":"kangtinglee"},"content":"     * Returns true if a order with the same name as {@code order} exists in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":347,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":348,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":349,"author":{"gitId":"kangtinglee"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-13"},{"lineNumber":350,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":351,"author":{"gitId":"kangtinglee"},"content":"        return orderBook.hasOrder(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":352,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":353,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":354,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":355,"author":{"gitId":"kangtinglee"},"content":"     * Deletes the given order.","lastModifiedDate":"2021-03-13"},{"lineNumber":356,"author":{"gitId":"kangtinglee"},"content":"     * The order must exist.","lastModifiedDate":"2021-03-13"},{"lineNumber":357,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":358,"author":{"gitId":"kangtinglee"},"content":"    public void deleteOrder(Order target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":359,"author":{"gitId":"kangtinglee"},"content":"        orderBook.removeOrder(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":360,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":361,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":362,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":363,"author":{"gitId":"kangtinglee"},"content":"     * Deletes a list of orders.","lastModifiedDate":"2021-03-26"},{"lineNumber":364,"author":{"gitId":"kangtinglee"},"content":"     * The orders must exist.","lastModifiedDate":"2021-03-26"},{"lineNumber":365,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":366,"author":{"gitId":"kangtinglee"},"content":"    public void deleteOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-26"},{"lineNumber":367,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : orders) {","lastModifiedDate":"2021-03-26"},{"lineNumber":368,"author":{"gitId":"kangtinglee"},"content":"            deleteOrder(o);","lastModifiedDate":"2021-03-26"},{"lineNumber":369,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":370,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":371,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":372,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":373,"author":{"gitId":"kangtinglee"},"content":"     * Adds the given order.","lastModifiedDate":"2021-03-13"},{"lineNumber":374,"author":{"gitId":"kangtinglee"},"content":"     * {@code order} must not already exist","lastModifiedDate":"2021-03-13"},{"lineNumber":375,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":376,"author":{"gitId":"kangtinglee"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-03-13"},{"lineNumber":377,"author":{"gitId":"kangtinglee"},"content":"        orderBook.addOrder(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":378,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":379,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":380,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":381,"author":{"gitId":"kangtinglee"},"content":"     * Replaces the given order {@code target} with {@code editedOrder}.","lastModifiedDate":"2021-03-13"},{"lineNumber":382,"author":{"gitId":"kangtinglee"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":383,"author":{"gitId":"kangtinglee"},"content":"     * The person identity of {@code editedOrder} must not be the same as another existing order in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":384,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":385,"author":{"gitId":"kangtinglee"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-13"},{"lineNumber":386,"author":{"gitId":"kangtinglee"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":387,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":388,"author":{"gitId":"kangtinglee"},"content":"        orderBook.setOrder(target, editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":389,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":390,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":391,"author":{"gitId":"kangtinglee"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2021-03-13"},{"lineNumber":392,"author":{"gitId":"kangtinglee"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":393,"author":{"gitId":"kangtinglee"},"content":"        return filteredOrders;","lastModifiedDate":"2021-03-13"},{"lineNumber":394,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":395,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":396,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":397,"author":{"gitId":"kangtinglee"},"content":"    public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":398,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":399,"author":{"gitId":"kangtinglee"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":400,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":401,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":402,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":403,"author":{"gitId":"kangtinglee"},"content":"    /** Returns an unmodifiable view of the orders belonging to a particular customer */","lastModifiedDate":"2021-03-26"},{"lineNumber":404,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cOrder\u003e getOrdersFromPerson(Person target) {","lastModifiedDate":"2021-03-26"},{"lineNumber":405,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":406,"author":{"gitId":"kangtinglee"},"content":"        ObservableList\u003cOrder\u003e orders \u003d getOrderBook().getOrderList();","lastModifiedDate":"2021-03-26"},{"lineNumber":407,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : orders) {","lastModifiedDate":"2021-03-26"},{"lineNumber":408,"author":{"gitId":"kangtinglee"},"content":"            if (o.isFromCustomer(target)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":409,"author":{"gitId":"kangtinglee"},"content":"                result.add(o);","lastModifiedDate":"2021-03-26"},{"lineNumber":410,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":411,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":412,"author":{"gitId":"kangtinglee"},"content":"        return result;","lastModifiedDate":"2021-03-26"},{"lineNumber":413,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":414,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":415,"author":{"gitId":"kangtinglee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":416,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":417,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":418,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":419,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":420,"author":{"gitId":"kangtinglee"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":421,"author":{"gitId":"kangtinglee"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":422,"author":{"gitId":"kangtinglee"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":423,"author":{"gitId":"kangtinglee"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":424,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":425,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":426,"author":{"gitId":"kangtinglee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":427,"author":{"gitId":"kangtinglee"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":428,"author":{"gitId":"kangtinglee"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":429,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":430,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":431,"author":{"gitId":"kangtinglee"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":432,"author":{"gitId":"kangtinglee"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":433,"author":{"gitId":"kangtinglee"},"content":"        return personBook.equals(other.personBook)","lastModifiedDate":"2021-03-13"},{"lineNumber":434,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":435,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":436,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":437,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":438,"author":{"gitId":"kangtinglee"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kangtinglee":299,"-":88,"jamesleeht":51}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    Path getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    Path getDishBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    Path getIngredientBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    Path getOrderBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":15,"jamesleeht":6}},{"path":"src/main/java/seedu/address/model/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"public class UniqueItemList\u003cT extends Item\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * Check if list contains item","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * @param toCheck","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"     * Add item to list","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * @param toAdd","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     * Set item","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"     * @param target","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"     * @param editedItem","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        if (!target.isSame(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"     * Remove item","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"     * @param toRemove","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"     * Set items based on replacement UniqueItemList","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"     * @param replacement","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    public void setItems(UniqueItemList\u003cT\u003e replacement) {","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"     * Set items based on list","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"     * @param list","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    public void setItems(List\u003cT\u003e list) {","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        requireAllNonNull(list);","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"        if (!itemsAreUnique(list)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"        internalList.setAll(list);","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof UniqueItemList) // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 internalList.equals(((UniqueItemList) other).internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"    private boolean itemsAreUnique(List\u003cT\u003e list) {","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"            for (int j \u003d i + 1; j \u003c list.size(); j++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"                if (list.get(i).isSame(list.get(j))) {","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"                    return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"                }","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"        return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":131}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    private Path personBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    private Path dishBookFilePath \u003d Paths.get(\"data\", \"dishbook.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    private Path ingredientBookFilePath \u003d Paths.get(\"data\", \"ingredientbook.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    private Path orderBookFilePath \u003d Paths.get(\"data\", \"orderbook.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        setPersonBookFilePath(newUserPrefs.getPersonBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        setDishBookFilePath(newUserPrefs.getDishBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        setIngredientBookFilePath(newUserPrefs.getIngredientBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        setOrderBookFilePath(newUserPrefs.getOrderBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"    public Path getPersonBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        return personBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    public void setPersonBookFilePath(Path personBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        this.personBookFilePath \u003d personBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    public Path getDishBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        return dishBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    public void setDishBookFilePath(Path dishBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(dishBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        this.dishBookFilePath \u003d dishBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    public Path getIngredientBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        return ingredientBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"    public void setIngredientBookFilePath(Path ingredientBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(ingredientBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientBookFilePath \u003d ingredientBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public Path getOrderBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        return orderBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"    public void setOrderBookFilePath(Path orderBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(orderBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"        this.orderBookFilePath \u003d orderBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 personBookFilePath.equals(o.personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"        return Objects.hash(guiSettings, personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"        sb.append(\"\\nLocal data file location : \" + personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"jamesleeht":43}},{"path":"src/main/java/seedu/address/model/dish/Aggregator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kangtinglee"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"kangtinglee"},"content":"//@@ author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"kangtinglee"},"content":"public interface Aggregator\u003cT\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"kangtinglee"},"content":"    /** Checks if a particular object is contained within the current one */","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"kangtinglee"},"content":"    boolean contains(T t);","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"kangtinglee":7}},{"path":"src/main/java/seedu/address/model/dish/Dish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Item;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"kangtinglee"},"content":"public class Dish implements Item, Aggregator\u003cIngredient\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    private String name;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    private double price;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cPair\u003cIngredient, Integer\u003e\u003e ingredientQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"     * Dish constructor","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * @param name","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * @param price","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredientQuantityList","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    public Dish(@JsonProperty(\"dish\") String name, @JsonProperty(\"price\") double price,","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"                @JsonProperty(\"ingredientQuantityList:\") List\u003cPair\u003cIngredient, Integer\u003e\u003e ingredientQuantityList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientQuantityList \u003d ingredientQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    public String getName() {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        return name;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    public double getPrice() {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"        return price;","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"kangtinglee"},"content":"    /** Checks if a particular ingredient is contained within this dish */","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"    public boolean contains(Ingredient ingredient) {","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cIngredient, Integer\u003e pair : getIngredientQuantityList()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"kangtinglee"},"content":"            if (pair.getKey().equals(ingredient)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"kangtinglee"},"content":"                return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"kangtinglee"},"content":"        return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cPair\u003cIngredient, Integer\u003e\u003e getIngredientQuantityList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"kangtinglee"},"content":"        return ingredientQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"kangtinglee"},"content":"    public boolean isSame(Item other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"kangtinglee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"kangtinglee"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"kangtinglee"},"content":"        if (!(other instanceof Dish)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"kangtinglee"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"kangtinglee"},"content":"        Dish otherDish \u003d (Dish) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"kangtinglee"},"content":"        return otherDish !\u003d null","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 this.getName().equals(otherDish.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"kangtinglee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"kangtinglee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"kangtinglee"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"kangtinglee"},"content":"        if (!(other instanceof Dish)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"kangtinglee"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"kangtinglee"},"content":"        Dish otherDish \u003d (Dish) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"kangtinglee"},"content":"        return otherDish.name.equals(name)","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 otherDish.price \u003d\u003d price","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 listEquals(otherDish.getIngredientQuantityList());","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"kangtinglee"},"content":"    private boolean listEquals(List\u003cPair\u003cIngredient, Integer\u003e\u003e otherList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"kangtinglee"},"content":"        if (otherList.size() !\u003d ingredientQuantityList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"kangtinglee"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"kangtinglee"},"content":"        boolean result \u003d true;","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"kangtinglee"},"content":"        for (int i \u003d 0; i \u003c ingredientQuantityList.size(); i++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"kangtinglee"},"content":"            Pair\u003cIngredient, Integer\u003e current \u003d ingredientQuantityList.get(i);","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"kangtinglee"},"content":"            Pair\u003cIngredient, Integer\u003e other \u003d otherList.get(i);","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"kangtinglee"},"content":"            result \u003d current.equals(other);","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"kangtinglee"},"content":"        return result;","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"kangtinglee"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"kangtinglee"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"kangtinglee"},"content":"        builder.append(\"Name: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"kangtinglee"},"content":"                .append(getName())","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"kangtinglee"},"content":"                .append(\"; Price: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"kangtinglee"},"content":"                .append(getPrice());","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"kangtinglee"},"content":"        if (!ingredientQuantityList.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"kangtinglee"},"content":"            builder.append(\"; Ingredients: \");","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"kangtinglee"},"content":"            for (Pair\u003cIngredient, Integer\u003e pair : ingredientQuantityList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"kangtinglee"},"content":"                builder.append(pair.getKey());","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"kangtinglee"},"content":"                builder.append(\" x\");","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"kangtinglee"},"content":"                builder.append(pair.getValue());","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"kangtinglee"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"kangtinglee"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kangtinglee":83,"Sharptail":1,"jamesleeht":36}},{"path":"src/main/java/seedu/address/model/dish/DishBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.UniqueItemList;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"public class DishBook implements ReadOnlyDishBook {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    private final UniqueItemList\u003cDish\u003e dishes;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        dishes \u003d new UniqueItemList\u003cDish\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    public DishBook() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * Constructor to copy dishbook","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * @param toBeCopied","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    public DishBook(ReadOnlyDishBook toBeCopied) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"        this();","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"     * Set dishes from list","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"     * @param dishes","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    public void setDishes(List\u003cDish\u003e dishes) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        this.dishes.setItems(dishes);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     * Reset list data using new data","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"     * @param newData","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    public void resetData(ReadOnlyDishBook newData) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        setDishes(newData.getDishList());","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"     * Check if dish exists","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"     * @param dish","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public boolean hasDish(Dish dish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        return dishes.contains(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"     * Add new dish","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"     * @param o","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    public void addDish(Dish o) {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        dishes.add(o);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"     * Set details of new dish","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"     * @param target","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"     * @param editedDish","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        dishes.setItem(target, editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"     * Remove dish","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"     * @param key","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"    public void removeDish(Dish key) {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        dishes.remove(key);","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"        return dishes.asUnmodifiableObservableList().size() + \" Dishs\";","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"    public ObservableList\u003cDish\u003e getDishList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"        return dishes.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof DishBook // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 dishes.equals(((DishBook) other).dishes));","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":101}},{"path":"src/main/java/seedu/address/model/dish/DishStub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public class DishStub {","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":4}},{"path":"src/main/java/seedu/address/model/dish/ReadOnlyDishBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Book;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public interface ReadOnlyDishBook extends Book {","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"    ObservableList\u003cDish\u003e getDishList();","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":8}},{"path":"src/main/java/seedu/address/model/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":" * identity).","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":11}},{"path":"src/main/java/seedu/address/model/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public class ItemNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":6}},{"path":"src/main/java/seedu/address/model/ingredient/Ingredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Item;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"public class Ingredient implements Item {","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    private String name;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    private int quantity;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"     * Ingredient constructor","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"     * @param name","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"     * @param quantity","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    public Ingredient(@JsonProperty(\"name\") String name, @JsonProperty(\"quantity\") int quantity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public String getName() {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        return name;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        return quantity;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    public boolean isSame(Item other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        if (!(other instanceof Ingredient)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        Ingredient otherIngredient \u003d (Ingredient) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        return otherIngredient !\u003d null","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 this.getName().equals(otherIngredient.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        if (!(other instanceof Ingredient)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        Ingredient otherIngredient \u003d (Ingredient) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"        return this.name.equals(name) \u0026\u0026 otherIngredient.quantity \u003d\u003d quantity;","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"                .append(getName())","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"                .append(\"; Quantity: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"                .append(getQuantity());","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Sharptail":1,"IanCKW":2,"jamesleeht":68}},{"path":"src/main/java/seedu/address/model/ingredient/IngredientBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.UniqueItemList;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"public class IngredientBook implements ReadOnlyIngredientBook {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    private final UniqueItemList\u003cIngredient\u003e ingredients;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        ingredients \u003d new UniqueItemList\u003cIngredient\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    public IngredientBook() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * Constructor to copy ingredient book","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * @param toBeCopied","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    public IngredientBook(ReadOnlyIngredientBook toBeCopied) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"        this();","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"     * Set ingredients from list","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredients","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    public void setIngredients(List\u003cIngredient\u003e ingredients) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        this.ingredients.setItems(ingredients);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     * Reset list data using new data","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"     * @param newData","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    public void resetData(ReadOnlyIngredientBook newData) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        setIngredients(newData.getIngredientList());","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"     * Check if ingredient exists","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredient","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        return ingredients.contains(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"     * Add new ingredient","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"     * @param o","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    public void addIngredient(Ingredient o) {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        ingredients.add(o);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"     * Set ingredient details","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"     * @param target","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"     * @param editedIngredient","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    public void setIngredient(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        ingredients.setItem(target, editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"     * Remove ingredient","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"     * @param key","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"    public void removeIngredient(Ingredient key) {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        ingredients.remove(key);","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        return ingredients.asUnmodifiableObservableList().size() + \" Ingredients\";","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"    public ObservableList\u003cIngredient\u003e getIngredientList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        return ingredients.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof IngredientBook // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 ingredients.equals(((IngredientBook) other).ingredients));","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":100}},{"path":"src/main/java/seedu/address/model/ingredient/IngredientNameContainsWordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.ingredient;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"public class IngredientNameContainsWordsPredicate implements Predicate\u003cIngredient\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    public IngredientNameContainsWordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    public boolean test(Ingredient ingredient) {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(ingredient.getName(), keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof IngredientNameContainsWordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 keywords.equals(((IngredientNameContainsWordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jamesleeht":27}},{"path":"src/main/java/seedu/address/model/ingredient/IngredientStub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.model.ingredient;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public class IngredientStub {","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":4}},{"path":"src/main/java/seedu/address/model/ingredient/ReadOnlyIngredientBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Book;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public interface ReadOnlyIngredientBook extends Book {","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"    ObservableList\u003cIngredient\u003e getIngredientList();","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":8}},{"path":"src/main/java/seedu/address/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.order;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Item;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"public class Order implements Item {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"    private String datetime;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    private Person customer;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * Order constructor","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"     * @param datetime","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * @param customer","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     * @param dishQuantityList","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public Order(@JsonProperty(\"datetime\") String datetime, @JsonProperty(\"customer\") Person customer,","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"                 @JsonProperty(\"dishQuantityList\") List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        this.dishQuantityList \u003d dishQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"    public String getDatetime() {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"        return datetime;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    public Person getCustomer() {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        return customer;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"kangtinglee"},"content":"    public boolean isFromCustomer(Person target) {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"        return customer.equals(target);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    public List\u003cPair\u003cDish, Integer\u003e\u003e getDishQuantityList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"        return dishQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"    public String getDetails() {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        builder.append(\"Datetime: \")","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"                .append(getDatetime())","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"                .append(\"\\nCustomer: \")","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"                .append(getCustomer());","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"        if (!dishQuantityList.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"            builder.append(\"\\nDishes: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"            for (Pair\u003cDish, Integer\u003e pair : dishQuantityList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"                builder.append(pair.getKey());","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"                builder.append(\" x\");","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"                builder.append(pair.getValue());","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"                builder.append(\"\\n\");","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"    public boolean isSame(Item other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        return otherOrder !\u003d null","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 this.getDatetime().equals(otherOrder.getDatetime());","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        if (!(other instanceof Dish)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"guanyz"},"content":"        return otherOrder.getDatetime().equals(getDatetime())","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 otherOrder.getCustomer().equals(getCustomer())","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 listEquals(otherOrder.getDishQuantityList());","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"    private boolean listEquals(List\u003cPair\u003cDish, Integer\u003e\u003e otherList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"        if (otherList.size() !\u003d dishQuantityList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"        boolean result \u003d true;","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"        for (int i \u003d 0; i \u003c dishQuantityList.size(); i++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"            Pair\u003cDish, Integer\u003e current \u003d dishQuantityList.get(i);","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"            Pair\u003cDish, Integer\u003e other \u003d otherList.get(i);","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"            result \u003d current.equals(other);","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"        return result;","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"guanyz"},"content":"        builder.append(\"Datetime: \")","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"guanyz"},"content":"                .append(getDatetime())","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"                .append(\"; Customer: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"                .append(getCustomer());","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"        if (!dishQuantityList.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"            builder.append(\"; Dishes: \");","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"            for (Pair\u003cDish, Integer\u003e pair : dishQuantityList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"                builder.append(pair.getKey());","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"                builder.append(\" x\");","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"                builder.append(pair.getValue());","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kangtinglee":4,"Sharptail":3,"guanyz":8,"IanCKW":18,"jamesleeht":98}},{"path":"src/main/java/seedu/address/model/order/OrderBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.order;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.UniqueItemList;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"public class OrderBook implements ReadOnlyOrderBook {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    private final UniqueItemList\u003cOrder\u003e orders;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        orders \u003d new UniqueItemList\u003cOrder\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    public OrderBook() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * Constructor to copy order book","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * @param toBeCopied","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    public OrderBook(ReadOnlyOrderBook toBeCopied) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"        this();","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"     * Set orders from list","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"     * @param orders","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        this.orders.setItems(orders);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     * Reset data to specified data","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"     * @param newData","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    public void resetData(ReadOnlyOrderBook newData) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        setOrders(newData.getOrderList());","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"     * Check if order exists","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"     * @param order","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        return orders.contains(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"     * Add order to list","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"     * @param o","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    public void addOrder(Order o) {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        orders.add(o);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"     * Set order to new order details","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"     * @param target","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"     * @param editedOrder","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        orders.setItem(target, editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"     * Remove specific order","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"     * @param key","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"    public void removeOrder(Order key) {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        orders.remove(key);","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        return orders.asUnmodifiableObservableList().size() + \" orders\";","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"    public ObservableList\u003cOrder\u003e getOrderList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof OrderBook // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 orders.equals(((OrderBook) other).orders));","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":100}},{"path":"src/main/java/seedu/address/model/order/OrderStub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.model.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public class OrderStub {","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":4}},{"path":"src/main/java/seedu/address/model/order/ReadOnlyOrderBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.order;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Book;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public interface ReadOnlyOrderBook extends Book {","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    ObservableList\u003cOrder\u003e getOrderList();","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":14}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Item;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public class Person implements Item {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private final String name;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    private final String phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private final String email;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    private final String address;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    public Person(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"                  @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                  @JsonProperty(\"tags\") List\u003cString\u003e tags) {","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    public String getName() {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"    public String getPhone() {","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    public String getEmail() {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"    public String getAddress() {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    public List\u003cString\u003e getTags() {","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        return Collections.unmodifiableList(tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public boolean isSame(Item other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"        List\u003cString\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":107,"jamesleeht":38}},{"path":"src/main/java/seedu/address/model/person/PersonBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.UniqueItemList;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"public class PersonBook implements ReadOnlyPersonBook {","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    private final UniqueItemList\u003cPerson\u003e persons;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"        persons \u003d new UniqueItemList\u003cPerson\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    public PersonBook() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public PersonBook(ReadOnlyPersonBook toBeCopied) {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        this.persons.setItems(persons);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    public void resetData(ReadOnlyPersonBook newData) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        persons.setItem(target, editedPerson);","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof PersonBook // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 persons.equals(((PersonBook) other).persons));","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":99,"jamesleeht":12}},{"path":"src/main/java/seedu/address/model/person/PersonNameContainsWordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public class PersonNameContainsWordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    public PersonNameContainsWordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName(), keyword));","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof PersonNameContainsWordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 keywords.equals(((PersonNameContainsWordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":26,"jamesleeht":5}},{"path":"src/main/java/seedu/address/model/person/ReadOnlyPersonBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Book;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"public interface ReadOnlyPersonBook extends Book {","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":14,"jamesleeht":3}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.ReadOnlyDishBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientBook;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.ReadOnlyIngredientBook;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderBook;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.ReadOnlyOrderBook;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"            new Person(\"Alex Yeoh\", \"87438807\", \"alexyeoh@example.com\",","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"                    \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"                getTagList(\"gluten allergy\")),","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"            new Person(\"Bernice Yu\", \"99272758\", \"berniceyu@example.com\",","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"                \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"                getTagList(\"regular\", \"seafood allergy\")),","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"            new Person(\"Charlotte Oliveiro\", \"93210283\", \"charlotte@example.com\",","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"                getTagList(\"vegan\")),","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"            new Person(\"David Li\", \"91031282\", \"lidavid@example.com\",","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"                \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"                getTagList(\"employee discount\")),","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"            new Person(\"Irfan Ibrahim\", \"92492021\", \"irfan@example.com\",","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"                \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"                getTagList(\"regular\")),","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"            new Person(\"Roy Balakrishnan\", \"92624417\", \"royb@example.com\",","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"                \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"                getTagList(\"regular\"))","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"        };","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    public static Dish[] getSampleDishes() {","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"        return new Dish[] {","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"            new Dish(\"Pizza\", 14.50, new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e()),","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"            new Dish(\"Burger\", 10.50, new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e()),","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"            new Dish(\"Chicken wings\", 5.00, new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e()),","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            new Dish(\"French fries\", 3.50, new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e())","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        };","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"    public static Ingredient[] getSampleIngredients() {","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"        return new Ingredient[] {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"            new Ingredient(\"Chicken wing\", 100),","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"            new Ingredient(\"Potato\", 51),","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"            new Ingredient(\"Tomato\", 40),","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"            new Ingredient(\"Beef patty\", 50),","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"            new Ingredient(\"Burger bun\", 30),","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"    public static Order[] getSampleOrders() {","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"        // dummy contacts to populate order list","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        Person david \u003d new Person(\"David Li\", \"91031282\", \"lidavid@example.com\",","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"                \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"                getTagList(\"employee discount\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        Person bernice \u003d new Person(\"Bernice Yu\", \"99272758\", \"berniceyu@example.com\",","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"                \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"                getTagList(\"regular\", \"seafood allergy\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"        // dummy dishes to populate order list","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"        Dish burger \u003d new Dish(\"Burger\", 10.50, new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"        Dish wings \u003d new Dish(\"Chicken wings\", 5.00, new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"        Dish fries \u003d new Dish(\"French fries\", 3.50, new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"        return new Order[] {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"            new Order(\"14-02-2021 18:30\", bernice,","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"                    new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"guanyz"},"content":"                            new Pair\u003c\u003e(burger, 2),","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"guanyz"},"content":"                            new Pair\u003c\u003e(wings, 2)","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"guanyz"},"content":"                    ))),","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"guanyz"},"content":"            new Order(\"14-02-2021 19:15\", david,","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"guanyz"},"content":"                    new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"                            new Pair\u003c\u003e(burger, 1),","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"guanyz"},"content":"                            new Pair\u003c\u003e(fries, 1)","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"guanyz"},"content":"                    )))","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"    public static ReadOnlyPersonBook getSamplePersonBook() {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"        PersonBook sampleAb \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"    public static ReadOnlyDishBook getSampleDishBook() {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"        DishBook sampleDb \u003d new DishBook();","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"        for (Dish sampleDish : getSampleDishes()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"            sampleDb.addDish(sampleDish);","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"        return sampleDb;","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"    public static ReadOnlyOrderBook getSampleOrderBook() {","lastModifiedDate":"2021-03-26"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"        OrderBook sampleOb \u003d new OrderBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"        for (Order sampleOrder : getSampleOrders()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"            sampleOb.addOrder(sampleOrder);","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"        return sampleOb;","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"    public static ReadOnlyIngredientBook getSampleIngredientBook() {","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"        IngredientBook sampleIb \u003d new IngredientBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"        for (Ingredient sampleIngredient : getSampleIngredients()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"            sampleIb.addIngredient(sampleIngredient);","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"        return sampleIb;","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"    public static List\u003cString\u003e getTagList(String... strings) {","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(strings));","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":30,"guanyz":28,"jamesleeht":78}},{"path":"src/main/java/seedu/address/storage/BookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Book;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public interface BookStorage\u003cT extends Book\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    Path getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * Returns AddressBook data as a {@link ReadOnlyPersonBook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    Optional\u003cT\u003e readBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    Optional\u003cT\u003e readBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     * Saves the given {@link ReadOnlyPersonBook} to the storage.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     * @param book cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    void saveBook(T book) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     * @see #saveBook(T)","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    void saveBook(T book, Path filePath) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":26,"jamesleeht":16}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.ReadOnlyDishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.ReadOnlyIngredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.ReadOnlyOrderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"public interface Storage extends UserPrefsStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Address Book \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public Path getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readPersonBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readPersonBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    public void savePersonBook(ReadOnlyPersonBook addressBook) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public void savePersonBook(ReadOnlyPersonBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DishBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    public Path getDishBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyDishBook\u003e readDishBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyDishBook\u003e readDishBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    public void saveDishBook(ReadOnlyDishBook addressBook) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    public void saveDishBook(ReadOnlyDishBook dishBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d IngredientBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    public Path getIngredientBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyIngredientBook\u003e readIngredientBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyIngredientBook\u003e readIngredientBook(Path filePath)","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"    public void saveIngredientBook(ReadOnlyIngredientBook addressBook) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"    public void saveIngredientBook(ReadOnlyIngredientBook ingredientBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OrderBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"    public Path getOrderBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyOrderBook\u003e readOrderBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyOrderBook\u003e readOrderBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    public void saveOrderBook(ReadOnlyOrderBook addressBook) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    public void saveOrderBook(ReadOnlyOrderBook orderBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":25,"jamesleeht":43}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.ReadOnlyDishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.ReadOnlyIngredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.ReadOnlyOrderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    private BookStorage\u003cReadOnlyPersonBook\u003e personBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private BookStorage\u003cReadOnlyDishBook\u003e dishBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    private BookStorage\u003cReadOnlyIngredientBook\u003e ingredientBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    private BookStorage\u003cReadOnlyOrderBook\u003e orderBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    public StorageManager(BookStorage\u003cReadOnlyPersonBook\u003e personBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"                          BookStorage\u003cReadOnlyDishBook\u003e dishBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                          BookStorage\u003cReadOnlyIngredientBook\u003e ingredientBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"                          BookStorage\u003cReadOnlyOrderBook\u003e orderBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        this.personBookStorage \u003d personBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        this.dishBookStorage \u003d dishBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientBookStorage \u003d ingredientBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        this.orderBookStorage \u003d orderBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PersonBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"    public Path getPersonBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        return personBookStorage.getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readPersonBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        return readPersonBook(personBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readPersonBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        return personBookStorage.readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    public void savePersonBook(ReadOnlyPersonBook addressBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        savePersonBook(addressBook, personBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"    public void savePersonBook(ReadOnlyPersonBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"        personBookStorage.saveBook(addressBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DishBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"    public Path getDishBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"        return dishBookStorage.getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyDishBook\u003e readDishBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"        return readDishBook(dishBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyDishBook\u003e readDishBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"        return dishBookStorage.readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    public void saveDishBook(ReadOnlyDishBook addressBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"        saveDishBook(addressBook, dishBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    public void saveDishBook(ReadOnlyDishBook dishBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"        dishBookStorage.saveBook(dishBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d IngredientBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"    public Path getIngredientBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"        return ingredientBookStorage.getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyIngredientBook\u003e readIngredientBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"        return readIngredientBook(ingredientBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyIngredientBook\u003e readIngredientBook(Path filePath)","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"        return ingredientBookStorage.readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"jamesleeht"},"content":"    public void saveIngredientBook(ReadOnlyIngredientBook addressBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"jamesleeht"},"content":"        saveIngredientBook(addressBook, ingredientBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"jamesleeht"},"content":"    public void saveIngredientBook(ReadOnlyIngredientBook ingredientBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"jamesleeht"},"content":"        ingredientBookStorage.saveBook(ingredientBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OrderBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"jamesleeht"},"content":"    public Path getOrderBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"jamesleeht"},"content":"        return orderBookStorage.getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyOrderBook\u003e readOrderBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"jamesleeht"},"content":"        return readOrderBook(orderBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyOrderBook\u003e readOrderBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"        return orderBookStorage.readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"    public void saveOrderBook(ReadOnlyOrderBook addressBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"        saveOrderBook(addressBook, orderBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"jamesleeht"},"content":"    public void saveOrderBook(ReadOnlyOrderBook orderBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"        orderBookStorage.saveBook(orderBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":64,"jamesleeht":115}},{"path":"src/main/java/seedu/address/storage/dish/JsonDishBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.dish;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.ReadOnlyDishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"public class JsonDishBookStorage implements BookStorage\u003cReadOnlyDishBook\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPersonBookStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public JsonDishBookStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public Path getBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     * Returns AddressBook data as a {@link ReadOnlyPersonBook}.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyDishBook\u003e readBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        return readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @see #getBookFilePath()","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyDishBook\u003e readBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cJsonSerializableDishBook\u003e jsonDishBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"                filePath, JsonSerializableDishBook.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        if (!jsonDishBook.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            return Optional.of(jsonDishBook.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     * Saves the given {@link ReadOnlyPersonBook} to the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * @param dishBook cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyDishBook dishBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        saveBook(dishBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     * @see #saveBook(ReadOnlyDishBook)","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyDishBook book, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(book);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDishBook(book), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":87}},{"path":"src/main/java/seedu/address/storage/dish/JsonSerializableDishBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.dish;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.ReadOnlyDishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":" * An immutable DishBook that is serializable to JSON format.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"@JsonRootName(value \u003d \"dishbook\")","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializableDishBook {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"Dish list contains duplicate dishes.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cDish\u003e dishes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableDishBook(@JsonProperty(\"dishes\") List\u003cDish\u003e dishes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        this.dishes.addAll(dishes);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableDishBook(ReadOnlyDishBook source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        dishes.addAll(source.getDishList());","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public DishBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        DishBook dishBook \u003d new DishBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        dishBook.setDishes(dishes);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        return dishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":43}},{"path":"src/main/java/seedu/address/storage/ingredient/JsonIngredientBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.ingredient;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.ReadOnlyIngredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"public class JsonIngredientBookStorage implements BookStorage\u003cReadOnlyIngredientBook\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPersonBookStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public JsonIngredientBookStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public Path getBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     * Returns AddressBook data as a {@link ReadOnlyPersonBook}.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyIngredientBook\u003e readBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        return readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @see #getBookFilePath()","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyIngredientBook\u003e readBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cJsonSerializableIngredientBook\u003e jsonIngredientBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"                filePath, JsonSerializableIngredientBook.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        if (!jsonIngredientBook.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            return Optional.of(jsonIngredientBook.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     * Saves the given {@link ReadOnlyPersonBook} to the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredientBook cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyIngredientBook ingredientBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        saveBook(ingredientBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     * @see #saveBook(ReadOnlyIngredientBook)","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyIngredientBook ingredientBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(ingredientBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableIngredientBook(ingredientBook), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":87}},{"path":"src/main/java/seedu/address/storage/ingredient/JsonSerializableIngredientBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.ingredient;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.ReadOnlyIngredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":" * An immutable IngredientBook that is serializable to JSON format.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"@JsonRootName(value \u003d \"ingredientbook\")","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializableIngredientBook {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"Ingredient list contains duplicate ingredients.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cIngredient\u003e ingredients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableIngredientBook(@JsonProperty(\"ingredients\") List\u003cIngredient\u003e ingredients) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        this.ingredients.addAll(ingredients);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableIngredientBook(ReadOnlyIngredientBook source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        ingredients.addAll(source.getIngredientList());","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"     * Returns model type","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"     * @return IngredientBook model","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public IngredientBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        IngredientBook ingredientBook \u003d new IngredientBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        ingredientBook.setIngredients(ingredients);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        return ingredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":43}},{"path":"src/main/java/seedu/address/storage/order/JsonOrderBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.order;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.ReadOnlyOrderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"public class JsonOrderBookStorage implements BookStorage\u003cReadOnlyOrderBook\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPersonBookStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public JsonOrderBookStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public Path getBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     * Returns AddressBook data as a {@link ReadOnlyPersonBook}.","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyOrderBook\u003e readBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        return readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @see #getBookFilePath()","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyOrderBook\u003e readBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cJsonSerializableOrderBook\u003e jsonOrderBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"                filePath, JsonSerializableOrderBook.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        if (!jsonOrderBook.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            return Optional.of(jsonOrderBook.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     * Saves the given {@link ReadOnlyPersonBook} to the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * @param orderBook cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyOrderBook orderBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        saveBook(orderBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     * @see #saveBook(ReadOnlyOrderBook)","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyOrderBook orderBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(orderBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableOrderBook(orderBook), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":87}},{"path":"src/main/java/seedu/address/storage/order/JsonSerializableOrderBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.order;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.ReadOnlyOrderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":" * An immutable OrderBook that is serializable to JSON format.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"@JsonRootName(value \u003d \"orderbook\")","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializableOrderBook {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"Order list contains duplicate orders.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableOrderBook(@JsonProperty(\"orders\") List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableOrderBook(ReadOnlyOrderBook source) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        orders.addAll(source.getOrderList());","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"     * To model type","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"     * @return OrderBook model type","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public OrderBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        OrderBook orderBook \u003d new OrderBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        orderBook.setOrders(orders);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        return orderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":43}},{"path":"src/main/java/seedu/address/storage/person/JsonPersonBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.person;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"public class JsonPersonBookStorage implements BookStorage\u003cReadOnlyPersonBook\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPersonBookStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    public JsonPersonBookStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    public Path getBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readBook() throws DataConversionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        return readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * Similar to {@link #readBook()}.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyPersonBook\u003e readBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyPersonBook personBook) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"        saveBook(personBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * Similar to {@link #saveBook(ReadOnlyPersonBook)}.","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyPersonBook personBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(personBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(personBook), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":64,"jamesleeht":17}},{"path":"src/main/java/seedu/address/storage/person/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.person;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableAddressBook(ReadOnlyPersonBook source) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        persons.addAll(source.getPersonList());","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    public PersonBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"        PersonBook personBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"        personBook.setPersons(persons);","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        return personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":41,"jamesleeht":12}},{"path":"src/main/java/seedu/address/ui/InventoryCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"public class InventoryCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"InventoryListCard.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    public final Ingredient ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    private HBox inventoryCardPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    private Label id;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"    private Label name;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    private Label quantity;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"    public InventoryCard(Ingredient ingredient, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"        this.ingredient \u003d ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"        name.setText(ingredient.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"        quantity.setText(String.valueOf(ingredient.getQuantity()));","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"        if (!(other instanceof InventoryCard)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"        // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"        InventoryCard card \u003d (InventoryCard) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 ingredient.equals(card.ingredient);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":62}},{"path":"src/main/java/seedu/address/ui/InventoryListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"public class InventoryListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"InventoryListPanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    private ListView\u003cIngredient\u003e inventoryListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"    public InventoryListPanel(ObservableList\u003cIngredient\u003e inventoryList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        inventoryListView.setItems(inventoryList);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        inventoryListView.setCellFactory(listView -\u003e new InventoryListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    class InventoryListViewCell extends ListCell\u003cIngredient\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"        protected void updateItem(Ingredient ingredient, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"            super.updateItem(ingredient, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"            if (empty || ingredient \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"                setText(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"                setGraphic(new InventoryCard(ingredient, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":45}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"    private MenuListPanel menuListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"    private InventoryListPanel inventoryListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"    private OrderListPanel orderListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    private VBox personList;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    private VBox componentList;","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"    private StackPane menuListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"    private StackPane inventoryListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"IanCKW"},"content":"    private StackPane orderListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"Sharptail"},"content":"        personList.getChildren().clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"Sharptail"},"content":"        personList.getChildren().add(personListPanelPlaceholder);","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"Sharptail"},"content":"        menuListPanel \u003d new MenuListPanel(logic.getFilteredDishList());","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"Sharptail"},"content":"        menuListPanelPlaceholder.getChildren().add(menuListPanel.getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"Sharptail"},"content":"        componentList.getChildren().clear();","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"Sharptail"},"content":"        componentList.getChildren().add(menuListPanelPlaceholder);","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"jamesleeht"},"content":"            assert commandResult.type()","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"jamesleeht"},"content":"                    !\u003d CommandResult.CRtype.NONE : \"Command Result is not supposed to be a help or exit command\";","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"IanCKW"},"content":"            if (commandResult.type() \u003d\u003d CommandResult.CRtype.PERSON) {","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"Sharptail"},"content":"                personList.getChildren().clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"IanCKW"},"content":"                personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"Sharptail"},"content":"                personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"Sharptail"},"content":"                personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"Sharptail"},"content":"                personList.getChildren().add(personListPanelPlaceholder);","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"IanCKW"},"content":"            } else if (commandResult.type() \u003d\u003d CommandResult.CRtype.DISH) {","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"Sharptail"},"content":"                componentList.getChildren().clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"Sharptail"},"content":"                menuListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"IanCKW"},"content":"                menuListPanel \u003d new MenuListPanel(logic.getFilteredDishList());","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"IanCKW"},"content":"                menuListPanelPlaceholder.getChildren().add(menuListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"Sharptail"},"content":"                componentList.getChildren().add(menuListPanelPlaceholder);","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"IanCKW"},"content":"            } else if (commandResult.type() \u003d\u003d CommandResult.CRtype.INGREDIENT) {","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"Sharptail"},"content":"                componentList.getChildren().clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"Sharptail"},"content":"                inventoryListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"IanCKW"},"content":"                inventoryListPanel \u003d new InventoryListPanel(logic.getFilteredInventoryList());","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"IanCKW"},"content":"                inventoryListPanelPlaceholder.getChildren().add(inventoryListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"Sharptail"},"content":"                componentList.getChildren().add(inventoryListPanelPlaceholder);","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"IanCKW"},"content":"            } else if (commandResult.type() \u003d\u003d CommandResult.CRtype.ORDER) {","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"Sharptail"},"content":"                componentList.getChildren().clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"Sharptail"},"content":"                orderListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"IanCKW"},"content":"                orderListPanel \u003d new OrderListPanel(logic.getFilteredOrderList());","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"IanCKW"},"content":"                orderListPanelPlaceholder.getChildren().add(orderListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"Sharptail"},"content":"                componentList.getChildren().add(orderListPanelPlaceholder);","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Sharptail":28,"-":193,"IanCKW":26,"jamesleeht":2}},{"path":"src/main/java/seedu/address/ui/MenuCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":" * An UI component that displays information of a {@code dish}.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"public class MenuCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"MenuListCard.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    public final Dish dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    private HBox menuCardPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    private Label id;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"    private Label name;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    private Label price;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code MenuCard} with the given {@code dish} and index to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"    public MenuCard(Dish dish, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"        this.dish \u003d dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"        name.setText(dish.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"        price.setText(String.valueOf(dish.getPrice()));","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"        if (!(other instanceof MenuCard)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"        // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"        MenuCard card \u003d (MenuCard) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 dish.equals(card.dish);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":62}},{"path":"src/main/java/seedu/address/ui/MenuListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"public class MenuListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"MenuListPanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    private ListView\u003cDish\u003e menuListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"    public MenuListPanel(ObservableList\u003cDish\u003e menuList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        menuListView.setItems(menuList);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        menuListView.setCellFactory(listView -\u003e new MenuListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    class MenuListViewCell extends ListCell\u003cDish\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"        protected void updateItem(Dish dish, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"            super.updateItem(dish, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"            if (empty || dish \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"                setText(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"                setGraphic(new MenuCard(dish, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":45}},{"path":"src/main/java/seedu/address/ui/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":" * An UI component that displays information of a {@code order}.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"OrderListCard.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    public final Order order;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    private HBox orderCardPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    private Label id;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"    private Label details;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code OrderCode} with the given {@code Order} and index to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"        this.order \u003d order;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        details.setText(order.getDetails());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"        // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"        OrderCard card \u003d (OrderCard) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 order.equals(card.order);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":60}},{"path":"src/main/java/seedu/address/ui/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"public class OrderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"OrderListPanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        orderListView.setItems(orderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"        orderListView.setCellFactory(listView -\u003e new OrderListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"                setText(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"                setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":46}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        name.setText(person.getName());","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        phone.setText(person.getPhone());","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        address.setText(person.getAddress());","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        email.setText(person.getEmail());","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag))","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag)));","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":70,"jamesleeht":6}},{"path":"src/main/resources/view/InventoryListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"\u003cHBox id\u003d\"inventoryCardPane\" fx:id\u003d\"inventoryCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"            \u003cLabel fx:id\u003d\"quantity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":33}},{"path":"src/main/resources/view/InventoryListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    \u003cListView fx:id\u003d\"inventoryListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"            \u003cHBox styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"                  \u003cVBox fx:id\u003d\"personList\" layoutX\u003d\"11.0\" layoutY\u003d\"11.0\" minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"                  \u003cVBox fx:id\u003d\"componentList\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"                        \u003cStackPane fx:id\u003d\"menuListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"                        \u003cStackPane fx:id\u003d\"inventoryListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"                        \u003cStackPane fx:id\u003d\"orderListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Sharptail":27,"-":40,"IanCKW":3}},{"path":"src/main/resources/view/MenuListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"\u003cHBox id\u003d\"menuCardPane\" fx:id\u003d\"menuCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"            \u003cLabel fx:id\u003d\"price\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":33}},{"path":"src/main/resources/view/MenuListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    \u003cListView fx:id\u003d\"menuListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":8}},{"path":"src/main/resources/view/OrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"\u003cHBox id\u003d\"orderCardPane\" fx:id\u003d\"orderCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"details\" text\u003d\"\\$first\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":32}},{"path":"src/main/resources/view/OrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    \u003cListView fx:id\u003d\"orderListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"    \"tags\": [ \"friends\" ]","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":13,"jamesleeht":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ \"friends\" ]","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ \"friends\" ]","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":39,"jamesleeht":7}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"  \"personBookFilePath\" : \"addressbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"  \"dishBookFilePath\" : \"dishbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"  \"ingredientBookFilePath\" : \"ingredientbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"  \"orderBookFilePath\" : \"orderbook.json\"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":12,"jamesleeht":5}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"  \"personBookFilePath\" : \"addressbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"  \"dishBookFilePath\" : \"dishbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"  \"ingredientBookFilePath\" : \"ingredientbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"  \"orderBookFilePath\" : \"orderbook.json\"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":10,"jamesleeht":4}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.CustomerParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.dish.JsonDishBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.ingredient.JsonIngredientBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.order.JsonOrderBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"        JsonPersonBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"                new JsonPersonBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        JsonDishBookStorage dishBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"                new JsonDishBookStorage(temporaryFolder.resolve(\"dishbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        JsonIngredientBookStorage ingredientBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"                new JsonIngredientBookStorage(temporaryFolder.resolve(\"ingredientbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        JsonOrderBookStorage orderBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"                new JsonOrderBookStorage(temporaryFolder.resolve(\"orderbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, dishBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"                ingredientBookStorage, orderBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"    public void execute_customerCommandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"        String deleteCommand \u003d \"customer delete 9\";","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        assertCommandException(deleteCommand, String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"    public void execute_validCustomerCommand_success() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"        String listCommand \u003d CustomerParser.COMPONENT_WORD + \" \" + CustomerListCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(listCommand, CustomerListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"    public void execute_customerStorageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        JsonPersonBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"                new JsonPersonBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, null, null, null, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"        String addCommand \u003d CustomerParser.COMPONENT_WORD + \" \" + CustomerAddCommand.COMMAND_WORD","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":"                + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"jamesleeht"},"content":"    private static class JsonPersonBookIoExceptionThrowingStub extends JsonPersonBookStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"jamesleeht"},"content":"        private JsonPersonBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"        public void saveBook(ReadOnlyPersonBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Sharptail":11,"-":137,"jamesleeht":24}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    public static final CustomerEditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    public static final CustomerEditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"        PersonBook expectedPersonBook \u003d new PersonBook(actualModel.getAddressBook());","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(expectedPersonBook, actualModel.getAddressBook());","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"        final String[] splitName \u003d person.getName().split(\"\\\\s+\");","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"        model.updateFilteredPersonList(new PersonNameContainsWordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Sharptail":3,"-":120,"jamesleeht":6}},{"path":"src/test/java/seedu/address/logic/commands/CustomerAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommandIntegrationTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerAddCommand(validPerson), model,","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"                String.format(CustomerAddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"        assertCommandFailure(new CustomerAddCommand(personInList), model, CustomerAddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Sharptail":5,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/CustomerAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"kangtinglee"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.ReadOnlyDishBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.ReadOnlyIngredientBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.ReadOnlyOrderBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CustomerAddCommand(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        CommandResult commandResult \u003d new CustomerAddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        assertEquals(String.format(CustomerAddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand addCommand \u003d new CustomerAddCommand(validPerson);","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"                CustomerAddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand addAliceCommand \u003d new CustomerAddCommand(alice);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand addBobCommand \u003d new CustomerAddCommand(bob);","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand addAliceCommandCopy \u003d new CustomerAddCommand(alice);","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"        public Path getPersonBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"        public void setPersonBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"        public void setAddressBook(ReadOnlyPersonBook newData) {","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyPersonBook getAddressBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"kangtinglee"},"content":"        public Person getPersonByIndex(int i) {","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"jamesleeht"},"content":"        public void setDishBook(ReadOnlyDishBook dishBook) {","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyDishBook getDishBook() {","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"        public boolean hasDish(Dish dish) {","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"jamesleeht"},"content":"        public void deleteDish(Dish dish) {","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"jamesleeht"},"content":"        public void addDish(Dish dish) {","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"jamesleeht"},"content":"        public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"jamesleeht"},"content":"        public ObservableList\u003cDish\u003e getFilteredDishList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"jamesleeht"},"content":"        public void updateFilteredDishList(Predicate\u003cDish\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":206,"author":{"gitId":"kangtinglee"},"content":"        public List\u003cDish\u003e getDishesByIngredients(Ingredient ingredient) {","lastModifiedDate":"2021-03-26"},{"lineNumber":207,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":210,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"jamesleeht"},"content":"        public void setIngredientBook(ReadOnlyIngredientBook ingredientBook) {","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":216,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyIngredientBook getIngredientBook() {","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"jamesleeht"},"content":"        public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":225,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":226,"author":{"gitId":"jamesleeht"},"content":"        public void deleteIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":229,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"jamesleeht"},"content":"        public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"jamesleeht"},"content":"        public void setIngredient(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-03-14"},{"lineNumber":237,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":238,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":239,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":240,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"jamesleeht"},"content":"        public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":242,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"jamesleeht"},"content":"        public void updateFilteredIngredientList(Predicate\u003cIngredient\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":248,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":251,"author":{"gitId":"jamesleeht"},"content":"        public void setOrderBook(ReadOnlyOrderBook orderBook) {","lastModifiedDate":"2021-03-14"},{"lineNumber":252,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":253,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":254,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":255,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":256,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyOrderBook getOrderBook() {","lastModifiedDate":"2021-03-14"},{"lineNumber":257,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":258,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":259,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":260,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":261,"author":{"gitId":"jamesleeht"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-14"},{"lineNumber":262,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":263,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":264,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":265,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":266,"author":{"gitId":"jamesleeht"},"content":"        public void deleteOrder(Order order) {","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":268,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":269,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":270,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":271,"author":{"gitId":"kangtinglee"},"content":"        public void deleteOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-26"},{"lineNumber":272,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":273,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":274,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":275,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":276,"author":{"gitId":"jamesleeht"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2021-03-14"},{"lineNumber":277,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":278,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":279,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":280,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":281,"author":{"gitId":"jamesleeht"},"content":"        public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-14"},{"lineNumber":282,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":283,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":284,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":285,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":286,"author":{"gitId":"jamesleeht"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":287,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":288,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":289,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":290,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"jamesleeht"},"content":"        public void updateFilteredOrderList(Predicate\u003cOrder\u003e predicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":296,"author":{"gitId":"kangtinglee"},"content":"        public List\u003cOrder\u003e getOrdersFromPerson(Person target) {","lastModifiedDate":"2021-03-26"},{"lineNumber":297,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":298,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":338,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyPersonBook getAddressBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":339,"author":{"gitId":"jamesleeht"},"content":"            return new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kangtinglee":21,"Sharptail":11,"-":177,"jamesleeht":134}},{"path":"src/test/java/seedu/address/logic/commands/CustomerClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerClearCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class CustomerClearCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerClearCommand(), model, CustomerClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        expectedModel.setAddressBook(new PersonBook());","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerClearCommand(), model, CustomerClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Sharptail":4,"-":27,"jamesleeht":2}},{"path":"src/test/java/seedu/address/logic/commands/CustomerDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"public class CustomerDeleteCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteCommand \u003d new CustomerDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerDeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteCommand \u003d new CustomerDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"        assertCommandFailure(deleteCommand, model, String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteCommand \u003d new CustomerDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerDeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteCommand \u003d new CustomerDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        assertCommandFailure(deleteCommand, model, String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteFirstCommand \u003d new CustomerDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteSecondCommand \u003d new CustomerDeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteFirstCommandCopy \u003d new CustomerDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Sharptail":11,"-":97,"jamesleeht":2}},{"path":"src/test/java/seedu/address/logic/commands/CustomerEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerClearCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"public class CustomerEditCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"Sharptail"},"content":"        assertCommandFailure(editCommand, model, CustomerEditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"Sharptail"},"content":"        assertCommandFailure(editCommand, model, CustomerEditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"        assertCommandFailure(editCommand, model, String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(outOfBoundIndex,","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"jamesleeht"},"content":"        assertCommandFailure(editCommand, model, String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"Sharptail"},"content":"        final CustomerEditCommand standardCommand \u003d new CustomerEditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand commandWithSameValues \u003d new CustomerEditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"Sharptail"},"content":"        assertFalse(standardCommand.equals(new CustomerClearCommand()));","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"Sharptail"},"content":"        assertFalse(standardCommand.equals(new CustomerEditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"Sharptail"},"content":"        assertFalse(standardCommand.equals(new CustomerEditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2021-03-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Sharptail":23,"-":145,"jamesleeht":7}},{"path":"src/test/java/seedu/address/logic/commands/CustomerFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"public class CustomerFindCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        PersonNameContainsWordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                new PersonNameContainsWordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        PersonNameContainsWordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                new PersonNameContainsWordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand findFirstCommand \u003d new CustomerFindCommand(firstPredicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand findSecondCommand \u003d new CustomerFindCommand(secondPredicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand findFirstCommandCopy \u003d new CustomerFindCommand(firstPredicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW, 0, Messages.ITEM_PERSONS);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        PersonNameContainsWordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand command \u003d new CustomerFindCommand(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW, 3, Messages.ITEM_PERSONS);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        PersonNameContainsWordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand command \u003d new CustomerFindCommand(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"    private PersonNameContainsWordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"        return new PersonNameContainsWordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Sharptail":7,"-":65,"jamesleeht":12}},{"path":"src/test/java/seedu/address/logic/commands/CustomerListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"public class CustomerListCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerListCommand(), model, CustomerListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerListCommand(), model, CustomerListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Sharptail":4,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Sharptail":1,"-":57}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Sharptail":1,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/CustomerAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerAddCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    private CustomerAddCommandParser parser \u003d new CustomerAddCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"//    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"//        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"//        // whitespace only preamble","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"//        // multiple names - last name accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"//        // multiple phones - last phone accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"//        // multiple emails - last email accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"//        // multiple addresses - last address accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"//        // multiple tags - all accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"//        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"//                .build();","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"//    }","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"                new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"//    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"//        // invalid name","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"//        // invalid phone","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"//        // invalid email","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"//        // invalid address","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"//        // invalid tag","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"//                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"//        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"//        // non-empty preamble","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"//                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"//    }","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Sharptail":6,"-":70,"jamesleeht":61}},{"path":"src/test/java/seedu/address/logic/parser/CustomerDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerDeleteCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"public class CustomerDeleteCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    private CustomerDeleteCommandParser parser \u003d new CustomerDeleteCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        assertParseSuccess(parser, \"1\", new CustomerDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"                CustomerDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Sharptail":7,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/CustomerEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerEditCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"public class CustomerEditCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    private CustomerEditCommandParser parser \u003d new CustomerEditCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        assertParseFailure(parser, \"1\", CustomerEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"//    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"//        // invalid phone followed by valid email","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"//        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"//        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"//        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"//        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"//    }","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"jamesleeht"},"content":"//    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"//    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"jamesleeht"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"jamesleeht"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"//                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"//                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"jamesleeht"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"//                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"//                .build();","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"jamesleeht"},"content":"//        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"jamesleeht"},"content":"//    }","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Sharptail":17,"-":151,"jamesleeht":39}},{"path":"src/test/java/seedu/address/logic/parser/CustomerFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerFindCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"public class CustomerFindCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    private CustomerFindCommandParser parser \u003d new CustomerFindCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"                CustomerFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"                new CustomerFindCommand(new PersonNameContainsWordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Sharptail":7,"-":27,"jamesleeht":2}},{"path":"src/test/java/seedu/address/logic/parser/JJIMYParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerClearCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.CustomerParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"public class JJIMYParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    private final JJIMYParser parser \u003d new JJIMYParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_add() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand command \u003d (CustomerAddCommand) parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        assertEquals(new CustomerAddCommand(person), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_clear() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerClearCommand.COMMAND_WORD)","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"                instanceof CustomerClearCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerClearCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"                instanceof CustomerClearCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_delete() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand command \u003d (CustomerDeleteCommand) parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerDeleteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"                        + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"        assertEquals(new CustomerDeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_edit() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand command \u003d (CustomerEditCommand) parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerEditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"        assertEquals(new CustomerEditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_find() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand command \u003d (CustomerFindCommand) parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerFindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(new CustomerFindCommand(new PersonNameContainsWordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_list() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerListCommand.COMMAND_WORD)","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"                instanceof CustomerListCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerListCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"                instanceof CustomerListCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":"            -\u003e parser.parseCompo(\"\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"Sharptail"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCompo(\"unknownCommand\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Sharptail":47,"-":65,"jamesleeht":2}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(new PersonBook(), new PersonBook(modelManager.getAddressBook()));","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setPersonBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setPersonBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPersonBookFilePath(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        modelManager.setPersonBookFilePath(path);","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(path, modelManager.getPersonBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"        PersonBook personBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"        PersonBook differentPersonBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"        modelManager \u003d new ModelManager(personBook, userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(personBook, userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPersonBook, userPrefs)));","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"        String[] keywords \u003d ALICE.getName().split(\"\\\\s+\");","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"        modelManager.updateFilteredPersonList(new PersonNameContainsWordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"        assertFalse(modelManager.equals(new ModelManager(personBook, userPrefs)));","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"        differentUserPrefs.setPersonBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"        assertFalse(modelManager.equals(new ModelManager(personBook, differentUserPrefs)));","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":115,"jamesleeht":18}},{"path":"src/test/java/seedu/address/model/PersonBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"public class PersonBookTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    private final PersonBook personBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(Collections.emptyList(), personBook.getPersonList());","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e personBook.resetData(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        PersonBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        personBook.resetData(newData);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(newData, personBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        PersonBookStub newData \u003d new PersonBookStub(newPersons);","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e personBook.resetData(newData));","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e personBook.hasPerson(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        assertFalse(personBook.hasPerson(ALICE));","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        personBook.addPerson(ALICE);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        assertTrue(personBook.hasPerson(ALICE));","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        personBook.addPerson(ALICE);","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        assertTrue(personBook.hasPerson(editedAlice));","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e personBook.getPersonList().remove(0));","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"    private static class PersonBookStub implements ReadOnlyPersonBook {","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"        PersonBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":83,"jamesleeht":21}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPersonBookFilePath(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":20,"jamesleeht":1}},{"path":"src/test/java/seedu/address/storage/JsonPersonBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"public class JsonPersonBookStorageTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    private java.util.Optional\u003cReadOnlyPersonBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        return new JsonPersonBookStorage(Paths.get(filePath)).readBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"//    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"//    }","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"//    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"//    }","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        PersonBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        JsonPersonBookStorage jsonPersonBookStorage \u003d new JsonPersonBookStorage(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        jsonPersonBookStorage.saveBook(original, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyPersonBook readBack \u003d jsonPersonBookStorage.readBook(filePath).get();","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(original, new PersonBook(readBack));","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        jsonPersonBookStorage.saveBook(original, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        readBack \u003d jsonPersonBookStorage.readBook(filePath).get();","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(original, new PersonBook(readBack));","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        jsonPersonBookStorage.saveBook(original); // file path not specified","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"        readBack \u003d jsonPersonBookStorage.readBook().get(); // file path not specified","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(original, new PersonBook(readBack));","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"    private void saveAddressBook(ReadOnlyPersonBook addressBook, String filePath) {","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"            new JsonPersonBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"                    .saveBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new PersonBook(), null));","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":81,"jamesleeht":30}},{"path":"src/test/java/seedu/address/storage/JsonSerializablePersonBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonSerializableAddressBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializablePersonBookTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        PersonBook personBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        PersonBook typicalPersonsPersonBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(personBookFromFile, typicalPersonsPersonBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"//    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"//    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"//    }","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"//","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"//    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"//    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"//    }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":28,"jamesleeht":20}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setPersonBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setDishBookFilePath(Paths.get(\"dishbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setIngredientBookFilePath(Paths.get(\"ingredientbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setOrderBookFilePath(Paths.get(\"orderbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"jamesleeht":5}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.ReadOnlyPersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.dish.JsonDishBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.ingredient.JsonIngredientBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.order.JsonOrderBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        JsonPersonBookStorage personBookStorage \u003d new JsonPersonBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        JsonDishBookStorage dishBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"                new JsonDishBookStorage(getTempFilePath(\"db\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        JsonIngredientBookStorage ingredientBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"                new JsonIngredientBookStorage(getTempFilePath(\"ib\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"        JsonOrderBookStorage orderBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"                new JsonOrderBookStorage(getTempFilePath(\"ob\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        storageManager \u003d new StorageManager(personBookStorage, dishBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"                ingredientBookStorage, orderBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        PersonBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"        storageManager.savePersonBook(original);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyPersonBook retrieved \u003d storageManager.readPersonBook().get();","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(original, new PersonBook(retrieved));","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        assertNotNull(storageManager.getPersonBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":59,"jamesleeht":20}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    private PersonBook personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        personBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public AddressBookBuilder(PersonBook personBook) {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        this.personBook \u003d personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        personBook.addPerson(person);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    public PersonBook build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        return personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":26,"jamesleeht":8}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setName(name);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setPhone(phone);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setEmail(email);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setAddress(address);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setTags(Arrays.asList(tags));","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Sharptail":1,"-":72,"jamesleeht":6}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    private String name;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    private String phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    private String email;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private String address;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        name \u003d DEFAULT_NAME;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        phone \u003d DEFAULT_PHONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        email \u003d DEFAULT_EMAIL;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        address \u003d DEFAULT_ADDRESS;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        tags \u003d new ArrayList\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        this.tags \u003d SampleDataUtil.getTagList(tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":73,"jamesleeht":18}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        return CustomerAddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        sb.append(PREFIX_NAME + person.getName() + \" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        sb.append(PREFIX_PHONE + person.getPhone() + \" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail() + \" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress() + \" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"            s -\u003e sb.append(PREFIX_TAG + s + \" \")","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            List\u003cString\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Sharptail":3,"-":47,"jamesleeht":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    public static PersonBook getTypicalAddressBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        PersonBook ab \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":73,"jamesleeht":3}}]
