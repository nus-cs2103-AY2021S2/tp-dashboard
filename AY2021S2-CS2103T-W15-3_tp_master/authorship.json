[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-W15-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-W15-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W15-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W15-3/tp)","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### JJIMY","lastModifiedDate":"2021-02-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"JJIMY is a restaurant management app for managing food orders, ingredient inventory, etc via Command Line Interface (CLI). \u003cbr/\u003e ","lastModifiedDate":"2021-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"For the detailed documentation of this project, see the **[JJIMY Product Website](https://ay2021s2-cs2103t-w15-3.github.io/tp/)**","lastModifiedDate":"2021-02-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"### Value Proposition","lastModifiedDate":"2021-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"- Keep track of customers’ contacts and preferences","lastModifiedDate":"2021-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"- Keep track of customers’ orders","lastModifiedDate":"2021-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"- Keep track of the food inventory","lastModifiedDate":"2021-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"- Keep track of which ingredients to restock","lastModifiedDate":"2021-02-15"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"### Acknowledgeemnts","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"Sharptail":9,"-":10}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"java {","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    ignoreFailures \u003d true","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"    archiveName \u003d \u0027jjimy.jar\u0027","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Sharptail":5,"-":71,"jamesleeht":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"You can reach us at the email `jjimy@comp.nus.edu.sg`","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"### James Lee Hong Thern","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/jamesleeht.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"[[github](https://github.com/jamesleeht)]","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/jamesleeht.md)]","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"* Role: Team Lead","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"* Responsibility: Class Models","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"### Ian Chan Kit Wai","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/ianckw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"[[github](http://github.com/IanCKW)]","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/ianckw.md)]","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"* Role: Testing","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"* Responsibility: Commands","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"### Guan Yang Ze","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/guanyz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"[[github](http://github.com/guanyz)]","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/guanyz.md)]","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"* Role: Documentation","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"* Responsibility: Commands","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"### Lee Kang Ting Marcus","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/kangtinglee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"[[github](http://github.com/kangtinglee)]","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/kangtinglee.md)]","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"* Role: Integration","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"* Responsibility: Commands","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"### Kong Jian Wei","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"\u003cimg src\u003d\"images/sharptail.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"[[github](http://github.com/Sharptail)]","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"[[portfolio](team/sharptail.md)]","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"* Role: Code Quality","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"* Responsibility: GUI and Parsers","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"Sharptail":31,"-":29}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"- [**Setting up, getting started**](#--setting-up--getting-started--)","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"- [**Design**](#--design--)","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    * [UI component](#ui-component)","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    * [Logic component](#logic-component)","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    * [Model component](#model-component)","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    * [Storage component](#storage-component)","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    * [Common classes](#common-classes)","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"- [**Implementation**](#--implementation--)","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    * [Design enhancements](#design-enhancements)","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        + [Model update](#model-update)","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"        + [Storage update](#storage-update)","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        + [Component Parser](#component-parser)","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        + [Parser validation](#parser-validation)","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"        + [Data consistency](#data-consistency)","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"            - [Deletion of Person objects](#deletion-of-person-objects)","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"            - [Deletion of Ingredient objects](#deletion-of-ingredient-objects)","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"            - [Logging of Order object](#logging-of-order-object)","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        + [Concurrent list display](#concurrent-list-display)","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"        + [\\[Proposed\\] Data archiving](#--proposed---data-archiving)","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    * [Command enhancements](#command-enhancements)","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        + [Add command](#add-command)","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        + [Delete command](#delete-command)","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        + [List command](#list-command)","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        + [\\[Proposed\\] Find command](#--proposed---find-command)","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        + [\\[Proposed\\] Edit command](#--proposed---edit-command)","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"- [**Documentation, logging, testing, configuration, dev-ops**](#--documentation--logging--testing--configuration--dev-ops--)","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"- [**Appendix: Requirements**](#--appendix--requirements--)","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    * [Product scope](#product-scope)","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    * [User stories](#user-stories)","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    * [Use cases](#use-cases)","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    * [Glossary](#glossary)","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"![AD](images/ArchitectureDiagram.png) ","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"\u003e **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"![ArchitectureSequenceDiagram](images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"guanyz"},"content":"### Design enhancements","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"guanyz"},"content":"#### Model update","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"jamesleeht"},"content":"The model has been updated to contain new classes for the `menu`, `inventory`, and `order` components (`Dish`, `Ingredient`, and `Order` classes respectively), in addition to the original `Person` class for the `contact` component.","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"`Person` class has had field classes `Phone`, `Address` and `Email` removed. `Tag` has also been replaced with `String` instead. The validation functionality will be moved to other classes.","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"`UniquePersonList` has been adapted to `UniqueItemList\u003cT\u003e`, with every model class implementing the `Item` interface.","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"Every component has its own `Book` class which uses `UniqueItemList\u003cT\u003e`, which have thgir functionality exposed through the `ModelManager` class (Facade pattern).","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"guanyz"},"content":"#### Storage update","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"The storage has been updated to handle the new classes and their relevant `Book` classes. ","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"jamesleeht"},"content":"Sample data has also been added for each book. JSON serializability of each class is ensured via the use of `Jackson` annotations.","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"jamesleeht"},"content":"No `JsonAdaptedPerson` or similar classes are used. Instead, the model class is directly annotated for deserialization.","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"guanyz"},"content":"#### Component Parser","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"guanyz"},"content":"The `ComponentParser` mechanism is facilitated by `JJIMYParser` with a general command input format of","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"guanyz"},"content":"    [component] [command] [arguments]","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"guanyz"},"content":"`JJIMYParser` will read in the first word of the input which is the `[component]` and pass the command on to the respective component parser (one of `CustomerParser`, `MenuParser`, `OrderParser` and `InventoryParser`) that implements `ComponentParser`. The component word is stripped by `JJIMYParser`, so the relevant `ComponentParser` receives an input format of","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"guanyz"},"content":"    [command] [arguments]","lastModifiedDate":"2021-03-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"guanyz"},"content":"Finally, the respective `ComponentParser` will read in the `[command]` and return their respective `ComponentCommand` to be executed by `LogicManager`.","lastModifiedDate":"2021-03-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"guanyz"},"content":"The following sequence diagram shows how a `CustomerAddCommand` operation is parsed and executed.","lastModifiedDate":"2021-03-25"},{"lineNumber":195,"author":{"gitId":"guanyz"},"content":"![Sequence diagram for a CustomerAddCommand](images/JJIMYParserSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"Sharptail"},"content":"The following activity diagram summarizes what happens when a user executes a new command.","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"guanyz"},"content":"![Activity diagram for a new command](images/JJIMYParserActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"jamesleeht"},"content":"#### Parser validation","lastModifiedDate":"2021-03-26"},{"lineNumber":201,"author":{"gitId":"jamesleeht"},"content":"Validation of fields through regex are moved out of the model classes and into their own classes.","lastModifiedDate":"2021-03-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":203,"author":{"gitId":"jamesleeht"},"content":"Apart from regex, validation is also done through looking up of the model to ensure that no invalid links to other model classes (E.g. an order linking to a non-existing Dish) happens.","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"guanyz"},"content":"#### Data consistency","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"kangtinglee"},"content":"To ensure data consistency, some calls of the `delete` function have cascading effects. ","lastModifiedDate":"2021-03-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"kangtinglee"},"content":"##### Deletion of Person objects","lastModifiedDate":"2021-03-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":211,"author":{"gitId":"kangtinglee"},"content":"When a `Person` is deleted from the model, all `Order`s related to that `Person` should also be deleted, since that `Person` no longer exists. This is illustrated in the following sequence diagram:","lastModifiedDate":"2021-03-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":213,"author":{"gitId":"guanyz"},"content":"![Diagram showing example of cascading deletion](images/CascadingDeletionCustomers.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"guanyz"},"content":"As seen from the above sequence diagram, when `deletePerson` is called on `ModelManager`, it first deletes the `Person`","lastModifiedDate":"2021-03-25"},{"lineNumber":216,"author":{"gitId":"guanyz"},"content":"from `PersonBook`. Then, it retrieves the entire order list from `OrderBook` and checks each individual `Order`. If the","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"guanyz"},"content":"`Order` is associated with the `Person`, then the `Order` is removed by `ModelManger` via the `deleteOrder` method. This","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"guanyz"},"content":"check is done via `Order::isFromCustomer` which returns `true` if the `Order` is associated with the `Customer` and","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"guanyz"},"content":"`false` otherwise.","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":221,"author":{"gitId":"kangtinglee"},"content":"##### Deletion of Ingredient objects","lastModifiedDate":"2021-03-26"},{"lineNumber":222,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":223,"author":{"gitId":"kangtinglee"},"content":"Another key instance of data consistency occurs between the `Ingredient` and `Dish` classes. The deletion of an Ingredient also affects all the dishes that use that ingredient and hence, those `Dish`es will also be removed.","lastModifiedDate":"2021-03-26"},{"lineNumber":224,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":225,"author":{"gitId":"kangtinglee"},"content":"When an `Ingredient` is being attempted to be deleted, a check is first done to see if any `Dish` uses that `Ingredient`. If no `Dish` uses the `Ingredient`, then it is deleted immediately.","lastModifiedDate":"2021-03-26"},{"lineNumber":226,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":227,"author":{"gitId":"kangtinglee"},"content":"However, in the event that there are `Dish`es that use the `Ingredient` in question, then a warning will be displayed and users will be required to re-enter their command but with a `-f` flag to confirm that they want to also delete all `Dish`es associated with the `Ingredient`.","lastModifiedDate":"2021-03-26"},{"lineNumber":228,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":229,"author":{"gitId":"kangtinglee"},"content":"##### Logging of Order object","lastModifiedDate":"2021-03-26"},{"lineNumber":230,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":231,"author":{"gitId":"kangtinglee"},"content":"Data consistency extends beyond deletion. When `Order` objects are created, the `Ingredient`s and their quantities are tabulated from the `Dish`es and their respective quantities. ","lastModifiedDate":"2021-03-26"},{"lineNumber":232,"author":{"gitId":"kangtinglee"},"content":"The quantity of each `Ingredient` is then decremented by the corresponding amount. ","lastModifiedDate":"2021-03-26"},{"lineNumber":233,"author":{"gitId":"kangtinglee"},"content":"This automated data link ensures that the restaurant owner will be notified when they are attempting to place orders for dishes that have insufficient stock to produce.","lastModifiedDate":"2021-03-26"},{"lineNumber":234,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":235,"author":{"gitId":"guanyz"},"content":"#### Concurrent list display","lastModifiedDate":"2021-03-25"},{"lineNumber":236,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":237,"author":{"gitId":"guanyz"},"content":"To increase the efficiency of adding food orders, the GUI has been improved to display two lists at the same time. The customer list will always be shown on the left column whereas the right column will display one of the other components.","lastModifiedDate":"2021-03-25"},{"lineNumber":238,"author":{"gitId":"guanyz"},"content":" ","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"guanyz"},"content":"Which component list is shown on the right will depend on the component of the last command input. For example, using a `menu add` command will cause the right side to display the menu list, whereas `order add` will show the right side to display the order list. However, using a command on the `customer` component will only update the left list and not affect the right list.","lastModifiedDate":"2021-03-25"},{"lineNumber":240,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":241,"author":{"gitId":"guanyz"},"content":"#### \\[Proposed\\] Data archiving","lastModifiedDate":"2021-03-25"},{"lineNumber":242,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":243,"author":{"gitId":"guanyz"},"content":"It is proposed that the general use case for removing `Order` objects from the currently displayed list will become not to delete them, but to *archive* them for future reference (e.g. accounting purposes). This will be achieved with a `completed` field within each Order object, which will determine whether they are displayed in the currently active order list or in the archived order list.","lastModifiedDate":"2021-03-25"},{"lineNumber":244,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":245,"author":{"gitId":"guanyz"},"content":"### Command enhancements","lastModifiedDate":"2021-03-25"},{"lineNumber":246,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":247,"author":{"gitId":"guanyz"},"content":"#### Add command","lastModifiedDate":"2021-03-25"},{"lineNumber":248,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":249,"author":{"gitId":"guanyz"},"content":"The `add` command is implemented for all four components and can be called from the CLI input with the general form","lastModifiedDate":"2021-03-25"},{"lineNumber":250,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":251,"author":{"gitId":"guanyz"},"content":"\t[component] add [arguments...]","lastModifiedDate":"2021-03-25"},{"lineNumber":252,"author":{"gitId":"Sharptail"},"content":"\t","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"guanyz"},"content":"The arguments differ depending on what component the `add` command is being called on. (For more details, see the description of individual `add` commands in the [User Guide](https://ay2021s2-cs2103t-w15-3.github.io/tp/UserGuide.html).) ","lastModifiedDate":"2021-03-25"},{"lineNumber":254,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"guanyz"},"content":"For details on how the command is parsed, refer to the explanation in the [Component Parser description](#component-parser). After the command is successfully parsed into an add `Command` object (e.g. `MenuAddCommand`), the `Command` object is executed by the `LogicManager`; the `add` commands\u0027 `execute` methods include validation routines to ensure the item to be added is both valid and not a duplicate of an item in the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":256,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"guanyz"},"content":"Finally, the `ModelManager` is called to add the item to the relevant `Book`, and a `CommandResult` object is returned, which causes the `MainWindow` to update to display the result. The following sequence diagram shows how the `MainWindow` is updated after a `menu add` command is called by the user. Note that, as detailed in the [concurrent list display description](#concurrent-list-display), the right-hand side of the `MainWindow` will be updated to show the new state of the menu.","lastModifiedDate":"2021-03-25"},{"lineNumber":258,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":259,"author":{"gitId":"guanyz"},"content":"![Sequence diagram showing GUI update caused by a MenuAddCommand](images/MenuAddGUI.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"guanyz"},"content":"#### Delete command","lastModifiedDate":"2021-03-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"guanyz"},"content":"The `delete` command is implemented for all four components and can be called from the CLI input with the form","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":265,"author":{"gitId":"guanyz"},"content":"\t[component] delete [arguments...]","lastModifiedDate":"2021-03-25"},{"lineNumber":266,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":267,"author":{"gitId":"guanyz"},"content":"The argument for the `delete` command is always the (1-indexed) index of the item to be deleted, *as shown in the currently displayed list* .","lastModifiedDate":"2021-03-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":269,"author":{"gitId":"guanyz"},"content":"For details on how the command is parsed, refer to the explanation in the [Component Parser description](#component-parser). After the command is successfully parsed into an delete `Command` object (e.g. `MenuDeleteCommand`), the `Command` object is executed by the `LogicManager`; the `delete` commands\u0027 `execute` methods include validation routines to ensure the index selected is a valid index.","lastModifiedDate":"2021-03-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":271,"author":{"gitId":"guanyz"},"content":"Finally, the `ModelManager` is called to delete the item from the relevant `Book`, and a `CommandResult` object is returned, which causes the `MainWindow` to update to display the result.","lastModifiedDate":"2021-03-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":273,"author":{"gitId":"guanyz"},"content":"In some cases, use of the `delete` command may trigger cascading `delete`s on other lists to maintain data consistency. For more information, see the [data consistency section](#data-consistency) of this Developer Guide.","lastModifiedDate":"2021-03-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":275,"author":{"gitId":"guanyz"},"content":"After execution, the GUI\u0027s displayed list is updated in a similar fashion to the GUI update caused by the [add command](#add-command).","lastModifiedDate":"2021-03-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":277,"author":{"gitId":"guanyz"},"content":"#### List command","lastModifiedDate":"2021-03-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":279,"author":{"gitId":"guanyz"},"content":"The `list` command is implemented for all four components and can be called from the CLI input with the form","lastModifiedDate":"2021-03-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":281,"author":{"gitId":"IanCKW"},"content":"\t[component] list","lastModifiedDate":"2021-03-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":283,"author":{"gitId":"guanyz"},"content":"There are no arguments for the `list` command. ","lastModifiedDate":"2021-03-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":285,"author":{"gitId":"guanyz"},"content":"Unlike the other commands, the `list` command has no specific parsers beyond the base component parsers (e.g. `MenuParser`; there is **no** `MenuListParser`), since there are no further arguments to parse. Therefore, the `Command` object is created directly by the base component parser and returned to be executed into a `CommandResult` object. The `CommandResult` is used to update the GUI, as explained in the [concurrent list display description](#concurrent-list-display).","lastModifiedDate":"2021-03-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":287,"author":{"gitId":"guanyz"},"content":"The following sequence diagram shows how the GUI is updated from `MainWindow` after a `menu list` command is called by the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":288,"author":{"gitId":"guanyz"},"content":"![Sequence diagram showing GUI update caused by a MenuListCommand](images/MenuListGUI.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":290,"author":{"gitId":"guanyz"},"content":"#### \\[Proposed\\] Find command","lastModifiedDate":"2021-03-25"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":292,"author":{"gitId":"guanyz"},"content":"The `find` command will be implemented for all four components and can be called from the CLI input with the general form","lastModifiedDate":"2021-03-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"guanyz"},"content":"\t[component] find [arguments...]","lastModifiedDate":"2021-03-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"guanyz"},"content":"The arguments of the `find` command will always be the keyword(s) to be searched for.","lastModifiedDate":"2021-03-25"},{"lineNumber":297,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"guanyz"},"content":"The `find` command will be parsed in a similar way to other commands (see the [Component Parser description](#component-parser)). The `find` command will update the `FilteredList` object to only contain items that match the keywords and return a `CommandResult` object to update the GUI, in a similar fashion to the GUI update caused by the [add command](#add-command).","lastModifiedDate":"2021-03-25"},{"lineNumber":299,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"guanyz"},"content":"#### \\[Proposed\\] Edit command","lastModifiedDate":"2021-03-25"},{"lineNumber":301,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":302,"author":{"gitId":"guanyz"},"content":"The `edit` command will be implemented for all four components and can be called from the CLI input with the general form","lastModifiedDate":"2021-03-25"},{"lineNumber":303,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":304,"author":{"gitId":"guanyz"},"content":"\t[component] edit [arguments...]","lastModifiedDate":"2021-03-25"},{"lineNumber":305,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"guanyz"},"content":"Similar to the implementation of the `add` command, the arguments will differ depending on what component the `edit` command is being called on.","lastModifiedDate":"2021-03-25"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"guanyz"},"content":"The `edit` command will be parsed in a similar way to other commands (see the [Component Parser description](#component-parser)). The `edit` command will select an object from the *currently displayed list* via its (1-indexed) index and create a new object with the same parameters, except for the parameters given as arguments to be updated. ","lastModifiedDate":"2021-03-25"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"guanyz"},"content":"This new object will replace an object in the current book and return a `CommandResult` object to update the GUI from `MainWindow`, in a similar fashion to the GUI update caused by the [add command](#add-command).","lastModifiedDate":"2021-03-25"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"IanCKW"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-02"},{"lineNumber":325,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"IanCKW"},"content":"* has a need to manage a significant number of contacts, orders, menu items and inventory","lastModifiedDate":"2021-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"IanCKW"},"content":"**Value proposition**: manage contacts, orders, menu items and inventory faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"guanyz"},"content":"| Priority | As a...                        | I want to...                                               | So that I can...                                            |","lastModifiedDate":"2021-03-02"},{"lineNumber":346,"author":{"gitId":"guanyz"},"content":"| -------- | ------------------------------ | ---------------------------------------------------------- | ----------------------------------------------------------- |","lastModifiedDate":"2021-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"| `* * *`  | new user                       | see usage instructions                                     | refer to instructions when I forget how to use the App      |","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"guanyz"},"content":"| `* * *`  | fast typer                     | be able to input by CLI                                    | key in commands faster                                      |","lastModifiedDate":"2021-03-02"},{"lineNumber":349,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | add a customer\u0027s contact                                   | keep track of each customer\u0027s details                       |","lastModifiedDate":"2021-03-02"},{"lineNumber":350,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | remove a customer\u0027s contact                                | remove customers who no longer patronize the restaurant     |","lastModifiedDate":"2021-03-02"},{"lineNumber":351,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | add dishes to the menu                                     | keep track of dishes being offered                          |","lastModifiedDate":"2021-03-02"},{"lineNumber":352,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | remove dishes from the menu                                | remove dishes that are not being offered anymore            |","lastModifiedDate":"2021-03-02"},{"lineNumber":353,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | add food orders to the order list                          | keep track of the food I need to prepare                    |","lastModifiedDate":"2021-03-02"},{"lineNumber":354,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | remove food orders from the order list                     | remove the order if my customers changed their minds        |","lastModifiedDate":"2021-03-02"},{"lineNumber":355,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | add the ingredients that I have restocked to the inventory | know which ingredients I have in stock                      |","lastModifiedDate":"2021-03-02"},{"lineNumber":356,"author":{"gitId":"guanyz"},"content":"| `* * *`  | restaurant owner               | remove ingredients from the food inventory                 | remove an ingredient I have just used                       |","lastModifiedDate":"2021-03-02"},{"lineNumber":357,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | view a list of ingredients from the food inventory         | so I know which ingredients I have in stock                 |","lastModifiedDate":"2021-03-16"},{"lineNumber":358,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | add tasks to my shopping list        \t\t\t | so I can remember which items to restock                    |","lastModifiedDate":"2021-03-16"},{"lineNumber":359,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | remove tasks from my shopping list    \t\t         | so I can remove tasks I don\u0027t need anymore                  |","lastModifiedDate":"2021-03-16"},{"lineNumber":360,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | view all tasks to my shopping list                         | so I can view which items to restock                        |","lastModifiedDate":"2021-03-16"},{"lineNumber":361,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | add dishes to the menu list                                | so I can keep track of the dishes being offered             |","lastModifiedDate":"2021-03-16"},{"lineNumber":362,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | remove dishes to the menu list                             | so I can remove dishes that are not being offered anymore   |","lastModifiedDate":"2021-03-16"},{"lineNumber":363,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | view all dishes to the menu list                           | so I can view all the dishes being offered                  |","lastModifiedDate":"2021-03-16"},{"lineNumber":364,"author":{"gitId":"IanCKW"},"content":"| `* * *`  | restaurant owner               | view the list of food orders                               | so I know which dishes to prepare                           |","lastModifiedDate":"2021-03-16"},{"lineNumber":365,"author":{"gitId":"guanyz"},"content":"| `* *`    | restaurant owner               | edit a customer\u0027s contact                                  | rectify typos for customer errors                           |","lastModifiedDate":"2021-03-02"},{"lineNumber":366,"author":{"gitId":"guanyz"},"content":"| `* *`    | user with many contacts        | find a customer\u0027s contact                                  | quickly locate the contact details of a particular customer |","lastModifiedDate":"2021-03-02"},{"lineNumber":367,"author":{"gitId":"guanyz"},"content":"| `* *`    | owner with a large menu        | find a dish on the menu                                    | quickly locate details of a dish on the menu                |","lastModifiedDate":"2021-03-02"},{"lineNumber":368,"author":{"gitId":"guanyz"},"content":"| `* *`    | owner of a busy restaurant     | find a food order from the order list                      | quickly locate the details of an order I\u0027m working on       |","lastModifiedDate":"2021-03-02"},{"lineNumber":369,"author":{"gitId":"guanyz"},"content":"| `* *`    | owner with a complex inventory | find the quantity of an ingredient in the food inventory   | quickly check how much of a certain ingredient I have left  |","lastModifiedDate":"2021-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":376,"author":{"gitId":"IanCKW"},"content":"**Use case: Request help**","lastModifiedDate":"2021-03-02"},{"lineNumber":377,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":378,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":379,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":380,"author":{"gitId":"IanCKW"},"content":"1.  User requests help","lastModifiedDate":"2021-03-02"},{"lineNumber":381,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY displays a list of commands","lastModifiedDate":"2021-03-02"},{"lineNumber":382,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":383,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":384,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":385,"author":{"gitId":"IanCKW"},"content":"**Use case: Exit**","lastModifiedDate":"2021-03-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"IanCKW"},"content":"1.  User requests to exit","lastModifiedDate":"2021-03-02"},{"lineNumber":390,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY exits","lastModifiedDate":"2021-03-02"},{"lineNumber":391,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":392,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":393,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":394,"author":{"gitId":"IanCKW"},"content":"**Use case: Add a contact**","lastModifiedDate":"2021-03-02"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":398,"author":{"gitId":"IanCKW"},"content":"1.  User requests to add a contact","lastModifiedDate":"2021-03-02"},{"lineNumber":399,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY adds the contact","lastModifiedDate":"2021-03-02"},{"lineNumber":400,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":401,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":402,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":403,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":404,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":405,"author":{"gitId":"IanCKW"},"content":"* 1a. JIMMY detects duplicate","lastModifiedDate":"2021-03-02"},{"lineNumber":406,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":407,"author":{"gitId":"IanCKW"},"content":"\t* 1a1. JIMMY shows an error message","lastModifiedDate":"2021-03-02"},{"lineNumber":408,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":409,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":410,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":411,"author":{"gitId":"IanCKW"},"content":"**Use case: List all contacts**","lastModifiedDate":"2021-03-02"},{"lineNumber":412,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":413,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":414,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":415,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":416,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":417,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":418,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":419,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":420,"author":{"gitId":"IanCKW"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2021-03-02"},{"lineNumber":421,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":422,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":423,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":424,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":425,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":426,"author":{"gitId":"IanCKW"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":427,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY deletes the contact","lastModifiedDate":"2021-03-02"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"IanCKW"},"content":"**Use case: Find a contact**","lastModifiedDate":"2021-03-02"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"guanyz"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":447,"author":{"gitId":"IanCKW"},"content":"1. User requests to list contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":448,"author":{"gitId":"IanCKW"},"content":"2. JJIMY shows a list of contacts","lastModifiedDate":"2021-03-02"},{"lineNumber":449,"author":{"gitId":"IanCKW"},"content":"3. User requests to find contacts based on keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":450,"author":{"gitId":"IanCKW"},"content":"4. JJIMY returns a list of matching contacts for the keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":454,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"IanCKW"},"content":"* 3a. The given keywords do not match any contacts.","lastModifiedDate":"2021-03-02"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"IanCKW"},"content":"**Use case: Add a menu item**","lastModifiedDate":"2021-03-02"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":470,"author":{"gitId":"IanCKW"},"content":"1.  User requests to add a menu item","lastModifiedDate":"2021-03-02"},{"lineNumber":471,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY adds the menu item","lastModifiedDate":"2021-03-02"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":473,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":475,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":477,"author":{"gitId":"IanCKW"},"content":"* 1a. JIMMY detects duplicate","lastModifiedDate":"2021-03-02"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":479,"author":{"gitId":"IanCKW"},"content":"\t* 1a1. JIMMY shows an error message","lastModifiedDate":"2021-03-02"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":481,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":483,"author":{"gitId":"IanCKW"},"content":"**Use case: List all menu items**","lastModifiedDate":"2021-03-02"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":485,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":487,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":488,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":490,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"IanCKW"},"content":"**Use case: Delete a menu item from the menu**","lastModifiedDate":"2021-03-02"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":496,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":497,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":498,"author":{"gitId":"IanCKW"},"content":"3.  User requests to delete a specific menu item in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":499,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY deletes the menu item","lastModifiedDate":"2021-03-02"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":501,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":502,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":503,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"IanCKW"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"IanCKW"},"content":"**Use case: Find a menu item**","lastModifiedDate":"2021-03-02"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"guanyz"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":519,"author":{"gitId":"IanCKW"},"content":"1. User requests to list menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":520,"author":{"gitId":"IanCKW"},"content":"2. JJIMY shows a list of menu items","lastModifiedDate":"2021-03-02"},{"lineNumber":521,"author":{"gitId":"IanCKW"},"content":"3. User requests to find menu items based on keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":522,"author":{"gitId":"IanCKW"},"content":"4. JJIMY returns a list of matching menu items for the keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":525,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":526,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":529,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":530,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":531,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":532,"author":{"gitId":"IanCKW"},"content":"* 3a. The given keywords do not match any menu item.","lastModifiedDate":"2021-03-02"},{"lineNumber":533,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":534,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":535,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":536,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":537,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":538,"author":{"gitId":"IanCKW"},"content":"**Use case: Add an order**","lastModifiedDate":"2021-03-02"},{"lineNumber":539,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":540,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":542,"author":{"gitId":"IanCKW"},"content":"1.  User requests to add an order","lastModifiedDate":"2021-03-02"},{"lineNumber":543,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY adds the order","lastModifiedDate":"2021-03-02"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":545,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":546,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":547,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":548,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":549,"author":{"gitId":"IanCKW"},"content":"* 1a. JIMMY detects duplicate","lastModifiedDate":"2021-03-02"},{"lineNumber":550,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":551,"author":{"gitId":"IanCKW"},"content":"\t* 1a1. JIMMY shows an error message","lastModifiedDate":"2021-03-02"},{"lineNumber":552,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":553,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":554,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":555,"author":{"gitId":"IanCKW"},"content":"**Use case: List all orders**","lastModifiedDate":"2021-03-02"},{"lineNumber":556,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":557,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":558,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":559,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list orders","lastModifiedDate":"2021-03-02"},{"lineNumber":560,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of orders","lastModifiedDate":"2021-03-02"},{"lineNumber":561,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":562,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"IanCKW"},"content":"**Use case: Delete an order**","lastModifiedDate":"2021-03-02"},{"lineNumber":565,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":566,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":567,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":568,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list orders","lastModifiedDate":"2021-03-02"},{"lineNumber":569,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of orders","lastModifiedDate":"2021-03-02"},{"lineNumber":570,"author":{"gitId":"IanCKW"},"content":"3.  User requests to delete a specific order in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":571,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY deletes the order","lastModifiedDate":"2021-03-02"},{"lineNumber":572,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":573,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":574,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":575,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":576,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":577,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":578,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":579,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":580,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":581,"author":{"gitId":"IanCKW"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":582,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":583,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":584,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":585,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":586,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":587,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":588,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":589,"author":{"gitId":"IanCKW"},"content":"**Use case: Find an order**","lastModifiedDate":"2021-03-02"},{"lineNumber":590,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":591,"author":{"gitId":"guanyz"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":592,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":593,"author":{"gitId":"IanCKW"},"content":"1. User requests to list orders","lastModifiedDate":"2021-03-02"},{"lineNumber":594,"author":{"gitId":"IanCKW"},"content":"2. JJIMY shows a list of orders","lastModifiedDate":"2021-03-02"},{"lineNumber":595,"author":{"gitId":"IanCKW"},"content":"3. User requests to find orders based on keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":596,"author":{"gitId":"IanCKW"},"content":"4. JJIMY returns a list of matching orders for the keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":597,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":598,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":599,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":600,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":601,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":602,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":603,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":604,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":605,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":606,"author":{"gitId":"IanCKW"},"content":"* 3a. The given keywords do not match any order.","lastModifiedDate":"2021-03-02"},{"lineNumber":607,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":608,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":609,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":610,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":611,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":612,"author":{"gitId":"IanCKW"},"content":"**Use case: Add an inventory item**","lastModifiedDate":"2021-03-02"},{"lineNumber":613,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":614,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":615,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":616,"author":{"gitId":"IanCKW"},"content":"1.  User requests to add an inventory item","lastModifiedDate":"2021-03-02"},{"lineNumber":617,"author":{"gitId":"IanCKW"},"content":"2.  If the quantity is 0, JJIMY adds a new ingredient, otherwise it increments the quantity","lastModifiedDate":"2021-03-02"},{"lineNumber":618,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":619,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":620,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":621,"author":{"gitId":"IanCKW"},"content":"**Use case: List all inventory items**","lastModifiedDate":"2021-03-02"},{"lineNumber":622,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":623,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":624,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":625,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":626,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":627,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":628,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":629,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":630,"author":{"gitId":"IanCKW"},"content":"**Use case: Delete an inventory item**","lastModifiedDate":"2021-03-02"},{"lineNumber":631,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":632,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":633,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":634,"author":{"gitId":"IanCKW"},"content":"1.  User requests to list all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":635,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":636,"author":{"gitId":"IanCKW"},"content":"3.  User requests to delete a specific inventory item in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":637,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY deletes the inventory item","lastModifiedDate":"2021-03-02"},{"lineNumber":638,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":639,"author":{"gitId":"IanCKW"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":640,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":641,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":642,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":643,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":644,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":645,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":646,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":647,"author":{"gitId":"IanCKW"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":648,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":649,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":650,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":651,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":652,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":653,"author":{"gitId":"IanCKW"},"content":"**Use case: Decrease the quantity of an inventory item**","lastModifiedDate":"2021-03-02"},{"lineNumber":654,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":655,"author":{"gitId":"IanCKW"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":656,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":657,"author":{"gitId":"IanCKW"},"content":"1. User requests to list all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":658,"author":{"gitId":"IanCKW"},"content":"2.  JJIMY shows a list of all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":659,"author":{"gitId":"IanCKW"},"content":"3.  User requests to decrease the quantity of a specific inventory item in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":660,"author":{"gitId":"IanCKW"},"content":"4.  JJIMY decreases the quantity inventory item","lastModifiedDate":"2021-03-02"},{"lineNumber":661,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":662,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":663,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":664,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":665,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":666,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":667,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":668,"author":{"gitId":"IanCKW"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":669,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":670,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":671,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":672,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":673,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":674,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":675,"author":{"gitId":"IanCKW"},"content":"**Use case: Find a inventory item**","lastModifiedDate":"2021-03-02"},{"lineNumber":676,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":677,"author":{"gitId":"guanyz"},"content":"**MSS**","lastModifiedDate":"2021-03-25"},{"lineNumber":678,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":679,"author":{"gitId":"IanCKW"},"content":"1. User requests to list all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":680,"author":{"gitId":"IanCKW"},"content":"2. JJIMY shows a list of all inventory items","lastModifiedDate":"2021-03-02"},{"lineNumber":681,"author":{"gitId":"IanCKW"},"content":"3. User requests to find inventory items based on keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":682,"author":{"gitId":"IanCKW"},"content":"4. JJIMY returns a list of matching inventory items for the keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":683,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":684,"author":{"gitId":"guanyz"},"content":"    Use case ends.","lastModifiedDate":"2021-03-25"},{"lineNumber":685,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":686,"author":{"gitId":"IanCKW"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":687,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":688,"author":{"gitId":"IanCKW"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":689,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":690,"author":{"gitId":"IanCKW"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":691,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":692,"author":{"gitId":"IanCKW"},"content":"* 3a. The given keywords do not match any inventory item.","lastModifiedDate":"2021-03-02"},{"lineNumber":693,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":694,"author":{"gitId":"IanCKW"},"content":"    * 3a1. JJIMY shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":695,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":696,"author":{"gitId":"IanCKW"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":697,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":698,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":699,"author":{"gitId":"IanCKW"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-03-02"},{"lineNumber":700,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":701,"author":{"gitId":"IanCKW"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-03-02"},{"lineNumber":702,"author":{"gitId":"guanyz"},"content":"2.  Should be able to hold up to 2000 total items (contacts, menu items, inventory stock) without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-04"},{"lineNumber":703,"author":{"gitId":"guanyz"},"content":"3.  Should be able to complete any single request within 200ms.","lastModifiedDate":"2021-03-04"},{"lineNumber":704,"author":{"gitId":"guanyz"},"content":"4.  Should work entirely client-side, without involving a remote server.","lastModifiedDate":"2021-03-04"},{"lineNumber":705,"author":{"gitId":"guanyz"},"content":"5.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-04"},{"lineNumber":706,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":707,"author":{"gitId":"IanCKW"},"content":"### Glossary","lastModifiedDate":"2021-03-02"},{"lineNumber":708,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":709,"author":{"gitId":"guanyz"},"content":"* **Inventory**: A list of necessary food ingredients and their associated stock quantities","lastModifiedDate":"2021-03-04"},{"lineNumber":710,"author":{"gitId":"guanyz"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS X","lastModifiedDate":"2021-03-04"},{"lineNumber":711,"author":{"gitId":"IanCKW"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"kangtinglee":19,"Sharptail":41,"-":261,"guanyz":114,"IanCKW":266,"jamesleeht":10}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"JJIMY is a **desktop app for managing your restaurant, optimized for use via a Command Line Interface** (CLI)[\u003csup\u003e1\u003c/sup\u003e](#glossary) while still having the benefits of a Graphical User Interface (GUI)[\u003csup\u003e3\u003c/sup\u003e](#glossary). If you can type fast, JJIMY can get your restaurant management tasks done faster than traditional GUI[\u003csup\u003e3\u003c/sup\u003e](#glossary) apps.","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"\u003cdetails open\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"\u003csummary\u003eTable of Contents\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"- [Features](#features)","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"  * [`General`](#general)","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    + [Access help page](#help)","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    + [Exit application ](#exit)","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"  * \u003cspan class\u003d\"customer\"\u003e[`Customer`](#customer)","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    + [List all customers](#customer-list)","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    + [Add a customers](#customer-add)","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    + [Delete customer](#customer-delete)","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    + [Edit customer information](#customer-edit)","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    + [Find contact](#customer-find)","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"      \u003c/span\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"  * \u003cspan class\u003d\"menu\"\u003e[`Menu`](#menu)","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    + [List all dishes](#menu-list)","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    + [Add a dish](#menu-add)","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    + [Delete a dish from the menu](#menu-delete)","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    + [Edit dish information](#menu-delete)","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    + [Find dish](#menu-find)","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"      \u003c/span\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"  * \u003cspan class\u003d\"order\"\u003e[`Order`](#order)","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    + [List all orders](#order-list)","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    + [Add an order](#order-add)","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    + [Delete an order](#order-delete)","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    + [Edit order information](#order-edit)","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    + [Find an order](#order-find)","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    + [Mark order as completed](#order-complete)","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    + [List all completed and cancelled orders](#order-history)","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"      \u003c/span\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"  * \u003cspan class\u003d\"inventory\"\u003e[`Inventory`](#inventory)","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    + [List all ingredients](#inventory-list)","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    + [Add an ingredient](#inventory-add)","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    + [Decrease quantity of ingredient](#inventory-decrease)","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    + [Delete an ingredient](#inventory-delete)","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    + [Edit ingredient information](#inventory-edit)","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    + [Find an ingredient](#inventory-find)","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"      \u003c/span\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"\u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"\u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"\u003csummary class\u003d\"dropdown-1\"\u003eQuick start\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"1. Ensure you have [Java 11](https://www.oracle.com/sg/java/technologies/javase-jdk11-downloads.html) [\u003csup\u003e2\u003c/sup\u003e](#glossary) or above installed in your Computer.","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"2. Download the latest `JJIMY.jar` from [here](https://github.com/AY2021S2-CS2103T-W15-3/tp/releases).","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for JJIMY.","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"4. Double-click the file to start the app. The GUI[\u003csup\u003e3\u003c/sup\u003e](#glossary) similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"   ![Ui](images/UiUG.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"5. Type in command in the `command box` and press Enter to execute it.","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"6. Refer to the [Features](#features) below for command details.","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"\u003ca name\u003d\"features\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"\u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"\u003csummary class\u003d\"dropdown-1\"\u003eFeatures\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"### Usage","lastModifiedDate":"2021-04-09"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"Commands have this general format:","lastModifiedDate":"2021-04-09"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-04-09"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"component command prefix/[INPUT] -flag","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"```","lastModifiedDate":"2021-04-09"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"- `component` - Component to apply the command to. (e.g. `customer`, `menu`)  ","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"  ","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"- `command` - Command to run. (e.g. `list`, `add`)  ","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"  ","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"- `prefix/[INPUT]` - Item in `[ ]` are the input to be supplied by the user. (e.g. `n/Thomas`)  ","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"  ","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"- `-flag` - change behavior. (e.g. `-f`, `-a`)","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"  ","lastModifiedDate":"2021-04-09"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":"\u003e   \u003cb\u003e\u003cu\u003eThings to note\u003c/u\u003e\u003c/b\u003e  ","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":"\u003e   - Items with `...` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"\u003e   Example:","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"\u003e       menu add n/[NAME] p/[PRICE] i/[INGREDIENT_ID]... q/[INGREDIENT_QUANTITY]...","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"\u003e       `i/[INGREDIENT_ID]... q/[INGREDIENT_QUANTITY]...` can be used as ` ` (i.e. 0 times) or `i/2 q/3 i/3 q/4`.","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"\u003e   \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"Sharptail"},"content":"\u003e   - Item in round brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"Sharptail"},"content":"\u003e   Example:","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"Sharptail"},"content":"\u003e       customer add n/[NAME] (t/[TAG])","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":"\u003e       `n/[NAME] (t/[TAG])` can be used as `n/Thomas t/Friend` or as `n/Thomas Tan`","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"Sharptail"},"content":"\u003e   \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"Sharptail"},"content":"\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"Sharptail"},"content":"\u003e   - Only one command can be executed at a time and any words after a valid command is entered will be ignored.  ","lastModifiedDate":"2021-04-10"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"\u003e   Example:","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-10"},{"lineNumber":113,"author":{"gitId":"Sharptail"},"content":"\u003e       customer list JJIMY is the best!","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-10"},{"lineNumber":115,"author":{"gitId":"Sharptail"},"content":"\u003e       The command above will execute `customer list` and ignore `JJIMY is the best!`","lastModifiedDate":"2021-04-10"},{"lineNumber":116,"author":{"gitId":"Sharptail"},"content":"\u003e   \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":117,"author":{"gitId":"Sharptail"},"content":"\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":118,"author":{"gitId":"Sharptail"},"content":"\u003e   - Items that have DATETIME as a parameter has `DD-MM-YYYY HH:MM` format.  ","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"Sharptail"},"content":"\u003e   Example:","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-11"},{"lineNumber":121,"author":{"gitId":"Sharptail"},"content":"\u003e       dt/07-05-2021","lastModifiedDate":"2021-04-11"},{"lineNumber":122,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-11"},{"lineNumber":123,"author":{"gitId":"Sharptail"},"content":"\u003e       The example shown above is a valid DATETIME parameter input.","lastModifiedDate":"2021-04-11"},{"lineNumber":124,"author":{"gitId":"Sharptail"},"content":"\u003e   \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"Sharptail"},"content":"\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"Sharptail"},"content":"\u003e   - Parameters can be in any order.  ","lastModifiedDate":"2021-04-11"},{"lineNumber":127,"author":{"gitId":"Sharptail"},"content":"\u003e   Example:  ","lastModifiedDate":"2021-04-11"},{"lineNumber":128,"author":{"gitId":"Sharptail"},"content":"\u003e   If the command specifies `n/NAME s/SUBJECT`, `s/SUBJECT n/NAME` is also acceptable.","lastModifiedDate":"2021-04-11"},{"lineNumber":129,"author":{"gitId":"Sharptail"},"content":"\u003e   \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":130,"author":{"gitId":"Sharptail"},"content":"\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":131,"author":{"gitId":"Sharptail"},"content":"\u003e   - Only the latest input for any duplicated prefixes will be taken, any input for previous duplicated prefixes will be ignored.  ","lastModifiedDate":"2021-04-10"},{"lineNumber":132,"author":{"gitId":"Sharptail"},"content":"\u003e   Example:","lastModifiedDate":"2021-04-11"},{"lineNumber":133,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-10"},{"lineNumber":134,"author":{"gitId":"Sharptail"},"content":"\u003e       menu edit 5 n/Fries1 n/Fries2 p/5 p/6","lastModifiedDate":"2021-04-10"},{"lineNumber":135,"author":{"gitId":"Sharptail"},"content":"\u003e       ```","lastModifiedDate":"2021-04-10"},{"lineNumber":136,"author":{"gitId":"Sharptail"},"content":"\u003e       The command above will only take in `n/Fries2` and `p/6`, any other input for the same prefixes will be ignored.","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"IanCKW"},"content":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":138,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":139,"author":{"gitId":"Sharptail"},"content":"\u003ca name\u003d\"general\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":140,"author":{"gitId":"Sharptail"},"content":"- \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":141,"author":{"gitId":"Sharptail"},"content":"    \u003csummary class\u003d\"dropdown-2\"\u003eGeneral\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":142,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":143,"author":{"gitId":"Sharptail"},"content":"    \u003ca name\u003d\"help\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":144,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":145,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eAccess help page - \u003ccode\u003ehelp\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"Sharptail"},"content":"        To access the help page, input:","lastModifiedDate":"2021-04-02"},{"lineNumber":148,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":149,"author":{"gitId":"guanyz"},"content":"        help","lastModifiedDate":"2021-04-02"},{"lineNumber":150,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":151,"author":{"gitId":"Sharptail"},"content":"        Alternatively, you can click on the ![settings](images/settings_white.png) icon \u003e `help` or simply press `F1` on your keyboard.","lastModifiedDate":"2021-04-10"},{"lineNumber":152,"author":{"gitId":"Sharptail"},"content":"        Shortly it will open up the `User Guide` in your default browser.","lastModifiedDate":"2021-04-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        ","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"Sharptail"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":155,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-10"},{"lineNumber":156,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":157,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-10"},{"lineNumber":158,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":159,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":160,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"exit\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":161,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":162,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eExit application - \u003ccode\u003eexit\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":163,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":164,"author":{"gitId":"Sharptail"},"content":"        To exit the application, input:","lastModifiedDate":"2021-04-02"},{"lineNumber":165,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":166,"author":{"gitId":"guanyz"},"content":"        exit","lastModifiedDate":"2021-04-02"},{"lineNumber":167,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":168,"author":{"gitId":"Sharptail"},"content":"        Alternatively, you can click on the ![settings](images/settings_white.png) icons \u003e `exit` or simply press `F2` on your keyboard.","lastModifiedDate":"2021-04-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"Sharptail"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":171,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-10"},{"lineNumber":172,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":173,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-10"},{"lineNumber":174,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":175,"author":{"gitId":"Sharptail"},"content":"    ","lastModifiedDate":"2021-04-04"},{"lineNumber":176,"author":{"gitId":"Sharptail"},"content":"    \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":177,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":178,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":179,"author":{"gitId":"Sharptail"},"content":"\u003ca name\u003d\"customer\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":180,"author":{"gitId":"Sharptail"},"content":"- \u003cdetails open class\u003d\"customer\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":181,"author":{"gitId":"Sharptail"},"content":"    \u003csummary class\u003d\"dropdown-2\"\u003eCustomer\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":182,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":183,"author":{"gitId":"Sharptail"},"content":"    \u003ca name\u003d\"customer-list\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":184,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":185,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eList all customers - \u003ccode\u003elist\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":186,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":187,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":188,"author":{"gitId":"jamesleeht"},"content":"         ```","lastModifiedDate":"2021-03-02"},{"lineNumber":189,"author":{"gitId":"kangtinglee"},"content":"         customer list","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"jamesleeht"},"content":"         ```","lastModifiedDate":"2021-03-02"},{"lineNumber":191,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":192,"author":{"gitId":"Sharptail"},"content":"         The above command would list all the customers in the left column of the GUI[\u003csup\u003e3\u003c/sup\u003e](#glossary) in the sequence that they were added, with the most recent being at the top.","lastModifiedDate":"2021-04-11"},{"lineNumber":193,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":194,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":195,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-04"},{"lineNumber":196,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":197,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":198,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":199,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":200,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"customer-add\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":201,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":202,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eAdd a customer - \u003ccode\u003eadd\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":203,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":204,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":205,"author":{"gitId":"jamesleeht"},"content":"         ```","lastModifiedDate":"2021-03-02"},{"lineNumber":206,"author":{"gitId":"Sharptail"},"content":"         customer add n/[NAME] p/[PHONE] e/[EMAIL] a/[ADDRESS] (t/[TAG])","lastModifiedDate":"2021-04-09"},{"lineNumber":207,"author":{"gitId":"jamesleeht"},"content":"         ```","lastModifiedDate":"2021-03-02"},{"lineNumber":208,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":209,"author":{"gitId":"kangtinglee"},"content":"        Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":210,"author":{"gitId":"kangtinglee"},"content":"         ```","lastModifiedDate":"2021-04-02"},{"lineNumber":211,"author":{"gitId":"kangtinglee"},"content":"         customer add n/Alan Tan p/81236789 e/alantan@nus.edu.sg a/21 Lower Kent Ridge Road, Singapore 119077 t/Gluten Allergy","lastModifiedDate":"2021-04-02"},{"lineNumber":212,"author":{"gitId":"kangtinglee"},"content":"         ```","lastModifiedDate":"2021-04-02"},{"lineNumber":213,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":214,"author":{"gitId":"kangtinglee"},"content":"        The above command would add a new contact named \"Alan Tan\" with phone number 81236789, email address \"alantan@nus.edu.sg\",","lastModifiedDate":"2021-04-02"},{"lineNumber":215,"author":{"gitId":"kangtinglee"},"content":"        address \"Lower Kent Ridge Road, Singapore 119077\" and tagged with \"Gluten Allergy\".","lastModifiedDate":"2021-04-02"},{"lineNumber":216,"author":{"gitId":"kangtinglee"},"content":"        ","lastModifiedDate":"2021-04-02"},{"lineNumber":217,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":218,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":219,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":220,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":221,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":222,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":223,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"customer-delete\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":224,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":225,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eDelete customer - \u003ccode\u003edelete\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":226,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":227,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":228,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":229,"author":{"gitId":"kangtinglee"},"content":"        customer delete [INDEX] (-f)","lastModifiedDate":"2021-04-01"},{"lineNumber":230,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":231,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":232,"author":{"gitId":"IanCKW"},"content":"        In the event that there are uncompleted orders by the contact that is being attempted to be deleted, a `-f` flag has to be added to the end of the command to confirm the command. This is to prevent you from accidentally deleting orders unknowingly and leading to unhappy customers!","lastModifiedDate":"2021-04-01"},{"lineNumber":233,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":234,"author":{"gitId":"kangtinglee"},"content":"        Examples:","lastModifiedDate":"2021-04-02"},{"lineNumber":235,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":236,"author":{"gitId":"kangtinglee"},"content":"        customer delete 2","lastModifiedDate":"2021-04-02"},{"lineNumber":237,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":238,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":239,"author":{"gitId":"kangtinglee"},"content":"        The above command would delete the second customer on the customer information pane.","lastModifiedDate":"2021-04-02"},{"lineNumber":240,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":241,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":242,"author":{"gitId":"kangtinglee"},"content":"        customer delete 2 -f","lastModifiedDate":"2021-04-02"},{"lineNumber":243,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":244,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":245,"author":{"gitId":"kangtinglee"},"content":"        In the event that there are pending orders that have not been fulfilled that belong to customer 2, then deletion of the customer will not be allowed since we do not want to unknowingly delete orders that are still pending.","lastModifiedDate":"2021-04-02"},{"lineNumber":246,"author":{"gitId":"IanCKW"},"content":"        If deleting all orders, even pending ones, is desired, then adding the `-f` at the end of the command acknowledges and confirms the deletion behavior. Orders associated with the customer will be deleted and will no longer be shown in the order list or order history.","lastModifiedDate":"2021-04-10"},{"lineNumber":247,"author":{"gitId":"kangtinglee"},"content":"        ","lastModifiedDate":"2021-04-02"},{"lineNumber":248,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":249,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":250,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":251,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":252,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":253,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":254,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"customer-edit\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":255,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":256,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eEdit customer information - \u003ccode\u003eedit\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":257,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":258,"author":{"gitId":"guanyz"},"content":"        Format:","lastModifiedDate":"2021-04-02"},{"lineNumber":259,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":260,"author":{"gitId":"Sharptail"},"content":"        customer edit [INDEX] (n/[NAME]) (p/[PHONE]) (e/[EMAIL]) (a/[ADDRESS]) (t/[TAG])","lastModifiedDate":"2021-04-09"},{"lineNumber":261,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":262,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":263,"author":{"gitId":"guanyz"},"content":"        At least one of the fields in brackets must be present in the edit command.","lastModifiedDate":"2021-04-02"},{"lineNumber":264,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":265,"author":{"gitId":"kangtinglee"},"content":"        Examples:","lastModifiedDate":"2021-04-02"},{"lineNumber":266,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":267,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":268,"author":{"gitId":"kangtinglee"},"content":"        customer edit 2 n/George Tan","lastModifiedDate":"2021-04-02"},{"lineNumber":269,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":270,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":271,"author":{"gitId":"kangtinglee"},"content":"        The above command changes the name of the second customer on the contacts pane to \"George Tan\".","lastModifiedDate":"2021-04-02"},{"lineNumber":272,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":273,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":274,"author":{"gitId":"kangtinglee"},"content":"        customer edit 2 n/George Tan p/80009999","lastModifiedDate":"2021-04-02"},{"lineNumber":275,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":276,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":277,"author":{"gitId":"kangtinglee"},"content":"        The above command changes both the name and phone number of the second customer.","lastModifiedDate":"2021-04-02"},{"lineNumber":278,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":279,"author":{"gitId":"kangtinglee"},"content":"        From the examples above, more than one field can be edited at a time but at least 1 field must be specified for it to be a valid command.","lastModifiedDate":"2021-04-02"},{"lineNumber":280,"author":{"gitId":"kangtinglee"},"content":"        ","lastModifiedDate":"2021-04-02"},{"lineNumber":281,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":282,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":283,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":284,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":285,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":286,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":287,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"customer-find\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":288,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":289,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eFind customer - \u003ccode\u003efind\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":290,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":291,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":292,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":293,"author":{"gitId":"jamesleeht"},"content":"        customer find n/[KEYWORD] (MORE_KEYWORDS)...","lastModifiedDate":"2021-04-01"},{"lineNumber":294,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":295,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":296,"author":{"gitId":"jamesleeht"},"content":"        - `n/` - Finds all customers whose names contain any of the keywords (case-insensitive). Keywords are space separated.","lastModifiedDate":"2021-04-01"},{"lineNumber":297,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":298,"author":{"gitId":"kangtinglee"},"content":"        Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":299,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":300,"author":{"gitId":"kangtinglee"},"content":"        customer find n/George Michael Lim","lastModifiedDate":"2021-04-02"},{"lineNumber":301,"author":{"gitId":"kangtinglee"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":302,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":303,"author":{"gitId":"kangtinglee"},"content":"        The above command would display all contacts with names that contain either \"George\", \"Michael\", or \"Lim\". Note that at least 1 keyword must be specified, `customer find n/Thomas` is a valid command too with only 1 keyword (\"Thomas\").","lastModifiedDate":"2021-04-02"},{"lineNumber":304,"author":{"gitId":"kangtinglee"},"content":"        ","lastModifiedDate":"2021-04-02"},{"lineNumber":305,"author":{"gitId":"Sharptail"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":306,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":307,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":308,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":309,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":310,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":311,"author":{"gitId":"Sharptail"},"content":"    \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":312,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":313,"author":{"gitId":"Sharptail"},"content":"\u003ca name\u003d\"menu\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":314,"author":{"gitId":"Sharptail"},"content":"- \u003cdetails open class\u003d\"menu\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":315,"author":{"gitId":"Sharptail"},"content":"    \u003csummary class\u003d\"dropdown-2\"\u003eMenu\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":316,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":317,"author":{"gitId":"Sharptail"},"content":"    \u003ca name\u003d\"menu-list\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":318,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":319,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eList all dishes - \u003ccode\u003elist\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":320,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":321,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":322,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":323,"author":{"gitId":"kangtinglee"},"content":"        menu list (-a)","lastModifiedDate":"2021-04-02"},{"lineNumber":324,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":325,"author":{"gitId":"Sharptail"},"content":"        To list the current available dishes only, a `-a` flag has to be added to the end of the command. The above command would list all the available/all dishes in the      right column of  the GUI[\u003csup\u003e3\u003c/sup\u003e](#glossary) in the sequence that they were added, with the most recent being at the top.","lastModifiedDate":"2021-04-11"},{"lineNumber":326,"author":{"gitId":"Sharptail"},"content":"        Examples:","lastModifiedDate":"2021-04-09"},{"lineNumber":327,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":328,"author":{"gitId":"Sharptail"},"content":"        menu list","lastModifiedDate":"2021-04-09"},{"lineNumber":329,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":330,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":331,"author":{"gitId":"Sharptail"},"content":"        The above command would display all dishes disregard the availability of the dish.","lastModifiedDate":"2021-04-09"},{"lineNumber":332,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":333,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":334,"author":{"gitId":"Sharptail"},"content":"        menu list -a","lastModifiedDate":"2021-04-09"},{"lineNumber":335,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":336,"author":{"gitId":"Sharptail"},"content":"        The above command will only display the dishes that are currently available based on the available ingredients.","lastModifiedDate":"2021-04-09"},{"lineNumber":337,"author":{"gitId":"jamesleeht"},"content":"        ","lastModifiedDate":"2021-03-02"},{"lineNumber":338,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":339,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":340,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":341,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":342,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":343,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":344,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"menu-add\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":345,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":346,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eAdd a dish - \u003ccode\u003eadd\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":347,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":348,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":349,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":350,"author":{"gitId":"Sharptail"},"content":"        menu add n/[NAME] p/[PRICE] i/[INGREDIENT_ID]... q/[INGREDIENT_QUANTITY]...","lastModifiedDate":"2021-04-11"},{"lineNumber":351,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":352,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":353,"author":{"gitId":"jamesleeht"},"content":"        Ingredient ID and quantity must come in pairs. At least one pair must be specified, but more can be added.","lastModifiedDate":"2021-04-09"},{"lineNumber":354,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":355,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":356,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":357,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":358,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":359,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":360,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":361,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"menu-delete\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":362,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":363,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eDelete a dish from menu - \u003ccode\u003edelete\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":364,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":365,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":366,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":367,"author":{"gitId":"Sharptail"},"content":"        menu delete [INDEX] (-f)","lastModifiedDate":"2021-04-01"},{"lineNumber":368,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":369,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":370,"author":{"gitId":"Sharptail"},"content":"        In the event that there are uncompleted orders by the dishes that is being attempted to be deleted, a `-f` flag","lastModifiedDate":"2021-04-09"},{"lineNumber":371,"author":{"gitId":"Sharptail"},"content":"        has to be added to the end of the command to confirm the command. This is to prevent you from accidentally","lastModifiedDate":"2021-04-09"},{"lineNumber":372,"author":{"gitId":"Sharptail"},"content":"        deleting orders unknowingly and leading to unhappy customers!","lastModifiedDate":"2021-04-09"},{"lineNumber":373,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":374,"author":{"gitId":"Sharptail"},"content":"        Examples:","lastModifiedDate":"2021-04-09"},{"lineNumber":375,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":376,"author":{"gitId":"Sharptail"},"content":"        menu delete 2","lastModifiedDate":"2021-04-09"},{"lineNumber":377,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":378,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":379,"author":{"gitId":"Sharptail"},"content":"        The above command would delete the second dishes on the menu information pane.","lastModifiedDate":"2021-04-09"},{"lineNumber":380,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":381,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":382,"author":{"gitId":"Sharptail"},"content":"        menu delete 2 -f","lastModifiedDate":"2021-04-09"},{"lineNumber":383,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":384,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":385,"author":{"gitId":"Sharptail"},"content":"        In the event that there are pending orders that have not been fulfilled that contains dish id 2, then deletion","lastModifiedDate":"2021-04-09"},{"lineNumber":386,"author":{"gitId":"Sharptail"},"content":"        of the dish will not be allowed since we do not want to unknowingly delete orders that are still pending.","lastModifiedDate":"2021-04-09"},{"lineNumber":387,"author":{"gitId":"Sharptail"},"content":"        If deleting any dishes that belongs to any uncompleted order is desired, then adding the `-f` at the","lastModifiedDate":"2021-04-09"},{"lineNumber":388,"author":{"gitId":"IanCKW"},"content":"        end of the command acknowledges and confirms the deletion behavior. Orders associated with the menu dish will ","lastModifiedDate":"2021-04-10"},{"lineNumber":389,"author":{"gitId":"IanCKW"},"content":"        be marked as cancelled and will no longer be shown in the order list but can be viewed in the order history.","lastModifiedDate":"2021-04-10"},{"lineNumber":390,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-09"},{"lineNumber":391,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":392,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":393,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":394,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":395,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":396,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":397,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"menu-edit\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":398,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":399,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eEdit dish information - \u003ccode\u003eedit\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":400,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":401,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":402,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":403,"author":{"gitId":"Sharptail"},"content":"        menu edit [INDEX] (n/[NAME]) (p/[PRICE]) (i/[INGREDIENT_ID]... q/[INGREDIENT_QUANTITY]...)","lastModifiedDate":"2021-04-11"},{"lineNumber":404,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":405,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":406,"author":{"gitId":"jamesleeht"},"content":"        At least one of the fields in round brackets must be specified.","lastModifiedDate":"2021-04-09"},{"lineNumber":407,"author":{"gitId":"jamesleeht"},"content":"        ","lastModifiedDate":"2021-03-02"},{"lineNumber":408,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":409,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-04"},{"lineNumber":410,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":411,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":412,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":413,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":414,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"menu-find\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":415,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":416,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eFind dish - \u003ccode\u003efind\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":417,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":418,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":419,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":420,"author":{"gitId":"guanyz"},"content":"        menu find n/[KEYWORD] (MORE KEYWORDS) i/[KEYWORD]","lastModifiedDate":"2021-04-02"},{"lineNumber":421,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":422,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":423,"author":{"gitId":"guanyz"},"content":"        At least one prefix must be specified. If both are specified, both conditions will be checked.","lastModifiedDate":"2021-04-02"},{"lineNumber":424,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":425,"author":{"gitId":"guanyz"},"content":"        - `n/` - Finds all dishes with names that contain any of the keywords (case-insensitive). Keywords are space separated.","lastModifiedDate":"2021-04-02"},{"lineNumber":426,"author":{"gitId":"guanyz"},"content":"        - `i/` - Finds all dishes with ingredient names that contain keyword (case-insensitive).","lastModifiedDate":"2021-04-02"},{"lineNumber":427,"author":{"gitId":"jamesleeht"},"content":"        ","lastModifiedDate":"2021-03-02"},{"lineNumber":428,"author":{"gitId":"Sharptail"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":429,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-10"},{"lineNumber":430,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":431,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":432,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":433,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":434,"author":{"gitId":"Sharptail"},"content":"    \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":435,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":436,"author":{"gitId":"Sharptail"},"content":"\u003ca name\u003d\"order\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":437,"author":{"gitId":"Sharptail"},"content":"- \u003cdetails open class\u003d\"order\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":438,"author":{"gitId":"Sharptail"},"content":"    \u003csummary class\u003d\"dropdown-2\"\u003eOrder\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":439,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":440,"author":{"gitId":"Sharptail"},"content":"    \u003ca name\u003d\"order-list\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":441,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":442,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eList all orders - \u003ccode\u003elist\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":443,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":444,"author":{"gitId":"Sharptail"},"content":"        Displays the list of upcoming orders.","lastModifiedDate":"2021-04-09"},{"lineNumber":445,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":446,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":447,"author":{"gitId":"Sharptail"},"content":"        order list","lastModifiedDate":"2021-04-04"},{"lineNumber":448,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":449,"author":{"gitId":"Sharptail"},"content":"        The above command would list all the order in the right column of the GUI[\u003csup\u003e3\u003c/sup\u003e](#glossary). The list is in chronological sequence based on the order\u0027s date and time.","lastModifiedDate":"2021-04-11"},{"lineNumber":450,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":451,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":452,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":453,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":454,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":455,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":456,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":457,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"order-add\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":458,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":459,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eAdd an order - \u003ccode\u003eadd\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":460,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":461,"author":{"gitId":"IanCKW"},"content":"        Creates an order and adds it to the order list.","lastModifiedDate":"2021-04-10"},{"lineNumber":462,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":463,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":464,"author":{"gitId":"Sharptail"},"content":"        order add n/[CUSTOMER_ID] dt/[DELIVERY_DATETIME] d/[DISH_ID]... q/[QUANTITY]...","lastModifiedDate":"2021-04-11"},{"lineNumber":465,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":466,"author":{"gitId":"Sharptail"},"content":"        Example:","lastModifiedDate":"2021-04-09"},{"lineNumber":467,"author":{"gitId":"Sharptail"},"content":"        ![OrderAddExample](images/order/OrderAddExample.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":468,"author":{"gitId":"Sharptail"},"content":"        `Bernice Yu` has ordered a `burger` and 2 `chicken wings` on `14th Feb 2021 6:30pm`.","lastModifiedDate":"2021-04-09"},{"lineNumber":469,"author":{"gitId":"Sharptail"},"content":"        You can see on the customer list (right column) that `Bernice Yu` has an id of `2`.","lastModifiedDate":"2021-04-09"},{"lineNumber":470,"author":{"gitId":"Sharptail"},"content":"        While a `burger` has an id of `2`, `Chicken Wings` has an id of `3` on the menu list (right column).","lastModifiedDate":"2021-04-09"},{"lineNumber":471,"author":{"gitId":"Sharptail"},"content":"        The command to be inputted will be:","lastModifiedDate":"2021-04-09"},{"lineNumber":472,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":473,"author":{"gitId":"Sharptail"},"content":"        order add n/2 dt/14-02-2021 18:30 d/1 q/1 d/3 q/1","lastModifiedDate":"2021-04-09"},{"lineNumber":474,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":475,"author":{"gitId":"jamesleeht"},"content":"        ","lastModifiedDate":"2021-03-02"},{"lineNumber":476,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":477,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":478,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":479,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":480,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":481,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":482,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"order-delete\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":483,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":484,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eDelete an order - \u003ccode\u003edelete\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":485,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":486,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":487,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":488,"author":{"gitId":"Sharptail"},"content":"        order delete [INDEX]","lastModifiedDate":"2021-04-04"},{"lineNumber":489,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":490,"author":{"gitId":"IanCKW"},"content":"        The above command deletes the order based with that index.","lastModifiedDate":"2021-04-10"},{"lineNumber":491,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-10"},{"lineNumber":492,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":493,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":494,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":495,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":496,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":497,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":498,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"order-edit\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":499,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":500,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eEdit an order - \u003ccode\u003eedit\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":501,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":502,"author":{"gitId":"guanyz"},"content":"        Format:","lastModifiedDate":"2021-04-02"},{"lineNumber":503,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":504,"author":{"gitId":"Sharptail"},"content":"        order edit [INDEX] (n/[CUSTOMER_ID]) (dt/[DELIVERY_DATETIME]) (d/[DISH_ID]... q/[QUANTITY]...)","lastModifiedDate":"2021-04-11"},{"lineNumber":505,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":506,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":507,"author":{"gitId":"Sharptail"},"content":"        At least one of the fields in round brackets must be present in the edit command.","lastModifiedDate":"2021-04-11"},{"lineNumber":508,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-10"},{"lineNumber":509,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":510,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":511,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":512,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":513,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":514,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":515,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"order-find\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":516,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":517,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eFind an order - \u003ccode\u003efind\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":518,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":519,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-03-02"},{"lineNumber":520,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":521,"author":{"gitId":"Sharptail"},"content":"        order find n/[KEYWORD] (MORE KEYWORDS) d/[KEYWORD]","lastModifiedDate":"2021-04-09"},{"lineNumber":522,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":524,"author":{"gitId":"jamesleeht"},"content":"        At least one prefix must be specified. If both are specified, both conditions will be checked.","lastModifiedDate":"2021-04-01"},{"lineNumber":525,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":526,"author":{"gitId":"Sharptail"},"content":"        - `n/` - Finds all orders with customer names that contain any of the keywords (case-insensitive). Keywords are space separated.","lastModifiedDate":"2021-04-04"},{"lineNumber":527,"author":{"gitId":"Sharptail"},"content":"        - `d/` - Finds all orders with dish names that contain keyword (case-insensitive).","lastModifiedDate":"2021-04-04"},{"lineNumber":528,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":529,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":530,"author":{"gitId":"jamesleeht"},"content":"        ","lastModifiedDate":"2021-04-01"},{"lineNumber":531,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":532,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":533,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":534,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":535,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"order-complete\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":536,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":537,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eMark an order as complete - \u003ccode\u003ecomplete\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":538,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":539,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-04-01"},{"lineNumber":540,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-04-01"},{"lineNumber":541,"author":{"gitId":"Sharptail"},"content":"        order complete [INDEX]","lastModifiedDate":"2021-04-04"},{"lineNumber":542,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-04-01"},{"lineNumber":543,"author":{"gitId":"IanCKW"},"content":"        The above command would mark the order of that index as complete. The order will no longer be in the order list. Instead, it will be in order history.","lastModifiedDate":"2021-04-10"},{"lineNumber":544,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":545,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":546,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":547,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":548,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":549,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":550,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":551,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"order-history\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":552,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":553,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eList all completed and cancelled orders - \u003ccode\u003ehistory\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":554,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":555,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-04-01"},{"lineNumber":556,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-04-01"},{"lineNumber":557,"author":{"gitId":"Sharptail"},"content":"        order history","lastModifiedDate":"2021-04-04"},{"lineNumber":558,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-04-01"},{"lineNumber":559,"author":{"gitId":"jamesleeht"},"content":" ","lastModifiedDate":"2021-04-01"},{"lineNumber":560,"author":{"gitId":"Sharptail"},"content":"        The above command displays the history of completed and cancelled orders in the right column of the GUI[\u003csup\u003e3\u003c/sup\u003e](#glossary). The list is in chronological sequence based on the order\u0027s date and time.","lastModifiedDate":"2021-04-11"},{"lineNumber":561,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":562,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":563,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":564,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":565,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":566,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":567,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":568,"author":{"gitId":"Sharptail"},"content":"    \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":569,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":570,"author":{"gitId":"Sharptail"},"content":"\u003ca name\u003d\"inventory\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":571,"author":{"gitId":"Sharptail"},"content":"- \u003cdetails open class\u003d\"inventory\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":572,"author":{"gitId":"Sharptail"},"content":"    \u003csummary class\u003d\"dropdown-2\"\u003eInventory\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":573,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":574,"author":{"gitId":"Sharptail"},"content":"    \u003ca name\u003d\"inventory-list\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":575,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":576,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eList all ingredients - \u003ccode\u003elist\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":577,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":578,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-04-01"},{"lineNumber":579,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-04-01"},{"lineNumber":580,"author":{"gitId":"Sharptail"},"content":"        inventory list","lastModifiedDate":"2021-04-04"},{"lineNumber":581,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":582,"author":{"gitId":"guanyz"},"content":"        ","lastModifiedDate":"2021-04-02"},{"lineNumber":583,"author":{"gitId":"Sharptail"},"content":"        The above command would list all the ingredients in the inventory in the right column of the GUI[\u003csup\u003e3\u003c/sup\u003e](#glossary) in the sequence that they were added, with the most recent being at the top.","lastModifiedDate":"2021-04-11"},{"lineNumber":584,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":585,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":586,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":587,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":588,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":589,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":590,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":591,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"inventory-add\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":592,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":593,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eAdd an ingredient - \u003ccode\u003eadd\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":594,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":595,"author":{"gitId":"Sharptail"},"content":"        Note:","lastModifiedDate":"2021-04-04"},{"lineNumber":596,"author":{"gitId":"Sharptail"},"content":"        If the ingredient already exists, its listed quantity will be incremented.","lastModifiedDate":"2021-04-04"},{"lineNumber":597,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":598,"author":{"gitId":"guanyz"},"content":"        Format:","lastModifiedDate":"2021-04-02"},{"lineNumber":599,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":600,"author":{"gitId":"Sharptail"},"content":"        inventory add n/[INGREDIENT_NAME] q/[QUANTITY]","lastModifiedDate":"2021-04-04"},{"lineNumber":601,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-03-02"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        ","lastModifiedDate":"2021-02-04"},{"lineNumber":603,"author":{"gitId":"Sharptail"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":604,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":605,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":606,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":607,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":608,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":609,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"inventory-decrease\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":610,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":611,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eDecrease quantity of ingredient - \u003ccode\u003edecrease\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":612,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":613,"author":{"gitId":"jamesleeht"},"content":"        Format:","lastModifiedDate":"2021-04-01"},{"lineNumber":614,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-04-01"},{"lineNumber":615,"author":{"gitId":"Sharptail"},"content":"        inventory decrease [INDEX] [QUANTITY]","lastModifiedDate":"2021-04-04"},{"lineNumber":616,"author":{"gitId":"jamesleeht"},"content":"        ```","lastModifiedDate":"2021-04-01"},{"lineNumber":617,"author":{"gitId":"jamesleeht"},"content":"        ","lastModifiedDate":"2021-04-01"},{"lineNumber":618,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":619,"author":{"gitId":"jamesleeht"},"content":"        ","lastModifiedDate":"2021-04-01"},{"lineNumber":620,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":621,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":622,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":623,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":624,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"inventory-delete\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":625,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":626,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eDelete an ingredient - \u003ccode\u003edelete\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":628,"author":{"gitId":"guanyz"},"content":"        Format:","lastModifiedDate":"2021-04-02"},{"lineNumber":629,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":630,"author":{"gitId":"Sharptail"},"content":"        inventory delete [INDEX] (-f)","lastModifiedDate":"2021-04-04"},{"lineNumber":631,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":632,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":633,"author":{"gitId":"Sharptail"},"content":"        In the event that there are ingredients that is needed by certain dishes that is being attempted to be deleted,","lastModifiedDate":"2021-04-09"},{"lineNumber":634,"author":{"gitId":"Sharptail"},"content":"        a `-f` flag has to be added to the end of the command to confirm the command. This is to prevent you from","lastModifiedDate":"2021-04-09"},{"lineNumber":635,"author":{"gitId":"Sharptail"},"content":"        accidentally deleting dishes unknowingly and leads to invalid orders! ","lastModifiedDate":"2021-04-09"},{"lineNumber":636,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":637,"author":{"gitId":"Sharptail"},"content":"        Examples:","lastModifiedDate":"2021-04-09"},{"lineNumber":638,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":639,"author":{"gitId":"Sharptail"},"content":"        inventory delete 2","lastModifiedDate":"2021-04-09"},{"lineNumber":640,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":641,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":642,"author":{"gitId":"Sharptail"},"content":"        The above command would delete the second ingredient on the inventory information pane.","lastModifiedDate":"2021-04-09"},{"lineNumber":643,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":644,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":645,"author":{"gitId":"Sharptail"},"content":"        inventory delete 2 -f","lastModifiedDate":"2021-04-09"},{"lineNumber":646,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-09"},{"lineNumber":647,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":648,"author":{"gitId":"Sharptail"},"content":"        In the event that there are dishes that needs ingredient id 2, then deletion","lastModifiedDate":"2021-04-09"},{"lineNumber":649,"author":{"gitId":"Sharptail"},"content":"        of the dish will not be allowed since we do not want to unknowingly delete dishes that needs the ingredient.","lastModifiedDate":"2021-04-09"},{"lineNumber":650,"author":{"gitId":"Sharptail"},"content":"        If deleting any ingredient that is needed to any dishes is desired, then adding the `-f` at the","lastModifiedDate":"2021-04-09"},{"lineNumber":651,"author":{"gitId":"Sharptail"},"content":"        end of the command acknowledges and confirms the deletion behavior. ","lastModifiedDate":"2021-04-09"},{"lineNumber":652,"author":{"gitId":"IanCKW"},"content":"        Orders associated with the ingredient will be marked as cancelled and will no longer be shown in the order list but can be viewed in the order history.","lastModifiedDate":"2021-04-10"},{"lineNumber":653,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-09"},{"lineNumber":654,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":655,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":656,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":657,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":658,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":659,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":660,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"inventory-edit\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":661,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":662,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eEdit an ingredient - \u003ccode\u003eedit\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":663,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":664,"author":{"gitId":"guanyz"},"content":"        Format:","lastModifiedDate":"2021-04-02"},{"lineNumber":665,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":666,"author":{"gitId":"Sharptail"},"content":"        inventory edit [INDEX] (n/[INGREDIENT_NAME]) (q/[QUANTITY])","lastModifiedDate":"2021-04-04"},{"lineNumber":667,"author":{"gitId":"guanyz"},"content":"        ```","lastModifiedDate":"2021-04-02"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"Sharptail"},"content":"        At least one of the fields in brackets must be present in the edit command.","lastModifiedDate":"2021-04-04"},{"lineNumber":670,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":671,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":672,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":673,"author":{"gitId":"Sharptail"},"content":"        ---","lastModifiedDate":"2021-04-10"},{"lineNumber":674,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-10"},{"lineNumber":675,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":676,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":677,"author":{"gitId":"Sharptail"},"content":"        \u003ca name\u003d\"inventory-find\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":678,"author":{"gitId":"Sharptail"},"content":"    - \u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":679,"author":{"gitId":"Sharptail"},"content":"        \u003csummary class\u003d\"dropdown-3\"\u003eFind an ingredient - \u003ccode\u003efind\u003c/code\u003e\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":680,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":681,"author":{"gitId":"Sharptail"},"content":"        Format:","lastModifiedDate":"2021-04-04"},{"lineNumber":682,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-04"},{"lineNumber":683,"author":{"gitId":"Sharptail"},"content":"        inventory find n/[KEYWORD] (MORE KEYWORDS) q/[LESS THAN QUANTITY]","lastModifiedDate":"2021-04-04"},{"lineNumber":684,"author":{"gitId":"Sharptail"},"content":"        ```","lastModifiedDate":"2021-04-04"},{"lineNumber":685,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":686,"author":{"gitId":"Sharptail"},"content":"        At least one prefix must be specified. If both are specified, both conditions will be checked.","lastModifiedDate":"2021-04-04"},{"lineNumber":687,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":688,"author":{"gitId":"Sharptail"},"content":"        - `n/` - Finds all ingredients with names that contain any of the keywords (case-insensitive). Keywords are space separated.","lastModifiedDate":"2021-04-04"},{"lineNumber":689,"author":{"gitId":"Sharptail"},"content":"        - `q/` - Finds all ingredients with less than specified quantity. Must be a non-negative whole number (\u003e\u003d 0).","lastModifiedDate":"2021-04-04"},{"lineNumber":690,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":691,"author":{"gitId":"IanCKW"},"content":"        \u003cp\u003e\u0026nbsp;\u003c/p\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":692,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-04"},{"lineNumber":693,"author":{"gitId":"Sharptail"},"content":"        \u003c/details\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":694,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":695,"author":{"gitId":"Sharptail"},"content":"    \u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":696,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":697,"author":{"gitId":"Sharptail"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":699,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"Sharptail"},"content":"\u003ca name\u003d\"faq\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":702,"author":{"gitId":"Sharptail"},"content":"\u003cdetails open\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":703,"author":{"gitId":"Sharptail"},"content":"\u003csummary class\u003d\"dropdown-1\"\u003eFAQ\u003c/summary\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"Sharptail"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":706,"author":{"gitId":"Sharptail"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous JJIMY home folder.","lastModifiedDate":"2021-04-11"},{"lineNumber":707,"author":{"gitId":"Sharptail"},"content":"![MoveData](images/MoveData.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"Sharptail"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":711,"author":{"gitId":"Sharptail"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-11"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":713,"author":{"gitId":"Sharptail"},"content":"\u003ca name\u003d\"glossary\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":714,"author":{"gitId":"Sharptail"},"content":"\u003cdetails open\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":715,"author":{"gitId":"Sharptail"},"content":"\u003csummary class\u003d\"dropdown-1\"\u003eGlossary\u003c/summary\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":717,"author":{"gitId":"Sharptail"},"content":"1. **CLI** - Command Line Interface. A CLI processess commands to a computer program in the form of lines of text.","lastModifiedDate":"2021-04-11"},{"lineNumber":718,"author":{"gitId":"Sharptail"},"content":"2. **Java** - Java is a class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible.","lastModifiedDate":"2021-04-11"},{"lineNumber":719,"author":{"gitId":"Sharptail"},"content":"3. **GUI** - Graphical User Interface. GUI is a form of user interface that allows user to interact an application through graphical icons and audio indicator such as primary notation.","lastModifiedDate":"2021-04-11"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":721,"author":{"gitId":"Sharptail"},"content":"\u003c/details\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":724,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":726,"author":{"gitId":"Sharptail"},"content":"\u003ca href\u003d\"#\" class\u003d\"float\"\u003e","lastModifiedDate":"2021-04-04"},{"lineNumber":727,"author":{"gitId":"Sharptail"},"content":"   \u003cimg src\u003d\"images/up.png\"\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":728,"author":{"gitId":"Sharptail"},"content":"\u003c/a\u003e","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"kangtinglee":48,"Sharptail":486,"-":39,"guanyz":33,"IanCKW":32,"jamesleeht":90}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"guanyz"},"content":"    content: \"JJIMY\";","lastModifiedDate":"2021-04-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"guanyz":1}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"minima/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \"minima/initialize\";","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-01"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":":root {","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"  //--primary-color: #b4d3ff;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"  //--secondary-color: #e3f0ff;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"  //--tertiary-color: #f9fbff;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"  //--quaternary-color: #90b5fd;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"  //--quinary-color: #506ca4;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"  //--customer-primary-color: #C7CEEA;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"  //--customer-secondary-color: #4B2882;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"  //--menu-primary-color: #B5EAD7;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"  //--menu-secondary-color: #177245;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"  //--order-primary-color: #FFDAC1;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"  //--order-secondary-color: #86611c;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"  //--inventory-primary-color: #FFB7B2;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"  //--inventory-secondary-color: #991414;","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"  //--background-color: #001e45;","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"  //--font-color: #e8e8e8;","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"  --primary-color: #b4d3ff;","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"  --secondary-color: #e3f0ff;","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"  --tertiary-color: #f9fbff;","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"  --quaternary-color: #90b5fd;","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"  --quinary-color: #5e7bb7;","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"  --customer-primary-color: #d9c7ea;","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"  --customer-secondary-color: #8967a3;","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"  --menu-primary-color: #B5EAD7;","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"  --menu-secondary-color: #35634c;","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"  --order-primary-color: #FFDAC1;","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"  --order-secondary-color: #9f804b;","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"  --inventory-primary-color: #fca8a2;","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"  --inventory-secondary-color: #804242;","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"  --background-color: #292D3E;","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"  --background-darker-color: #202431;","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"  --accent-color: #5b6879;","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"  --font-color: #e8e8e8;","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"  --font-accent-color: #c3c3c3;","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":".site-title, .site-title:visited, .site-nav .page-link {","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"  color: var(--font-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":".site-header {","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"  border-bottom: 1px solid white;","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"body {","lastModifiedDate":"2021-04-04"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"  color: var(--font-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--background-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"a, a:visited {","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"  color: var(--primary-color)","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"pre,pre\u003ecode {","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"  color: var(--font-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--quinary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"pre {","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"  border: 1px solid var(--primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"  border-radius: 7px;","lastModifiedDate":"2021-04-04"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"code {","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"  font-size: 0.85em;","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"  color: black;","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"  border-radius: 7px;","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"  color: var(--primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"  margin-top:0;","lastModifiedDate":"2021-04-04"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"  margin-bottom:0;","lastModifiedDate":"2021-04-04"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":".post-content h1, .post-content h2, .post-content h3,","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":".post-content h4, .post-content h5, .post-content h6 {","lastModifiedDate":"2021-04-04"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"  margin-top: 0;","lastModifiedDate":"2021-04-04"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"hr {","lastModifiedDate":"2021-04-04"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"  margin-top: 10px;","lastModifiedDate":"2021-04-04"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"  margin-bottom: 10px;","lastModifiedDate":"2021-04-04"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"summary {","lastModifiedDate":"2021-04-04"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"  color: var(--primary-color)","lastModifiedDate":"2021-04-04"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"summary.dropdown-1 {","lastModifiedDate":"2021-04-04"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"  font-size: 1.75em;","lastModifiedDate":"2021-04-04"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":102,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":103,"author":{"gitId":"Sharptail"},"content":"summary.dropdown-2 {","lastModifiedDate":"2021-04-04"},{"lineNumber":104,"author":{"gitId":"Sharptail"},"content":"  font-size: 1.5em;","lastModifiedDate":"2021-04-04"},{"lineNumber":105,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":106,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":"summary.dropdown-3 {","lastModifiedDate":"2021-04-04"},{"lineNumber":108,"author":{"gitId":"Sharptail"},"content":"  font-size: 1.25em;","lastModifiedDate":"2021-04-04"},{"lineNumber":109,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":110,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"li\u003espan\u003eul, li\u003espan\u003eol {","lastModifiedDate":"2021-04-04"},{"lineNumber":112,"author":{"gitId":"Sharptail"},"content":"  margin-bottom: 0;","lastModifiedDate":"2021-04-04"},{"lineNumber":113,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":114,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":".icon {","lastModifiedDate":"2020-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    height: 21px;","lastModifiedDate":"2020-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    width: 21px","lastModifiedDate":"2020-08-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-01"},{"lineNumber":119,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":120,"author":{"gitId":"Sharptail"},"content":"table th {","lastModifiedDate":"2021-04-04"},{"lineNumber":121,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--accent-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":122,"author":{"gitId":"Sharptail"},"content":"  color: white;","lastModifiedDate":"2021-04-04"},{"lineNumber":123,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":124,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":125,"author":{"gitId":"Sharptail"},"content":"table tr:nth-child(odd) {","lastModifiedDate":"2021-04-04"},{"lineNumber":126,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--background-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":127,"author":{"gitId":"Sharptail"},"content":"  color: white;","lastModifiedDate":"2021-04-04"},{"lineNumber":128,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":129,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":130,"author":{"gitId":"Sharptail"},"content":"table tr:nth-child(even) {","lastModifiedDate":"2021-04-04"},{"lineNumber":131,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--accent-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":132,"author":{"gitId":"Sharptail"},"content":"  color: white;","lastModifiedDate":"2021-04-04"},{"lineNumber":133,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":134,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":135,"author":{"gitId":"Sharptail"},"content":"strong {","lastModifiedDate":"2021-04-09"},{"lineNumber":136,"author":{"gitId":"Sharptail"},"content":"  color: var(--quaternary-color);","lastModifiedDate":"2021-04-09"},{"lineNumber":137,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-09"},{"lineNumber":138,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":139,"author":{"gitId":"Sharptail"},"content":"blockquote {","lastModifiedDate":"2021-04-10"},{"lineNumber":140,"author":{"gitId":"Sharptail"},"content":"  color: var(--font-accent-color);","lastModifiedDate":"2021-04-10"},{"lineNumber":141,"author":{"gitId":"Sharptail"},"content":"  font-style: normal;","lastModifiedDate":"2021-04-10"},{"lineNumber":142,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--background-darker-color);","lastModifiedDate":"2021-04-10"},{"lineNumber":143,"author":{"gitId":"Sharptail"},"content":"  border-radius: 10px;","lastModifiedDate":"2021-04-10"},{"lineNumber":144,"author":{"gitId":"Sharptail"},"content":"  padding: 10px;","lastModifiedDate":"2021-04-10"},{"lineNumber":145,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-10"},{"lineNumber":146,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":147,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-04-04"},{"lineNumber":148,"author":{"gitId":"Sharptail"},"content":" customer styles","lastModifiedDate":"2021-04-04"},{"lineNumber":149,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-04-04"},{"lineNumber":150,"author":{"gitId":"Sharptail"},"content":".customer summary.dropdown-2,","lastModifiedDate":"2021-04-04"},{"lineNumber":151,"author":{"gitId":"Sharptail"},"content":".customer summary.dropdown-3{","lastModifiedDate":"2021-04-04"},{"lineNumber":152,"author":{"gitId":"Sharptail"},"content":"  color: var(--customer-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":153,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":154,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":155,"author":{"gitId":"Sharptail"},"content":".customer code{","lastModifiedDate":"2021-04-04"},{"lineNumber":156,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--customer-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":157,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":158,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":159,"author":{"gitId":"Sharptail"},"content":".customer pre{","lastModifiedDate":"2021-04-04"},{"lineNumber":160,"author":{"gitId":"Sharptail"},"content":"  border: 1px solid var(--customer-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":161,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":162,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":163,"author":{"gitId":"Sharptail"},"content":".customer pre,","lastModifiedDate":"2021-04-04"},{"lineNumber":164,"author":{"gitId":"Sharptail"},"content":".customer pre\u003ecode {","lastModifiedDate":"2021-04-04"},{"lineNumber":165,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--customer-secondary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":166,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":167,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":168,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-04-04"},{"lineNumber":169,"author":{"gitId":"Sharptail"},"content":" menu style","lastModifiedDate":"2021-04-04"},{"lineNumber":170,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-04-04"},{"lineNumber":171,"author":{"gitId":"Sharptail"},"content":".menu summary.dropdown-2,","lastModifiedDate":"2021-04-04"},{"lineNumber":172,"author":{"gitId":"Sharptail"},"content":".menu summary.dropdown-3{","lastModifiedDate":"2021-04-04"},{"lineNumber":173,"author":{"gitId":"Sharptail"},"content":"  color: var(--menu-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":174,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":175,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":176,"author":{"gitId":"Sharptail"},"content":".menu code{","lastModifiedDate":"2021-04-04"},{"lineNumber":177,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--menu-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":178,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":179,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":180,"author":{"gitId":"Sharptail"},"content":".menu pre{","lastModifiedDate":"2021-04-04"},{"lineNumber":181,"author":{"gitId":"Sharptail"},"content":"  border: 1px solid var(--menu-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":182,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":183,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":184,"author":{"gitId":"Sharptail"},"content":".menu pre,","lastModifiedDate":"2021-04-04"},{"lineNumber":185,"author":{"gitId":"Sharptail"},"content":".menu pre\u003ecode {","lastModifiedDate":"2021-04-04"},{"lineNumber":186,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--menu-secondary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":187,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":188,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":189,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-04-04"},{"lineNumber":190,"author":{"gitId":"Sharptail"},"content":" order style","lastModifiedDate":"2021-04-04"},{"lineNumber":191,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-04-04"},{"lineNumber":192,"author":{"gitId":"Sharptail"},"content":".order summary.dropdown-2,","lastModifiedDate":"2021-04-04"},{"lineNumber":193,"author":{"gitId":"Sharptail"},"content":".order summary.dropdown-3{","lastModifiedDate":"2021-04-04"},{"lineNumber":194,"author":{"gitId":"Sharptail"},"content":"  color: var(--order-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":195,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":196,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":197,"author":{"gitId":"Sharptail"},"content":".order code{","lastModifiedDate":"2021-04-04"},{"lineNumber":198,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--order-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":199,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":200,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":201,"author":{"gitId":"Sharptail"},"content":".order pre{","lastModifiedDate":"2021-04-04"},{"lineNumber":202,"author":{"gitId":"Sharptail"},"content":"  border: 1px solid var(--order-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":203,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":204,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":205,"author":{"gitId":"Sharptail"},"content":".order pre,","lastModifiedDate":"2021-04-04"},{"lineNumber":206,"author":{"gitId":"Sharptail"},"content":".order pre\u003ecode {","lastModifiedDate":"2021-04-04"},{"lineNumber":207,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--order-secondary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":208,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":209,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":210,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-04-04"},{"lineNumber":211,"author":{"gitId":"Sharptail"},"content":" inventory style","lastModifiedDate":"2021-04-04"},{"lineNumber":212,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-04-04"},{"lineNumber":213,"author":{"gitId":"Sharptail"},"content":".inventory summary.dropdown-2,","lastModifiedDate":"2021-04-04"},{"lineNumber":214,"author":{"gitId":"Sharptail"},"content":".inventory summary.dropdown-3{","lastModifiedDate":"2021-04-04"},{"lineNumber":215,"author":{"gitId":"Sharptail"},"content":"  color: var(--inventory-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":216,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":217,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":218,"author":{"gitId":"Sharptail"},"content":".inventory code{","lastModifiedDate":"2021-04-04"},{"lineNumber":219,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--inventory-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":220,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":221,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":222,"author":{"gitId":"Sharptail"},"content":".inventory pre{","lastModifiedDate":"2021-04-04"},{"lineNumber":223,"author":{"gitId":"Sharptail"},"content":"  border: 1px solid var(--inventory-primary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":224,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":225,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":226,"author":{"gitId":"Sharptail"},"content":".inventory pre,","lastModifiedDate":"2021-04-04"},{"lineNumber":227,"author":{"gitId":"Sharptail"},"content":".inventory pre\u003ecode {","lastModifiedDate":"2021-04-04"},{"lineNumber":228,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--inventory-secondary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":229,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"},{"lineNumber":230,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":231,"author":{"gitId":"Sharptail"},"content":".float{","lastModifiedDate":"2021-04-04"},{"lineNumber":232,"author":{"gitId":"Sharptail"},"content":"  position:fixed;","lastModifiedDate":"2021-04-04"},{"lineNumber":233,"author":{"gitId":"Sharptail"},"content":"  width:60px;","lastModifiedDate":"2021-04-04"},{"lineNumber":234,"author":{"gitId":"Sharptail"},"content":"  height:60px;","lastModifiedDate":"2021-04-04"},{"lineNumber":235,"author":{"gitId":"Sharptail"},"content":"  bottom:20px;","lastModifiedDate":"2021-04-04"},{"lineNumber":236,"author":{"gitId":"Sharptail"},"content":"  right:20px;","lastModifiedDate":"2021-04-04"},{"lineNumber":237,"author":{"gitId":"Sharptail"},"content":"  background-color: var(--quinary-color);","lastModifiedDate":"2021-04-04"},{"lineNumber":238,"author":{"gitId":"Sharptail"},"content":"  color:#FFF;","lastModifiedDate":"2021-04-04"},{"lineNumber":239,"author":{"gitId":"Sharptail"},"content":"  border-radius:50px;","lastModifiedDate":"2021-04-04"},{"lineNumber":240,"author":{"gitId":"Sharptail"},"content":"  text-align:center;","lastModifiedDate":"2021-04-04"},{"lineNumber":241,"author":{"gitId":"Sharptail"},"content":"  box-shadow: 2px 2px 3px #999;","lastModifiedDate":"2021-04-04"},{"lineNumber":242,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":243,"author":{"gitId":"Sharptail"},"content":"  \u003e img {","lastModifiedDate":"2021-04-04"},{"lineNumber":244,"author":{"gitId":"Sharptail"},"content":"    margin-top: 5px;","lastModifiedDate":"2021-04-04"},{"lineNumber":245,"author":{"gitId":"Sharptail"},"content":"  }","lastModifiedDate":"2021-04-04"},{"lineNumber":246,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"Sharptail":234,"-":12}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"left to right direction","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"hide stereotypes","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    Class UI \u003c\u003cui\u003e\u003e UI_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    Class Logic \u003c\u003clogic\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    Class Storage \u003c\u003cstorage\u003e\u003e STORAGE_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    Class Model \u003c\u003cmodel\u003e\u003e MODEL_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Class Main #grey","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    Class Commons LOGIC_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"skinparam roundCorner 10","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"Class \"\u003c$user\u003e\" as User \u003c\u003cmodel\u003e\u003e MODEL_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"Class \"\u003c$documents\u003e\" as File \u003c\u003cui\u003e\u003e UI_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"UI -[#green]-\u003e Logic","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"UI -right[#green]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"Logic -[LOGIC_COLOR]-\u003e Storage","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"Logic -down[LOGIC_COLOR]-\u003e Model","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Main -up[#grey]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"User ..\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Sharptail":14,"-":21}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"hide stereotypes","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"Participant \":UI\" as ui \u003c\u003cui\u003e\u003e UI_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"Participant \":Logic\" as logic \u003c\u003clogic\u003e\u003e LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"Participant \":Model\" as model \u003c\u003cmodel\u003e\u003e MODEL_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"Participant \":Storage\" as storage \u003c\u003cstorage\u003e\u003e STORAGE_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"user -[USER_COLOR]\u003e ui : executeCommand\\n(\"customer delete 1\")","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"activate ui UI_COLOR UI_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"customer delete 1\")","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"activate logic LOGIC_COLOR LOGIC_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"activate model MODEL_COLOR MODEL_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"logic -[LOGIC_COLOR]\u003e storage : savePersonBook(personBook)","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"activate storage STORAGE_COLOR STORAGE_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Sharptail":12,"-":27}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"skinparam arrowThickness 2","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"skinparam Note {","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    BackgroundColor #white","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"Class JJIMYParser","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"Interface ComponentParser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"Class CustomerParser","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"Class MenuParser","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"Class OrderParser","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"Class InventoryParser","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"Class ComponentXYZCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"LogicManager --\u003e \"1\" JJIMYParser","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"JJIMYParser .right.\u003e ComponentParser: creates \u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"CustomerParser .up.|\u003e ComponentParser","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"MenuParser .up.|\u003e ComponentParser","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"OrderParser .up.|\u003e ComponentParser","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"InventoryParser .up.|\u003e ComponentParser","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"CustomerParser ..\u003e ComponentXYZCommandParser: creates \u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"MenuParser ..\u003e ComponentXYZCommandParser: creates \u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"OrderParser ..\u003e ComponentXYZCommandParser: creates \u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"InventoryParser ..\u003e ComponentXYZCommandParser: creates \u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"ComponentXYZCommandParser ..\u003e XYZCommand: creates \u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"ComponentXYZCommandParser .left.|\u003e Parser : \\t\\t\\t","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"ComponentXYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"ComponentXYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"ComponentXYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"ComponentXYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"LogicManager -left-\u003e Model","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"Command .left.\u003e Model","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"\u0027note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Sharptail":33,"-":47}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"\u0027T1 through T4 are shades of the original color from darkest to lightest","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"!define UI_COLOR_DARK #3a6b39","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"!define UI_COLOR #5fb051","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"!define UI_COLOR_T1 #8FE381","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"!define UI_COLOR_T2 #A7E99C","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"!define UI_COLOR_T3 #BFEEB7","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"!define UI_COLOR_T4 #D7F4D2","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"!define LOGIC_COLOR_DARK #1b286b","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"!define LOGIC_COLOR #2B40AB","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"!define LOGIC_COLOR_T1 #88AED0","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"!define LOGIC_COLOR_T2 #96B9D0","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"!define LOGIC_COLOR_T3 #A4C3D2","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"!define LOGIC_COLOR_T4 #AECBD6","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"!define MODEL_COLOR_DARK #7a1c18","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"!define MODEL_COLOR #CF4040","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"!define MODEL_COLOR_T1 #FF7974","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"!define MODEL_COLOR_T2 #FF8986","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"!define MODEL_COLOR_T3 #FF9997","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"!define MODEL_COLOR_T4 #FFA9A9","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"!define STORAGE_COLOR_DARK #854c30","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"!define STORAGE_COLOR #FFA071","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"!define STORAGE_COLOR_T1 #FFB480","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"!define STORAGE_COLOR_T2 #FEC98F","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"!define STORAGE_COLOR_T3 #FEDD9E","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"!define STORAGE_COLOR_T2 #FDF1AD","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"scale 1280*720","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"skinparam BackgroundColor #e3f0ff","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"skinparam sequenceArrowThickness 2","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"skinparam Rectangle {","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    BorderThickness 2","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    BorderColor #000000","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    BorderThickness 2","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"    BorderColor #000000","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    BorderColor\u003c\u003clogic\u003e\u003e LOGIC_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"    BorderColor\u003c\u003cui\u003e\u003e UI_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    BorderColor\u003c\u003cmodel\u003e\u003e MODEL_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"    BorderColor\u003c\u003cstorage\u003e\u003e STORAGE_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"    BorderColor #black","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"    BorderColor\u003c\u003clogic\u003e\u003e LOGIC_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"    BorderColor\u003c\u003cui\u003e\u003e UI_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"    BorderColor\u003c\u003cmodel\u003e\u003e MODEL_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"    BorderColor\u003c\u003cstorage\u003e\u003e STORAGE_COLOR_DARK","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Sharptail":50,"-":47}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"title: JJIMY","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-W15-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-W15-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W15-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W15-3/tp)","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"** JJIMY is a restaurant management app for managing food orders, ingredient inventory, etc via Command Line Interface (CLI). \u003cbr/\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"* If you are interested in using JJIMY, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"* If you are interested about developing JJIMY, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Sharptail":7,"-":13}},{"path":"docs/team/guanyz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"layout: page","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"title: Guan Yang Ze\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"## Project: JJIMY","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"JJIMY is a restaurant management app for managing food orders, ingredient inventory, etc. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 21.3 kLoC.","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"I was tasked with overseeing the documentation of the project and was additionally in charge of extending various commands to operate on all the components of the app.","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dguanyz\u0026tabRepo\u003dAY2021S2-CS2103T-W15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"* **New Feature**: Implemented `add` and `edit` commands for all components of the app.","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"    * What it does: Allows the user to add and edit items within all four lists within the app.","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"    * Highlights: Implemented validation to ensure that the added or edited items are valid in the context of the rest of the list (for example, are not duplicates; do not reference other items that do not exist) before merging them into the list.","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"\t* Modified an existing implementation of dishes to encapsulate an ingredient list. ([#121](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/121))","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"    * Extended the existing sample data for all the aspects of the app to aid in testing. ([#60](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/60), [#216](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/216))","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    * User Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"        * Updated guides for the usage of the `add` and `edit` commands. ([#143](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/143), [#149](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/149))","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"        * Overhauled implementation documentation ([#90](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/90))","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"\t\t* Updated user stories ([#21](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/21))","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"\t\t* Updated NFRs and glossary ([#28](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/28))","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"    * Consistently reviewed other team members\u0027 PRs for approval.","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"\t* Implemented several bugfixes.","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"Sharptail":21,"guanyz":17}},{"path":"docs/team/ianckw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"layout: page","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"title: Ian Chan Kit Wai\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"## Project: JJIMY","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"JJIMY is a restaurant management app for managing food orders, ingredient inventory, etc. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 21.3 kLoC.","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"I was tasked with overseeing the testing of the project and was additionally in charge of extending various commands to operate on all the components of the app.","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dIanCKW\u0026tabRepo\u003dAY2021S2-CS2103T-W15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"* **New Feature**: Implemented `list` command for all components of the app, which include menu dishes, orders, customers, and ingredients in inventory","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    * What it does: Allows the user to see the listed items in the GUI","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"    * Justification: Users are now able to track the items that they have for easy reference and straightforward management.","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"    * Highlights: Implemented to ensure that when other commands are used, the lists are updated and displayed properly","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"* **New Feature**: Implented `order complete` command, which marks orders from UNCOMPLETED to COMPLETED","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"    * What it does: Allows the user to mark orders as completed so they are no longer displayed in the order list and are instead displayed in the order history.","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"* **New Feature**: Implemented `order history` command, which shows completed orders and cancelled orders","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    * What it does: Allows the user to see the history or orders in the GUI","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"    * Justification: Users are now able to track the orders that have been cancelled or completed","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"* **Enhancements to existing features**: List sorts by datetime and stays sorted when other commands are issued","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    *","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    * User Guide: ","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    Updated guides for the useage of the `[COMPONENT] list`, `order complete` and `order history` feature.","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        *","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    * Developer Guide: ","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"    Added in user stores","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"    Implemented documentation for features","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        *","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"* **Team-Based Task**:","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    *","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"* **Review/mentoring contributions**:     ","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"    * Consistently reviewed other team members\u0027 PRs for approval.","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"    * Implemented several bugfixes.","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    * ","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"Sharptail":26,"IanCKW":22}},{"path":"docs/team/jamesleeht.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"layout: page","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"title: James Lee Hong Thern\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"## Project: JJIMY","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"JJIMY is a restaurant management app for managing food orders, ingredient inventory, etc.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"It is written in Java, and has about 21.3 kLoC.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djamesleeht\u0026tabRepo\u003dAY2021S2-CS2103T-W15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"* **New Feature**: Find command for all new components","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    * What it does: Allows filtering of all lists with a combination of predicates.","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    * Justification: Storage needed for other components to persist even after app restarted.","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    * Highlights: Allows for a list of predicates to be used in conjunction. Use of predicate and generics instead of a specific predicate implementation in the find commmand allows for easy extensibility.","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"* **Enhancements to existing features**:: Implement model for all new components","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    * What it does: Represents the model for menu dishes, inventory ingredients and orders.","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    * Justification: Model needed for other components to work well.","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    * Highlights: New interfaces and generic modifications to existing interfaces / classes to make adding more components easier and more extensible.","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"* **Enhancements to existing features**:: Implement storage for all new components","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    * What it does: Allow JSON storage to work for all new components.","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    * Justification: Storage needed for other components to persist even after app restarted.","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    * Highlights: Made all models JSON compatible without need for extra JsonAdapted classes.","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    * User Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        * Committed initial UG in markdown","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        * Standardize command format and described usage","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        * Included general outline of team contributions for Week 10 task","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"* **Team-Based Task**:","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    * Set up branch rules and ensure forking workflow followed","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    * Enforced JDK11 compilation through gradle","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"  ","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    * As team lead, ensured project was running smoothly across milestones","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    * Reviewed PRs and advised teammates on code structure","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    * Ensured consistency of processes and UG / DG","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    ","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"Sharptail":25,"jamesleeht":23}},{"path":"docs/team/kangtinglee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"layout: page","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"title: Lee Kang Ting Marcus\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"## Project: JJIMY","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"JJIMY is a restaurant management app for managing food orders, ingredient inventory, etc.","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"It is written in Java, and has about 21.3 kLoC.","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dkangtinglee\u0026tabRepo\u003dAY2021S2-CS2103T-W15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"kangtinglee"},"content":"* **New Feature**: Delete command for all new components","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"kangtinglee"},"content":"    * What it does: Allows the deletion of different objects in the","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"kangtinglee"},"content":"      application (contacts, menu items, inventory, orders).","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"kangtinglee"},"content":"    * Justification: Enable users to remove items that are no longer","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"kangtinglee"},"content":"      relevant to their operations.","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"kangtinglee"},"content":"* **New Feature**: Cascading deletion of customer data","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"kangtinglee"},"content":"    * What it does: Whenever a customer contact is deleted, all orders","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"kangtinglee"},"content":"      made by the customer is also deleted automatically.","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"kangtinglee"},"content":"    * Justification: Ensures that customer information is properly","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"kangtinglee"},"content":"      deleted throughout the entire application. Without this link,","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"kangtinglee"},"content":"      there are two consequences. First, there will be orders","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"kangtinglee"},"content":"      belonging to customers who no longer exist in the contact list,","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"kangtinglee"},"content":"      which is redundant. Second, the customers\u0027 contact information","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"kangtinglee"},"content":"      still exist attached to `Order` objects, meaning that their","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"kangtinglee"},"content":"      information isn\u0027t really removed, which can be a data privacy","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"kangtinglee"},"content":"      issue for the user.","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"kangtinglee"},"content":"    * Highlights: Whenever a customer is to be deleted and has","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"kangtinglee"},"content":"      pending/uncompleted orders, a warning is displayed to the user","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"kangtinglee"},"content":"      and requires them to enter the same command with a `-f` flag to","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"kangtinglee"},"content":"      acknowledge that they are removing orders that are yet to be","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"kangtinglee"},"content":"      compelted. This ensures that the user never cancels an order","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"kangtinglee"},"content":"      unknowingly while the customer still expects it to be fulfilled,","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"kangtinglee"},"content":"      which can lead to customer disatisfaction.","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"* **New Feature**: Cascading deletion of menu items/dishes [#119](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/119 \"#119\")","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"    * What is does: When inventory items are removed, all dishes that","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"kangtinglee"},"content":"      utilize it are also delted from the menu.","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"kangtinglee"},"content":"    * Justification: This cascading delete feature enables the user to","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"kangtinglee"},"content":"      remove all dishes that he/she can no longer prepare since the","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"kangtinglee"},"content":"      ingredient has been removed from the inventory permanently in","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"      one command instead of having to locate these dishes and delete","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"kangtinglee"},"content":"      them seperately.","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"kangtinglee"},"content":"    * Highlights: Similar to the cascading delete command, a `-f` flag","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"kangtinglee"},"content":"      is needed if menu items will be deleted. This ensures that the","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"kangtinglee"},"content":"      user acknowledges the deletion and will not be blindsided by the","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"kangtinglee"},"content":"      effects of this cascading deletion.","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"kangtinglee"},"content":"* **New Feature**: Data consistency for edit commands ([#104](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/104 \"#104\"))","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"kangtinglee"},"content":"    * What is does: Changes every instance of an object throughout the","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"kangtinglee"},"content":"      application whenver it is edited.","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"kangtinglee"},"content":"    * Justification: Since all objects are immutable and each","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"kangtinglee"},"content":"      component holds an immutable copy of other objects, editing a","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"kangtinglee"},"content":"      piece of information is not propagated through the","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"kangtinglee"},"content":"      application. Hence, it is important that all objects that","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"kangtinglee"},"content":"      describe the same item (contact, inventory, menu item, order,","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"kangtinglee"},"content":"      etc) are updated whenever it is edited.","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"kangtinglee"},"content":"    * Highlights: New interfaces and methods added in order to easily","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"kangtinglee"},"content":"      aggregate/locate all relevant objects that need to be updated.","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"kangtinglee"},"content":"* **New Feature**: Delete command for all new components [#138](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/138 \"#138\")","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"kangtinglee"},"content":"    * What it does: Checks that orders can be fulfilled before adding","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"kangtinglee"},"content":"      to the order list.","lastModifiedDate":"2021-04-09"},{"lineNumber":69,"author":{"gitId":"kangtinglee"},"content":"    * Justification: Warns users that they do not have sufficient","lastModifiedDate":"2021-04-09"},{"lineNumber":70,"author":{"gitId":"kangtinglee"},"content":"      inventory to produce the order they are logging which is","lastModifiedDate":"2021-04-09"},{"lineNumber":71,"author":{"gitId":"kangtinglee"},"content":"      important so that users can tell straight away whether they can","lastModifiedDate":"2021-04-09"},{"lineNumber":72,"author":{"gitId":"kangtinglee"},"content":"      fulfil an order or not.","lastModifiedDate":"2021-04-09"},{"lineNumber":73,"author":{"gitId":"kangtinglee"},"content":"    * Highlights: Added methods and interfaces to enable quering the","lastModifiedDate":"2021-04-09"},{"lineNumber":74,"author":{"gitId":"kangtinglee"},"content":"      inventory with a list of items and quantities easily.","lastModifiedDate":"2021-04-09"},{"lineNumber":75,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":76,"author":{"gitId":"kangtinglee"},"content":"* **Enhance Feature**: Added ability to filter menu items so that only items that can be produced are shown [#141](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/141 \"#141\")","lastModifiedDate":"2021-04-09"},{"lineNumber":77,"author":{"gitId":"kangtinglee"},"content":"    * What it does: Shows only dishes that can be produced given inventory.","lastModifiedDate":"2021-04-09"},{"lineNumber":78,"author":{"gitId":"kangtinglee"},"content":"    * Justification: Enables users to know what items they can produce","lastModifiedDate":"2021-04-09"},{"lineNumber":79,"author":{"gitId":"kangtinglee"},"content":"      currently.","lastModifiedDate":"2021-04-09"},{"lineNumber":80,"author":{"gitId":"kangtinglee"},"content":"    * Highlights: The default behavior of `menu list` shows all items","lastModifiedDate":"2021-04-09"},{"lineNumber":81,"author":{"gitId":"kangtinglee"},"content":"      in the menu. With this update, `menu list -a` displays only","lastModifiedDate":"2021-04-09"},{"lineNumber":82,"author":{"gitId":"kangtinglee"},"content":"      items that can be produced.","lastModifiedDate":"2021-04-09"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-09"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"    * User Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":86,"author":{"gitId":"kangtinglee"},"content":"        * Added working examples and explainations for `customer` related commands.","lastModifiedDate":"2021-04-09"},{"lineNumber":87,"author":{"gitId":"kangtinglee"},"content":"        [#145](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/145 \"#145\")","lastModifiedDate":"2021-04-09"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":89,"author":{"gitId":"kangtinglee"},"content":"        * Added segment on data consistency during deletions and","lastModifiedDate":"2021-04-09"},{"lineNumber":90,"author":{"gitId":"kangtinglee"},"content":"          provided sequence diagram for cascading delete command.","lastModifiedDate":"2021-04-09"},{"lineNumber":91,"author":{"gitId":"kangtinglee"},"content":"          ([#81](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/81 \"#81\"), [#105](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/105/files \"#105\"))","lastModifiedDate":"2021-04-09"},{"lineNumber":92,"author":{"gitId":"kangtinglee"},"content":"        * Added segment on data consistency between orders placed and","lastModifiedDate":"2021-04-09"},{"lineNumber":93,"author":{"gitId":"kangtinglee"},"content":"          inventory which describes how the two are linked and","lastModifiedDate":"2021-04-09"},{"lineNumber":94,"author":{"gitId":"kangtinglee"},"content":"          automatically synced.","lastModifiedDate":"2021-04-09"},{"lineNumber":95,"author":{"gitId":"kangtinglee"},"content":"          ([#81](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/81 \"#81\"))","lastModifiedDate":"2021-04-09"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"* **Team-Based Task**:","lastModifiedDate":"2021-04-09"},{"lineNumber":98,"author":{"gitId":"kangtinglee"},"content":"    * Ensured that issues and milestones were properly set up and","lastModifiedDate":"2021-04-09"},{"lineNumber":99,"author":{"gitId":"kangtinglee"},"content":"      delegated.","lastModifiedDate":"2021-04-09"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2021-04-09"},{"lineNumber":102,"author":{"gitId":"kangtinglee"},"content":"    * Consistently reviewed other team members\u0027 PRs for approval.","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"kangtinglee":78,"Sharptail":24}},{"path":"docs/team/sharptail.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"layout: page","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"title: Kong Jian Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"---","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"## Project: JJIMY","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"JJIMY is a restaurant management app for managing food orders, ingredient inventory, etc.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"It is written in Java, and has about 21.3 kLoC.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"I was tasked to ensure the code quality of the project and in charge of the parser and GUI.","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dSharptail\u0026tabRepo\u003dAY2021S2-CS2103T-W15-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"* **New Feature**: Added the ability for the app to understand different components","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    * What it does: Allows user to type is the same commands but different components.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"      The different components are:  ","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"      - `Customer` `Menu` `Order` `Inventory`  ","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        ","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"      Example:  ","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"      `customer add` and `menu add` both uses the `add` command, but it belongs to different components.  ","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    * Justification: This feature improves the product functionality significantly because a user can now manage multiple","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"      different list instead of the original `Contact` list only.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    * Highlights: This enhancement will be able to add on even more components in the future if needed.","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    ","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"* **New Feature**: Added a new column to the GUI to view customer list with other components side by side.","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    * What it does: Allows user to view customer list on the left column of the GUI together with any other components on the right column of the GUI.  ","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"      The right column will only be affected by `menu list`, `order list` or `ìnventory list` only.","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    * Justification: This feature improves the user-friendliness of the app for the user to view 2 lists at a time to minimise navigating to different component list back and forth.","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    * Highlights: The tabs below the right column is also clickable with the same functionality.","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"* **New Feature**: Update ingredient quantity whenever order is added or deleted","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    * What it does: ","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"      - Automatically decrease ingredient quantity when an order contains a dishes that needs that ingredient is added.","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"      - Similarly, it will automatically increase the ingredient if the order is deleted.","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    * Justification: This will ensure the correct amount of ingredients that are stored in the inventory.","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"      ","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    * Complete overhaul of the app GUI (Pull requests [\\#123](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/123))","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        * This implementation was challenging as the window border was removed, extra logic is needed to resize the app window.","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    ","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    * General:","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        * Improve user-friendliness of product website and personalised its color scheme (Pull requests [\\#150](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/150))","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"            * Drop-down lists ","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"                * This implementation was challenging as syntax highlighting does not work in the drop-down container.","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"            * Dark mode and color code commands from different components","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    * User Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        * Added the documentation for feature `Help` and `Exit`. (Pull requests [\\#144](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/144))","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        * Fixed the documentation for the multiple features (Pull requests [\\#224](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/224))","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"            *  Standardised the parameter of command format. ","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"            *  Updated `order add`, `order find`, `order edit`, `menu add`, `menu edit` formatting.","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            *  Added \u0027t\u0027 tag to customer add format","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"            *  Added \u0027-f\u0027 and \u0027-a\u0027 explanation","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        * Added implementation details and UML Diagram of the different `component` parser (Pull requests [\\#87](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/87))","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    ","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"* **Team-Based Task**:","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    * Setting up the GitHub team organisation and repository.","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    * Removed traces of AB3 and update project descriptions, product website link.","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"    * Enable assertion in Gradle.","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"    * Managed `v1.3` release on GitHub.","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"    * Update the correct roles and responsibilities, profile photos for the team in About Us page.","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"    * Created the template for Project Portfolio Page for the team and linked it with About Us page.","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2021-04-09"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#111](https://github.com/AY2021S2-CS2103T-W15-3/tp/pull/111)","lastModifiedDate":"2021-04-09"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"    ","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"Sharptail":70}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.dish.JsonDishBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.ingredient.JsonIngredientBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.order.JsonOrderBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"        BookStorage\u003cPerson\u003e addressBookStorage \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"                new JsonPersonBookStorage(userPrefs.getPersonBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        BookStorage\u003cDish\u003e dishBookStorage \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"                new JsonDishBookStorage(userPrefs.getDishBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        BookStorage\u003cIngredient\u003e ingredientBookStorage \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"                new JsonIngredientBookStorage(userPrefs.getIngredientBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        BookStorage\u003cOrder\u003e orderBookStorage \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"                new JsonOrderBookStorage(userPrefs.getOrderBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        storage \u003d new StorageManager(addressBookStorage, dishBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"                ingredientBookStorage, orderBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyBook\u003cPerson\u003e initialPersonBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyBook\u003cDish\u003e initialDishBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyBook\u003cIngredient\u003e initialIngredientBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyBook\u003cOrder\u003e initialOrderBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"            Optional\u003cReadOnlyBook\u003cPerson\u003e\u003e personBookOptional \u003d storage.readPersonBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"            Optional\u003cReadOnlyBook\u003cDish\u003e\u003e dishBookOptional \u003d storage.readDishBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"            Optional\u003cReadOnlyBook\u003cIngredient\u003e\u003e ingredientBookOptional \u003d storage.readIngredientBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"            Optional\u003cReadOnlyBook\u003cOrder\u003e\u003e orderBookOptional \u003d storage.readOrderBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"            if (!personBookOptional.isPresent()","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"                    || !dishBookOptional.isPresent()","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"                    || !ingredientBookOptional.isPresent()","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"                    || !orderBookOptional.isPresent()) {","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"                logger.info(\"Data file not found. Will be starting with a sample data for all books.\");","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"            initialPersonBook \u003d personBookOptional.orElseGet(SampleDataUtil::getSamplePersonBook);","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"            initialDishBook \u003d dishBookOptional.orElseGet(SampleDataUtil::getSampleDishBook);","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"            initialIngredientBook \u003d ingredientBookOptional.orElseGet(SampleDataUtil::getSampleIngredientBook);","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"            initialOrderBook \u003d orderBookOptional.orElseGet(SampleDataUtil::getSampleOrderBook);","lastModifiedDate":"2021-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"One of the data files not in the correct format. Will be starting with empty books\");","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"            initialPersonBook \u003d new PersonBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"            initialDishBook \u003d new DishBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"            initialIngredientBook \u003d new IngredientBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"            initialOrderBook \u003d new OrderBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with empty books\");","lastModifiedDate":"2021-04-11"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"            initialPersonBook \u003d new PersonBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"            initialDishBook \u003d new DishBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"            initialIngredientBook \u003d new IngredientBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"            initialOrderBook \u003d new OrderBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"        return new ModelManager(initialPersonBook, initialDishBook, initialIngredientBook, initialOrderBook, userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kangtinglee":1,"-":166,"jamesleeht":52}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    // General","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to JJIMY, the friendly restaurant management app.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"kangtinglee"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command! Please see\\n%1$s\";","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"kangtinglee"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! Please see\\n%1$s\";","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    // Items","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_PERSON \u003d \"person\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_PERSONS \u003d \"persons\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_DISH \u003d \"dish\";","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_DISHES \u003d \"dishes\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_INGREDIENT \u003d \"ingredient\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_INGREDIENTS \u003d \"ingredients\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_ORDER \u003d \"order\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    public static final String ITEM_ORDERS \u003d \"orders\";","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    // Item messages","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_INVALID_ITEM_DISPLAYED_INDEX \u003d \"The %s index provided is invalid\";","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_ITEMS_LISTED_OVERVIEW \u003d \"%d %s listed!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"kangtinglee":2,"Sharptail":1,"-":9,"jamesleeht":15}},{"path":"src/main/java/seedu/address/commons/core/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":" * Pair stores key value pair","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":" * @param \u003cK\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":" * @param \u003cV\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public class Pair\u003cK, V\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    private final K key;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    private final V value;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"     * Constructor","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"     * @param key","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"     * @param value","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    public Pair(@JsonProperty(\"key\") K key, @JsonProperty(\"value\") V value) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"        this.key \u003d key;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"     * Gets key method","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"     * @return","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    public K getKey() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        return key;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"     * Get value method","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"     * @return","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public V getValue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        return value;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"     * equals method","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"     * @param o","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"     * @return","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        if (o instanceof Pair) {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            Pair pair \u003d (Pair) o;","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"            if (key !\u003d null ? !key.equals(pair.key) : pair.key !\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"                return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"            if (value !\u003d null ? !value.equals(pair.value) : pair.value !\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"                return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Sharptail":3,"IanCKW":23,"jamesleeht":38}},{"path":"src/main/java/seedu/address/commons/util/PredicateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public class PredicateUtil {","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"     * Method to compose predicates into one predicate.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"     * @param predicates list of predicates to compose","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"     * @param \u003cT\u003e predicate item","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"     * @return composed predicate","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    public static \u003cT\u003e Predicate\u003cT\u003e composePredicates(List\u003cPredicate\u003cT\u003e\u003e predicates) {","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"        assert predicates !\u003d null \u0026\u0026 predicates.size() \u003e 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        Predicate\u003cT\u003e wrapperPredicate \u003d x -\u003e true;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"        for (Predicate\u003cT\u003e pred : predicates) {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"            wrapperPredicate \u003d wrapperPredicate.and(pred);","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        return wrapperPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jamesleeht":22}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if {@code s} represents a non-negative integer","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"    public static boolean isNonNegativeInt(String s) {","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"            double value \u003d Integer.parseInt(s);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if {@code s} represents a non-negative double","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"    public static boolean isNonNegativeDouble(String s) {","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"            double value \u003d Double.parseDouble(s);","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Double#parseDouble(String)","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":68,"jamesleeht":30}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"    ObservableList\u003cDish\u003e getFilteredDishList();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"    ObservableList\u003cIngredient\u003e getFilteredInventoryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":42,"IanCKW":8}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.JJIMYParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    private final JJIMYParser jjimyParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        jjimyParser \u003d new JJIMYParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[USER INPUT \u003d \" + commandText + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        Command command \u003d jjimyParser.parseCompo(commandText);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"            storage.savePersonBook(model.getPersonBook());","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"            storage.saveDishBook(model.getDishBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            storage.saveIngredientBook(model.getIngredientBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"            storage.saveOrderBook(model.getOrderBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"IanCKW"},"content":"    public ObservableList\u003cDish\u003e getFilteredDishList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"IanCKW"},"content":"        return model.getFilteredDishList();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"IanCKW"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredInventoryList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"IanCKW"},"content":"        return model.getFilteredIngredientList();","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"IanCKW"},"content":"    //@Override","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"IanCKW"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"IanCKW"},"content":"        return model.getFilteredIngredientList();","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"IanCKW"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"IanCKW"},"content":"        return model.getFilteredOrderList();","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"        return model.getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Sharptail":5,"-":71,"IanCKW":20,"jamesleeht":5}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"    public enum CRtype {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"        PERSON, DISH, INGREDIENT, ORDER, SHOPPING, HELPOREXIT, NONE","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    private CRtype type \u003d CRtype.HELPOREXIT;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"     * and {@code type}","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"    public CommandResult(String feedbackToUser, CRtype type) {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"        this.type \u003d CRtype.NONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"IanCKW"},"content":"    public CRtype type() {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"IanCKW"},"content":"        return type;","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":75,"IanCKW":15}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"kangtinglee"},"content":"            + \" or press F1 instead.\";","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"customer\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"kangtinglee"},"content":"            + \": Adds a person to the contacts list. \"","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    public CustomerAddCommand(Person person) {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"        if (CustomerCommandUtil.isValidCustomer(toAdd, model)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"            model.addPerson(toAdd);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof CustomerAddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 toAdd.equals(((CustomerAddCommand) other).toAdd));","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":1,"Sharptail":10,"-":55,"guanyz":2,"IanCKW":2}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class CustomerClearCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"        model.setPersonBook(new PersonBook());","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":4,"-":18,"IanCKW":1,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerCommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"public class CustomerCommandUtil {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"     * Checks whether the Customer is a valid entry.","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"     * @param customer Candidate Customer to be added.","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"     * @param model The model object.","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"     * @return true if the Customer is a valid entry.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"     * @throws CommandException If the Customer is an invalid entry.","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    public static boolean isValidCustomer(Person customer, Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"        if (model.hasPerson(customer)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"        return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"guanyz":23}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"public class CustomerDeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"customer\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted person: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"kangtinglee"},"content":"    public static final String MESSAGE_DELETE_PERSON_FAILURE \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"kangtinglee"},"content":"            \"Failed to deleted cusomter: %1$s due to outstanding orders, \"","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"kangtinglee"},"content":"                    + \"add -f flag to force delete the cusomter\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"kangtinglee"},"content":"                    + \"Warning: This will delete any order that contains %1$s\";","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"kangtinglee"},"content":"    private final boolean isForce;","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public CustomerDeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kangtinglee"},"content":"        this(targetIndex, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"kangtinglee"},"content":"     * Delete customer given index and isForce flag","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"kangtinglee"},"content":"     * @param targetIndex index of customer to be deleted","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"kangtinglee"},"content":"     * @param isForce required to be true if there are outstanding orders that will also be deleted","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"    public CustomerDeleteCommand(Index targetIndex, boolean isForce) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"kangtinglee"},"content":"        this.isForce \u003d isForce;","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e outstandingOrders \u003d model.getIncompleteOrdersFromPerson(personToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"kangtinglee"},"content":"        boolean isOutstandingOrders \u003d !outstandingOrders.isEmpty();","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"kangtinglee"},"content":"        if (isOutstandingOrders \u0026\u0026 !isForce) {","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"kangtinglee"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_PERSON_FAILURE, personToDelete.getName()));","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete),","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof CustomerDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((CustomerDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":24,"Sharptail":11,"-":43,"IanCKW":2,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"public class CustomerEditCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"    public static final String COMPONENT_WORD \u003d \"customer\";","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"            + \": Edits the details of the person \"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"            + \"identified by the index number used in the displayed person list. \"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    public CustomerEditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson),","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"        String updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"        String updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"        String updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"        String updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"        List\u003cString\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"        if (!(other instanceof CustomerEditCommand)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand e \u003d (CustomerEditCommand) other;","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"        private String name;","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"        private String phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"        private String email;","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"        private String address;","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"        private List\u003cString\u003e tags;","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"jamesleeht"},"content":"        public void setName(String name) {","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cString\u003e getName() {","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"jamesleeht"},"content":"        public void setPhone(String phone) {","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cString\u003e getPhone() {","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"        public void setEmail(String email) {","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cString\u003e getEmail() {","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"jamesleeht"},"content":"        public void setAddress(String address) {","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cString\u003e getAddress() {","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"jamesleeht"},"content":"        public void setTags(List\u003cString\u003e tags) {","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"jamesleeht"},"content":"            this.tags \u003d (tags !\u003d null) ? new ArrayList\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"jamesleeht"},"content":"        public Optional\u003cList\u003cString\u003e\u003e getTags() {","lastModifiedDate":"2021-03-26"},{"lineNumber":199,"author":{"gitId":"jamesleeht"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableList(tags)) : Optional.empty();","lastModifiedDate":"2021-03-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Sharptail":7,"-":185,"guanyz":5,"IanCKW":2,"jamesleeht":25}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"public class CustomerFindCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"            + \"Parameters: n/[KEYWORD] (MORE_KEYWORDS)...\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice bob charlie\";","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    public CustomerFindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"                String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"                        model.getFilteredPersonList().size(),","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"                        Messages.ITEM_PERSONS),","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof CustomerFindCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 predicate.equals(((CustomerFindCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Sharptail":6,"-":31,"IanCKW":1,"jamesleeht":11}},{"path":"src/main/java/seedu/address/logic/commands/customer/CustomerListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"package seedu.address.logic.commands.customer;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"public class CustomerListCommand extends Command {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":25,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":" * Adds a person to the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"public class InventoryAddCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"inventory\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"            + \": Adds an ingredient to the inventory. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            + PREFIX_NAME + \"INGREDIENT_NAME \"","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \"QUANTITY\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"potato \"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \"51\";","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public static final String ADD_MESSAGE_SUCCESS \u003d \"New ingredient added: %1$s\";","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public static final String INCREASE_MESSAGE_SUCCESS \u003d \"Ingredient increased: %1$s\";","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"    private final Ingredient toAdd;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"    public InventoryAddCommand(Ingredient ingredient) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        toAdd \u003d ingredient;","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        InventoryCommandUtil.isValidIngredient(toAdd, model);","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        if (model.hasIngredient(toAdd)) {","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"            model.increaseIngredientByName(toAdd.getName(), toAdd.getQuantity());","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"            message \u003d String.format(INCREASE_MESSAGE_SUCCESS, toAdd);","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        } else {","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"            model.addIngredient(toAdd);","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            message \u003d String.format(ADD_MESSAGE_SUCCESS, toAdd);","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        return new CommandResult(message, CommandResult.CRtype.INGREDIENT);","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof InventoryAddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 toAdd.equals(((InventoryAddCommand) other).toAdd));","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":57,"guanyz":10}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryCommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"public class InventoryCommandUtil {","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_INVALID_QUANTITY \u003d \"The quantity entered is invalid, \"","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"            + \"please enter a positive number only!\";","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"     * Checks whether the Ingredient is a valid entry.","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"     * @param ingredient Candidate Ingredient to be added.","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"     * @param model The model object.","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"     * @return true if the Ingredient is a valid entry.","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"     * @throws CommandException If the Ingredient is an invalid entry.","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    public static boolean isValidIngredient(Ingredient ingredient, Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        if (ingredient.getQuantity() \u003c 0) {","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"            throw new CommandException(MESSAGE_INVALID_QUANTITY);","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"        return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"Sharptail":4,"guanyz":19}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryDecreaseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":" * Decreases the quantity of an existing ingredient.","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"public class InventoryDecreaseCommand extends Command {","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"inventory\";","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"decrease\";","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"            + \": Decrease the quantity of an existing ingredient in the inventory.\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            + PREFIX_QUANTITY + \"QUANTITY\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"1 \"","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            + PREFIX_QUANTITY + \"2\";","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Ingredient quantity has been decreased: %1$s\";","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_INVALID_INGREDIENT \u003d \"Ingredient was not found in the system, \"","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"            + \"have you added the ingredient to the inventory?\";","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    private final int quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"    public InventoryDecreaseCommand(Index targetIndex, int quantity) {","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        Ingredient toDecrease \u003d model.getIngredientByIndex(this.targetIndex.getZeroBased());","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        InventoryCommandUtil.isValidIngredient(toDecrease, model);","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        if (model.hasIngredient(toDecrease)) {","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            model.decreaseIngredient(toDecrease, quantity);","lastModifiedDate":"2021-04-09"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        } else {","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"            throw new CommandException(MESSAGE_INVALID_INGREDIENT);","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toDecrease.getName()), CommandResult.CRtype.INGREDIENT);","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof InventoryDecreaseCommand // instanceof handles nulls","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((InventoryDecreaseCommand) other).targetIndex));","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"Sharptail":69}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"public class InventoryDeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"inventory\";","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \": Deletes the ingredient identified by the index number used in the displayed inventory.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_INGREDIENT_SUCCESS \u003d \"Deleted ingredient: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_INGREDIENT_FAILURE \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            \"Failed to deleted ingredient: %1$s due to associated dishes, \"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"                    + \"add -f flag to force delete the ingredient\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"                    + \"Warning: This will delete any dishes that contains %1$s\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"                    + \"\\t\\t   This will also mark associated orders as \u0027Cancelled\u0027\";","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    private final boolean isForce;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"     * Forces delete dish with given index along with associated ingredients","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"     * @param targetIndex index in ingredient list","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"     * @param isForce forces delete a dish","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    public InventoryDeleteCommand(Index targetIndex, boolean isForce) {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        this.isForce \u003d isForce;","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"kangtinglee"},"content":"        List\u003cIngredient\u003e lastShownList \u003d model.getFilteredIngredientList();","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"kangtinglee"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_INGREDIENT));","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"kangtinglee"},"content":"        Ingredient ingredientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"        List\u003cDish\u003e dishesToCascade \u003d model.getDishesByIngredients(ingredientToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"        boolean dishesContainsIngredient \u003d !dishesToCascade.isEmpty();","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"        if (dishesContainsIngredient \u0026\u0026 !isForce) {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_INGREDIENT_FAILURE, ingredientToDelete.getName()));","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"        for (Dish dishToDelete: dishesToCascade) {","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"            List\u003cOrder\u003e outstandingOrders \u003d model.getIncompleteOrdersContainingDish(dishToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"            model.cancelOrders(outstandingOrders);","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"            model.deleteDish(dishToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"kangtinglee"},"content":"        model.deleteIngredient(ingredientToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"        // Delete dish here from model","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INGREDIENT_SUCCESS, ingredientToDelete),","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.INGREDIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof InventoryDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((InventoryDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":9,"Sharptail":75,"IanCKW":2,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"public class InventoryEditCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"    public static final String COMPONENT_WORD \u003d \"inventory\";","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"            + \": Edits the details of the ingredient \"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"identified by the index number used in the displayed ingredient list.\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"            + \"[\" + PREFIX_NAME + \"INGREDIENT_NAME] \"","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_QUANTITY + \"QUANTITY]\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"Sweetcorn\";","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_EDIT_INGREDIENT_SUCCESS \u003d \"Edited Ingredient: %1$s\";","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_DUPLICATE_INGREDIENT \u003d \"This ingredient already exists in the inventory.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"    private final Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"    private final InventoryEditCommand.EditIngredientDescriptor editIngredientDescriptor;","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"     * @param editIngredientDescriptor details to edit the person with","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"    public InventoryEditCommand(Index index, InventoryEditCommand.EditIngredientDescriptor editIngredientDescriptor) {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"        requireNonNull(editIngredientDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"        this.editIngredientDescriptor \u003d new InventoryEditCommand.EditIngredientDescriptor(editIngredientDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"        List\u003cIngredient\u003e lastShownList \u003d model.getFilteredIngredientList();","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_INGREDIENT));","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"        Ingredient ingredientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"        Ingredient editedIngredient \u003d createEditedIngredient(ingredientToEdit, editIngredientDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"        InventoryCommandUtil.isValidIngredient(editedIngredient, model);","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"        if (!ingredientToEdit.isSame(editedIngredient) \u0026\u0026 model.hasIngredient(editedIngredient)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INGREDIENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"        model.setIngredient(ingredientToEdit, editedIngredient);","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INGREDIENT_SUCCESS, editedIngredient),","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"    private static Ingredient createEditedIngredient(Ingredient ingredientToEdit,","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"                                             InventoryEditCommand.EditIngredientDescriptor editIngredientDescriptor) {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"        assert ingredientToEdit !\u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"guanyz"},"content":"        String updatedName \u003d editIngredientDescriptor.getName().orElse(ingredientToEdit.getName());","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"guanyz"},"content":"        Integer updatedQuantity \u003d editIngredientDescriptor.getQuantity().orElse(ingredientToEdit.getQuantity());","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"guanyz"},"content":"        return new Ingredient(updatedName, updatedQuantity);","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"guanyz"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"guanyz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"guanyz"},"content":"        // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"guanyz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"guanyz"},"content":"            return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"guanyz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"guanyz"},"content":"        if (!(other instanceof InventoryEditCommand)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"guanyz"},"content":"            return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"guanyz"},"content":"        // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"guanyz"},"content":"        InventoryEditCommand e \u003d (InventoryEditCommand) other;","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"guanyz"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 editIngredientDescriptor.equals(e.editIngredientDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"guanyz"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"guanyz"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"guanyz"},"content":"    public static class EditIngredientDescriptor {","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"guanyz"},"content":"        private String name;","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"guanyz"},"content":"        private Integer quantity;","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"guanyz"},"content":"        public EditIngredientDescriptor() {}","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"guanyz"},"content":"        /**","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"guanyz"},"content":"         * Copy constructor.","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"guanyz"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"guanyz"},"content":"         */","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"guanyz"},"content":"        public EditIngredientDescriptor(InventoryEditCommand.EditIngredientDescriptor toCopy) {","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"guanyz"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"guanyz"},"content":"            setQuantity(toCopy.quantity);","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"guanyz"},"content":"        /**","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"guanyz"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"guanyz"},"content":"         */","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"guanyz"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"guanyz"},"content":"            return CollectionUtil.isAnyNonNull(name, quantity);","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"guanyz"},"content":"        public void setName(String name) {","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"guanyz"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"guanyz"},"content":"        public Optional\u003cString\u003e getName() {","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"guanyz"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"guanyz"},"content":"        public void setQuantity(Integer quantity) {","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"guanyz"},"content":"            this.quantity \u003d quantity;","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"guanyz"},"content":"        public Optional\u003cInteger\u003e getQuantity() {","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"guanyz"},"content":"            return Optional.ofNullable(quantity);","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"guanyz"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"guanyz"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"guanyz"},"content":"            // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"guanyz"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"guanyz"},"content":"                return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"guanyz"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"guanyz"},"content":"            if (!(other instanceof InventoryEditCommand.EditIngredientDescriptor)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"guanyz"},"content":"                return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"guanyz"},"content":"            // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"guanyz"},"content":"            InventoryEditCommand.EditIngredientDescriptor e \u003d (InventoryEditCommand.EditIngredientDescriptor) other;","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"guanyz"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"guanyz"},"content":"                    \u0026\u0026 getQuantity().equals(e.getQuantity());","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Sharptail":6,"guanyz":164}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.PredicateUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"public class InventoryFindCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds ingredients. \"","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"            + \"At least one prefix must be used. \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"            + \"n/ - Look for names that contain any of the keywords (case-insensitive) \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"            + \"q/ - Look for ingredients that have less than specified quantity \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"            + \"Parameters: n/[KEYWORD] (MORE_KEYWORDS)... q/[LESS THAN QUANTITY]\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/tomato q/4\";","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    private final Predicate\u003cIngredient\u003e predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"     * Construct command with a list of predicates to use","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"     * @param predicates list of predicates to use","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    public InventoryFindCommand(List\u003cPredicate\u003cIngredient\u003e\u003e predicates) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        assert predicates !\u003d null \u0026\u0026 predicates.size() \u003e 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        this.predicate \u003d PredicateUtil.composePredicates(predicates);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        model.updateFilteredIngredientList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"                String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"                        model.getFilteredIngredientList().size(),","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"                        Messages.ITEM_INGREDIENTS),","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"                CommandResult.CRtype.INGREDIENT);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof InventoryFindCommand // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 predicate.equals(((InventoryFindCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jamesleeht":54}},{"path":"src/main/java/seedu/address/logic/commands/inventory/InventoryListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" * Lists all ingredients in the inventory book to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class InventoryListCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all ingredients\";","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"        model.updateFilteredIngredientList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.INGREDIENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":5,"-":17,"IanCKW":2,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INGREDIENT;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":" * Adds a dish to the menu.","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"public class MenuAddCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"menu\";","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD + \": Adds a dish to the menu. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"            + PREFIX_PRICE + \"PRICE \"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"            + PREFIX_INGREDIENT + \"INGREDIENT_ID \"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \"INGREDIENT_QUANTITY \"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_INGREDIENT + \"INGREDIENT_ID \"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \"INGREDIENT_QUANTITY...]\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"            + PREFIX_NAME + \"Fries \"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"            + PREFIX_PRICE + \"5.10 \"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"            + PREFIX_INGREDIENT + \"2 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"            + PREFIX_QUANTITY + \"1\";","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New dish added: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"    private final String name;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"    private final double price;","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"    private final List\u003cPair\u003cIndex, Integer\u003e\u003e ingredientIdsQuantityList;","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"     * Creates an MenuAddCommand to add the specified {@code Dish}","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"    public MenuAddCommand(String name, double price,","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"                          List\u003cPair\u003cIndex, Integer\u003e\u003e ingredientIdsQuantityList) {","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"        this.ingredientIdsQuantityList \u003d ingredientIdsQuantityList;","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cIngredient, Integer\u003e\u003e ingredientQuantityList \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"                MenuCommandUtil.lookupIngredientIds(ingredientIdsQuantityList, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"        Dish toAdd \u003d new Dish(name, price, ingredientQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"        if (MenuCommandUtil.isValidDishAddition(toAdd, model)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"            model.addDish(toAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), CommandResult.CRtype.DISH);","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof MenuAddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 name.equals(((MenuAddCommand) other).name)","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 price \u003d\u003d ((MenuAddCommand) other).price","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 ingredientIdsQuantityList.equals(((MenuAddCommand) other).ingredientIdsQuantityList));","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":42,"guanyz":40,"IanCKW":1}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuCommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"public class MenuCommandUtil {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"This dish already exists in the menu\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_INGREDIENT_NOT_FOUND \u003d \"Ingredient in dish not found in the inventory\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"     * Checks whether a dish is a valid addition.","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"     * @param toAdd Candidate dish to be added.","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"     * @param model The model object.","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"     * @return True if the dish is a valid addition.","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"     * @throws CommandException If the dish is an invalid addition.","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"    public static boolean isValidDishAddition(Dish toAdd, Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"        if (model.hasDish(toAdd)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DISH);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"        return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"     * Looks up ingredients given a list of their IDs.","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"     * @param ingredientIdsList List of IDs to be looked up.","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"     * @param model The model object.","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"     * @return List of ingredients corresponding to the input IDs.","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"     * @throws CommandException If any input IDs are invalid.","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"    public static List\u003cPair\u003cIngredient, Integer\u003e\u003e lookupIngredientIds(","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"            List\u003cPair\u003cIndex, Integer\u003e\u003e ingredientIdsList,","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"            Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cIngredient, Integer\u003e\u003e ingredientQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"        for (Pair\u003cIndex, Integer\u003e ingredientPair : ingredientIdsList) {","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"            int ingredientId \u003d ingredientPair.getKey().getZeroBased();","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"            Integer ingredientQuantity \u003d ingredientPair.getValue();","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"kangtinglee"},"content":"            if (ingredientId \u003e\u003d model.getFilteredIngredientList().size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"                throw new CommandException(MESSAGE_INGREDIENT_NOT_FOUND);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"            Ingredient ingredient \u003d model.getIngredientByIndex(ingredientId);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"            Pair\u003cIngredient, Integer\u003e ingredientQuantityPair \u003d new Pair\u003c\u003e(ingredient, ingredientQuantity);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"            ingredientQuantityList.add(ingredientQuantityPair);","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"        return ingredientQuantityList;","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"kangtinglee":1,"guanyz":61}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" * Deletes a dish identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"public class MenuDeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"menu\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            + \": Deletes the dish identified by the index number used in the displayed menu.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_DISH_SUCCESS \u003d \"Deleted dish: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_DISH_FAILURE \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"            \"Failed to deleted dish: %1$s due to outstanding orders, \"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            + \"add -f flag to force delete the dish\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"            + \"Warning: This will mark any order that contains %1$s as \u0027Cancelled\u0027\";","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"kangtinglee"},"content":"    private final boolean isForce;","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public MenuDeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"kangtinglee"},"content":"        this(targetIndex, false);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"kangtinglee"},"content":"     * Delete dish given index and isForce flag","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"kangtinglee"},"content":"     * @param targetIndex index of dish to be deleted","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"kangtinglee"},"content":"     * @param isForce required to be true if there are outstanding orders that will also be cancelled","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"    public MenuDeleteCommand(Index targetIndex, boolean isForce) {","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"kangtinglee"},"content":"        this.isForce \u003d isForce;","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"kangtinglee"},"content":"        List\u003cDish\u003e lastShownList \u003d model.getFilteredDishList();","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"kangtinglee"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_DISH));","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"kangtinglee"},"content":"        Dish dishToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e outstandingOrders \u003d model.getIncompleteOrdersContainingDish(dishToDelete);","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"kangtinglee"},"content":"        boolean isOutstandingOrders \u003d !outstandingOrders.isEmpty();","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"kangtinglee"},"content":"        if (isOutstandingOrders \u0026\u0026 !isForce) {","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_DISH_FAILURE, dishToDelete.getName()));","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"kangtinglee"},"content":"        model.cancelOrders(outstandingOrders);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"kangtinglee"},"content":"        model.deleteDish(dishToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DISH_SUCCESS, dishToDelete),","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.DISH);","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof MenuDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((MenuDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":26,"Sharptail":55,"IanCKW":2,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INGREDIENT;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"public class MenuEditCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"    public static final String COMPONENT_WORD \u003d \"menu\";","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"            + \": Edits the details of the dish \"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"            + \"identified by the index number used in the displayed dish list. \"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_PRICE + \"PRICE] \"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_INGREDIENT + \"INGREDIENT_NUMBER] \"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_QUANTITY + \"INGREDIENT_QUANTITY]...\\n \"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"            + PREFIX_PRICE + \"4.20\";","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_EDIT_DISH_SUCCESS \u003d \"Edited Dish: %1$s\";","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"This dish already exists in the menu.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"    private final Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"    private final MenuEditCommand.EditDishDescriptor editDishDescriptor;","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"     * @param editDishDescriptor details to edit the person with","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"    public MenuEditCommand(Index index, MenuEditCommand.EditDishDescriptor editDishDescriptor) {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"        requireNonNull(editDishDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"        this.editDishDescriptor \u003d new MenuEditCommand.EditDishDescriptor(editDishDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"        List\u003cDish\u003e lastShownList \u003d model.getFilteredDishList();","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_DISH));","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"        Dish dishToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"        Dish editedDish \u003d createEditedDish(dishToEdit, editDishDescriptor, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"        if (!dishToEdit.isSame(editedDish) \u0026\u0026 model.hasDish(editedDish)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DISH);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"        model.setDish(dishToEdit, editedDish);","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_DISH_SUCCESS, editedDish),","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"guanyz"},"content":"    private static Dish createEditedDish(Dish dishToEdit,","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"guanyz"},"content":"                                         MenuEditCommand.EditDishDescriptor editDishDescriptor,","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"guanyz"},"content":"                                         Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"guanyz"},"content":"        assert dishToEdit !\u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"        String updatedName \u003d editDishDescriptor.getName().orElse(dishToEdit.getName());","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"guanyz"},"content":"        Double updatedPrice \u003d editDishDescriptor.getPrice().orElse(dishToEdit.getPrice());","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"guanyz"},"content":"        Optional\u003cList\u003cPair\u003cIndex, Integer\u003e\u003e\u003e updatedIngredientIdsQuantityListOptional \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"guanyz"},"content":"                editDishDescriptor.getIngredientIdsQuantityList();","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cIngredient, Integer\u003e\u003e updatedIngredientQuantityList;","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"guanyz"},"content":"        if (updatedIngredientIdsQuantityListOptional.isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"guanyz"},"content":"            updatedIngredientQuantityList \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":99,"author":{"gitId":"guanyz"},"content":"                     MenuCommandUtil.lookupIngredientIds(updatedIngredientIdsQuantityListOptional.get(), model);","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"guanyz"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"guanyz"},"content":"            updatedIngredientQuantityList \u003d dishToEdit.getIngredientQuantityList();","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"guanyz"},"content":"        assert updatedIngredientQuantityList !\u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"guanyz"},"content":"        Dish editedDish \u003d new Dish(updatedName, updatedPrice, updatedIngredientQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"guanyz"},"content":"        return editedDish;","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"guanyz"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"guanyz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"guanyz"},"content":"        // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"guanyz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"guanyz"},"content":"            return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"guanyz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"guanyz"},"content":"        if (!(other instanceof MenuEditCommand)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"guanyz"},"content":"            return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"guanyz"},"content":"        // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"guanyz"},"content":"        MenuEditCommand e \u003d (MenuEditCommand) other;","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"guanyz"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 editDishDescriptor.equals(e.editDishDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"guanyz"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"guanyz"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"guanyz"},"content":"    public static class EditDishDescriptor {","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"guanyz"},"content":"        private String name;","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"guanyz"},"content":"        private Double price;","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"guanyz"},"content":"        private List\u003cPair\u003cIndex, Integer\u003e\u003e ingredientIdsQuantityList;","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"guanyz"},"content":"        public EditDishDescriptor() {}","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"guanyz"},"content":"        /**","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"guanyz"},"content":"         * Copy constructor.","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"guanyz"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"guanyz"},"content":"         */","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"guanyz"},"content":"        public EditDishDescriptor(MenuEditCommand.EditDishDescriptor toCopy) {","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"guanyz"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"guanyz"},"content":"            setPrice(toCopy.price);","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"guanyz"},"content":"            setIngredientIdsQuantityList(toCopy.ingredientIdsQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"guanyz"},"content":"        /**","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"guanyz"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"guanyz"},"content":"         */","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"guanyz"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"guanyz"},"content":"            return CollectionUtil.isAnyNonNull(name, price, ingredientIdsQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"guanyz"},"content":"        public void setName(String name) {","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"guanyz"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"guanyz"},"content":"        public Optional\u003cString\u003e getName() {","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"guanyz"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"guanyz"},"content":"        public void setPrice(Double price) {","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"guanyz"},"content":"            this.price \u003d price;","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"guanyz"},"content":"        public Optional\u003cDouble\u003e getPrice() {","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"guanyz"},"content":"            return Optional.ofNullable(price);","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"guanyz"},"content":"        public void setIngredientIdsQuantityList(List\u003cPair\u003cIndex, Integer\u003e\u003e ingredientIdsQuantityList) {","lastModifiedDate":"2021-04-10"},{"lineNumber":174,"author":{"gitId":"guanyz"},"content":"            this.ingredientIdsQuantityList \u003d ingredientIdsQuantityList;","lastModifiedDate":"2021-04-01"},{"lineNumber":175,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":177,"author":{"gitId":"guanyz"},"content":"        public Optional\u003cList\u003cPair\u003cIndex, Integer\u003e\u003e\u003e getIngredientIdsQuantityList() {","lastModifiedDate":"2021-04-10"},{"lineNumber":178,"author":{"gitId":"guanyz"},"content":"            return Optional.ofNullable(ingredientIdsQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":179,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"guanyz"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"guanyz"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"guanyz"},"content":"            // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":184,"author":{"gitId":"guanyz"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"guanyz"},"content":"                return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":186,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"guanyz"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"guanyz"},"content":"            if (!(other instanceof MenuEditCommand.EditDishDescriptor)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"guanyz"},"content":"                return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"guanyz"},"content":"            // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":194,"author":{"gitId":"guanyz"},"content":"            MenuEditCommand.EditDishDescriptor e \u003d (MenuEditCommand.EditDishDescriptor) other;","lastModifiedDate":"2021-04-01"},{"lineNumber":195,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":196,"author":{"gitId":"guanyz"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-04-01"},{"lineNumber":197,"author":{"gitId":"guanyz"},"content":"                    \u0026\u0026 getPrice().equals(e.getPrice())","lastModifiedDate":"2021-04-01"},{"lineNumber":198,"author":{"gitId":"guanyz"},"content":"                    \u0026\u0026 getIngredientIdsQuantityList().equals(e.getIngredientIdsQuantityList());","lastModifiedDate":"2021-04-01"},{"lineNumber":199,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Sharptail":1,"guanyz":200}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.PredicateUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"public class MenuFindCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds dishes. \"","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"            + \"At least one prefix must be used. \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"            + \"n/ - Look for names that contain any of the keywords (case-insensitive) \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"            + \"i/ - Look for ingredients that contains a keyword (case-insensitive) \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"            + \"Parameters: n/[KEYWORD] (MORE_KEYWORDS)... i/[KEYWORD]\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/burger steak i/beef\";","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    private final Predicate\u003cDish\u003e predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"     * Construct command with a list of predicates to use","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"     * @param predicates list of predicates to use","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    public MenuFindCommand(List\u003cPredicate\u003cDish\u003e\u003e predicates) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        assert predicates !\u003d null \u0026\u0026 predicates.size() \u003e 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        this.predicate \u003d PredicateUtil.composePredicates(predicates);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        model.updateFilteredDishList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"                String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"                        model.getFilteredDishList().size(),","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"                        Messages.ITEM_DISHES),","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"                CommandResult.CRtype.DISH);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof MenuFindCommand // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 predicate.equals(((MenuFindCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jamesleeht":54}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuListAvailableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kangtinglee"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"kangtinglee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"kangtinglee"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"kangtinglee"},"content":" * Lists all dishes in the menu book that have sufficient ingredients to produce to the user.","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"kangtinglee"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"kangtinglee"},"content":"public class MenuListAvailableCommand extends MenuListCommand {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all available dishes\";","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"kangtinglee"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"kangtinglee"},"content":"        model.updateFilteredDishList(model.getAvailableDishPredicate());","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"kangtinglee"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.DISH);","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"kangtinglee"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"kangtinglee":21}},{"path":"src/main/java/seedu/address/logic/commands/menu/MenuListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" * Lists all dishes in the menu book to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class MenuListCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all dishes\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"kangtinglee"},"content":"        model.updateFilteredDishList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.DISH);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":1,"Sharptail":4,"-":17,"IanCKW":3,"jamesleeht":1}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":" * Adds a person to the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"public class OrderAddCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"order\";","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        + \" Adds an order to the order list. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"        + \"Parameters: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        + PREFIX_NAME + \"CUSTOMER_ID \"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"        + PREFIX_DATETIME + \"DELIVERY_DATETIME (DD-MM-YYYY HH:MM) \"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"        + \"[\" + PREFIX_DISH + \"DISH \"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"        + PREFIX_QUANTITY + \" QUANTITY]...\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"        + PREFIX_NAME + \"2 \"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"        + PREFIX_DATETIME + \"14-02-2021 18:30 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"        + PREFIX_DISH + \"1 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"        + PREFIX_QUANTITY + \"1 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"        + PREFIX_DISH + \"3 \"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"        + PREFIX_QUANTITY + \"1\";","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New order added: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"    private final Integer customerId;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"    private final List\u003cPair\u003cIndex, Integer\u003e\u003e dishNumberQuantityList;","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"    public OrderAddCommand(LocalDateTime dateTime, Integer customerId,","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"                           List\u003cPair\u003cIndex, Integer\u003e\u003e dishNumberQuantityList) {","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"        this.customerId \u003d customerId;","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"        this.dishNumberQuantityList \u003d dishNumberQuantityList;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"                OrderCommandUtil.lookupDishIds(dishNumberQuantityList, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"        Person customer \u003d OrderCommandUtil.getValidCustomerByOneIndex(customerId, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"        Order toAdd \u003d new Order(dateTime, customer, dishQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"kangtinglee"},"content":"        // isValidOrderAddition throws a CommandException and hence acts as a guard clause","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"kangtinglee"},"content":"        OrderCommandUtil.isValidOrderAddition(toAdd, model);","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"        model.addOrder(toAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"        model.decreaseIngredientByOrder(toAdd);","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(order -\u003e order.getState() \u003d\u003d Order.State.UNCOMPLETED);","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"IanCKW"},"content":"        Comparator\u003cOrder\u003e comparator \u003d (first, second) -\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"IanCKW"},"content":"                first.getDatetime().isAfter(second.getDatetime()) ? 1 : 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(comparator);","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), CommandResult.CRtype.ORDER);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof OrderAddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 dateTime.equals(((OrderAddCommand) other).dateTime)","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 customerId.equals(((OrderAddCommand) other).customerId)","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 dishNumberQuantityList.equals(((OrderAddCommand) other).dishNumberQuantityList));","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":2,"Sharptail":48,"guanyz":32,"IanCKW":10,"jamesleeht":1}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderCommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"public class OrderCommandUtil {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in the order list\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_CUSTOMER_INDEX_INVALID \u003d \"Invalid customer index!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_DISH_NOT_FOUND \u003d \"Dish in order not found on the menu\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"kangtinglee"},"content":"    private static final String MESSAGE_NOT_ENOUGH_INGREDIENTS_ORDER \u003d \"Insufficient inventory to fulfil order\";","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"     * Checks whether an order is a valid addition.","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"     * @param toAdd Candidate order to be added.","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"     * @param model The model object.","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"     * @return True if the order is a valid addition.","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"     * @throws CommandException If any parameters are invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"    public static boolean isValidOrderAddition(Order toAdd, Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"        if (model.hasOrder(toAdd)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"kangtinglee"},"content":"        if (!model.canFulfilOrder(toAdd)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"kangtinglee"},"content":"            throw new CommandException(MESSAGE_NOT_ENOUGH_INGREDIENTS_ORDER);","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"        return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"     * Looks up dishes given a list of their IDs.","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"     * @param dishNumberQuantityList List of IDs to be looked up.","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"     * @param model The model object.","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"     * @return List of dishes corresponding to the input IDs.","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"     * @throws CommandException If any input IDs are invalid.","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"    public static List\u003cPair\u003cDish, Integer\u003e\u003e lookupDishIds(List\u003cPair\u003cIndex, Integer\u003e\u003e dishNumberQuantityList,","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"                                                          Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"        for (Pair\u003cIndex, Integer\u003e dishIdPair : dishNumberQuantityList) {","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"            Integer dishId \u003d dishIdPair.getKey().getZeroBased();","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"            Integer dishQuantity \u003d dishIdPair.getValue();","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"            if (dishId \u003e\u003d model.getFilteredDishList().size()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"                throw new CommandException(MESSAGE_DISH_NOT_FOUND);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"            Dish dish \u003d model.getDishByIndex(dishId);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"            Pair\u003cDish, Integer\u003e dishQuantityPair \u003d new Pair\u003c\u003e(dish, dishQuantity);","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"            dishQuantityList.add(dishQuantityPair);","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"        return dishQuantityList;","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"    public static Person getValidCustomerByOneIndex(int customerId, Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"        int customerIndex \u003d Index.fromOneBased(customerId).getZeroBased();","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"        if (customerIndex \u003e\u003d model.getFilteredPersonList().size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_CUSTOMER_INDEX_INVALID);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"        Person customer \u003d model.getPersonByIndex(customerIndex);","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"        return customer;","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"kangtinglee":5,"guanyz":75}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderCompleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"public class OrderCompleteCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"    public static final String COMPONENT_WORD \u003d \"order\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"    public static final String COMMAND_WORD \u003d \"complete\";","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"            + \": Completes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_COMPLETE_ORDER_SUCCESS \u003d \"Completed order: %1$s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    public OrderCompleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(order -\u003e order.getState() \u003d\u003d Order.State.UNCOMPLETED);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_ORDER));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"        Order orderToComplete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"        Order completedOrder \u003d orderToComplete.setState(Order.State.COMPLETED);","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"        model.setOrder(orderToComplete, completedOrder);","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(order -\u003e order.getState() \u003d\u003d Order.State.UNCOMPLETED);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_COMPLETE_ORDER_SUCCESS, orderToComplete),","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.ORDER);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"                || (other instanceof OrderCompleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 targetIndex.equals(((OrderCompleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"IanCKW":61}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"public class OrderDeleteCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"order\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            + \": Deletes the order identified by the index number used in the displayed order list.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_DELETE_ORDER_SUCCESS \u003d \"Deleted order: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    public OrderDeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(order -\u003e order.getState() \u003d\u003d Order.State.UNCOMPLETED);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"            throw new CommandException(","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_ORDER));","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"kangtinglee"},"content":"        Order orderToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"        model.deleteOrder(orderToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        model.increaseIngredientByOrder(orderToDelete);","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(order -\u003e order.getState() \u003d\u003d Order.State.UNCOMPLETED);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ORDER_SUCCESS, orderToDelete),","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"                CommandResult.CRtype.ORDER);","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"                || (other instanceof OrderDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 targetIndex.equals(((OrderDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":8,"Sharptail":46,"IanCKW":6,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"public class OrderEditCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"    public static final String COMPONENT_WORD \u003d \"order\";","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_USAGE \u003d COMPONENT_WORD + \" \" + COMMAND_WORD","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"            + \": Edits the details of the order \"","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"            + \"identified by the index number used in the displayed order list. \"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_DATETIME + \"DELIVERY_DATETIME (DD-MM-YYYY HH:MM)] \"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_DISH + \"DISH_NUMBER] \"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"            + \"[\" + PREFIX_QUANTITY + \"INGREDIENT_QUANTITY]...\\n \"","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"            + \"Example: \" + COMPONENT_WORD + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"            + PREFIX_DATETIME + \"14-02-2021 18:30\";","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_EDIT_ORDER_SUCCESS \u003d \"Edited Order: %1$s\";","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_DUPLICATE_ORDER \u003d \"This order already exists in the order.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_NOT_UNCOMPLETED_ORDER \u003d \"This order is not uncompleted. It cannot be modified\";","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"    private final Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"    private final OrderEditCommand.EditOrderDescriptor editOrderDescriptor;","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"     * @param editOrderDescriptor details to edit the person with","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"    public OrderEditCommand(Index index, OrderEditCommand.EditOrderDescriptor editOrderDescriptor) {","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"        requireNonNull(editOrderDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"        this.editOrderDescriptor \u003d new OrderEditCommand.EditOrderDescriptor(editOrderDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"        // You can only edit orders that are uncompleted.","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(order -\u003e order.getState() \u003d\u003d Order.State.UNCOMPLETED);","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"IanCKW"},"content":"        List\u003cOrder\u003e lastShownList \u003d model.getFilteredOrderList();","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"                    String.format(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_ORDER));","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"        Order orderToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"IanCKW"},"content":"        if (orderToEdit.getState() !\u003d Order.State.UNCOMPLETED) {","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"IanCKW"},"content":"            throw new CommandException(MESSAGE_NOT_UNCOMPLETED_ORDER);","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"guanyz"},"content":"        Order editedOrder \u003d createEditedOrder(orderToEdit, editOrderDescriptor, model);","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"        if (!orderToEdit.isSame(editedOrder) \u0026\u0026 model.hasOrder(editedOrder)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ORDER);","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"kangtinglee"},"content":"        model.deleteOrder(orderToEdit);","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"kangtinglee"},"content":"        model.increaseIngredientByOrder(orderToEdit);","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"kangtinglee"},"content":"        try {","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"kangtinglee"},"content":"            // isValidOrderAddition throws a command exception and acts as a guard clause","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"kangtinglee"},"content":"            OrderCommandUtil.isValidOrderAddition(editedOrder, model);","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"kangtinglee"},"content":"            model.addOrder(editedOrder);","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"kangtinglee"},"content":"            model.decreaseIngredientByOrder(editedOrder);","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"kangtinglee"},"content":"        } catch (CommandException exception) {","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"kangtinglee"},"content":"            model.addOrder(orderToEdit);","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"kangtinglee"},"content":"            model.decreaseIngredientByOrder(orderToEdit);","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"kangtinglee"},"content":"            throw exception;","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"guanyz"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ORDER_SUCCESS, editedOrder),","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"guanyz"},"content":"                CommandResult.CRtype.PERSON);","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":102,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":103,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"guanyz"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"guanyz"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"guanyz"},"content":"    private static Order createEditedOrder(Order orderToEdit,","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"guanyz"},"content":"                                         OrderEditCommand.EditOrderDescriptor editOrderDescriptor,","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"guanyz"},"content":"                                         Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"guanyz"},"content":"        assert orderToEdit !\u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"guanyz"},"content":"        Optional\u003cInteger\u003e updatedCustomerIdOptional \u003d editOrderDescriptor.getCustomerId();","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"guanyz"},"content":"        Person updatedCustomer;","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"guanyz"},"content":"        if (updatedCustomerIdOptional.isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"guanyz"},"content":"            updatedCustomer \u003d OrderCommandUtil.getValidCustomerByOneIndex(updatedCustomerIdOptional.get(), model);","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"guanyz"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"guanyz"},"content":"            updatedCustomer \u003d orderToEdit.getCustomer();","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"guanyz"},"content":"        assert updatedCustomer !\u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"guanyz"},"content":"        LocalDateTime updatedDateTime \u003d editOrderDescriptor.getDateTime().orElse(orderToEdit.getDatetime());","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"guanyz"},"content":"        Optional\u003cList\u003cPair\u003cIndex, Integer\u003e\u003e\u003e updatedDishIdsQuantityListOptional \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":126,"author":{"gitId":"guanyz"},"content":"                editOrderDescriptor.getDishIdsQuantityList();","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cDish, Integer\u003e\u003e updatedDishQuantityList;","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"guanyz"},"content":"        if (updatedDishIdsQuantityListOptional.isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"guanyz"},"content":"            updatedDishQuantityList \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"guanyz"},"content":"                    OrderCommandUtil.lookupDishIds(updatedDishIdsQuantityListOptional.get(), model);","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"guanyz"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"guanyz"},"content":"            updatedDishQuantityList \u003d orderToEdit.getDishQuantityList();","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"guanyz"},"content":"        assert updatedDishQuantityList !\u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"guanyz"},"content":"        Order editedOrder \u003d new Order(updatedDateTime, updatedCustomer, updatedDishQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"guanyz"},"content":"        return editedOrder;","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"guanyz"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"guanyz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"guanyz"},"content":"        // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"guanyz"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"guanyz"},"content":"            return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"guanyz"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"guanyz"},"content":"        if (!(other instanceof OrderEditCommand)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"guanyz"},"content":"            return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"guanyz"},"content":"        // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"guanyz"},"content":"        OrderEditCommand e \u003d (OrderEditCommand) other;","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"guanyz"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 editOrderDescriptor.equals(e.editOrderDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"guanyz"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"guanyz"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"guanyz"},"content":"    public static class EditOrderDescriptor {","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"guanyz"},"content":"        private Integer customerId;","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"guanyz"},"content":"        private LocalDateTime dateTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"guanyz"},"content":"        private List\u003cPair\u003cIndex, Integer\u003e\u003e dishIdsQuantityList;","lastModifiedDate":"2021-04-10"},{"lineNumber":169,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"guanyz"},"content":"        public EditOrderDescriptor() {}","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"guanyz"},"content":"        /**","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"guanyz"},"content":"         * Copy constructor.","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"guanyz"},"content":"         */","lastModifiedDate":"2021-04-01"},{"lineNumber":175,"author":{"gitId":"guanyz"},"content":"        public EditOrderDescriptor(OrderEditCommand.EditOrderDescriptor toCopy) {","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"guanyz"},"content":"            setCustomerId(toCopy.customerId);","lastModifiedDate":"2021-04-01"},{"lineNumber":177,"author":{"gitId":"guanyz"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2021-04-01"},{"lineNumber":178,"author":{"gitId":"guanyz"},"content":"            setDishIdsQuantityList(toCopy.dishIdsQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":179,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"guanyz"},"content":"        /**","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"guanyz"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"guanyz"},"content":"         */","lastModifiedDate":"2021-04-01"},{"lineNumber":184,"author":{"gitId":"guanyz"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"guanyz"},"content":"            return CollectionUtil.isAnyNonNull(customerId, dateTime, dishIdsQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":186,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"guanyz"},"content":"        public void setCustomerId(Integer customerId) {","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"guanyz"},"content":"            this.customerId \u003d customerId;","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"guanyz"},"content":"        public Optional\u003cInteger\u003e getCustomerId() {","lastModifiedDate":"2021-04-01"},{"lineNumber":193,"author":{"gitId":"guanyz"},"content":"            return Optional.ofNullable(customerId);","lastModifiedDate":"2021-04-01"},{"lineNumber":194,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":195,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":196,"author":{"gitId":"guanyz"},"content":"        public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-04-01"},{"lineNumber":197,"author":{"gitId":"guanyz"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":198,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":199,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"guanyz"},"content":"        public Optional\u003cLocalDateTime\u003e getDateTime() {","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"guanyz"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2021-04-01"},{"lineNumber":202,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":203,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":204,"author":{"gitId":"guanyz"},"content":"        public void setDishIdsQuantityList(List\u003cPair\u003cIndex, Integer\u003e\u003e ingredientIdsQuantityList) {","lastModifiedDate":"2021-04-10"},{"lineNumber":205,"author":{"gitId":"guanyz"},"content":"            this.dishIdsQuantityList \u003d ingredientIdsQuantityList;","lastModifiedDate":"2021-04-01"},{"lineNumber":206,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":207,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":208,"author":{"gitId":"guanyz"},"content":"        public Optional\u003cList\u003cPair\u003cIndex, Integer\u003e\u003e\u003e getDishIdsQuantityList() {","lastModifiedDate":"2021-04-10"},{"lineNumber":209,"author":{"gitId":"guanyz"},"content":"            return Optional.ofNullable(dishIdsQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":211,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":212,"author":{"gitId":"guanyz"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":213,"author":{"gitId":"guanyz"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":214,"author":{"gitId":"guanyz"},"content":"            // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":215,"author":{"gitId":"guanyz"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-04-01"},{"lineNumber":216,"author":{"gitId":"guanyz"},"content":"                return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":217,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":218,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":219,"author":{"gitId":"guanyz"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":220,"author":{"gitId":"guanyz"},"content":"            if (!(other instanceof OrderEditCommand.EditOrderDescriptor)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":221,"author":{"gitId":"guanyz"},"content":"                return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":222,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":223,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":224,"author":{"gitId":"guanyz"},"content":"            // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":225,"author":{"gitId":"guanyz"},"content":"            OrderEditCommand.EditOrderDescriptor e \u003d (OrderEditCommand.EditOrderDescriptor) other;","lastModifiedDate":"2021-04-01"},{"lineNumber":226,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":227,"author":{"gitId":"guanyz"},"content":"            return getCustomerId().equals(e.getCustomerId())","lastModifiedDate":"2021-04-01"},{"lineNumber":228,"author":{"gitId":"guanyz"},"content":"                    \u0026\u0026 getDateTime().equals(e.getDateTime())","lastModifiedDate":"2021-04-01"},{"lineNumber":229,"author":{"gitId":"guanyz"},"content":"                    \u0026\u0026 getDishIdsQuantityList().equals(e.getDishIdsQuantityList());","lastModifiedDate":"2021-04-01"},{"lineNumber":230,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":231,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":232,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"kangtinglee":15,"Sharptail":1,"guanyz":209,"IanCKW":7}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.PredicateUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"public class OrderFindCommand extends Command {","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds orders. \"","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"            + \"At least one prefix must be used. \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"            + \"n/ - Look for customer names that contain any of the keywords (case-insensitive) \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"            + \"d/ - Look for dish names that contain keyword (case-insensitive) \\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"            + \"Parameters: n/[KEYWORD] (MORE_KEYWORDS)... d/[KEYWORD]\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alex sally d/burger\";","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    private final Predicate\u003cOrder\u003e predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"     * Constructs order command based on a list of predicates","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"     * @param predicates","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    public OrderFindCommand(List\u003cPredicate\u003cOrder\u003e\u003e predicates) {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        assert predicates !\u003d null \u0026\u0026 predicates.size() \u003e 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        this.predicate \u003d PredicateUtil.composePredicates(predicates);","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        model.updateFilteredOrderList(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        return new CommandResult(","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"                String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW,","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"                        model.getFilteredOrderList().size(),","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"                        Messages.ITEM_ORDERS),","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"                CommandResult.CRtype.ORDER);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof OrderFindCommand // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 predicate.equals(((OrderFindCommand) other).predicate)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"IanCKW":4,"jamesleeht":50}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderHistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" * Lists all orders to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"public class OrderHistoryCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"    public static final String COMMAND_WORD \u003d \"history\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all history\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(order -\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"                order.getState() \u003d\u003d Order.State.COMPLETED || order.getState() \u003d\u003d Order.State.CANCELLED);","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.ORDER);","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"IanCKW":26}},{"path":"src/main/java/seedu/address/logic/commands/order/OrderListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":" * Lists all orders to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"public class OrderListCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all orders\";","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"        Comparator\u003cOrder\u003e comparator \u003d (first, second) -\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"                first.getDatetime().isAfter(second.getDatetime()) ? 1 : 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(comparator);","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"        model.updateFilteredOrderList(order -\u003e order.getState() \u003d\u003d Order.State.UNCOMPLETED);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.CRtype.ORDER);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Sharptail":4,"-":17,"IanCKW":11}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"    public static final Prefix PREFIX_QUANTITY \u003d new Prefix(\"q/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"    public static final Prefix PREFIX_DATETIME \u003d new Prefix(\"dt/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"    public static final Prefix PREFIX_DISH \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"    public static final Prefix PREFIX_INGREDIENT \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"kangtinglee"},"content":"    public static final Prefix PREFIX_FORCE_DELETE \u003d new Prefix(\"-f\");","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"kangtinglee"},"content":"    public static final Prefix PREFIX_ALL \u003d new Prefix(\"-a\");","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kangtinglee":2,"-":14,"guanyz":5}},{"path":"src/main/java/seedu/address/logic/parser/JJIMYParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.CustomerParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.InventoryParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.MenuParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.OrderParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":" * Parses user input.","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"public class JJIMYParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     * Used for initial separation of component word and args.","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    private static final Pattern BASIC_COMPO_FORMAT \u003d Pattern.compile(\"(?\u003ccompoWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(JJIMYParser.class);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public Command parseCompo(String userInput) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMPO_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        final String compoWord \u003d matcher.group(\"compoWord\");","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMPONENT \u003d \" + compoWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        switch (compoWord) {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        case CustomerParser.COMPONENT_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"            return new CustomerParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        case OrderParser.COMPONENT_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"            return new OrderParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        case InventoryParser.COMPONENT_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"            return new InventoryParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        case MenuParser.COMPONENT_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"            return new MenuParser().parseCommand(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"        default:","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"kangtinglee"},"content":"            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":1,"Sharptail":70,"jamesleeht":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ERROR MESSAGES \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_INVALID_NAME \u003d \"Invalid name specified.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_INVALID_PHONE \u003d \"Invalid phone number specified.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_INVALID_EMAIL \u003d \"Invalid email address specified.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_INVALID_ADDRESS \u003d \"Invalid address specified.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_INVALID_INGREDIENT \u003d \"Invalid ingredient name specified.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_INVALID_DISH \u003d \"Invalid dish name specified.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_INVALID_NONNEGATIVE_INT \u003d \"Non-negative integer must be specified.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_INVALID_PRICE \u003d \"Price must be a non-negative double.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_NO_KEYWORD \u003d \"No keyword specified.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_NO_KEYWORDS \u003d \"No keywords specified.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"    public static final String MESSAGE_MISMATCHED_LISTS \u003d \"Argument lists are different lengths.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d REGEXES \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"    // Name validation: name cannot start with whitespace, or \" \" can be a valid name.","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"    public static final String VALID_NAME_REGEX \u003d \"[^ ].*\";","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"    // Phone validation: must contain numerical characters only.","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"    public static final String VALID_PHONE_REGEX \u003d \"[0-9]*\";","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"    // Email address validation: must conform to the form local-part@domain","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"    // Assumes IP addresses are not used as domain portion","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"    // Local part contains alphanumeric characters and special characters","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"    // Domain\u0027s first character can be word characters, except underscore","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\";","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"    // Domain\u0027s middle characters can be alphanumeric characters, period, and hyphen","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\";","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"    // Domain\u0027s last character must be word characters, except underscore","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"    public static final String VALID_EMAIL_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"    // Address validation: address cannot start with whitespace, or \" \" can be a valid address.","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"    public static final String VALID_ADDRESS_REGEX \u003d \"[^ ].*\";","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"    // Ingredient name validation: ingredient name cannot start with whitespace, or \" \" can be a valid ingredient name.","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"    public static final String VALID_INGREDIENT_REGEX \u003d \"[^ ].*\";","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"    // Dish name validation: dish name cannot start with whitespace, or \" \" can be a valid dish name.","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"    public static final String VALID_DISH_REGEX \u003d \"[^ ].*\";","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GENERAL \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     * Parse non-negative integer from String.","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"     * @throws ParseException if specified string is not a positive int.","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    public static Integer parseNonNegativeInt(String toParse) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        String trimmedToParse \u003d toParse.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        if (!StringUtil.isNonNegativeInt(trimmedToParse)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MESSAGE_INVALID_NONNEGATIVE_INT);","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        return Integer.valueOf(trimmedToParse);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"guanyz"},"content":"     * Parses a single keyword.","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"     * @throws ParseException if specified string is empty.","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"    public static String parseKeyword(String keyword) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"        String trimmedKeyword \u003d keyword.trim();","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        if (trimmedKeyword.isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"            throw new ParseException(MESSAGE_NO_KEYWORD);","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"        return trimmedKeyword;","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"guanyz"},"content":"     * Parses space-separated keywords.","lastModifiedDate":"2021-04-10"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"     * @throws ParseException if specified string is empty.","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"    public static List\u003cString\u003e parseKeywords(String keywords) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"        String trimmedKeywords \u003d keywords.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"        if (trimmedKeywords.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"            throw new ParseException(MESSAGE_NO_KEYWORDS);","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"        return Arrays.asList(trimmedKeywords.split(\"\\\\s+\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":107,"author":{"gitId":"guanyz"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"guanyz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-04-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"guanyz"},"content":"    public static void validateListLengths(List listA, List listB) throws ParseException {","lastModifiedDate":"2021-04-10"},{"lineNumber":120,"author":{"gitId":"guanyz"},"content":"        requireNonNull(listA);","lastModifiedDate":"2021-04-10"},{"lineNumber":121,"author":{"gitId":"guanyz"},"content":"        requireNonNull(listB);","lastModifiedDate":"2021-04-10"},{"lineNumber":122,"author":{"gitId":"guanyz"},"content":"        if (listA.size() !\u003d listB.size()) {","lastModifiedDate":"2021-04-10"},{"lineNumber":123,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MESSAGE_MISMATCHED_LISTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":124,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":125,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":126,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":127,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":128,"author":{"gitId":"guanyz"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-04-10"},{"lineNumber":129,"author":{"gitId":"guanyz"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-04-10"},{"lineNumber":130,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":131,"author":{"gitId":"guanyz"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-04-10"},{"lineNumber":132,"author":{"gitId":"guanyz"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-04-10"},{"lineNumber":133,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":134,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":135,"author":{"gitId":"guanyz"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PERSON \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":136,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":143,"author":{"gitId":"jamesleeht"},"content":"    public static String parseName(String name) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":146,"author":{"gitId":"guanyz"},"content":"        if (!trimmedName.matches(VALID_NAME_REGEX)) {","lastModifiedDate":"2021-04-10"},{"lineNumber":147,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MESSAGE_INVALID_NAME);","lastModifiedDate":"2021-04-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":149,"author":{"gitId":"jamesleeht"},"content":"        return trimmedName;","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"jamesleeht"},"content":"    public static String parsePhone(String phone) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"guanyz"},"content":"        if (!trimmedPhone.matches(VALID_PHONE_REGEX)) {","lastModifiedDate":"2021-04-10"},{"lineNumber":162,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MESSAGE_INVALID_PHONE);","lastModifiedDate":"2021-04-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":164,"author":{"gitId":"jamesleeht"},"content":"        return trimmedPhone;","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"    public static String parseAddress(String address) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"guanyz"},"content":"        if (!trimmedAddress.matches(VALID_ADDRESS_REGEX)) {","lastModifiedDate":"2021-04-10"},{"lineNumber":177,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MESSAGE_INVALID_ADDRESS);","lastModifiedDate":"2021-04-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":179,"author":{"gitId":"jamesleeht"},"content":"        return trimmedAddress;","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"jamesleeht"},"content":"    public static String parseEmail(String email) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":191,"author":{"gitId":"guanyz"},"content":"        // Convert email to lowercase, just in case","lastModifiedDate":"2021-04-10"},{"lineNumber":192,"author":{"gitId":"guanyz"},"content":"        String trimmedEmail \u003d email.toLowerCase().trim();","lastModifiedDate":"2021-04-10"},{"lineNumber":193,"author":{"gitId":"guanyz"},"content":"        if (!trimmedEmail.matches(VALID_EMAIL_REGEX)) {","lastModifiedDate":"2021-04-10"},{"lineNumber":194,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MESSAGE_INVALID_EMAIL);","lastModifiedDate":"2021-04-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":196,"author":{"gitId":"jamesleeht"},"content":"        return trimmedEmail;","lastModifiedDate":"2021-03-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"jamesleeht"},"content":"    public static String parseTag(String tag) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"jamesleeht"},"content":"        return trimmedTag;","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":214,"author":{"gitId":"jamesleeht"},"content":"    public static List\u003cString\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":216,"author":{"gitId":"jamesleeht"},"content":"        return new ArrayList\u003c\u003e(tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":218,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"guanyz"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d INGREDIENT \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":220,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":221,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"guanyz"},"content":"     * Parses a {@code String ingredientName}.","lastModifiedDate":"2021-04-10"},{"lineNumber":223,"author":{"gitId":"guanyz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-04-10"},{"lineNumber":224,"author":{"gitId":"guanyz"},"content":"     *","lastModifiedDate":"2021-04-10"},{"lineNumber":225,"author":{"gitId":"guanyz"},"content":"     * @throws ParseException if the given {@code ingredientName} is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":226,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"guanyz"},"content":"    public static String parseIngredientName(String ingredientName) throws ParseException {","lastModifiedDate":"2021-04-10"},{"lineNumber":228,"author":{"gitId":"guanyz"},"content":"        requireNonNull(ingredientName);","lastModifiedDate":"2021-04-10"},{"lineNumber":229,"author":{"gitId":"guanyz"},"content":"        String trimmedIngredientName \u003d ingredientName.trim();","lastModifiedDate":"2021-04-10"},{"lineNumber":230,"author":{"gitId":"guanyz"},"content":"        if (!trimmedIngredientName.matches(VALID_INGREDIENT_REGEX)) {","lastModifiedDate":"2021-04-10"},{"lineNumber":231,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MESSAGE_INVALID_INGREDIENT);","lastModifiedDate":"2021-04-10"},{"lineNumber":232,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"guanyz"},"content":"        return trimmedIngredientName;","lastModifiedDate":"2021-04-10"},{"lineNumber":234,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":235,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":236,"author":{"gitId":"guanyz"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DISH \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":237,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":238,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":239,"author":{"gitId":"guanyz"},"content":"     * Parses a {@code String dishName}.","lastModifiedDate":"2021-04-10"},{"lineNumber":240,"author":{"gitId":"guanyz"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-04-10"},{"lineNumber":241,"author":{"gitId":"guanyz"},"content":"     *","lastModifiedDate":"2021-04-10"},{"lineNumber":242,"author":{"gitId":"guanyz"},"content":"     * @throws ParseException if the given {@code dishName} is invalid.","lastModifiedDate":"2021-04-10"},{"lineNumber":243,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":244,"author":{"gitId":"guanyz"},"content":"    public static String parseDishName(String dishName) throws ParseException {","lastModifiedDate":"2021-04-10"},{"lineNumber":245,"author":{"gitId":"guanyz"},"content":"        requireNonNull(dishName);","lastModifiedDate":"2021-04-10"},{"lineNumber":246,"author":{"gitId":"guanyz"},"content":"        String trimmedDishName \u003d dishName.trim();","lastModifiedDate":"2021-04-10"},{"lineNumber":247,"author":{"gitId":"guanyz"},"content":"        if (!trimmedDishName.matches(VALID_DISH_REGEX)) {","lastModifiedDate":"2021-04-10"},{"lineNumber":248,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MESSAGE_INVALID_DISH);","lastModifiedDate":"2021-04-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":250,"author":{"gitId":"guanyz"},"content":"        return trimmedDishName;","lastModifiedDate":"2021-04-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":252,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":253,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":254,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":255,"author":{"gitId":"guanyz"},"content":"     * Parse non-negative double from String.","lastModifiedDate":"2021-04-10"},{"lineNumber":256,"author":{"gitId":"guanyz"},"content":"     * @throws ParseException if specified string is not a positive double.","lastModifiedDate":"2021-04-10"},{"lineNumber":257,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":258,"author":{"gitId":"guanyz"},"content":"    public static Double parsePrice(String price) throws ParseException {","lastModifiedDate":"2021-04-10"},{"lineNumber":259,"author":{"gitId":"guanyz"},"content":"        String trimmedToParse \u003d price.trim();","lastModifiedDate":"2021-04-10"},{"lineNumber":260,"author":{"gitId":"guanyz"},"content":"        if (!StringUtil.isNonNegativeDouble(trimmedToParse)) {","lastModifiedDate":"2021-04-10"},{"lineNumber":261,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MESSAGE_INVALID_PRICE);","lastModifiedDate":"2021-04-10"},{"lineNumber":262,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-10"},{"lineNumber":263,"author":{"gitId":"guanyz"},"content":"        return Double.valueOf(trimmedToParse);","lastModifiedDate":"2021-04-10"},{"lineNumber":264,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":265,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":266,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":91,"guanyz":123,"jamesleeht":53}},{"path":"src/main/java/seedu/address/logic/parser/commands/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Sharptail":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/commands/customer/CustomerAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommandParser implements Parser\u003cCustomerAddCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public CustomerAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        String name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        String phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        String email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        String address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        List\u003cString\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        return new CustomerAddCommand(person);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Sharptail":10,"-":32,"guanyz":1,"jamesleeht":6}},{"path":"src/main/java/seedu/address/logic/parser/commands/customer/CustomerDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"kangtinglee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE_DELETE;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"public class CustomerDeleteCommandParser implements Parser\u003cCustomerDeleteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public CustomerDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"kangtinglee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_FORCE_DELETE);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"kangtinglee"},"content":"            if (argMultimap.getValue(PREFIX_FORCE_DELETE).isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"kangtinglee"},"content":"                return new CustomerDeleteCommand(index, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"kangtinglee"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"kangtinglee"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"kangtinglee"},"content":"                return new CustomerDeleteCommand(index, true);","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kangtinglee":12,"Sharptail":7,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/commands/customer/CustomerEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"public class CustomerEditCommandParser implements Parser\u003cCustomerEditCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    public CustomerEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"                    CustomerEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(CustomerEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"        return new CustomerEditCommand(index, editPersonDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"    private Optional\u003cList\u003cString\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":13,"-":71,"jamesleeht":3}},{"path":"src/main/java/seedu/address/logic/parser/commands/customer/CustomerFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"public class CustomerFindCommandParser implements Parser\u003cCustomerFindCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    public CustomerFindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME);","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                    CustomerFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cString\u003e nameArgs \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        if (nameArgs.isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"            try {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"                keywords \u003d ParserUtil.parseKeywords(nameArgs.get());","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"                        CustomerFindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        return new CustomerFindCommand(new PersonNameContainsWordsPredicate(keywords));","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":4,"-":20,"jamesleeht":26}},{"path":"src/main/java/seedu/address/logic/parser/commands/inventory/InventoryAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.inventory.InventoryAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"public class InventoryAddCommandParser implements Parser\u003cInventoryAddCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    public InventoryAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_QUANTITY);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_QUANTITY)","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, InventoryAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        String name \u003d ParserUtil.parseIngredientName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"        int quantity \u003d ParserUtil.parseNonNegativeInt(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"        Ingredient ingredient \u003d new Ingredient(name, quantity);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        return new InventoryAddCommand(ingredient);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":25,"guanyz":16}},{"path":"src/main/java/seedu/address/logic/parser/commands/inventory/InventoryDecreaseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.inventory;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.inventory.InventoryDecreaseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":" * Parses input arguments and creates a new InventoryDecreaseCommand object","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"public class InventoryDecreaseCommandParser implements Parser\u003cInventoryDecreaseCommand\u003e {","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public InventoryDecreaseCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_QUANTITY);","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        try {","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"            int quantity \u003d ParserUtil.parseNonNegativeInt(argMultimap.getValue(PREFIX_QUANTITY).get());","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"            return new InventoryDecreaseCommand(index, quantity);","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            throw new ParseException(","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, InventoryDecreaseCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"Sharptail":35,"guanyz":1}},{"path":"src/main/java/seedu/address/logic/parser/commands/inventory/InventoryDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.inventory;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE_DELETE;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.inventory.InventoryDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"public class InventoryDeleteCommandParser implements Parser\u003cInventoryDeleteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public InventoryDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_FORCE_DELETE);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            if (argMultimap.getValue(PREFIX_FORCE_DELETE).isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"                return new InventoryDeleteCommand(index, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"                return new InventoryDeleteCommand(index, true);","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, InventoryDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":17,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/commands/inventory/InventoryEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.parser.commands.inventory;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.inventory.InventoryEditCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"public class InventoryEditCommandParser {","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"    public InventoryEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_QUANTITY);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"        Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"kangtinglee"},"content":"                    InventoryEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"        InventoryEditCommand.EditIngredientDescriptor editIngredientDescriptor \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"                new InventoryEditCommand.EditIngredientDescriptor();","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"            editIngredientDescriptor.setName(","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"                    ParserUtil.parseIngredientName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"        if (argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"            editIngredientDescriptor.setQuantity(","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"                    ParserUtil.parseNonNegativeInt(argMultimap.getValue(PREFIX_QUANTITY).get()));","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"        if (!editIngredientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(InventoryEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"        return new InventoryEditCommand(index, editIngredientDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"kangtinglee":1,"guanyz":52}},{"path":"src/main/java/seedu/address/logic/parser/commands/inventory/InventoryFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.logic.parser.commands.inventory;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryFindCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientQuantityLessThanPredicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"public class InventoryFindCommandParser implements Parser\u003cInventoryFindCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    public InventoryFindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_QUANTITY);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        boolean namePresent \u003d ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME);","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        boolean quantityPresent \u003d ParserUtil.arePrefixesPresent(argMultimap, PREFIX_QUANTITY);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        if (!namePresent \u0026\u0026 !quantityPresent) {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"                    InventoryFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        List\u003cPredicate\u003cIngredient\u003e\u003e predicates \u003d getPredicates(argMultimap);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        return new InventoryFindCommand(predicates);","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cPredicate\u003cIngredient\u003e\u003e getPredicates(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        List\u003cPredicate\u003cIngredient\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cString\u003e nameArgs \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cString\u003e quantityArg \u003d argMultimap.getValue(PREFIX_QUANTITY);","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        if (nameArgs.isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"            try {","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"                keywords \u003d ParserUtil.parseKeywords(nameArgs.get());","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"                        InventoryFindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            predicates.add(new IngredientNameContainsWordsPredicate(keywords));","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        if (quantityArg.isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"            int quantity;","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"            try {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"                quantity \u003d ParserUtil.parseNonNegativeInt(quantityArg.get());","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"                        InventoryFindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"            predicates.add(new IngredientQuantityLessThanPredicate(quantity));","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"        return predicates;","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jamesleeht":76}},{"path":"src/main/java/seedu/address/logic/parser/commands/menu/MenuAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INGREDIENT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":" * Parses input arguments and creates a new MenuAddCommand object","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"public class MenuAddCommandParser implements Parser\u003cMenuAddCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public MenuAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE, PREFIX_INGREDIENT, PREFIX_QUANTITY);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PRICE, PREFIX_INGREDIENT, PREFIX_QUANTITY)","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MenuAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"        String name \u003d ParserUtil.parseDishName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"        double price \u003d ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get());","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"        List\u003cString\u003e ingredientNumbers \u003d argMultimap.getAllValues(PREFIX_INGREDIENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"kangtinglee"},"content":"        List\u003cString\u003e ingredientQuantities \u003d argMultimap.getAllValues(PREFIX_QUANTITY);","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"        ParserUtil.validateListLengths(ingredientNumbers, ingredientQuantities);","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cIndex, Integer\u003e\u003e ingredientIdsQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"        for (int i \u003d 0; i \u003c ingredientNumbers.size(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"            Pair\u003cIndex, Integer\u003e dishComponent \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(ParserUtil.parseIndex(ingredientNumbers.get(i)),","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"                            ParserUtil.parseNonNegativeInt(ingredientQuantities.get(i)));","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"            ingredientIdsQuantityList.add(dishComponent);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"        return new MenuAddCommand(name, price, ingredientIdsQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"kangtinglee":3,"Sharptail":23,"guanyz":29,"jamesleeht":1}},{"path":"src/main/java/seedu/address/logic/parser/commands/menu/MenuDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.menu;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FORCE_DELETE;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"public class MenuDeleteCommandParser implements Parser\u003cMenuDeleteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public MenuDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_FORCE_DELETE);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"            if (argMultimap.getValue(PREFIX_FORCE_DELETE).isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"                return new MenuDeleteCommand(index, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"                return new MenuDeleteCommand(index, true);","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MenuDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":18,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/commands/menu/MenuEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.parser.commands.menu;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INGREDIENT;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.menu.MenuEditCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"public class MenuEditCommandParser {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"    public MenuEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PRICE, PREFIX_INGREDIENT, PREFIX_QUANTITY);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"        Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"                    MenuEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"        MenuEditCommand.EditDishDescriptor editDishDescriptor \u003d new MenuEditCommand.EditDishDescriptor();","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"            editDishDescriptor.setName(ParserUtil.parseDishName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"            editDishDescriptor.setPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"        if (argMultimap.getValue(PREFIX_INGREDIENT).isPresent()","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"            List\u003cString\u003e editedIngredientNumbers \u003d argMultimap.getAllValues(PREFIX_INGREDIENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"            List\u003cString\u003e editedIngredientQuantities \u003d argMultimap.getAllValues(PREFIX_QUANTITY);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"            ParserUtil.validateListLengths(editedIngredientNumbers, editedIngredientQuantities);","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"            List\u003cPair\u003cIndex, Integer\u003e\u003e editedIngredientIdsQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"            for (int i \u003d 0; i \u003c editedIngredientNumbers.size(); i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"                Pair\u003cIndex, Integer\u003e editedDishComponent \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"                        new Pair\u003c\u003e(ParserUtil.parseIndex(editedIngredientNumbers.get(i)),","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"                                ParserUtil.parseNonNegativeInt(editedIngredientQuantities.get(i)));","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"                editedIngredientIdsQuantityList.add(editedDishComponent);","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"            editDishDescriptor.setIngredientIdsQuantityList(editedIngredientIdsQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"        if (!editDishDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(MenuEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"        return new MenuEditCommand(index, editDishDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"guanyz":72}},{"path":"src/main/java/seedu/address/logic/parser/commands/menu/MenuFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.logic.parser.commands.menu;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INGREDIENT;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.menu.MenuFindCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishContainsIngredientNamePredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishNameContainsWordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"public class MenuFindCommandParser implements Parser\u003cMenuFindCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public MenuFindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_INGREDIENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        boolean namePresent \u003d ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        boolean ingredientPresent \u003d ParserUtil.arePrefixesPresent(argMultimap, PREFIX_INGREDIENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        if (!namePresent \u0026\u0026 !ingredientPresent) {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                    MenuFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        List\u003cPredicate\u003cDish\u003e\u003e predicates \u003d getPredicates(argMultimap);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        return new MenuFindCommand(predicates);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cPredicate\u003cDish\u003e\u003e getPredicates(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        List\u003cPredicate\u003cDish\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cString\u003e nameArgs \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cString\u003e ingredientArg \u003d argMultimap.getValue(PREFIX_INGREDIENT);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        if (nameArgs.isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"            List\u003cString\u003e keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"            try {","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"                keywords \u003d ParserUtil.parseKeywords(nameArgs.get());","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"                        MenuFindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"            predicates.add(new DishNameContainsWordsPredicate(keywords));","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"        if (ingredientArg.isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"            String keyword;","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            try {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"                keyword \u003d ParserUtil.parseKeyword(ingredientArg.get());","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"                        MenuFindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"            predicates.add(new DishContainsIngredientNamePredicate(keyword));","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        return predicates;","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"jamesleeht":70}},{"path":"src/main/java/seedu/address/logic/parser/commands/menu/MenuListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kangtinglee"},"content":"package seedu.address.logic.parser.commands.menu;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"kangtinglee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALL;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.commands.menu.MenuListAvailableCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.commands.menu.MenuListCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"kangtinglee"},"content":"public class MenuListCommandParser implements Parser\u003cMenuListCommand\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"kangtinglee"},"content":"     * Parses {@code userInput} and lists either all available menu items or only those available","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"kangtinglee"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"kangtinglee"},"content":"     * @param args","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"kangtinglee"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"kangtinglee"},"content":"    public MenuListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"kangtinglee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ALL);","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"kangtinglee"},"content":"        if (argMultimap.getValue(PREFIX_ALL).isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"kangtinglee"},"content":"            return new MenuListCommand();","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"kangtinglee"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"kangtinglee"},"content":"            return new MenuListAvailableCommand();","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"kangtinglee"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"kangtinglee":30}},{"path":"src/main/java/seedu/address/logic/parser/commands/order/OrderAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"public class OrderAddCommandParser implements Parser\u003cOrderAddCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    @SuppressWarnings(\"checkstyle:Indentation\")","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    public OrderAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATETIME, PREFIX_DISH, PREFIX_QUANTITY);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATETIME, PREFIX_DISH, PREFIX_QUANTITY)","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, OrderAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"        Integer customerId \u003d ParserUtil.parseNonNegativeInt(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"        String strDateTime \u003d argMultimap.getValue(PREFIX_DATETIME).get();","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"        List\u003cString\u003e dishNumbers \u003d argMultimap.getAllValues(PREFIX_DISH);","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"        List\u003cString\u003e dishQuantities \u003d argMultimap.getAllValues(PREFIX_QUANTITY);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"        List\u003cPair\u003cIndex, Integer\u003e\u003e dishQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"        for (int i \u003d 0; i \u003c dishNumbers.size(); i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"            Pair\u003cIndex, Integer\u003e orderComponent \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(ParserUtil.parseIndex(dishNumbers.get(i)),","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"                            ParserUtil.parseNonNegativeInt(dishQuantities.get(i)));","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"            dishQuantityList.add(orderComponent);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(strDateTime, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"            return new OrderAddCommand(dateTime, customerId, dishQuantityList);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, OrderAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":27,"guanyz":27,"IanCKW":11,"jamesleeht":1}},{"path":"src/main/java/seedu/address/logic/parser/commands/order/OrderCompleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.logic.parser.commands.order;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.order.OrderCompleteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"public class OrderCompleteCommandParser implements Parser\u003cOrderCompleteCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"    public OrderCompleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"            return new OrderCompleteCommand(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, OrderCompleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"IanCKW":31}},{"path":"src/main/java/seedu/address/logic/parser/commands/order/OrderDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.commands.order;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class OrderDeleteCommandParser implements Parser\u003cOrderDeleteCommand\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public OrderDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            return new OrderDeleteCommand(index);","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, OrderDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Sharptail":8,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/commands/order/OrderEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"guanyz"},"content":"package seedu.address.logic.parser.commands.order;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"guanyz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"guanyz"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATETIME;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"guanyz"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_QUANTITY;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"guanyz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"guanyz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"guanyz"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"guanyz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.order.OrderEditCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"guanyz"},"content":"public class OrderEditCommandParser {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"guanyz"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"guanyz"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"guanyz"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"    public OrderEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"guanyz"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATETIME, PREFIX_DISH, PREFIX_QUANTITY);","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"        Index index;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"guanyz"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"                    OrderEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"        OrderEditCommand.EditOrderDescriptor editOrderDescriptor \u003d new OrderEditCommand.EditOrderDescriptor();","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"            editOrderDescriptor.setCustomerId(ParserUtil.parseNonNegativeInt(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"        if (argMultimap.getValue(PREFIX_DATETIME).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"            editOrderDescriptor.setDateTime(","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"                    LocalDateTime.parse(argMultimap.getValue(PREFIX_DATETIME).get(), dateTimeFormatter));","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"        if (argMultimap.getValue(PREFIX_DISH).isPresent()","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"guanyz"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_QUANTITY).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"            List\u003cString\u003e editedDishNumbers \u003d argMultimap.getAllValues(PREFIX_DISH);","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"            List\u003cString\u003e editedDishQuantities \u003d argMultimap.getAllValues(PREFIX_QUANTITY);","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"            ParserUtil.validateListLengths(editedDishNumbers, editedDishQuantities);","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"            List\u003cPair\u003cIndex, Integer\u003e\u003e editedDishIdsQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"guanyz"},"content":"            for (int i \u003d 0; i \u003c editedDishNumbers.size(); i++) {","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"                Pair\u003cIndex, Integer\u003e editedDishComponent \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"                        new Pair\u003c\u003e(ParserUtil.parseIndex(editedDishNumbers.get(i)),","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"guanyz"},"content":"                                ParserUtil.parseNonNegativeInt(editedDishQuantities.get(i)));","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"                editedDishIdsQuantityList.add(editedDishComponent);","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"guanyz"},"content":"            editOrderDescriptor.setDishIdsQuantityList(editedDishIdsQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"        if (!editOrderDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"            throw new ParseException(OrderEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"guanyz"},"content":"        return new OrderEditCommand(index, editOrderDescriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"guanyz"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"guanyz":78}},{"path":"src/main/java/seedu/address/logic/parser/commands/order/OrderFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.logic.parser.commands.order;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DISH;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.order.OrderFindCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderContainsCustomerNamesPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderContainsDishNamePredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"public class OrderFindCommandParser implements Parser\u003cOrderFindCommand\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public OrderFindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_DISH);","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        boolean namePresent \u003d ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        boolean dishPresent \u003d ParserUtil.arePrefixesPresent(argMultimap, PREFIX_DISH);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        if (!namePresent \u0026\u0026 !dishPresent) {","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                    OrderFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        List\u003cPredicate\u003cOrder\u003e\u003e predicates \u003d getPredicates(argMultimap);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        return new OrderFindCommand(predicates);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cPredicate\u003cOrder\u003e\u003e getPredicates(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        List\u003cPredicate\u003cOrder\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cString\u003e nameArgs \u003d argMultimap.getValue(PREFIX_NAME);","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cString\u003e dishArg \u003d argMultimap.getValue(PREFIX_DISH);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        if (nameArgs.isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"            List\u003cString\u003e keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"            try {","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"                keywords \u003d ParserUtil.parseKeywords(nameArgs.get());","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"                        OrderFindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"            predicates.add(new OrderContainsCustomerNamesPredicate(keywords));","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"        if (dishArg.isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"            String keyword;","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            try {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"                keyword \u003d ParserUtil.parseKeyword(dishArg.get());","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"                        OrderFindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"            predicates.add(new OrderContainsDishNamePredicate(keyword));","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        return predicates;","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"jamesleeht":70}},{"path":"src/main/java/seedu/address/logic/parser/components/ComponentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"public interface ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     * Used for initial separation of component word and args.","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Sharptail":27}},{"path":"src/main/java/seedu/address/logic/parser/components/CustomerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerClearCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerAddCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerDeleteCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerEditCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerFindCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"public class CustomerParser implements ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"customer\";","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerParser.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMMAND \u003d \" + commandWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        case CustomerAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"            return new CustomerAddCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        case CustomerEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"            return new CustomerEditCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        case CustomerDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"            return new CustomerDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        case CustomerClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"            return new CustomerClearCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"        case CustomerFindCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"            return new CustomerFindCommandParser().parse(arguments);","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"        case CustomerListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"            return new CustomerListCommand();","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"kangtinglee"},"content":"            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":1,"Sharptail":34,"-":37}},{"path":"src/main/java/seedu/address/logic/parser/components/InventoryParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryAddCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.inventory.InventoryDecreaseCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryDeleteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.inventory.InventoryEditCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryFindCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.inventory.InventoryListCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.inventory.InventoryAddCommandParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.inventory.InventoryDecreaseCommandParser;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.inventory.InventoryDeleteCommandParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.commands.inventory.InventoryEditCommandParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.inventory.InventoryFindCommandParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"public class InventoryParser implements ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"inventory\";","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InventoryParser.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMMAND \u003d \" + commandWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        case InventoryAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"guanyz"},"content":"            return new InventoryAddCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"        case InventoryDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"kangtinglee"},"content":"            return new InventoryDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"        case InventoryEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"            return new InventoryEditCommandParser().parse(arguments);","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"        case InventoryDecreaseCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"            return new InventoryDecreaseCommandParser().parse(arguments);","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        case InventoryFindCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"            return new InventoryFindCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"        case InventoryListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"IanCKW"},"content":"            return new InventoryListCommand();","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":71,"author":{"gitId":"kangtinglee"},"content":"            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":2,"Sharptail":20,"-":35,"guanyz":6,"IanCKW":1,"jamesleeht":10}},{"path":"src/main/java/seedu/address/logic/parser/components/MenuParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.menu.MenuEditCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.menu.MenuFindCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.menu.MenuListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.menu.MenuAddCommandParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.menu.MenuDeleteCommandParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.menu.MenuEditCommandParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.menu.MenuFindCommandParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.menu.MenuListCommandParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"public class MenuParser implements ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"menu\";","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MenuParser.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMMAND \u003d \" + commandWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        case MenuAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"            return new MenuAddCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        case MenuDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"kangtinglee"},"content":"            return new MenuDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"        case MenuEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"            return new MenuEditCommandParser().parse(arguments);","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"        case MenuFindCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"            return new MenuFindCommandParser().parse(arguments);","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"        case MenuListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"kangtinglee"},"content":"            return new MenuListCommandParser().parse(arguments);","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":67,"author":{"gitId":"kangtinglee"},"content":"            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":8,"Sharptail":18,"-":35,"guanyz":5,"jamesleeht":4}},{"path":"src/main/java/seedu/address/logic/parser/components/OrderParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package seedu.address.logic.parser.components;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.order.OrderCompleteCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.order.OrderEditCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.commands.order.OrderFindCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.commands.order.OrderHistoryCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.order.OrderListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.commands.order.OrderAddCommandParser;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"import seedu.address.logic.parser.commands.order.OrderCompleteCommandParser;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.parser.commands.order.OrderDeleteCommandParser;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.parser.commands.order.OrderEditCommandParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.logic.parser.commands.order.OrderFindCommandParser;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":" * Parses user input without component.","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"public class OrderParser implements ComponentParser {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public static final String COMPONENT_WORD \u003d \"order\";","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(OrderParser.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"     * @param args user input string without components","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    public Command parseCommand(String args) throws ParseException {","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        logger.info(\"----------------[COMMAND \u003d \" + commandWord + \"][ARGUMENTS \u003d \" + arguments + \"]\");","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        case OrderAddCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"            return new OrderAddCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        case OrderDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"kangtinglee"},"content":"            return new OrderDeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"guanyz"},"content":"        case OrderEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"            return new OrderEditCommandParser().parse(arguments);","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        case OrderFindCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"            return new OrderFindCommandParser().parse(arguments);","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"        case OrderListCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"IanCKW"},"content":"            return new OrderListCommand();","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"IanCKW"},"content":"        case OrderCompleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"IanCKW"},"content":"            return new OrderCompleteCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"IanCKW"},"content":"        case OrderHistoryCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"IanCKW"},"content":"            return new OrderHistoryCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"kangtinglee"},"content":"            throw new ParseException(String.format(MESSAGE_UNKNOWN_COMMAND, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kangtinglee":3,"Sharptail":18,"-":35,"guanyz":7,"IanCKW":10,"jamesleeht":5}},{"path":"src/main/java/seedu/address/model/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"public interface Item {","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"     * Check if item is same as another item (loose equality)","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"     * @param other","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    public boolean isSame(Item other);","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":10}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kangtinglee"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    Predicate\u003cItem\u003e PREDICATE_SHOW_ALL_ITEMS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    Path getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    void setPersonBookFilePath(Path personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PersonBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"     * Replaces person book data with the data in {@code personBook}.","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"    void setPersonBook(ReadOnlyBook\u003cPerson\u003e personBook);","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    ReadOnlyBook\u003cPerson\u003e getPersonBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"kangtinglee"},"content":"     * Returns the {@code Person} object at the specified index on the UI","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"kangtinglee"},"content":"    Person getPersonByIndex(int i);","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"     * @param predicate predicate to filter persons by.","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"    void updateFilteredPersonList(Predicate\u003c? super Person\u003e predicate);","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DishBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"     * Replaces dish book data with the data in {@code addressBook}.","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"    void setDishBook(ReadOnlyBook\u003cDish\u003e dishBook);","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"    /** Returns the DishBook */","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"    ReadOnlyBook\u003cDish\u003e getDishBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if a dish with the same name as {@code dish} exists in the dish book.","lastModifiedDate":"2021-04-11"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"    boolean hasDish(Dish dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"guanyz"},"content":"     * Returns the {@code Dish} object at the specified index on the UI","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"guanyz"},"content":"    Dish getDishByIndex(int i);","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"     * Deletes the given dish.","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"     * The dish must exist.","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"    void deleteDish(Dish dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"     * Adds the given dish.","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"     * {@code dish} must not already exist","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"    void addDish(Dish dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"     * Replaces the given dish {@code target} with {@code editedDish}.","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"     * The person identity of {@code editedDish} must not be the same as another existing dish in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"jamesleeht"},"content":"    void setDish(Dish target, Dish editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"jamesleeht"},"content":"    /** Returns an unmodifiable view of the filtered dish list */","lastModifiedDate":"2021-04-11"},{"lineNumber":141,"author":{"gitId":"jamesleeht"},"content":"    ObservableList\u003cDish\u003e getFilteredDishList();","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"jamesleeht"},"content":"     * Updates the filter of the filtered dish list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"jamesleeht"},"content":"     * @param predicate","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"jamesleeht"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"jamesleeht"},"content":"    void updateFilteredDishList(Predicate\u003c? super Dish\u003e predicate);","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"kangtinglee"},"content":"    /** Returns a list of dishes that use a particular ingredient */","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"kangtinglee"},"content":"    List\u003cDish\u003e getDishesByIngredients(Ingredient ingredient);","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"kangtinglee"},"content":"     * Returns a predicate that returns true if a given dish can be produced (ie sufficient stock exists)","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"kangtinglee"},"content":"    Predicate\u003cDish\u003e getAvailableDishPredicate();","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"kangtinglee"},"content":"    /** Returns true if there is sufficient inventory to produce a given dish */","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"kangtinglee"},"content":"    boolean hasSufficientIngredients(Dish target);","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"kangtinglee"},"content":"    /** Returns true if there is sufficient inventory to produce {@code quantity} amount of given dish */","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"kangtinglee"},"content":"    boolean hasSufficientIngredients(Dish target, int quantity);","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d IngredientBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"jamesleeht"},"content":"     * Replaces ingredient book data with the data in {@code ingredientBook}.","lastModifiedDate":"2021-04-11"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"    void setIngredientBook(ReadOnlyBook\u003cIngredient\u003e ingredientBook);","lastModifiedDate":"2021-04-11"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"jamesleeht"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"    ReadOnlyBook\u003cIngredient\u003e getIngredientBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if ingredient with the same name as {@code ingredient} exists in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"jamesleeht"},"content":"    boolean hasIngredient(Ingredient ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"guanyz"},"content":"     * Returns the {@code Ingredient} object at the specified index on the UI","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"guanyz"},"content":"    Ingredient getIngredientByIndex(int i);","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"jamesleeht"},"content":"     * Deletes the given ingredient.","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"jamesleeht"},"content":"     * The ingredient must exist.","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"jamesleeht"},"content":"    void deleteIngredient(Ingredient ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"jamesleeht"},"content":"     * Adds the given ingredient.","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"jamesleeht"},"content":"     * {@code ingredient} must not already exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"jamesleeht"},"content":"    void addIngredient(Ingredient ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"jamesleeht"},"content":"     * Replaces the given ingredient {@code target} with {@code editedIngredient}.","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"jamesleeht"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"jamesleeht"},"content":"     * The person identity of {@code editedIngredient} must not be the same as another existing ingredient.","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"jamesleeht"},"content":"    void setIngredient(Ingredient target, Ingredient editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-09"},{"lineNumber":204,"author":{"gitId":"Sharptail"},"content":"     * Decrease the ingredient quantity by given quantity","lastModifiedDate":"2021-04-09"},{"lineNumber":205,"author":{"gitId":"Sharptail"},"content":"     * @param target ingredient to be decreased","lastModifiedDate":"2021-04-09"},{"lineNumber":206,"author":{"gitId":"Sharptail"},"content":"     * @param decreaseQuantity the number to decrease the ingredient quantity","lastModifiedDate":"2021-04-09"},{"lineNumber":207,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-09"},{"lineNumber":208,"author":{"gitId":"Sharptail"},"content":"    public void decreaseIngredient(Ingredient target, int decreaseQuantity);","lastModifiedDate":"2021-04-09"},{"lineNumber":209,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":210,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":211,"author":{"gitId":"Sharptail"},"content":"     * Decrease the ingredient quantity with the given {@code order}","lastModifiedDate":"2021-04-04"},{"lineNumber":212,"author":{"gitId":"Sharptail"},"content":"     * @param order order added","lastModifiedDate":"2021-04-04"},{"lineNumber":213,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":214,"author":{"gitId":"Sharptail"},"content":"    void decreaseIngredientByOrder(Order order);","lastModifiedDate":"2021-04-04"},{"lineNumber":215,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":216,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-09"},{"lineNumber":217,"author":{"gitId":"Sharptail"},"content":"     * Increases an existing ingredient by given quantity","lastModifiedDate":"2021-04-09"},{"lineNumber":218,"author":{"gitId":"Sharptail"},"content":"     * @param name existing ingredient\u0027s name","lastModifiedDate":"2021-04-09"},{"lineNumber":219,"author":{"gitId":"Sharptail"},"content":"     * @param increaseQuantity the number to increase the ingredient quantity","lastModifiedDate":"2021-04-09"},{"lineNumber":220,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-09"},{"lineNumber":221,"author":{"gitId":"Sharptail"},"content":"    void increaseIngredientByName(String name, int increaseQuantity);","lastModifiedDate":"2021-04-09"},{"lineNumber":222,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":223,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":224,"author":{"gitId":"Sharptail"},"content":"     * Increase the ingredient quantity with the given {@code order}","lastModifiedDate":"2021-04-04"},{"lineNumber":225,"author":{"gitId":"Sharptail"},"content":"     * @param order order deleted","lastModifiedDate":"2021-04-04"},{"lineNumber":226,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":227,"author":{"gitId":"Sharptail"},"content":"    void increaseIngredientByOrder(Order order);","lastModifiedDate":"2021-04-04"},{"lineNumber":228,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":229,"author":{"gitId":"jamesleeht"},"content":"    /** Returns an unmodifiable view of the filtered ingredient list */","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"jamesleeht"},"content":"    ObservableList\u003cIngredient\u003e getFilteredIngredientList();","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"jamesleeht"},"content":"     * Updates the filter of the filtered ingredient list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"jamesleeht"},"content":"     * @param predicate","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"jamesleeht"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"jamesleeht"},"content":"    void updateFilteredIngredientList(Predicate\u003c? super Ingredient\u003e predicate);","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OrderBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":240,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":241,"author":{"gitId":"jamesleeht"},"content":"     * Replaces order book data with the data in {@code orderBook}.","lastModifiedDate":"2021-04-11"},{"lineNumber":242,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":243,"author":{"gitId":"jamesleeht"},"content":"    void setOrderBook(ReadOnlyBook\u003cOrder\u003e orderBook);","lastModifiedDate":"2021-04-11"},{"lineNumber":244,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":245,"author":{"gitId":"jamesleeht"},"content":"    /** Returns the OrderBook */","lastModifiedDate":"2021-04-11"},{"lineNumber":246,"author":{"gitId":"jamesleeht"},"content":"    ReadOnlyBook\u003cOrder\u003e getOrderBook();","lastModifiedDate":"2021-04-11"},{"lineNumber":247,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":248,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":249,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if a order exists in the address book.","lastModifiedDate":"2021-04-11"},{"lineNumber":250,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":251,"author":{"gitId":"jamesleeht"},"content":"    boolean hasOrder(Order order);","lastModifiedDate":"2021-03-13"},{"lineNumber":252,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":253,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":254,"author":{"gitId":"kangtinglee"},"content":"     * Deletes the given order.","lastModifiedDate":"2021-03-26"},{"lineNumber":255,"author":{"gitId":"kangtinglee"},"content":"     * The order must exist.","lastModifiedDate":"2021-03-26"},{"lineNumber":256,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":257,"author":{"gitId":"jamesleeht"},"content":"    void deleteOrder(Order order);","lastModifiedDate":"2021-03-13"},{"lineNumber":258,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":259,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":260,"author":{"gitId":"kangtinglee"},"content":"     * Deletes a list of orders.","lastModifiedDate":"2021-03-26"},{"lineNumber":261,"author":{"gitId":"kangtinglee"},"content":"     * The orders must exist.","lastModifiedDate":"2021-03-26"},{"lineNumber":262,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":263,"author":{"gitId":"kangtinglee"},"content":"    void deleteOrders(List\u003cOrder\u003e orders);","lastModifiedDate":"2021-03-26"},{"lineNumber":264,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":265,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":266,"author":{"gitId":"jamesleeht"},"content":"     * Adds the given person.","lastModifiedDate":"2021-03-13"},{"lineNumber":267,"author":{"gitId":"jamesleeht"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":268,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":269,"author":{"gitId":"jamesleeht"},"content":"    void addOrder(Order order);","lastModifiedDate":"2021-03-13"},{"lineNumber":270,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":271,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":272,"author":{"gitId":"jamesleeht"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2021-03-13"},{"lineNumber":273,"author":{"gitId":"jamesleeht"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":274,"author":{"gitId":"jamesleeht"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":275,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":276,"author":{"gitId":"jamesleeht"},"content":"    void setOrder(Order target, Order editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":277,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":278,"author":{"gitId":"kangtinglee"},"content":"    /** Returns an unmodifiable view of the filtered order list */","lastModifiedDate":"2021-03-26"},{"lineNumber":279,"author":{"gitId":"IanCKW"},"content":"    ObservableList\u003cOrder\u003e getFilteredOrderList();","lastModifiedDate":"2021-04-01"},{"lineNumber":280,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":281,"author":{"gitId":"kangtinglee"},"content":"    //@@ author kangtinglee","lastModifiedDate":"2021-03-31"},{"lineNumber":282,"author":{"gitId":"kangtinglee"},"content":"    /** Returns a list of orders that have not been fulfilled and contain a given dish */","lastModifiedDate":"2021-03-31"},{"lineNumber":283,"author":{"gitId":"kangtinglee"},"content":"    List\u003cOrder\u003e getIncompleteOrdersContainingDish(Dish target);","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":285,"author":{"gitId":"kangtinglee"},"content":"    //@@ author kangtinglee","lastModifiedDate":"2021-04-11"},{"lineNumber":286,"author":{"gitId":"kangtinglee"},"content":"    /** Returns a list of orders that contain a given dish */","lastModifiedDate":"2021-04-11"},{"lineNumber":287,"author":{"gitId":"kangtinglee"},"content":"    List\u003cOrder\u003e getOrdersContainingDish(Dish target);","lastModifiedDate":"2021-04-11"},{"lineNumber":288,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":289,"author":{"gitId":"kangtinglee"},"content":"    /** Returns a list of orders that have not been fulfilled */","lastModifiedDate":"2021-03-31"},{"lineNumber":290,"author":{"gitId":"kangtinglee"},"content":"    List\u003cOrder\u003e getIncompleteOrders();","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":292,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"jamesleeht"},"content":"     * Updates the filter of the filtered order list to filter by the given {@code predicate}.","lastModifiedDate":"2021-04-11"},{"lineNumber":294,"author":{"gitId":"jamesleeht"},"content":"     * @param predicate","lastModifiedDate":"2021-03-31"},{"lineNumber":295,"author":{"gitId":"jamesleeht"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"jamesleeht"},"content":"    void updateFilteredOrderList(Predicate\u003c? super Order\u003e predicate);","lastModifiedDate":"2021-03-31"},{"lineNumber":298,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":300,"author":{"gitId":"jamesleeht"},"content":"     * Updates the filtered order list by sorting it with {@code comparator}.","lastModifiedDate":"2021-04-11"},{"lineNumber":301,"author":{"gitId":"IanCKW"},"content":"     * @param comparator","lastModifiedDate":"2021-04-01"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-04-01"},{"lineNumber":303,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":304,"author":{"gitId":"IanCKW"},"content":"    void updateFilteredOrderList(Comparator\u003cOrder\u003e comparator);","lastModifiedDate":"2021-04-01"},{"lineNumber":305,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":306,"author":{"gitId":"kangtinglee"},"content":"    //@@ author kangtinglee","lastModifiedDate":"2021-04-01"},{"lineNumber":307,"author":{"gitId":"kangtinglee"},"content":"    /** Returns an list of the orders belonging to a particular customer */","lastModifiedDate":"2021-03-26"},{"lineNumber":308,"author":{"gitId":"kangtinglee"},"content":"    List\u003cOrder\u003e getOrdersFromPerson(Person target);","lastModifiedDate":"2021-03-26"},{"lineNumber":309,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"kangtinglee"},"content":"    //@@ author kangtinglee","lastModifiedDate":"2021-04-01"},{"lineNumber":311,"author":{"gitId":"kangtinglee"},"content":"    /** Returns an list of the incomplete orders belonging to a particular customer */","lastModifiedDate":"2021-04-01"},{"lineNumber":312,"author":{"gitId":"kangtinglee"},"content":"    List\u003cOrder\u003e getIncompleteOrdersFromPerson(Person target);","lastModifiedDate":"2021-04-01"},{"lineNumber":313,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":314,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":315,"author":{"gitId":"kangtinglee"},"content":"     * Sets the state of the order to cancelled","lastModifiedDate":"2021-03-31"},{"lineNumber":316,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":317,"author":{"gitId":"kangtinglee"},"content":"    void cancelOrder(Order target);","lastModifiedDate":"2021-03-31"},{"lineNumber":318,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":319,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":320,"author":{"gitId":"kangtinglee"},"content":"     * Sets the state of the orders to cancelled","lastModifiedDate":"2021-03-31"},{"lineNumber":321,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":322,"author":{"gitId":"kangtinglee"},"content":"    void cancelOrders(List\u003cOrder\u003e targets);","lastModifiedDate":"2021-03-31"},{"lineNumber":323,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":324,"author":{"gitId":"kangtinglee"},"content":"    /** Returns true if an order can be fulfilled */","lastModifiedDate":"2021-04-01"},{"lineNumber":325,"author":{"gitId":"kangtinglee"},"content":"    boolean canFulfilOrder(Order target);","lastModifiedDate":"2021-04-01"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kangtinglee":61,"Sharptail":26,"-":83,"guanyz":10,"IanCKW":7,"jamesleeht":139}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"kangtinglee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"kangtinglee"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"kangtinglee"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    private final PersonBook personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    private final DishBook dishBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    private final IngredientBook ingredientBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    private final OrderBook orderBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    private final FilteredList\u003cDish\u003e filteredDishes;","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    private final FilteredList\u003cIngredient\u003e filteredIngredients;","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"    private FilteredList\u003cOrder\u003e filteredOrders;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"     * Initializes a ModelManager with the given books and userPrefs.","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    public ModelManager(ReadOnlyBook\u003cPerson\u003e personBook, ReadOnlyBook\u003cDish\u003e dishBook,","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"                        ReadOnlyBook\u003cIngredient\u003e ingredientBook, ReadOnlyBook\u003cOrder\u003e orderBook,","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireAllNonNull(personBook, userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Initializing with address book: \" + personBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        this.personBook \u003d new PersonBook(personBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        this.dishBook \u003d new DishBook(dishBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientBook \u003d new IngredientBook(ingredientBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"        this.orderBook \u003d new OrderBook(orderBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.personBook.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        filteredDishes \u003d new FilteredList\u003c\u003e(this.dishBook.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        filteredIngredients \u003d new FilteredList\u003c\u003e(this.ingredientBook.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.orderBook.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"     * Initializes a ModelManager with the given person book and userPrefs. (Legacy used for unit tests)","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    public ModelManager(ReadOnlyBook\u003cPerson\u003e personBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        super();","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        requireAllNonNull(personBook, userPrefs);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Initializing with address book: \" + personBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        this.personBook \u003d new PersonBook(personBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        this.dishBook \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientBook \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"kangtinglee"},"content":"        this.orderBook \u003d new OrderBook();","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.personBook.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        filteredDishes \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"        filteredIngredients \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        filteredOrders \u003d new FilteredList\u003c\u003e(this.orderBook.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        this(new PersonBook(), new DishBook(), new IngredientBook(), new OrderBook(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    public Path getPersonBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"        return userPrefs.getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"    public void setPersonBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setPersonBookFilePath(addressBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"    public void setPersonBook(ReadOnlyBook\u003cPerson\u003e personBook) {","lastModifiedDate":"2021-04-11"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"        this.personBook.resetData(personBook);","lastModifiedDate":"2021-04-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"    public ReadOnlyBook\u003cPerson\u003e getPersonBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"        return personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"jamesleeht"},"content":"        return personBook.hasPerson(person);","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":145,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"kangtinglee"},"content":"    public Person getPersonByIndex(int i) {","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"kangtinglee"},"content":"        return getFilteredPersonList().get(i);","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"kangtinglee"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":153,"author":{"gitId":"kangtinglee"},"content":"        personBook.removePerson(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e deletionList \u003d getOrdersFromPerson(target);","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"kangtinglee"},"content":"        deleteOrders(deletionList);","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"kangtinglee"},"content":"        assert !personBook.hasPerson(target);","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : deletionList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"kangtinglee"},"content":"            assert !hasOrder(o);","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"kangtinglee"},"content":"            logger.fine(String.format(\"Order %s belonging to %s deleted by cascade\", o, target));","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"kangtinglee"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":167,"author":{"gitId":"kangtinglee"},"content":"        personBook.addPerson(person);","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":169,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":170,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":171,"author":{"gitId":"kangtinglee"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":172,"author":{"gitId":"kangtinglee"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":173,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":174,"author":{"gitId":"kangtinglee"},"content":"        personBook.setPerson(target, editedPerson);","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e ordersFromTarget \u003d getOrdersFromPerson(target);","lastModifiedDate":"2021-04-08"},{"lineNumber":176,"author":{"gitId":"kangtinglee"},"content":"        for (Order orderFromTarget : ordersFromTarget) {","lastModifiedDate":"2021-04-11"},{"lineNumber":177,"author":{"gitId":"kangtinglee"},"content":"            Order updatedOrder \u003d orderFromTarget.updateCustomer(editedPerson);","lastModifiedDate":"2021-04-11"},{"lineNumber":178,"author":{"gitId":"kangtinglee"},"content":"            setOrder(orderFromTarget, updatedOrder);","lastModifiedDate":"2021-04-11"},{"lineNumber":179,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":180,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":181,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":182,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"kangtinglee"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"kangtinglee"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":186,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":187,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":188,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cOrder\u003e getIncompleteOrders() {","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"kangtinglee"},"content":"        ObservableList\u003cOrder\u003e orders \u003d getOrderBook().getItemList();","lastModifiedDate":"2021-04-11"},{"lineNumber":190,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e incompleteOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : orders) {","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"kangtinglee"},"content":"            if (o.getState() \u003d\u003d Order.State.UNCOMPLETED) {","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"kangtinglee"},"content":"                incompleteOrders.add(o);","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"kangtinglee"},"content":"        return incompleteOrders;","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"kangtinglee"},"content":"    //@@ author kangtinglee","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cOrder\u003e getIncompleteOrdersContainingDish(Dish target) {","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e incompleteOrders \u003d getIncompleteOrders();","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e incompleteAndContainsDishOrders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : incompleteOrders) {","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"kangtinglee"},"content":"            if (o.contains(target)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"kangtinglee"},"content":"                incompleteAndContainsDishOrders.add(o);","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"kangtinglee"},"content":"        return incompleteAndContainsDishOrders;","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"kangtinglee"},"content":"    //@@ author kangtinglee","lastModifiedDate":"2021-04-11"},{"lineNumber":213,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":214,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cOrder\u003e getOrdersContainingDish(Dish target) {","lastModifiedDate":"2021-04-11"},{"lineNumber":215,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e ordersContainingDish \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-11"},{"lineNumber":216,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : getOrderBook().getItemList()) {","lastModifiedDate":"2021-04-11"},{"lineNumber":217,"author":{"gitId":"kangtinglee"},"content":"            if (o.contains(target)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":218,"author":{"gitId":"kangtinglee"},"content":"                ordersContainingDish.add(o);","lastModifiedDate":"2021-04-11"},{"lineNumber":219,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-11"},{"lineNumber":220,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":221,"author":{"gitId":"kangtinglee"},"content":"        return ordersContainingDish;","lastModifiedDate":"2021-04-11"},{"lineNumber":222,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":223,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":224,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":225,"author":{"gitId":"kangtinglee"},"content":"    public void updateFilteredPersonList(Predicate\u003c? super Person\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":227,"author":{"gitId":"kangtinglee"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":228,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":229,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":230,"author":{"gitId":"kangtinglee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Dishes \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"kangtinglee"},"content":"    public void setDishBook(ReadOnlyBook\u003cDish\u003e dishBook) {","lastModifiedDate":"2021-04-11"},{"lineNumber":233,"author":{"gitId":"kangtinglee"},"content":"        this.dishBook.resetData(dishBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":235,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":236,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":237,"author":{"gitId":"kangtinglee"},"content":"    public ReadOnlyBook\u003cDish\u003e getDishBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":238,"author":{"gitId":"kangtinglee"},"content":"        return dishBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":239,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":240,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":241,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":242,"author":{"gitId":"kangtinglee"},"content":"    public boolean hasDish(Dish dish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":243,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":244,"author":{"gitId":"kangtinglee"},"content":"        return dishBook.hasDish(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":245,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":246,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":247,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":248,"author":{"gitId":"kangtinglee"},"content":"    public Dish getDishByIndex(int i) {","lastModifiedDate":"2021-03-30"},{"lineNumber":249,"author":{"gitId":"kangtinglee"},"content":"        return getFilteredDishList().get(i);","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":253,"author":{"gitId":"kangtinglee"},"content":"    public void deleteDish(Dish target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":254,"author":{"gitId":"kangtinglee"},"content":"        dishBook.removeDish(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":255,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":256,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":257,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":258,"author":{"gitId":"kangtinglee"},"content":"    public void addDish(Dish dish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":259,"author":{"gitId":"kangtinglee"},"content":"        dishBook.addDish(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":260,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":261,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":262,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":263,"author":{"gitId":"kangtinglee"},"content":"    public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":264,"author":{"gitId":"kangtinglee"},"content":"        requireAllNonNull(target, editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":265,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":266,"author":{"gitId":"kangtinglee"},"content":"        dishBook.setDish(target, editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":267,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e orderContainingDish \u003d getIncompleteOrdersContainingDish(target);","lastModifiedDate":"2021-04-11"},{"lineNumber":268,"author":{"gitId":"kangtinglee"},"content":"        for (Order targetOrder : orderContainingDish) {","lastModifiedDate":"2021-04-11"},{"lineNumber":269,"author":{"gitId":"kangtinglee"},"content":"            Order updatedOrder \u003d targetOrder.updateDish(target, editedDish);","lastModifiedDate":"2021-04-11"},{"lineNumber":270,"author":{"gitId":"kangtinglee"},"content":"            setOrder(targetOrder, updatedOrder);","lastModifiedDate":"2021-04-11"},{"lineNumber":271,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":272,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":273,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":274,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":275,"author":{"gitId":"kangtinglee"},"content":"    public ObservableList\u003cDish\u003e getFilteredDishList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":276,"author":{"gitId":"kangtinglee"},"content":"        return filteredDishes;","lastModifiedDate":"2021-03-13"},{"lineNumber":277,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":278,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":279,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":280,"author":{"gitId":"kangtinglee"},"content":"    public void updateFilteredDishList(Predicate\u003c? super Dish\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":281,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"kangtinglee"},"content":"        filteredDishes.setPredicate(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":283,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":284,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":286,"author":{"gitId":"kangtinglee"},"content":"    public Predicate\u003cDish\u003e getAvailableDishPredicate() {","lastModifiedDate":"2021-04-01"},{"lineNumber":287,"author":{"gitId":"kangtinglee"},"content":"        return dish -\u003e hasSufficientIngredients(dish);","lastModifiedDate":"2021-04-01"},{"lineNumber":288,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":289,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":290,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":291,"author":{"gitId":"kangtinglee"},"content":"    public boolean hasSufficientIngredients(Dish target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":292,"author":{"gitId":"kangtinglee"},"content":"        return hasSufficientIngredients(target, 1);","lastModifiedDate":"2021-04-01"},{"lineNumber":293,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":294,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":295,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":296,"author":{"gitId":"kangtinglee"},"content":"    public boolean hasSufficientIngredients(Dish target, int amount) {","lastModifiedDate":"2021-04-01"},{"lineNumber":297,"author":{"gitId":"kangtinglee"},"content":"        List\u003cPair\u003cIngredient, Integer\u003e\u003e requiredIngredients \u003d target.getIngredientQuantityList();","lastModifiedDate":"2021-04-01"},{"lineNumber":298,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cIngredient, Integer\u003e ingredientQtyPair : requiredIngredients) {","lastModifiedDate":"2021-04-01"},{"lineNumber":299,"author":{"gitId":"kangtinglee"},"content":"            Ingredient ingredient \u003d ingredientQtyPair.getKey();","lastModifiedDate":"2021-04-01"},{"lineNumber":300,"author":{"gitId":"kangtinglee"},"content":"            Integer quantity \u003d ingredientQtyPair.getValue();","lastModifiedDate":"2021-04-01"},{"lineNumber":301,"author":{"gitId":"kangtinglee"},"content":"            if (!ingredientBook.hasSufficientIngredients(ingredient, amount * quantity)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":302,"author":{"gitId":"kangtinglee"},"content":"                return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":303,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":304,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":305,"author":{"gitId":"kangtinglee"},"content":"        return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":306,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":307,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":308,"author":{"gitId":"kangtinglee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Ingredients \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":309,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":310,"author":{"gitId":"kangtinglee"},"content":"    public void setIngredientBook(ReadOnlyBook\u003cIngredient\u003e ingredientBook) {","lastModifiedDate":"2021-04-11"},{"lineNumber":311,"author":{"gitId":"kangtinglee"},"content":"        this.ingredientBook.resetData(ingredientBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":312,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":313,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":314,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":315,"author":{"gitId":"kangtinglee"},"content":"    public ReadOnlyBook\u003cIngredient\u003e getIngredientBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":316,"author":{"gitId":"kangtinglee"},"content":"        return ingredientBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":317,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":318,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":319,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":320,"author":{"gitId":"kangtinglee"},"content":"    public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":321,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":322,"author":{"gitId":"kangtinglee"},"content":"        return ingredientBook.hasIngredient(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":323,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":324,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":325,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":326,"author":{"gitId":"kangtinglee"},"content":"    public Ingredient getIngredientByIndex(int i) {","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"kangtinglee"},"content":"        return getFilteredIngredientList().get(i);","lastModifiedDate":"2021-03-30"},{"lineNumber":328,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":329,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":330,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":331,"author":{"gitId":"kangtinglee"},"content":"    public void deleteIngredient(Ingredient target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":332,"author":{"gitId":"kangtinglee"},"content":"        ingredientBook.removeIngredient(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":333,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":334,"author":{"gitId":"kangtinglee"},"content":"        List\u003cDish\u003e dishesToDelete \u003d getDishesByIngredients(target);","lastModifiedDate":"2021-04-11"},{"lineNumber":335,"author":{"gitId":"kangtinglee"},"content":"        for (Dish targetDish : dishesToDelete) {","lastModifiedDate":"2021-04-11"},{"lineNumber":336,"author":{"gitId":"kangtinglee"},"content":"            deleteDish(targetDish);","lastModifiedDate":"2021-04-11"},{"lineNumber":337,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":338,"author":{"gitId":"kangtinglee"},"content":"            assert !hasDish(targetDish);","lastModifiedDate":"2021-04-11"},{"lineNumber":339,"author":{"gitId":"kangtinglee"},"content":"            logger.fine(String.format(\"Dish %s which contains %s deleted by cascade\", targetDish, target));","lastModifiedDate":"2021-04-11"},{"lineNumber":340,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":341,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":342,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":343,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":344,"author":{"gitId":"kangtinglee"},"content":"    public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":345,"author":{"gitId":"kangtinglee"},"content":"        ingredientBook.addIngredient(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":346,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":347,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":348,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":349,"author":{"gitId":"kangtinglee"},"content":"    public void setIngredient(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":350,"author":{"gitId":"kangtinglee"},"content":"        requireAllNonNull(target, editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":351,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":352,"author":{"gitId":"kangtinglee"},"content":"        ingredientBook.setIngredient(target, editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":353,"author":{"gitId":"kangtinglee"},"content":"        List\u003cDish\u003e dishesToEdit \u003d getDishesByIngredients(target);","lastModifiedDate":"2021-04-11"},{"lineNumber":354,"author":{"gitId":"kangtinglee"},"content":"        for (Dish targetDish : dishesToEdit) {","lastModifiedDate":"2021-04-11"},{"lineNumber":355,"author":{"gitId":"kangtinglee"},"content":"            Dish updatedDish \u003d targetDish.updateIngredient(target, editedIngredient);","lastModifiedDate":"2021-04-11"},{"lineNumber":356,"author":{"gitId":"kangtinglee"},"content":"            setDish(targetDish, updatedDish);","lastModifiedDate":"2021-04-11"},{"lineNumber":357,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":358,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":359,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":360,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":361,"author":{"gitId":"kangtinglee"},"content":"    public void decreaseIngredient(Ingredient target, int decreaseQuantity) {","lastModifiedDate":"2021-04-04"},{"lineNumber":362,"author":{"gitId":"kangtinglee"},"content":"        Ingredient decreasedIngredient \u003d new Ingredient(target.getName(), target.getQuantity() - decreaseQuantity);","lastModifiedDate":"2021-04-04"},{"lineNumber":363,"author":{"gitId":"kangtinglee"},"content":"        this.setIngredient(target, decreasedIngredient);","lastModifiedDate":"2021-04-04"},{"lineNumber":364,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":365,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":366,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":367,"author":{"gitId":"kangtinglee"},"content":"    public void decreaseIngredientByOrder(Order order) {","lastModifiedDate":"2021-04-04"},{"lineNumber":368,"author":{"gitId":"kangtinglee"},"content":"        List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList \u003d order.getDishQuantityList();","lastModifiedDate":"2021-04-04"},{"lineNumber":369,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":370,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cDish, Integer\u003e dishPair: dishQuantityList) {","lastModifiedDate":"2021-04-04"},{"lineNumber":371,"author":{"gitId":"kangtinglee"},"content":"            int dishQuantity \u003d dishPair.getValue();","lastModifiedDate":"2021-04-04"},{"lineNumber":372,"author":{"gitId":"kangtinglee"},"content":"            List\u003cPair\u003cIngredient, Integer\u003e\u003e ingredientList \u003d dishPair.getKey().getIngredientQuantityList();","lastModifiedDate":"2021-04-04"},{"lineNumber":373,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":374,"author":{"gitId":"kangtinglee"},"content":"            for (Pair\u003cIngredient, Integer\u003e ingredientPair: ingredientList) {","lastModifiedDate":"2021-04-04"},{"lineNumber":375,"author":{"gitId":"kangtinglee"},"content":"                String ingredientName \u003d ingredientPair.getKey().getName();","lastModifiedDate":"2021-04-04"},{"lineNumber":376,"author":{"gitId":"kangtinglee"},"content":"                Ingredient ingredientNeeded \u003d ingredientBook.getIngredientByName(ingredientName);","lastModifiedDate":"2021-04-04"},{"lineNumber":377,"author":{"gitId":"kangtinglee"},"content":"                int decreaseQuantity \u003d ingredientPair.getValue() * dishQuantity;","lastModifiedDate":"2021-04-04"},{"lineNumber":378,"author":{"gitId":"kangtinglee"},"content":"                decreaseIngredient(ingredientNeeded, decreaseQuantity);","lastModifiedDate":"2021-04-04"},{"lineNumber":379,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":380,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":381,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":382,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":383,"author":{"gitId":"kangtinglee"},"content":"    private void increaseIngredient(Ingredient target, int increaseQuantity) {","lastModifiedDate":"2021-04-11"},{"lineNumber":384,"author":{"gitId":"kangtinglee"},"content":"        Ingredient increase \u003d new Ingredient(target.getName(), target.getQuantity() + increaseQuantity);","lastModifiedDate":"2021-04-09"},{"lineNumber":385,"author":{"gitId":"kangtinglee"},"content":"        this.setIngredient(target, increase);","lastModifiedDate":"2021-04-04"},{"lineNumber":386,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":387,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":388,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":389,"author":{"gitId":"kangtinglee"},"content":"    public void increaseIngredientByName(String name, int increaseQuantity) {","lastModifiedDate":"2021-04-09"},{"lineNumber":390,"author":{"gitId":"kangtinglee"},"content":"        Ingredient ingredient \u003d ingredientBook.getIngredientByName(name);","lastModifiedDate":"2021-04-09"},{"lineNumber":391,"author":{"gitId":"kangtinglee"},"content":"        increaseIngredient(ingredient, increaseQuantity);","lastModifiedDate":"2021-04-09"},{"lineNumber":392,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":393,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":394,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":395,"author":{"gitId":"kangtinglee"},"content":"    public void increaseIngredientByOrder(Order order) {","lastModifiedDate":"2021-04-04"},{"lineNumber":396,"author":{"gitId":"kangtinglee"},"content":"        List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList \u003d order.getDishQuantityList();","lastModifiedDate":"2021-04-04"},{"lineNumber":397,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":398,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cDish, Integer\u003e dishPair: dishQuantityList) {","lastModifiedDate":"2021-04-04"},{"lineNumber":399,"author":{"gitId":"kangtinglee"},"content":"            int dishQuantity \u003d dishPair.getValue();","lastModifiedDate":"2021-04-04"},{"lineNumber":400,"author":{"gitId":"kangtinglee"},"content":"            List\u003cPair\u003cIngredient, Integer\u003e\u003e ingredientList \u003d dishPair.getKey().getIngredientQuantityList();","lastModifiedDate":"2021-04-04"},{"lineNumber":401,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":402,"author":{"gitId":"kangtinglee"},"content":"            for (Pair\u003cIngredient, Integer\u003e ingredientPair: ingredientList) {","lastModifiedDate":"2021-04-04"},{"lineNumber":403,"author":{"gitId":"kangtinglee"},"content":"                String ingredientName \u003d ingredientPair.getKey().getName();","lastModifiedDate":"2021-04-04"},{"lineNumber":404,"author":{"gitId":"kangtinglee"},"content":"                Ingredient ingredientNeeded \u003d ingredientBook.getIngredientByName(ingredientName);","lastModifiedDate":"2021-04-04"},{"lineNumber":405,"author":{"gitId":"kangtinglee"},"content":"                int increaseQuantity \u003d ingredientPair.getValue() * dishQuantity;","lastModifiedDate":"2021-04-04"},{"lineNumber":406,"author":{"gitId":"kangtinglee"},"content":"                increaseIngredient(ingredientNeeded, increaseQuantity);","lastModifiedDate":"2021-04-04"},{"lineNumber":407,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":408,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":409,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":410,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":411,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":412,"author":{"gitId":"kangtinglee"},"content":"    public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":413,"author":{"gitId":"kangtinglee"},"content":"        return filteredIngredients;","lastModifiedDate":"2021-03-13"},{"lineNumber":414,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":415,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":416,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":417,"author":{"gitId":"kangtinglee"},"content":"    public void updateFilteredIngredientList(Predicate\u003c? super Ingredient\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":418,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":419,"author":{"gitId":"kangtinglee"},"content":"        filteredIngredients.setPredicate(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":420,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":421,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":422,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":423,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":424,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cDish\u003e getDishesByIngredients(Ingredient ingredient) {","lastModifiedDate":"2021-03-26"},{"lineNumber":425,"author":{"gitId":"kangtinglee"},"content":"        List\u003cDish\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":426,"author":{"gitId":"kangtinglee"},"content":"        List\u003cDish\u003e dishes \u003d getDishBook().getItemList();","lastModifiedDate":"2021-04-11"},{"lineNumber":427,"author":{"gitId":"kangtinglee"},"content":"        for (Dish d : dishes) {","lastModifiedDate":"2021-03-26"},{"lineNumber":428,"author":{"gitId":"kangtinglee"},"content":"            if (d.contains(ingredient)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":429,"author":{"gitId":"kangtinglee"},"content":"                result.add(d);","lastModifiedDate":"2021-03-26"},{"lineNumber":430,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":431,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":432,"author":{"gitId":"kangtinglee"},"content":"        return result;","lastModifiedDate":"2021-03-26"},{"lineNumber":433,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":434,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":435,"author":{"gitId":"kangtinglee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Orders \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":436,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":437,"author":{"gitId":"kangtinglee"},"content":"    public void setOrderBook(ReadOnlyBook\u003cOrder\u003e orderBook) {","lastModifiedDate":"2021-04-11"},{"lineNumber":438,"author":{"gitId":"kangtinglee"},"content":"        this.orderBook.resetData(orderBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":439,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":440,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":441,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":442,"author":{"gitId":"kangtinglee"},"content":"    public ReadOnlyBook\u003cOrder\u003e getOrderBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":443,"author":{"gitId":"kangtinglee"},"content":"        return orderBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":444,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":445,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":446,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":447,"author":{"gitId":"kangtinglee"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-13"},{"lineNumber":448,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":449,"author":{"gitId":"kangtinglee"},"content":"        return orderBook.hasOrder(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":450,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":451,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":452,"author":{"gitId":"kangtinglee"},"content":"    public void deleteOrder(Order target) {","lastModifiedDate":"2021-03-13"},{"lineNumber":453,"author":{"gitId":"kangtinglee"},"content":"        orderBook.removeOrder(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":454,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":455,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":456,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":457,"author":{"gitId":"kangtinglee"},"content":"     * Deletes orders","lastModifiedDate":"2021-04-11"},{"lineNumber":458,"author":{"gitId":"kangtinglee"},"content":"     * @param orders","lastModifiedDate":"2021-04-11"},{"lineNumber":459,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":460,"author":{"gitId":"kangtinglee"},"content":"    public void deleteOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-26"},{"lineNumber":461,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : orders) {","lastModifiedDate":"2021-03-26"},{"lineNumber":462,"author":{"gitId":"kangtinglee"},"content":"            deleteOrder(o);","lastModifiedDate":"2021-03-26"},{"lineNumber":463,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":464,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":465,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":466,"author":{"gitId":"kangtinglee"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-03-13"},{"lineNumber":467,"author":{"gitId":"kangtinglee"},"content":"        orderBook.addOrder(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":468,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":469,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":470,"author":{"gitId":"kangtinglee"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-13"},{"lineNumber":471,"author":{"gitId":"kangtinglee"},"content":"        requireAllNonNull(target, editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":472,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":473,"author":{"gitId":"kangtinglee"},"content":"        orderBook.setOrder(target, editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":474,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":475,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":476,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":477,"author":{"gitId":"kangtinglee"},"content":"    public void cancelOrder(Order target) {","lastModifiedDate":"2021-03-30"},{"lineNumber":478,"author":{"gitId":"kangtinglee"},"content":"        orderBook.cancelOrder(target);","lastModifiedDate":"2021-04-01"},{"lineNumber":479,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":480,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":481,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":482,"author":{"gitId":"kangtinglee"},"content":"    public void cancelOrders(List\u003cOrder\u003e targets) {","lastModifiedDate":"2021-03-31"},{"lineNumber":483,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : targets) {","lastModifiedDate":"2021-03-31"},{"lineNumber":484,"author":{"gitId":"kangtinglee"},"content":"            cancelOrder(o);","lastModifiedDate":"2021-03-31"},{"lineNumber":485,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":486,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":487,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":488,"author":{"gitId":"kangtinglee"},"content":"    //@@ author kangtinglee","lastModifiedDate":"2021-04-01"},{"lineNumber":489,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":490,"author":{"gitId":"kangtinglee"},"content":"    public boolean canFulfilOrder(Order target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":491,"author":{"gitId":"kangtinglee"},"content":"        List\u003cPair\u003cDish, Integer\u003e\u003e dishesList \u003d target.getDishQuantityList();","lastModifiedDate":"2021-04-01"},{"lineNumber":492,"author":{"gitId":"kangtinglee"},"content":"        HashMap\u003cIngredient, Integer\u003e ingredientsTable \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":493,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cDish, Integer\u003e p : dishesList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":494,"author":{"gitId":"kangtinglee"},"content":"            for (Pair\u003cIngredient, Integer\u003e d : p.getKey().getIngredientQuantityList()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":495,"author":{"gitId":"kangtinglee"},"content":"                if (!ingredientsTable.containsKey(d.getKey())) {","lastModifiedDate":"2021-04-01"},{"lineNumber":496,"author":{"gitId":"kangtinglee"},"content":"                    ingredientsTable.put(d.getKey(), 0);","lastModifiedDate":"2021-04-01"},{"lineNumber":497,"author":{"gitId":"kangtinglee"},"content":"                }","lastModifiedDate":"2021-04-01"},{"lineNumber":498,"author":{"gitId":"kangtinglee"},"content":"                ingredientsTable.put(d.getKey(), ingredientsTable.get(d.getKey()) + d.getValue() * p.getValue());","lastModifiedDate":"2021-04-01"},{"lineNumber":499,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":500,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":501,"author":{"gitId":"kangtinglee"},"content":"        for (Ingredient i : ingredientsTable.keySet()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":502,"author":{"gitId":"kangtinglee"},"content":"            if (!ingredientBook.hasSufficientIngredients(i, ingredientsTable.get(i))) {","lastModifiedDate":"2021-04-11"},{"lineNumber":503,"author":{"gitId":"kangtinglee"},"content":"                return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":504,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":505,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":506,"author":{"gitId":"kangtinglee"},"content":"        return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":507,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":508,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":509,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":510,"author":{"gitId":"kangtinglee"},"content":"    public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":511,"author":{"gitId":"kangtinglee"},"content":"        return filteredOrders;","lastModifiedDate":"2021-04-01"},{"lineNumber":512,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":513,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":514,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":515,"author":{"gitId":"kangtinglee"},"content":"    public void updateFilteredOrderList(Predicate\u003c? super Order\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":516,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":517,"author":{"gitId":"kangtinglee"},"content":"        filteredOrders.setPredicate(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":518,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":519,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":520,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":521,"author":{"gitId":"kangtinglee"},"content":"    public void updateFilteredOrderList(Comparator\u003cOrder\u003e comparator) {","lastModifiedDate":"2021-04-01"},{"lineNumber":522,"author":{"gitId":"kangtinglee"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-04-01"},{"lineNumber":523,"author":{"gitId":"kangtinglee"},"content":"        orderBook.sortItemsByDateTime(comparator);","lastModifiedDate":"2021-04-01"},{"lineNumber":524,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":525,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":526,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":527,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cOrder\u003e getOrdersFromPerson(Person target) {","lastModifiedDate":"2021-03-26"},{"lineNumber":528,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":529,"author":{"gitId":"kangtinglee"},"content":"        ObservableList\u003cOrder\u003e orders \u003d getOrderBook().getItemList();","lastModifiedDate":"2021-04-11"},{"lineNumber":530,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : orders) {","lastModifiedDate":"2021-03-26"},{"lineNumber":531,"author":{"gitId":"kangtinglee"},"content":"            if (o.isFromCustomer(target)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":532,"author":{"gitId":"kangtinglee"},"content":"                result.add(o);","lastModifiedDate":"2021-03-26"},{"lineNumber":533,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":534,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":535,"author":{"gitId":"kangtinglee"},"content":"        return result;","lastModifiedDate":"2021-03-26"},{"lineNumber":536,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":537,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":538,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-04-01"},{"lineNumber":539,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cOrder\u003e getIncompleteOrdersFromPerson(Person target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":540,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":541,"author":{"gitId":"kangtinglee"},"content":"        List\u003cOrder\u003e orders \u003d getOrdersFromPerson(target);","lastModifiedDate":"2021-04-01"},{"lineNumber":542,"author":{"gitId":"kangtinglee"},"content":"        for (Order o : orders) {","lastModifiedDate":"2021-04-01"},{"lineNumber":543,"author":{"gitId":"kangtinglee"},"content":"            if (o.getState() \u003d\u003d Order.State.UNCOMPLETED) {","lastModifiedDate":"2021-04-01"},{"lineNumber":544,"author":{"gitId":"kangtinglee"},"content":"                result.add(o);","lastModifiedDate":"2021-04-01"},{"lineNumber":545,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":546,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":547,"author":{"gitId":"kangtinglee"},"content":"        return result;","lastModifiedDate":"2021-04-01"},{"lineNumber":548,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":549,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":550,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":551,"author":{"gitId":"kangtinglee"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":552,"author":{"gitId":"kangtinglee"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":553,"author":{"gitId":"kangtinglee"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":554,"author":{"gitId":"kangtinglee"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":555,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":556,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":557,"author":{"gitId":"kangtinglee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":558,"author":{"gitId":"kangtinglee"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":559,"author":{"gitId":"kangtinglee"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":560,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":561,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":562,"author":{"gitId":"kangtinglee"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":563,"author":{"gitId":"kangtinglee"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":564,"author":{"gitId":"kangtinglee"},"content":"        return personBook.equals(other.personBook)","lastModifiedDate":"2021-03-13"},{"lineNumber":565,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":566,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":567,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":568,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":569,"author":{"gitId":"kangtinglee"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kangtinglee":430,"-":79,"IanCKW":2,"jamesleeht":58}},{"path":"src/main/java/seedu/address/model/ReadOnlyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model;","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"public interface ReadOnlyBook\u003cT extends Item\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"    ObservableList\u003cT\u003e getItemList();","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"jamesleeht":7}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    Path getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    Path getDishBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    Path getIngredientBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    Path getOrderBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":15,"jamesleeht":6}},{"path":"src/main/java/seedu/address/model/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"public class UniqueItemList\u003cT extends Item\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    private ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    private ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * Check if list contains item","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     * @param toCheck","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * Add item to list","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     * @param toAdd","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"     * Set item","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"     * @param target","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"     * @param editedItem","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        if (!target.isSame(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"     * Remove item","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"     * @param toRemove","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"     * Set items based on replacement UniqueItemList","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"     * @param replacement","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"    public void setItems(UniqueItemList\u003cT\u003e replacement) {","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"     * Set items based on list","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"     * @param list","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"    public void setItems(List\u003cT\u003e list) {","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"        requireAllNonNull(list);","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        if (!itemsAreUnique(list)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"        internalList.setAll(list);","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"IanCKW"},"content":"     * Get items in the list","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"IanCKW"},"content":"     * @return","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"IanCKW"},"content":"    public ObservableList\u003cT\u003e getItems() {","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"IanCKW"},"content":"        return internalList;","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"IanCKW"},"content":"     * Sorts items based on comparator","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"IanCKW"},"content":"     * @param comparator","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"IanCKW"},"content":"    public void sort(Comparator\u003cT\u003e comparator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"IanCKW"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof UniqueItemList) // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 internalList.equals(((UniqueItemList) other).internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"jamesleeht"},"content":"    private boolean itemsAreUnique(List\u003cT\u003e list) {","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"jamesleeht"},"content":"        for (int i \u003d 0; i \u003c list.size() - 1; i++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"jamesleeht"},"content":"            for (int j \u003d i + 1; j \u003c list.size(); j++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"jamesleeht"},"content":"                if (list.get(i).isSame(list.get(j))) {","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"jamesleeht"},"content":"                    return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"jamesleeht"},"content":"                }","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"jamesleeht"},"content":"        return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"IanCKW":19,"jamesleeht":129}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    private Path personBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    private Path dishBookFilePath \u003d Paths.get(\"data\", \"dishbook.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    private Path ingredientBookFilePath \u003d Paths.get(\"data\", \"ingredientbook.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    private Path orderBookFilePath \u003d Paths.get(\"data\", \"orderbook.json\");","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        setPersonBookFilePath(newUserPrefs.getPersonBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        setDishBookFilePath(newUserPrefs.getDishBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        setIngredientBookFilePath(newUserPrefs.getIngredientBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        setOrderBookFilePath(newUserPrefs.getOrderBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"    public Path getPersonBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        return personBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    public void setPersonBookFilePath(Path personBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        this.personBookFilePath \u003d personBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    public Path getDishBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        return dishBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    public void setDishBookFilePath(Path dishBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(dishBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        this.dishBookFilePath \u003d dishBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    public Path getIngredientBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        return ingredientBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"    public void setIngredientBookFilePath(Path ingredientBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(ingredientBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientBookFilePath \u003d ingredientBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public Path getOrderBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        return orderBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"    public void setOrderBookFilePath(Path orderBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(orderBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"        this.orderBookFilePath \u003d orderBookFilePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 personBookFilePath.equals(o.personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"        return Objects.hash(guiSettings, personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"        sb.append(\"\\nLocal data file location : \" + personBookFilePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"jamesleeht":43}},{"path":"src/main/java/seedu/address/model/dish/Dish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"kangtinglee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Item;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"kangtinglee"},"content":"public class Dish implements Item {","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    private String name;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    private double price;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cPair\u003cIngredient, Integer\u003e\u003e ingredientQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * Dish constructor","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * @param name name of dish","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     * @param price price of dish","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredientQuantityList ingredients and their quantities","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public Dish(@JsonProperty(\"dish\") String name, @JsonProperty(\"price\") double price,","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"                @JsonProperty(\"ingredientQuantityList\") List\u003cPair\u003cIngredient, Integer\u003e\u003e ingredientQuantityList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientQuantityList \u003d ingredientQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public String getName() {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        return name;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    public double getPrice() {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        return price;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"kangtinglee"},"content":"    //@@author kangtinglee","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"kangtinglee"},"content":"    /** Checks if a particular ingredient is contained within this dish */","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"kangtinglee"},"content":"    public boolean contains(Ingredient ingredient) {","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cIngredient, Integer\u003e pair : getIngredientQuantityList()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"kangtinglee"},"content":"            if (pair.getKey().equals(ingredient)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"kangtinglee"},"content":"                return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"kangtinglee"},"content":"        return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"kangtinglee"},"content":"     * Checks if dish has an ingredient with keyword, case ignored","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"kangtinglee"},"content":"    public boolean containsIngredientKeyword(String keyword) {","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cIngredient, Integer\u003e pair : getIngredientQuantityList()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"kangtinglee"},"content":"            if (StringUtil.containsWordIgnoreCase(pair.getKey().getName(), keyword)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"kangtinglee"},"content":"                return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"kangtinglee"},"content":"        return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"kangtinglee"},"content":"    public List\u003cPair\u003cIngredient, Integer\u003e\u003e getIngredientQuantityList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"kangtinglee"},"content":"        return ingredientQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"kangtinglee"},"content":"    public String getIngredientsString() {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"kangtinglee"},"content":"        StringBuilder ingredientsBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cIngredient, Integer\u003e ingredientPair: ingredientQuantityList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"kangtinglee"},"content":"            String ingredientStr \u003d ingredientPair.getValue() + \" x \" + ingredientPair.getKey().getName() + \"\\n\";","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"kangtinglee"},"content":"            ingredientsBuilder.append(ingredientStr);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"kangtinglee"},"content":"        return ingredientsBuilder.toString();","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"kangtinglee"},"content":"     * Returns a new Dish object which is a copy of the current one but","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"kangtinglee"},"content":"     * with {@code target} replaced with {@code editedIngredient}.","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"kangtinglee"},"content":"     * @param target {@code Ingredient} object to be replaced","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"kangtinglee"},"content":"     * @param editedIngredient New (updated) {@code Ingredient} object to replace with","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"kangtinglee"},"content":"    public Dish updateIngredient(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"kangtinglee"},"content":"        List\u003cPair\u003cIngredient, Integer\u003e\u003e updatedQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cIngredient, Integer\u003e p : ingredientQuantityList) {","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"kangtinglee"},"content":"            if (p.getKey().equals(target)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"kangtinglee"},"content":"                updatedQuantityList.add(new Pair\u003c\u003e(editedIngredient, p.getValue()));","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"kangtinglee"},"content":"            } else {","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"kangtinglee"},"content":"                updatedQuantityList.add(p);","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"kangtinglee"},"content":"        return new Dish(name, price, updatedQuantityList);","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"kangtinglee"},"content":"    public boolean isSame(Item other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"kangtinglee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"kangtinglee"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"kangtinglee"},"content":"        if (!(other instanceof Dish)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"kangtinglee"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"kangtinglee"},"content":"        Dish otherDish \u003d (Dish) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"kangtinglee"},"content":"        return otherDish !\u003d null","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 this.getName().equals(otherDish.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"kangtinglee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"kangtinglee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"kangtinglee"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"kangtinglee"},"content":"        if (!(other instanceof Dish)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"kangtinglee"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"kangtinglee"},"content":"        Dish otherDish \u003d (Dish) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"kangtinglee"},"content":"        return otherDish.name.equals(name)","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 otherDish.price \u003d\u003d price","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"kangtinglee"},"content":"                \u0026\u0026 otherDish.getIngredientQuantityList().equals(ingredientQuantityList);","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"kangtinglee"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"kangtinglee"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"kangtinglee"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"kangtinglee"},"content":"        builder.append(\"Name: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"kangtinglee"},"content":"                .append(getName())","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"kangtinglee"},"content":"                .append(\"; Price: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"kangtinglee"},"content":"                .append(getPrice());","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"kangtinglee"},"content":"        if (!ingredientQuantityList.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"kangtinglee"},"content":"            builder.append(\"; Ingredients: \");","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"kangtinglee"},"content":"            for (Pair\u003cIngredient, Integer\u003e pair : ingredientQuantityList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"kangtinglee"},"content":"                builder.append(pair.getKey());","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"kangtinglee"},"content":"                builder.append(\" x\");","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"kangtinglee"},"content":"                builder.append(pair.getValue());","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"kangtinglee"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"kangtinglee"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kangtinglee":108,"Sharptail":1,"jamesleeht":37}},{"path":"src/main/java/seedu/address/model/dish/DishBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.UniqueItemList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public class DishBook implements ReadOnlyBook\u003cDish\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    private final UniqueItemList\u003cDish\u003e dishes;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"        dishes \u003d new UniqueItemList\u003cDish\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    public DishBook() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * Constructor to copy dishbook","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * @param toBeCopied dish to be copied","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public DishBook(ReadOnlyBook\u003cDish\u003e toBeCopied) {","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        this();","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"     * Set dishes from list","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"     * @param dishes list of dishes used to replace","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    public void setDishes(List\u003cDish\u003e dishes) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        this.dishes.setItems(dishes);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"     * Reset list data using new data","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     * @param newData","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    public void resetData(ReadOnlyBook\u003cDish\u003e newData) {","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        setDishes(newData.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"     * Check if dish exists","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @param dish","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"    public boolean hasDish(Dish dish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        return dishes.contains(dish);","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"     * Add new dish","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"     * @param dish dish to be added","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"    public void addDish(Dish dish) {","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        dishes.add(dish);","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"     * Set details of new dish","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"     * @param target target dish to be edited","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     * @param editedDish edited version of dish","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"    public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        dishes.setItem(target, editedDish);","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"     * Remove dish","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     * @param key dish to be removed","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    public void removeDish(Dish key) {","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        dishes.remove(key);","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        return dishes.asUnmodifiableObservableList().size() + \" Dishs\";","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"    public ObservableList\u003cDish\u003e getItemList() {","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"        return dishes.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof DishBook // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 dishes.equals(((DishBook) other).dishes));","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":102}},{"path":"src/main/java/seedu/address/model/dish/DishContainsIngredientNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":" * Predicate that checks if this dish contains an ingredient with specified name","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"public class DishContainsIngredientNamePredicate implements Predicate\u003cDish\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    private final String ingredientName;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"     * Initialize predicate with name of ingredient","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredientName ingredient name to look for","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    public DishContainsIngredientNamePredicate(String ingredientName) {","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientName \u003d ingredientName;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public boolean test(Dish dish) {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"        return dish.containsIngredientKeyword(ingredientName);","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof DishContainsIngredientNamePredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 ingredientName.equals(((DishContainsIngredientNamePredicate) other).ingredientName)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"jamesleeht":30}},{"path":"src/main/java/seedu/address/model/dish/DishNameContainsWordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.dish;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":" * Predicate that checks if this dish name contains keywords","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public class DishNameContainsWordsPredicate implements Predicate\u003cDish\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"     * Initialize predicate with list of keywords","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"     * @param keywords keywords to search for","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    public DishNameContainsWordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public boolean test(Dish dish) {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        return keywords.stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(dish.getName(), keyword));","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof DishNameContainsWordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 keywords.equals(((DishNameContainsWordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"jamesleeht":34}},{"path":"src/main/java/seedu/address/model/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":" * identity).","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":11}},{"path":"src/main/java/seedu/address/model/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"public class ItemNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"jamesleeht":6}},{"path":"src/main/java/seedu/address/model/ingredient/Ingredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Item;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"public class Ingredient implements Item {","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    private String name;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    private int quantity;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"     * Ingredient constructor","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"     * @param name name of ingredient","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"     * @param quantity quantity of ingredient","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    public Ingredient(@JsonProperty(\"name\") String name, @JsonProperty(\"quantity\") int quantity) {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public String getName() {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        return name;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    public int getQuantity() {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        return quantity;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    public boolean isSame(Item other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        if (!(other instanceof Ingredient)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        Ingredient otherIngredient \u003d (Ingredient) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        return otherIngredient !\u003d null","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 this.getName().equalsIgnoreCase(otherIngredient.getName());","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        if (!(other instanceof Ingredient)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        Ingredient otherIngredient \u003d (Ingredient) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        return this.name.equalsIgnoreCase(otherIngredient.name);","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"                .append(getName())","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"                .append(\"; Quantity: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"                .append(getQuantity());","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"Sharptail":3,"jamesleeht":68}},{"path":"src/main/java/seedu/address/model/ingredient/IngredientBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.ingredient;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.UniqueItemList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public class IngredientBook implements ReadOnlyBook\u003cIngredient\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    private final UniqueItemList\u003cIngredient\u003e ingredients;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"        ingredients \u003d new UniqueItemList\u003cIngredient\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    public IngredientBook() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"     * Constructor to copy ingredient book","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * @param toBeCopied ingredient book to be copied","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public IngredientBook(ReadOnlyBook\u003cIngredient\u003e toBeCopied) {","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        this();","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public Ingredient getIngredientByName(String name) {","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        for (Ingredient ingredient: ingredients) {","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"            if (ingredient.getName().equalsIgnoreCase(name)) {","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"                return ingredient;","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        return null;","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     * Set ingredients from list","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredients list of ingredients used to replace","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    public void setIngredients(List\u003cIngredient\u003e ingredients) {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        this.ingredients.setItems(ingredients);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"     * Reset list data using new data","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"     * @param newData new book data to be used","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"    public void resetData(ReadOnlyBook\u003cIngredient\u003e newData) {","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        setIngredients(newData.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"     * Check if ingredient exists","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredient ingredient to check for","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        return ingredients.contains(ingredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"     * Check if there are sufficient ingredients","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredient ingredient to look for","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * @param quantity quantity needed","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * @return if there are sufficient ingredients","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"kangtinglee"},"content":"    public boolean hasSufficientIngredients(Ingredient ingredient, int quantity) {","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"kangtinglee"},"content":"        for (Ingredient i : ingredients) {","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"kangtinglee"},"content":"            if (i.isSame(ingredient)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"kangtinglee"},"content":"                return i.getQuantity() \u003e\u003d quantity;","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"kangtinglee"},"content":"        return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"     * Add new ingredient","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredient ingreident to add","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        ingredients.add(ingredient);","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"     * Set ingredient details","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"     * @param target target ingredient to be edited","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"     * @param editedIngredient edited version of ingredient","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"    public void setIngredient(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"        ingredients.setItem(target, editedIngredient);","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"     * Remove ingredient","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"     * @param key ingredient to remove","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"    public void removeIngredient(Ingredient key) {","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"        ingredients.remove(key);","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"        return ingredients.asUnmodifiableObservableList().size() + \" Ingredients\";","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"    public ObservableList\u003cIngredient\u003e getItemList() {","lastModifiedDate":"2021-04-11"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"        return ingredients.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof IngredientBook // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 ingredients.equals(((IngredientBook) other).ingredients));","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kangtinglee":9,"Sharptail":9,"jamesleeht":107}},{"path":"src/main/java/seedu/address/model/ingredient/IngredientNameContainsWordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.ingredient;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":" * Predicate that checks if ingredient\u0027s name has specified keywords","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public class IngredientNameContainsWordsPredicate implements Predicate\u003cIngredient\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"     * Initialize predicate with list of keywords","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"     * @param keywords keywords to search for","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    public IngredientNameContainsWordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public boolean test(Ingredient ingredient) {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(ingredient.getName(), keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof IngredientNameContainsWordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 keywords.equals(((IngredientNameContainsWordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jamesleeht":34}},{"path":"src/main/java/seedu/address/model/ingredient/IngredientQuantityLessThanPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.ingredient;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":" * Predicate that checks if ingredient\u0027s quantity has less than this number.","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"public class IngredientQuantityLessThanPredicate implements Predicate\u003cIngredient\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    private final int quantity;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"     * Initialize predicate with quantity","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"     * @param quantity less than quantity to check for","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    public IngredientQuantityLessThanPredicate(int quantity) {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        this.quantity \u003d quantity;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public boolean test(Ingredient ingredient) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"        return ingredient.getQuantity() \u003c quantity;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof IngredientQuantityLessThanPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 quantity \u003d\u003d ((IngredientQuantityLessThanPredicate) other).quantity); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"jamesleeht":30}},{"path":"src/main/java/seedu/address/model/order/Order.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.order;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kangtinglee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Item;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"kangtinglee"},"content":"public class Order implements Item {","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"    public enum State {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"        UNCOMPLETED, COMPLETED, CANCELLED","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private Person customer;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    private State state \u003d State.UNCOMPLETED;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"     * Order constructor","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"     * @param dateTime","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * @param customer","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     * @param dishQuantityList","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"    public Order(@JsonProperty(\"datetime\") LocalDateTime dateTime, @JsonProperty(\"customer\") Person customer,","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                 @JsonProperty(\"dishQuantityList\") List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        this.dishQuantityList \u003d dishQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"     * Order constructor with state","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"     * @param dateTime","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"     * @param customer","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"     * @param dishQuantityList","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"     * @param state","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"    @JsonCreator","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"    public Order(@JsonProperty(\"datetime\") LocalDateTime dateTime, @JsonProperty(\"customer\") Person customer,","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"                 @JsonProperty(\"dishQuantityList\") List\u003cPair\u003cDish, Integer\u003e\u003e dishQuantityList, State state) {","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"        this.dishQuantityList \u003d dishQuantityList;","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"        this.state \u003d state;","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"    public String getStrDatetime() {","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"IanCKW"},"content":"    public LocalDateTime getDatetime() {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"IanCKW"},"content":"        return dateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    public Person getCustomer() {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        return customer;","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"kangtinglee"},"content":"    public boolean isFromCustomer(Person target) {","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"kangtinglee"},"content":"        return customer.equals(target);","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"    public List\u003cPair\u003cDish, Integer\u003e\u003e getDishQuantityList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        return dishQuantityList;","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"    public String getDishesString() {","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"        StringBuilder dishesBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"        for (Pair\u003cDish, Integer\u003e dishPair: dishQuantityList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"            String dishesStr \u003d dishPair.getValue() + \" x \" + dishPair.getKey().getName()","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"                    + \" - SGD \" + String.format(\"%.2f\", dishPair.getKey().getPrice()) + \"\\n\";","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"            dishesBuilder.append(dishesStr);","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"        return dishesBuilder.toString();","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":92,"author":{"gitId":"kangtinglee"},"content":"     * Returns a new Order object which is a copy of the current one but","lastModifiedDate":"2021-04-11"},{"lineNumber":93,"author":{"gitId":"kangtinglee"},"content":"     * with {@code customer} replaced with {@code editedPerson}.","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"kangtinglee"},"content":"     * @param editedPerson New (updated) {@code Customer} object to replace with","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"kangtinglee"},"content":"     * @return Copy of {@code Order} object with {@code editedPerson} in the customer attribute instead","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"kangtinglee"},"content":"    public Order updateCustomer(Person editedPerson) {","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"IanCKW"},"content":"        if (state \u003d\u003d State.COMPLETED || state \u003d\u003d State.CANCELLED) {","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"IanCKW"},"content":"            return this;","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"IanCKW"},"content":"        return new Order(dateTime, editedPerson, dishQuantityList, state);","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":103,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":104,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":105,"author":{"gitId":"kangtinglee"},"content":"     * Returns a new Order object which is a copy of the current one but","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"kangtinglee"},"content":"     * with {@code target} dish replaced with {@code editedDish}.","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"kangtinglee"},"content":"     * @param target {@code Dish} object to be replaced with {@code editedDish}","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"kangtinglee"},"content":"     * @param editedDish New (updated) {@code Dish} object","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"kangtinglee"},"content":"     * @return Copy of {@code Order} object with {@code editedDish} in the {@code dishQuantityList} attribute instead","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":111,"author":{"gitId":"kangtinglee"},"content":"    public Order updateDish(Dish target, Dish editedDish) {","lastModifiedDate":"2021-04-11"},{"lineNumber":112,"author":{"gitId":"IanCKW"},"content":"        if (state \u003d\u003d State.COMPLETED || state \u003d\u003d State.CANCELLED) {","lastModifiedDate":"2021-04-11"},{"lineNumber":113,"author":{"gitId":"IanCKW"},"content":"            return this;","lastModifiedDate":"2021-04-11"},{"lineNumber":114,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":115,"author":{"gitId":"kangtinglee"},"content":"        List\u003cPair\u003cDish, Integer\u003e\u003e updatedQuantityList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cDish, Integer\u003e p : dishQuantityList) {","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"kangtinglee"},"content":"            if (p.getKey().equals(target)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"kangtinglee"},"content":"                updatedQuantityList.add(new Pair\u003c\u003e(editedDish, p.getValue()));","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"kangtinglee"},"content":"            } else {","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"kangtinglee"},"content":"                updatedQuantityList.add(p);","lastModifiedDate":"2021-04-11"},{"lineNumber":121,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-04-11"},{"lineNumber":122,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":123,"author":{"gitId":"IanCKW"},"content":"        return new Order(dateTime, customer, updatedQuantityList, state);","lastModifiedDate":"2021-04-11"},{"lineNumber":124,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":125,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":126,"author":{"gitId":"Sharptail"},"content":"    public double getTotalPrice() {","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"Sharptail"},"content":"        double totalPrice \u003d 0.0;","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"Sharptail"},"content":"        for (Pair\u003cDish, Integer\u003e dishPair: dishQuantityList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"Sharptail"},"content":"            totalPrice +\u003d dishPair.getKey().getPrice();","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"Sharptail"},"content":"        return totalPrice;","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"IanCKW"},"content":"    public String getDetails() {","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"IanCKW"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"IanCKW"},"content":"        String state;","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"IanCKW"},"content":"        if (getState() \u003d\u003d State.UNCOMPLETED) {","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"IanCKW"},"content":"            state \u003d \"(Uncompleted)\";","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"IanCKW"},"content":"        } else if (getState() \u003d\u003d State.COMPLETED) {","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"IanCKW"},"content":"            state \u003d \"(Completed) \";","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"IanCKW"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"IanCKW"},"content":"            state \u003d \"(Cancelled) \";","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"IanCKW"},"content":"        builder.append(state)","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"IanCKW"},"content":"                .append(\"Datetime: \")","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"IanCKW"},"content":"                .append(getStrDatetime())","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"IanCKW"},"content":"                .append(\"\\nCustomer: \")","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"IanCKW"},"content":"                .append(getCustomer());","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"IanCKW"},"content":"        if (!dishQuantityList.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"IanCKW"},"content":"            builder.append(\"\\nDishes: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"IanCKW"},"content":"            for (Pair\u003cDish, Integer\u003e pair : dishQuantityList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"IanCKW"},"content":"                builder.append(pair.getKey());","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"IanCKW"},"content":"                builder.append(\" x\");","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"IanCKW"},"content":"                builder.append(pair.getValue());","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"IanCKW"},"content":"                builder.append(\"\\n\");","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"Sharptail"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"IanCKW"},"content":"    public State getState() {","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"IanCKW"},"content":"        return state;","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"IanCKW"},"content":"    public Order setState(State newState) {","lastModifiedDate":"2021-04-11"},{"lineNumber":169,"author":{"gitId":"IanCKW"},"content":"        return new Order(dateTime, customer, dishQuantityList, newState);","lastModifiedDate":"2021-04-11"},{"lineNumber":170,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"    // Predicate methods","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"    public boolean containsCustomerKeyword(String name) {","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"jamesleeht"},"content":"        return StringUtil.containsWordIgnoreCase(customer.getName(), name);","lastModifiedDate":"2021-04-01"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":177,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":178,"author":{"gitId":"Sharptail"},"content":"     * Checks if dish contains given keyword","lastModifiedDate":"2021-04-01"},{"lineNumber":179,"author":{"gitId":"Sharptail"},"content":"     * @param keyword keyword to be checked","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"Sharptail"},"content":"     * @return true if dish contans given keyword","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"jamesleeht"},"content":"    public boolean containsDishKeyword(String keyword) {","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"jamesleeht"},"content":"        for (Pair\u003cDish, Integer\u003e pair : getDishQuantityList()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":184,"author":{"gitId":"jamesleeht"},"content":"            if (StringUtil.containsWordIgnoreCase(pair.getKey().getName(), keyword)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":185,"author":{"gitId":"jamesleeht"},"content":"                return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":186,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"jamesleeht"},"content":"        return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":190,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":191,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":192,"author":{"gitId":"kangtinglee"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"kangtinglee"},"content":"     * Checks if a particular object is contained within the current one","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"kangtinglee"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"kangtinglee"},"content":"     * @param dish","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"kangtinglee"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"kangtinglee"},"content":"    public boolean contains(Dish dish) {","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"kangtinglee"},"content":"        for (Pair\u003cDish, Integer\u003e p : dishQuantityList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"kangtinglee"},"content":"            if (p.getKey().isSame(dish)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"kangtinglee"},"content":"                return true;","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"kangtinglee"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"kangtinglee"},"content":"        return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"kangtinglee"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"guanyz"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":207,"author":{"gitId":"guanyz"},"content":"     * Two orders are only the same if every one of their fields matches.","lastModifiedDate":"2021-04-01"},{"lineNumber":208,"author":{"gitId":"guanyz"},"content":"     * Otherwise, they are different orders.","lastModifiedDate":"2021-04-01"},{"lineNumber":209,"author":{"gitId":"guanyz"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":210,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"jamesleeht"},"content":"    public boolean isSame(Item other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"guanyz"},"content":"        return this.equals(other);","lastModifiedDate":"2021-04-01"},{"lineNumber":213,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":214,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":215,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":216,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":217,"author":{"gitId":"jamesleeht"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":218,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"kangtinglee"},"content":"        if (!(other instanceof Order)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":222,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":225,"author":{"gitId":"jamesleeht"},"content":"        Order otherOrder \u003d (Order) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":226,"author":{"gitId":"IanCKW"},"content":"        return otherOrder.getStrDatetime().equals(getStrDatetime())","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 otherOrder.getCustomer().equals(getCustomer())","lastModifiedDate":"2021-03-13"},{"lineNumber":228,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 listEquals(otherOrder.getDishQuantityList());","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":230,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"jamesleeht"},"content":"    private boolean listEquals(List\u003cPair\u003cDish, Integer\u003e\u003e otherList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"jamesleeht"},"content":"        if (otherList.size() !\u003d dishQuantityList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":233,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":235,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":236,"author":{"gitId":"jamesleeht"},"content":"        boolean result \u003d true;","lastModifiedDate":"2021-03-13"},{"lineNumber":237,"author":{"gitId":"jamesleeht"},"content":"        for (int i \u003d 0; i \u003c dishQuantityList.size(); i++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":238,"author":{"gitId":"jamesleeht"},"content":"            Pair\u003cDish, Integer\u003e current \u003d dishQuantityList.get(i);","lastModifiedDate":"2021-03-13"},{"lineNumber":239,"author":{"gitId":"jamesleeht"},"content":"            Pair\u003cDish, Integer\u003e other \u003d otherList.get(i);","lastModifiedDate":"2021-03-13"},{"lineNumber":240,"author":{"gitId":"jamesleeht"},"content":"            result \u003d current.equals(other);","lastModifiedDate":"2021-03-13"},{"lineNumber":241,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":242,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":243,"author":{"gitId":"jamesleeht"},"content":"        return result;","lastModifiedDate":"2021-03-13"},{"lineNumber":244,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":245,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":246,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":247,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":248,"author":{"gitId":"jamesleeht"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-13"},{"lineNumber":249,"author":{"gitId":"guanyz"},"content":"        builder.append(\"Datetime: \")","lastModifiedDate":"2021-03-16"},{"lineNumber":250,"author":{"gitId":"IanCKW"},"content":"                .append(getStrDatetime())","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"jamesleeht"},"content":"                .append(\"; Customer: \")","lastModifiedDate":"2021-03-13"},{"lineNumber":252,"author":{"gitId":"jamesleeht"},"content":"                .append(getCustomer());","lastModifiedDate":"2021-03-13"},{"lineNumber":253,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":254,"author":{"gitId":"jamesleeht"},"content":"        if (!dishQuantityList.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":255,"author":{"gitId":"jamesleeht"},"content":"            builder.append(\"; Dishes: \");","lastModifiedDate":"2021-03-13"},{"lineNumber":256,"author":{"gitId":"jamesleeht"},"content":"            for (Pair\u003cDish, Integer\u003e pair : dishQuantityList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":257,"author":{"gitId":"jamesleeht"},"content":"                builder.append(pair.getKey());","lastModifiedDate":"2021-03-13"},{"lineNumber":258,"author":{"gitId":"jamesleeht"},"content":"                builder.append(\" x\");","lastModifiedDate":"2021-03-13"},{"lineNumber":259,"author":{"gitId":"jamesleeht"},"content":"                builder.append(pair.getValue());","lastModifiedDate":"2021-03-13"},{"lineNumber":260,"author":{"gitId":"jamesleeht"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":261,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":262,"author":{"gitId":"jamesleeht"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":263,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":264,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"kangtinglee":48,"Sharptail":30,"guanyz":6,"IanCKW":79,"jamesleeht":101}},{"path":"src/main/java/seedu/address/model/order/OrderBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.order;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.UniqueItemList;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"public class OrderBook implements ReadOnlyBook\u003cOrder\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    private final UniqueItemList\u003cOrder\u003e orders;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    {","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"        orders \u003d new UniqueItemList\u003cOrder\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    public OrderBook() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"     * Constructor to copy order book","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"     * @param toBeCopied","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    public OrderBook(ReadOnlyBook\u003cOrder\u003e toBeCopied) {","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"        this();","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"     * Set orders from list","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * @param orders","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public void setOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        this.orders.setItems(orders);","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     * Reset data to specified data","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     * @param newData","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    public void resetData(ReadOnlyBook\u003cOrder\u003e newData) {","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        setOrders(newData.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * Check if order exists","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     * @param order","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"     * @return result","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"    public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        return orders.contains(order);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"     * Add order to list","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"     * @param order order to be added","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"    public void addOrder(Order order) {","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        orders.add(order);","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"     * Set order to new order details","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     * @param target target order to be edited","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * @param editedOrder edited version of order","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"    public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        orders.setItem(target, editedOrder);","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     * Remove specific order","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"     * @param key order to be removed","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"    public void removeOrder(Order key) {","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        orders.remove(key);","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"IanCKW"},"content":"     * Cancel an order","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"     * @param key order to be cancelled","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"IanCKW"},"content":"    public void cancelOrder(Order key) {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"IanCKW"},"content":"        key.setState(Order.State.CANCELLED);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"IanCKW"},"content":"     * Sorts item with a comparator that compares datetime","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"     * @param comp comparator to use for sorting","lastModifiedDate":"2021-04-11"},{"lineNumber":95,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"    public void sortItemsByDateTime(Comparator\u003cOrder\u003e comp) {","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"        orders.sort(comp);","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"        return orders.asUnmodifiableObservableList().size() + \" orders\";","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"    public ObservableList\u003cOrder\u003e getItemList() {","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"        return orders.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof OrderBook // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 orders.equals(((OrderBook) other).orders));","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"IanCKW":13,"jamesleeht":104}},{"path":"src/main/java/seedu/address/model/order/OrderContainsCustomerNamesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.order;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":" * Tests that an order contains customer name that has these keywords","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"public class OrderContainsCustomerNamesPredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"    public OrderContainsCustomerNamesPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"        return keywords.stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"                .anyMatch(order::containsCustomerKeyword);","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof OrderContainsCustomerNamesPredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 keywords.equals(((OrderContainsCustomerNamesPredicate) other).keywords)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"jamesleeht":29}},{"path":"src/main/java/seedu/address/model/order/OrderContainsDishNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.order;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":" * Tests that a Order\u0027s dish name contains this keyword","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"public class OrderContainsDishNamePredicate implements Predicate\u003cOrder\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"    private final String keyword;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"    public OrderContainsDishNamePredicate(String keyword) {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    public boolean test(Order order) {","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"        return order.containsDishKeyword(keyword);","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof OrderContainsDishNamePredicate // instanceof handles nulls","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 keyword.equals(((OrderContainsDishNamePredicate) other).keyword)); // state check","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"jamesleeht":27}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Item;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public class Person implements Item {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private final String name;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    private final String phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private final String email;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    private final String address;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cString\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    public Person(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"                  @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                  @JsonProperty(\"tags\") List\u003cString\u003e tags) {","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    public String getName() {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"    public String getPhone() {","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    public String getEmail() {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"    public String getAddress() {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    public List\u003cString\u003e getTags() {","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        return Collections.unmodifiableList(tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public boolean isSame(Item other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"        List\u003cString\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":107,"jamesleeht":38}},{"path":"src/main/java/seedu/address/model/person/PersonBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.UniqueItemList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"public class PersonBook implements ReadOnlyBook\u003cPerson\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"    private final UniqueItemList\u003cPerson\u003e persons;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"        persons \u003d new UniqueItemList\u003cPerson\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    public PersonBook() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    public PersonBook(ReadOnlyBook\u003cPerson\u003e toBeCopied) {","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        this.persons.setItems(persons);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    public void resetData(ReadOnlyBook\u003cPerson\u003e newData) {","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"        setPersons(newData.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        persons.setItem(target, editedPerson);","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"    public ObservableList\u003cPerson\u003e getItemList() {","lastModifiedDate":"2021-04-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof PersonBook // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 persons.equals(((PersonBook) other).persons));","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":95,"jamesleeht":15}},{"path":"src/main/java/seedu/address/model/person/PersonNameContainsWordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public class PersonNameContainsWordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    public PersonNameContainsWordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName(), keyword));","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"                || (other instanceof PersonNameContainsWordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"                \u0026\u0026 keywords.equals(((PersonNameContainsWordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":26,"jamesleeht":5}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Pair;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientBook;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"guanyz"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderBook;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    private static Ingredient potato \u003d new Ingredient(\"Potato\", 50);","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    private static Ingredient chicken \u003d new Ingredient(\"Chicken\", 50);","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    private static Ingredient lettuce \u003d new Ingredient(\"Lettuce\", 50);","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    private static Ingredient beefPatty \u003d new Ingredient(\"Beef patty\", 50);","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    private static Ingredient burgerBun \u003d new Ingredient(\"Burger bun\", 30);","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    private static Dish potatoSalad \u003d new Dish(\"Potato salad\", 6.50,","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"guanyz"},"content":"            new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e(Arrays.asList(","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(potato, 1),","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(lettuce, 1)","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"guanyz"},"content":"            )));","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    private static Dish burger \u003d new Dish(\"Burger\", 11.50,","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"guanyz"},"content":"            new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e(Arrays.asList(","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(burgerBun, 1),","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(beefPatty, 1),","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(lettuce, 1)","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"guanyz"},"content":"            )));","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    private static Dish wings \u003d new Dish(\"Chicken wings\", 6.00,","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"guanyz"},"content":"            new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e(Arrays.asList(","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(chicken, 1)","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"            )));","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    private static Dish fries \u003d new Dish(\"French fries\", 5.50,","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"guanyz"},"content":"            new ArrayList\u003cPair\u003cIngredient, Integer\u003e\u003e(Arrays.asList(","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"guanyz"},"content":"                    new Pair\u003c\u003e(potato, 1)","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"guanyz"},"content":"            )));","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    private static Person alex \u003d new Person(\"Alex Yeoh\", \"87438807\", \"alexyeoh@example.com\",","lastModifiedDate":"2021-04-09"},{"lineNumber":51,"author":{"gitId":"guanyz"},"content":"            \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"guanyz"},"content":"            getTagList(\"gluten allergy\"));","lastModifiedDate":"2021-04-04"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"    private static Person bernice \u003d new Person(\"Bernice Yu\", \"99272758\", \"berniceyu@example.com\",","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"guanyz"},"content":"            \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"guanyz"},"content":"            getTagList(\"regular\", \"seafood allergy\"));","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"    private static Person charlotte \u003d new Person(\"Charlotte Oliveiro\", \"93210283\", \"charlotte@example.com\",","lastModifiedDate":"2021-04-09"},{"lineNumber":57,"author":{"gitId":"guanyz"},"content":"            \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"            getTagList(\"vegan\"));","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    private static Person david \u003d new Person(\"David Li\", \"91031282\", \"lidavid@example.com\",","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"guanyz"},"content":"            \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"guanyz"},"content":"            getTagList(\"employee discount\"));","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    private static Person ibrahim \u003d new Person(\"Irfan Ibrahim\", \"92492021\", \"irfan@example.com\",","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"guanyz"},"content":"            \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"guanyz"},"content":"            getTagList(\"regular\"));","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"    private static Person roy \u003d new Person(\"Roy Balakrishnan\", \"92624417\", \"royb@example.com\",","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"guanyz"},"content":"            \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"guanyz"},"content":"            getTagList(\"regular\"));","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2021-04-04"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"        return new Person[] { alex, bernice, charlotte, david, ibrahim, roy };","lastModifiedDate":"2021-04-09"},{"lineNumber":71,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":72,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"guanyz"},"content":"    public static Dish[] getSampleDishes() {","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"guanyz"},"content":"        // dummy dishes to populate order list","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"        return new Dish[] { potatoSalad, burger, wings, fries };","lastModifiedDate":"2021-04-09"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    public static Ingredient[] getSampleIngredients() {","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"        return new Ingredient[] { potato, chicken, lettuce, beefPatty, burgerBun };","lastModifiedDate":"2021-04-09"},{"lineNumber":81,"author":{"gitId":"guanyz"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public static Order[] getSampleOrders() {","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"guanyz"},"content":"        return new Order[] {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"IanCKW"},"content":"            new Order(LocalDateTime.parse(\"14-02-2021 18:30\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"IanCKW"},"content":"                    bernice,","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"guanyz"},"content":"                    new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"guanyz"},"content":"                            new Pair\u003c\u003e(burger, 2),","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"guanyz"},"content":"                            new Pair\u003c\u003e(wings, 2)","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"guanyz"},"content":"                    ))),","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"IanCKW"},"content":"            new Order(LocalDateTime.parse(\"14-02-2021 19:15\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\")),","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"IanCKW"},"content":"                    david,","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"guanyz"},"content":"                    new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"guanyz"},"content":"                            new Pair\u003c\u003e(burger, 1),","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"guanyz"},"content":"                            new Pair\u003c\u003e(fries, 1)","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"guanyz"},"content":"                    )))","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"    public static ReadOnlyBook\u003cPerson\u003e getSamplePersonBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"        PersonBook sampleAb \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"    public static ReadOnlyBook\u003cDish\u003e getSampleDishBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"        DishBook sampleDb \u003d new DishBook();","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"        for (Dish sampleDish : getSampleDishes()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"            sampleDb.addDish(sampleDish);","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"        return sampleDb;","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    public static ReadOnlyBook\u003cOrder\u003e getSampleOrderBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"        OrderBook sampleOb \u003d new OrderBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"        for (Order sampleOrder : getSampleOrders()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"            sampleOb.addOrder(sampleOrder);","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"        return sampleOb;","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"    public static ReadOnlyBook\u003cIngredient\u003e getSampleIngredientBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"        IngredientBook sampleIb \u003d new IngredientBook();","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"        for (Ingredient sampleIngredient : getSampleIngredients()) {","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"            sampleIb.addIngredient(sampleIngredient);","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"        return sampleIb;","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"    public static List\u003cString\u003e getTagList(String... strings) {","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(strings));","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Sharptail":18,"-":26,"guanyz":46,"IanCKW":6,"jamesleeht":44}},{"path":"src/main/java/seedu/address/storage/BookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.Item;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"public interface BookStorage\u003cT extends Item\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"    Path getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"     * Returns AddressBook data as a {@link ReadOnlyPersonBook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    Optional\u003cReadOnlyBook\u003cT\u003e\u003e readBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    Optional\u003cReadOnlyBook\u003cT\u003e\u003e readBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     * Saves the given {@link ReadOnlyPersonBook} to the storage.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     * @param book cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    void saveBook(ReadOnlyBook\u003cT\u003e book) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     * @see #saveBook(T)","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    void saveBook(ReadOnlyBook\u003cT\u003e book, Path filePath) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":26,"jamesleeht":16}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public interface Storage extends UserPrefsStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Address Book \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public Path getPersonBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cPerson\u003e\u003e readPersonBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cPerson\u003e\u003e readPersonBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    public void savePersonBook(ReadOnlyBook\u003cPerson\u003e addressBook) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    public void savePersonBook(ReadOnlyBook\u003cPerson\u003e addressBook, Path filePath) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DishBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    public Path getDishBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cDish\u003e\u003e readDishBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cDish\u003e\u003e readDishBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    public void saveDishBook(ReadOnlyBook\u003cDish\u003e addressBook) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    public void saveDishBook(ReadOnlyBook\u003cDish\u003e dishBook, Path filePath) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d IngredientBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    public Path getIngredientBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cIngredient\u003e\u003e readIngredientBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cIngredient\u003e\u003e readIngredientBook(Path filePath)","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"    public void saveIngredientBook(ReadOnlyBook\u003cIngredient\u003e addressBook) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"    public void saveIngredientBook(ReadOnlyBook\u003cIngredient\u003e ingredientBook, Path filePath) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OrderBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    public Path getOrderBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cOrder\u003e\u003e readOrderBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cOrder\u003e\u003e readOrderBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"    public void saveOrderBook(ReadOnlyBook\u003cOrder\u003e addressBook) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"    public void saveOrderBook(ReadOnlyBook\u003cOrder\u003e orderBook, Path filePath) throws IOException;","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":25,"jamesleeht":44}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private BookStorage\u003cPerson\u003e personBookStorage;","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    private BookStorage\u003cDish\u003e dishBookStorage;","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    private BookStorage\u003cIngredient\u003e ingredientBookStorage;","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    private BookStorage\u003cOrder\u003e orderBookStorage;","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public StorageManager(BookStorage\u003cPerson\u003e personBookStorage,","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                          BookStorage\u003cDish\u003e dishBookStorage,","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"                          BookStorage\u003cIngredient\u003e ingredientBookStorage,","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                          BookStorage\u003cOrder\u003e orderBookStorage,","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        this.personBookStorage \u003d personBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        this.dishBookStorage \u003d dishBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        this.ingredientBookStorage \u003d ingredientBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        this.orderBookStorage \u003d orderBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PersonBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    public Path getPersonBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        return personBookStorage.getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cPerson\u003e\u003e readPersonBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        return readPersonBook(personBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cPerson\u003e\u003e readPersonBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        return personBookStorage.readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    public void savePersonBook(ReadOnlyBook\u003cPerson\u003e addressBook) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        savePersonBook(addressBook, personBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"    public void savePersonBook(ReadOnlyBook\u003cPerson\u003e addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"        personBookStorage.saveBook(addressBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DishBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"    public Path getDishBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"        return dishBookStorage.getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cDish\u003e\u003e readDishBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"        return readDishBook(dishBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cDish\u003e\u003e readDishBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"        return dishBookStorage.readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"    public void saveDishBook(ReadOnlyBook\u003cDish\u003e addressBook) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"        saveDishBook(addressBook, dishBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"    public void saveDishBook(ReadOnlyBook\u003cDish\u003e dishBook, Path filePath) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"        dishBookStorage.saveBook(dishBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d IngredientBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"    public Path getIngredientBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"        return ingredientBookStorage.getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cIngredient\u003e\u003e readIngredientBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"        return readIngredientBook(ingredientBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cIngredient\u003e\u003e readIngredientBook(Path filePath)","lastModifiedDate":"2021-04-11"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"jamesleeht"},"content":"        return ingredientBookStorage.readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"jamesleeht"},"content":"    public void saveIngredientBook(ReadOnlyBook\u003cIngredient\u003e addressBook) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":143,"author":{"gitId":"jamesleeht"},"content":"        saveIngredientBook(addressBook, ingredientBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"jamesleeht"},"content":"    public void saveIngredientBook(ReadOnlyBook\u003cIngredient\u003e ingredientBook, Path filePath) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":148,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"jamesleeht"},"content":"        ingredientBookStorage.saveBook(ingredientBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"jamesleeht"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OrderBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"jamesleeht"},"content":"    public Path getOrderBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"jamesleeht"},"content":"        return orderBookStorage.getBookFilePath();","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cOrder\u003e\u003e readOrderBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":160,"author":{"gitId":"jamesleeht"},"content":"        return readOrderBook(orderBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cOrder\u003e\u003e readOrderBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"jamesleeht"},"content":"        return orderBookStorage.readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"    public void saveOrderBook(ReadOnlyBook\u003cOrder\u003e addressBook) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":171,"author":{"gitId":"jamesleeht"},"content":"        saveOrderBook(addressBook, orderBookStorage.getBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"jamesleeht"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"    public void saveOrderBook(ReadOnlyBook\u003cOrder\u003e orderBook, Path filePath) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"jamesleeht"},"content":"        orderBookStorage.saveBook(orderBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":64,"jamesleeht":116}},{"path":"src/main/java/seedu/address/storage/dish/JsonDishBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.dish;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"public class JsonDishBookStorage implements BookStorage\u003cDish\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPersonBookStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public JsonDishBookStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public Path getBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     * Returns AddressBook data as a {@link ReadOnlyBook}.","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cDish\u003e\u003e readBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        return readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @see #getBookFilePath()","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cDish\u003e\u003e readBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cJsonSerializableDishBook\u003e jsonDishBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"                filePath, JsonSerializableDishBook.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        if (!jsonDishBook.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            return Optional.of(jsonDishBook.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     * Saves the given {@link ReadOnlyBook} to the storage.","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * @param dishBook cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyBook\u003cDish\u003e dishBook) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        saveBook(dishBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     * @see #saveBook(ReadOnlyBook\u003cDish\u003e)","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyBook\u003cDish\u003e book, Path filePath) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(book);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDishBook(book), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":87}},{"path":"src/main/java/seedu/address/storage/dish/JsonSerializableDishBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.dish;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.DishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":" * An immutable DishBook that is serializable to JSON format.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"@JsonRootName(value \u003d \"dishbook\")","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializableDishBook {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"Dish list contains duplicate dishes.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cDish\u003e dishes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableDishBook(@JsonProperty(\"dishes\") List\u003cDish\u003e dishes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        this.dishes.addAll(dishes);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableDishBook(ReadOnlyBook\u003cDish\u003e source) {","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        dishes.addAll(source.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public DishBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        DishBook dishBook \u003d new DishBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        dishBook.setDishes(dishes);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        return dishBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":43}},{"path":"src/main/java/seedu/address/storage/ingredient/JsonIngredientBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.ingredient;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"public class JsonIngredientBookStorage implements BookStorage\u003cIngredient\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPersonBookStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public JsonIngredientBookStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public Path getBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     * Returns AddressBook data as a {@link ReadOnlyBook}.","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cIngredient\u003e\u003e readBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        return readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @see #getBookFilePath()","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cIngredient\u003e\u003e readBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cJsonSerializableIngredientBook\u003e jsonIngredientBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"                filePath, JsonSerializableIngredientBook.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        if (!jsonIngredientBook.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            return Optional.of(jsonIngredientBook.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     * Saves the given {@link ReadOnlyBook} to the storage.","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * @param ingredientBook cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyBook\u003cIngredient\u003e ingredientBook) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        saveBook(ingredientBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     * @see #saveBook(ReadOnlyBook)","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyBook\u003cIngredient\u003e ingredientBook, Path filePath) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(ingredientBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableIngredientBook(ingredientBook), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":87}},{"path":"src/main/java/seedu/address/storage/ingredient/JsonSerializableIngredientBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.ingredient;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.IngredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":" * An immutable IngredientBook that is serializable to JSON format.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"@JsonRootName(value \u003d \"ingredientbook\")","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializableIngredientBook {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"Ingredient list contains duplicate ingredients.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cIngredient\u003e ingredients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableIngredientBook(@JsonProperty(\"ingredients\") List\u003cIngredient\u003e ingredients) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        this.ingredients.addAll(ingredients);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableIngredientBook(ReadOnlyBook\u003cIngredient\u003e source) {","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        ingredients.addAll(source.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"     * Returns model type","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"     * @return IngredientBook model","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public IngredientBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        IngredientBook ingredientBook \u003d new IngredientBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        ingredientBook.setIngredients(ingredients);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        return ingredientBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":43}},{"path":"src/main/java/seedu/address/storage/order/JsonOrderBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.order;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"public class JsonOrderBookStorage implements BookStorage\u003cOrder\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPersonBookStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    public JsonOrderBookStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    public Path getBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        return filePath;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"     * Returns AddressBook data as a {@link ReadOnlyBook}.","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cOrder\u003e\u003e readBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        return readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"     * @see #getBookFilePath()","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cOrder\u003e\u003e readBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cJsonSerializableOrderBook\u003e jsonOrderBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"                filePath, JsonSerializableOrderBook.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        if (!jsonOrderBook.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            return Optional.of(jsonOrderBook.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"     * Saves the given {@link ReadOnlyBook} to the storage.","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"     * @param orderBook cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyBook\u003cOrder\u003e orderBook) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        saveBook(orderBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"     * @see #saveBook(ReadOnlyBook)","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyBook\u003cOrder\u003e orderBook, Path filePath) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(orderBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableOrderBook(orderBook), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":87}},{"path":"src/main/java/seedu/address/storage/order/JsonSerializableOrderBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.order;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.OrderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":" * An immutable OrderBook that is serializable to JSON format.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"@JsonRootName(value \u003d \"orderbook\")","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializableOrderBook {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public static final String MESSAGE_DUPLICATE_DISH \u003d \"Order list contains duplicate orders.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cOrder\u003e orders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableOrderBook(@JsonProperty(\"orders\") List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"jamesleeht"},"content":"        this.orders.addAll(orders);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializableOrderBook(ReadOnlyBook\u003cOrder\u003e source) {","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        orders.addAll(source.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"     * To model type","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"     * @return OrderBook model type","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    public OrderBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        OrderBook orderBook \u003d new OrderBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        orderBook.setOrders(orders);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        return orderBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"jamesleeht":42}},{"path":"src/main/java/seedu/address/storage/person/JsonPersonBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.person;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.BookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"public class JsonPersonBookStorage implements BookStorage\u003cPerson\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPersonBookStorage.class);","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    public JsonPersonBookStorage(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    public Path getBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cPerson\u003e\u003e readBook() throws DataConversionException {","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"        return readBook(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"     * Similar to {@link #readBook()}.","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    public Optional\u003cReadOnlyBook\u003cPerson\u003e\u003e readBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        Optional\u003cJsonSerializablePersonBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"                filePath, JsonSerializablePersonBook.class);","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyBook\u003cPerson\u003e personBook) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        saveBook(personBook, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"     * Similar to {@link #saveBook(ReadOnlyPersonBook)}.","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"    public void saveBook(ReadOnlyBook\u003cPerson\u003e personBook, Path filePath) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        requireNonNull(personBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePersonBook(personBook), filePath);","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":62,"jamesleeht":20}},{"path":"src/main/java/seedu/address/storage/person/JsonSerializablePersonBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jamesleeht"},"content":"package seedu.address.storage.person;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializablePersonBook {","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    private final List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializablePersonBook(@JsonProperty(\"persons\") List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    public JsonSerializablePersonBook(ReadOnlyBook\u003cPerson\u003e source) {","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        persons.addAll(source.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    public PersonBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"        PersonBook personBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"        personBook.setPersons(persons);","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        return personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":41,"jamesleeht":12}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w15-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Sharptail":1,"-":101}},{"path":"src/main/java/seedu/address/ui/InventoryCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"public class InventoryCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"InventoryListCard.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    public final Ingredient ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    private HBox inventoryCardPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    private Label id;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"    private Label name;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    private Label quantity;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"    public InventoryCard(Ingredient ingredient, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"        this.ingredient \u003d ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"        name.setText(ingredient.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        quantity.setText(\"Quantity: \" + String.valueOf(ingredient.getQuantity()));","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"        if (!(other instanceof InventoryCard)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"        // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"        InventoryCard card \u003d (InventoryCard) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 ingredient.equals(card.ingredient);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Sharptail":1,"IanCKW":61}},{"path":"src/main/java/seedu/address/ui/InventoryListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" * Panel containing the list of ingredients.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"public class InventoryListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"InventoryListPanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    private ListView\u003cIngredient\u003e inventoryListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"    public InventoryListPanel(ObservableList\u003cIngredient\u003e inventoryList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        inventoryListView.setItems(inventoryList);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        inventoryListView.setCellFactory(listView -\u003e new InventoryListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    class InventoryListViewCell extends ListCell\u003cIngredient\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"        protected void updateItem(Ingredient ingredient, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"            super.updateItem(ingredient, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"            if (empty || ingredient \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"                setText(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"                setGraphic(new InventoryCard(ingredient, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":45}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.net.URL;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.Cursor;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.Menu;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.MenuBar;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.ToggleButton;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.ToggleGroup;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"import javafx.stage.StageStyle;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    private static final int MENU_TAB_INDEX \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    private static final int ORDER_TAB_INDEX \u003d 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"    private static final int INVENTORY_TAB_INDEX \u003d 2;","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    private static double xOffset \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    private static double yOffset \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    private static final int DRAGGABLE_MARGIN \u003d 30;","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    private Boolean isResizing \u003d false;","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"    private double resizeX;","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    private double resizeY;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":65,"author":{"gitId":"IanCKW"},"content":"    private MenuListPanel menuListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"IanCKW"},"content":"    private InventoryListPanel inventoryListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"IanCKW"},"content":"    private OrderListPanel orderListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"    private ToggleGroup componentTabGroup;","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"    private MenuBar menuBar;","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"    private Menu menuSettings;","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"    private MenuItem exitMenuItem;","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"    private VBox personList;","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"    private VBox componentList;","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"IanCKW"},"content":"    private StackPane menuListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"IanCKW"},"content":"    private StackPane inventoryListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"IanCKW"},"content":"    private StackPane orderListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"Sharptail"},"content":"    private HBox componentTabs;","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"Sharptail"},"content":"    private ToggleButton menuTab;","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"Sharptail"},"content":"    private ToggleButton orderTab;","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"Sharptail"},"content":"    private ToggleButton inventoryTab;","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"Sharptail"},"content":"    private HBox statusbarPlaceholder;","lastModifiedDate":"2021-04-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"Sharptail"},"content":"    private final EventHandler\u003cActionEvent\u003e handleTabSelection \u003d event -\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"Sharptail"},"content":"        int selectedIndex \u003d componentTabGroup.getToggles().indexOf(componentTabGroup.getSelectedToggle());","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"Sharptail"},"content":"        componentTabGroup.selectToggle(null);","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"Sharptail"},"content":"        Object object \u003d event.getSource();","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"Sharptail"},"content":"        if (object instanceof ToggleButton) {","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"Sharptail"},"content":"            ToggleButton tab \u003d (ToggleButton) object;","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"Sharptail"},"content":"            tab.setSelected(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"Sharptail"},"content":"            try {","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"Sharptail"},"content":"                switch(selectedIndex) {","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"Sharptail"},"content":"                case MENU_TAB_INDEX:","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"Sharptail"},"content":"                    executeCommand(\"menu list\");","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"Sharptail"},"content":"                    break;","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"Sharptail"},"content":"                case ORDER_TAB_INDEX:","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"Sharptail"},"content":"                    executeCommand(\"order list\");","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"Sharptail"},"content":"                    break;","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"Sharptail"},"content":"                case INVENTORY_TAB_INDEX:","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"Sharptail"},"content":"                    executeCommand(\"inventory list\");","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"Sharptail"},"content":"                    break;","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"Sharptail"},"content":"                default:","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"Sharptail"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"Sharptail"},"content":"            } catch (CommandException | ParseException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"Sharptail"},"content":"                resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"Sharptail"},"content":"    };","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"Sharptail"},"content":"        setTransparentWindow();","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"Sharptail"},"content":"        setComponentTabsAction();","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"Sharptail"},"content":"        menuSettings.setGraphic(new ImageView(\"images/settings.png\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":175,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"Sharptail"},"content":"     * Removes windows border.","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"Sharptail"},"content":"    private void setTransparentWindow() {","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"Sharptail"},"content":"        primaryStage.initStyle(StageStyle.TRANSPARENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"Sharptail"},"content":"        setDraggableWindow();","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"Sharptail"},"content":"        setResizableWindow();","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"Sharptail"},"content":"     * Configures Menu Bar to be draggable to drag the window.","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"Sharptail"},"content":"    private void setDraggableWindow() {","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"Sharptail"},"content":"        menuBar.setOnMousePressed(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"Sharptail"},"content":"            @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"Sharptail"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"Sharptail"},"content":"                xOffset \u003d primaryStage.getX() - event.getScreenX();","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"Sharptail"},"content":"                yOffset \u003d primaryStage.getY() - event.getScreenY();","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"Sharptail"},"content":"        });","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"Sharptail"},"content":"        menuBar.setOnMouseDragged(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"Sharptail"},"content":"            @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"Sharptail"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"Sharptail"},"content":"                primaryStage.setX(event.getScreenX() + xOffset);","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"Sharptail"},"content":"                primaryStage.setY(event.getScreenY() + yOffset);","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"Sharptail"},"content":"        });","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"Sharptail"},"content":"     * Configures the right corner of status bar to resize the window.","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"Sharptail"},"content":"    private void setResizableWindow() {","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"Sharptail"},"content":"        setOnMouseEntered();","lastModifiedDate":"2021-04-10"},{"lineNumber":210,"author":{"gitId":"Sharptail"},"content":"        setOnMousePressed();","lastModifiedDate":"2021-04-10"},{"lineNumber":211,"author":{"gitId":"Sharptail"},"content":"        setOnMouseDragged();","lastModifiedDate":"2021-04-10"},{"lineNumber":212,"author":{"gitId":"Sharptail"},"content":"        setOnMouseExited();","lastModifiedDate":"2021-04-10"},{"lineNumber":213,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":214,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":215,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":216,"author":{"gitId":"Sharptail"},"content":"     * Changes mouse cursor to resize cursor when entered resizing zone","lastModifiedDate":"2021-04-10"},{"lineNumber":217,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":218,"author":{"gitId":"Sharptail"},"content":"    private void setOnMouseEntered() {","lastModifiedDate":"2021-04-10"},{"lineNumber":219,"author":{"gitId":"Sharptail"},"content":"        statusbarPlaceholder.setOnMouseEntered(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2021-04-10"},{"lineNumber":220,"author":{"gitId":"Sharptail"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2021-04-10"},{"lineNumber":221,"author":{"gitId":"Sharptail"},"content":"                primaryStage.getScene().setCursor(Cursor.NW_RESIZE);","lastModifiedDate":"2021-04-10"},{"lineNumber":222,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-04-10"},{"lineNumber":223,"author":{"gitId":"Sharptail"},"content":"        });","lastModifiedDate":"2021-04-10"},{"lineNumber":224,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":225,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":226,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":227,"author":{"gitId":"Sharptail"},"content":"     * Get the current coordinates of the cursor pressed.","lastModifiedDate":"2021-04-10"},{"lineNumber":228,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":229,"author":{"gitId":"Sharptail"},"content":"    private void setOnMousePressed() {","lastModifiedDate":"2021-04-10"},{"lineNumber":230,"author":{"gitId":"Sharptail"},"content":"        statusbarPlaceholder.setOnMousePressed(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"Sharptail"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"Sharptail"},"content":"                if (isDraggable(event)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"Sharptail"},"content":"                    isResizing \u003d true;","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"Sharptail"},"content":"                    resizeX \u003d primaryStage.getWidth() - event.getSceneX();","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"Sharptail"},"content":"                    resizeY \u003d primaryStage.getHeight() - event.getSceneY();","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"Sharptail"},"content":"                } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"Sharptail"},"content":"                    isResizing \u003d false;","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"Sharptail"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"Sharptail"},"content":"        });","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":242,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":244,"author":{"gitId":"Sharptail"},"content":"     * Calculates and resize the window based on the coordinates given by  {@link #setOnMousePressed()}","lastModifiedDate":"2021-04-10"},{"lineNumber":245,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":246,"author":{"gitId":"Sharptail"},"content":"    private void setOnMouseDragged() {","lastModifiedDate":"2021-04-10"},{"lineNumber":247,"author":{"gitId":"Sharptail"},"content":"        statusbarPlaceholder.setOnMouseDragged(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2021-03-31"},{"lineNumber":248,"author":{"gitId":"Sharptail"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"Sharptail"},"content":"                if (isResizing) {","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"Sharptail"},"content":"                    primaryStage.setWidth(event.getSceneX() + resizeX);","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"Sharptail"},"content":"                    primaryStage.setHeight(event.getSceneY() + resizeY);","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"Sharptail"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"Sharptail"},"content":"        });","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":257,"author":{"gitId":"Sharptail"},"content":"    private void setOnMouseExited() {","lastModifiedDate":"2021-04-10"},{"lineNumber":258,"author":{"gitId":"Sharptail"},"content":"        statusbarPlaceholder.setOnMouseExited(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2021-04-10"},{"lineNumber":259,"author":{"gitId":"Sharptail"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2021-04-10"},{"lineNumber":260,"author":{"gitId":"Sharptail"},"content":"                primaryStage.getScene().setCursor(Cursor.DEFAULT);","lastModifiedDate":"2021-04-10"},{"lineNumber":261,"author":{"gitId":"Sharptail"},"content":"            }","lastModifiedDate":"2021-04-10"},{"lineNumber":262,"author":{"gitId":"Sharptail"},"content":"        });","lastModifiedDate":"2021-04-10"},{"lineNumber":263,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":264,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":265,"author":{"gitId":"Sharptail"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"Sharptail"},"content":"     * Checks if the coordinates of the mouse position is within draggable margin","lastModifiedDate":"2021-03-31"},{"lineNumber":267,"author":{"gitId":"Sharptail"},"content":"     * @param  event OnMouseClick Event","lastModifiedDate":"2021-03-31"},{"lineNumber":268,"author":{"gitId":"Sharptail"},"content":"     * @return true if coordinates is within draggable margin","lastModifiedDate":"2021-03-31"},{"lineNumber":269,"author":{"gitId":"Sharptail"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":270,"author":{"gitId":"Sharptail"},"content":"    private boolean isDraggable(MouseEvent event) {","lastModifiedDate":"2021-03-31"},{"lineNumber":271,"author":{"gitId":"Sharptail"},"content":"        return event.getSceneX() \u003e primaryStage.getWidth() - DRAGGABLE_MARGIN","lastModifiedDate":"2021-03-31"},{"lineNumber":272,"author":{"gitId":"Sharptail"},"content":"                \u0026\u0026 event.getSceneY() \u003e primaryStage.getHeight() - DRAGGABLE_MARGIN;","lastModifiedDate":"2021-03-31"},{"lineNumber":273,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":274,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":275,"author":{"gitId":"Sharptail"},"content":"    private void setComponentTabsAction() {","lastModifiedDate":"2021-03-31"},{"lineNumber":276,"author":{"gitId":"Sharptail"},"content":"        menuTab.setOnAction(handleTabSelection);","lastModifiedDate":"2021-03-31"},{"lineNumber":277,"author":{"gitId":"Sharptail"},"content":"        orderTab.setOnAction(handleTabSelection);","lastModifiedDate":"2021-03-31"},{"lineNumber":278,"author":{"gitId":"Sharptail"},"content":"        inventoryTab.setOnAction(handleTabSelection);","lastModifiedDate":"2021-03-31"},{"lineNumber":279,"author":{"gitId":"Sharptail"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":280,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":283,"author":{"gitId":"Sharptail"},"content":"        setAccelerator(exitMenuItem, KeyCombination.valueOf(\"F2\"));","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":294,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":318,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":322,"author":{"gitId":"Sharptail"},"content":"        personList.getChildren().clear();","lastModifiedDate":"2021-03-23"},{"lineNumber":323,"author":{"gitId":"Sharptail"},"content":"        personList.getChildren().add(personListPanelPlaceholder);","lastModifiedDate":"2021-03-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":325,"author":{"gitId":"Sharptail"},"content":"        menuListPanel \u003d new MenuListPanel(logic.getFilteredDishList());","lastModifiedDate":"2021-03-23"},{"lineNumber":326,"author":{"gitId":"Sharptail"},"content":"        menuListPanelPlaceholder.getChildren().add(menuListPanel.getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":327,"author":{"gitId":"Sharptail"},"content":"        componentList.getChildren().clear();","lastModifiedDate":"2021-03-17"},{"lineNumber":328,"author":{"gitId":"Sharptail"},"content":"        componentList.getChildren().add(menuListPanelPlaceholder);","lastModifiedDate":"2021-03-23"},{"lineNumber":329,"author":{"gitId":"Sharptail"},"content":"        componentList.getChildren().add(componentTabs);","lastModifiedDate":"2021-03-31"},{"lineNumber":330,"author":{"gitId":"Sharptail"},"content":"        menuTab.setSelected(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":334,"author":{"gitId":"Sharptail"},"content":"        resultDisplay.setFeedbackToUser(Messages.MESSAGE_WELCOME);","lastModifiedDate":"2021-03-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":342,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":353,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":357,"author":{"gitId":"Sharptail"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":358,"author":{"gitId":"Sharptail"},"content":"            Desktop.getDesktop().browse(new URL(HelpWindow.USERGUIDE_URL).toURI());","lastModifiedDate":"2021-03-31"},{"lineNumber":359,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":360,"author":{"gitId":"Sharptail"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-31"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":381,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":382,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":383,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":384,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":388,"author":{"gitId":"jamesleeht"},"content":"            assert commandResult.type()","lastModifiedDate":"2021-03-30"},{"lineNumber":389,"author":{"gitId":"jamesleeht"},"content":"                    !\u003d CommandResult.CRtype.NONE : \"Command Result is not supposed to be a help or exit command\";","lastModifiedDate":"2021-03-30"},{"lineNumber":390,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":393,"author":{"gitId":"IanCKW"},"content":"            switch (commandResult.type()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":394,"author":{"gitId":"Sharptail"},"content":"            case PERSON:","lastModifiedDate":"2021-03-31"},{"lineNumber":395,"author":{"gitId":"Sharptail"},"content":"                updateCompList(personList, personListPanel,","lastModifiedDate":"2021-03-31"},{"lineNumber":396,"author":{"gitId":"Sharptail"},"content":"                        new PersonListPanel(logic.getFilteredPersonList()), personListPanelPlaceholder, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":397,"author":{"gitId":"IanCKW"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":398,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":399,"author":{"gitId":"Sharptail"},"content":"            case DISH:","lastModifiedDate":"2021-03-31"},{"lineNumber":400,"author":{"gitId":"Sharptail"},"content":"                updateCompList(componentList, menuListPanel,","lastModifiedDate":"2021-03-31"},{"lineNumber":401,"author":{"gitId":"Sharptail"},"content":"                        new MenuListPanel(logic.getFilteredDishList()), menuListPanelPlaceholder, menuTab);","lastModifiedDate":"2021-03-31"},{"lineNumber":402,"author":{"gitId":"IanCKW"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":403,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":404,"author":{"gitId":"Sharptail"},"content":"            case INGREDIENT:","lastModifiedDate":"2021-03-31"},{"lineNumber":405,"author":{"gitId":"Sharptail"},"content":"                updateCompList(componentList, inventoryListPanel,","lastModifiedDate":"2021-03-31"},{"lineNumber":406,"author":{"gitId":"Sharptail"},"content":"                        new InventoryListPanel(logic.getFilteredInventoryList()),","lastModifiedDate":"2021-03-31"},{"lineNumber":407,"author":{"gitId":"Sharptail"},"content":"                        inventoryListPanelPlaceholder, inventoryTab);","lastModifiedDate":"2021-03-31"},{"lineNumber":408,"author":{"gitId":"IanCKW"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":409,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":410,"author":{"gitId":"Sharptail"},"content":"            case ORDER:","lastModifiedDate":"2021-03-31"},{"lineNumber":411,"author":{"gitId":"Sharptail"},"content":"                updateCompList(componentList, orderListPanel,","lastModifiedDate":"2021-03-31"},{"lineNumber":412,"author":{"gitId":"IanCKW"},"content":"                        new OrderListPanel(logic.getFilteredOrderList()), orderListPanelPlaceholder, orderTab);","lastModifiedDate":"2021-04-01"},{"lineNumber":413,"author":{"gitId":"IanCKW"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":414,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":415,"author":{"gitId":"IanCKW"},"content":"            default:","lastModifiedDate":"2021-03-30"},{"lineNumber":416,"author":{"gitId":"IanCKW"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":417,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":418,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":423,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2021-03-17"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":432,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":434,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":435,"author":{"gitId":"Sharptail"},"content":"    private void updateCompList(VBox list, UiPart\u003cRegion\u003e panel, UiPart\u003cRegion\u003e newPanel,","lastModifiedDate":"2021-03-31"},{"lineNumber":436,"author":{"gitId":"Sharptail"},"content":"                                StackPane panelPlaceholder, ToggleButton tab) {","lastModifiedDate":"2021-03-31"},{"lineNumber":437,"author":{"gitId":"IanCKW"},"content":"        list.getChildren().clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":438,"author":{"gitId":"IanCKW"},"content":"        panelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":439,"author":{"gitId":"IanCKW"},"content":"        panel \u003d newPanel;","lastModifiedDate":"2021-03-30"},{"lineNumber":440,"author":{"gitId":"IanCKW"},"content":"        panelPlaceholder.getChildren().add(panel.getRoot());","lastModifiedDate":"2021-03-30"},{"lineNumber":441,"author":{"gitId":"IanCKW"},"content":"        list.getChildren().add(panelPlaceholder);","lastModifiedDate":"2021-03-30"},{"lineNumber":442,"author":{"gitId":"Sharptail"},"content":"        if (list.getId().equalsIgnoreCase(\"componentList\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":443,"author":{"gitId":"Sharptail"},"content":"            list.getChildren().add(componentTabs);","lastModifiedDate":"2021-03-31"},{"lineNumber":444,"author":{"gitId":"Sharptail"},"content":"            tab.setSelected(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":445,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":447,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Sharptail":225,"-":188,"IanCKW":32,"jamesleeht":2}},{"path":"src/main/java/seedu/address/ui/MenuCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":" * An UI component that displays information of a {@code dish}.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"public class MenuCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"MenuListCard.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    public final Dish dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    private HBox menuCardPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    private Label id;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"    private Label name;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    private Label ingredients;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    private Label price;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code MenuCard} with the given {@code dish} and index to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"    public MenuCard(Dish dish, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"        this.dish \u003d dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"        name.setText(dish.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        ingredients.setText(dish.getIngredientsString());","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        price.setText(\"SGD \" + String.format(\"%.2f\", dish.getPrice()));","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"        if (!(other instanceof MenuCard)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"        // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"        MenuCard card \u003d (MenuCard) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 dish.equals(card.dish);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Sharptail":4,"IanCKW":61}},{"path":"src/main/java/seedu/address/ui/MenuListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" * Panel containing the list of dishes.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"public class MenuListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"MenuListPanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    private ListView\u003cDish\u003e menuListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"    public MenuListPanel(ObservableList\u003cDish\u003e menuList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        menuListView.setItems(menuList);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        menuListView.setCellFactory(listView -\u003e new MenuListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    class MenuListViewCell extends ListCell\u003cDish\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"        protected void updateItem(Dish dish, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"            super.updateItem(dish, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"            if (empty || dish \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"                setText(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"                setGraphic(new MenuCard(dish, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":45}},{"path":"src/main/java/seedu/address/ui/OrderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":" * An UI component that displays information of a {@code order}.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"public class OrderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"OrderListCard.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    public final Order order;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    private HBox orderCardPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    private Label id;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    private Label status;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    private Label customerName;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    private Label dateTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    private Label dishes;","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    private Label totalPrice;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code OrderCode} with the given {@code Order} and index to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"    public OrderCard(Order order, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"        this.order \u003d order;","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        status.setText(\"[\" + order.getState().name() + \"]\");","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        customerName.setText(order.getCustomer().getName());","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        dateTime.setText(\"- \" + order.getStrDatetime());","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        dishes.setText(order.getDishesString());","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        totalPrice.setText(\"Total price: SGD \" + String.format(\"%.2f\", order.getTotalPrice()));","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"IanCKW"},"content":"        if (!(other instanceof OrderCard)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"IanCKW"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"IanCKW"},"content":"        // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"IanCKW"},"content":"        OrderCard card \u003d (OrderCard) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"IanCKW"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"IanCKW"},"content":"                \u0026\u0026 order.equals(card.order);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Sharptail":14,"IanCKW":58}},{"path":"src/main/java/seedu/address/ui/OrderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":" * Panel containing the list of orders.","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"public class OrderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"    private static final String FXML \u003d \"OrderListPanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"    private ListView\u003cOrder\u003e orderListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    public OrderListPanel(ObservableList\u003cOrder\u003e orderList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        orderListView.setItems(orderList);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"        orderListView.setCellFactory(listView -\u003e new OrderListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    class OrderListViewCell extends ListCell\u003cOrder\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"        protected void updateItem(Order order, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"            super.updateItem(order, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"            if (empty || order \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"                setText(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"                setGraphic(new OrderCard(order, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":46}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"        name.setText(person.getName());","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        phone.setText(person.getPhone());","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"        address.setText(person.getAddress());","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        email.setText(person.getEmail());","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag))","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag)));","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":70,"jamesleeht":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"* {","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"    primary-color: #b4d3ff;","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"    secondary-color: #e3f0ff;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    tertiary-color: #f9fbff;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"    quaternary-color: #90b5fd;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    quinary-color: #506ca4;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: primary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":".logo-left {","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    -fx-alignment: left;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":".main-v-box {","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: primary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    -fx-background-radius: 10 10 10 10;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    -fx-border-radius: 10 10 10 10;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    -fx-base: #FFFFFF;","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    -fx-control-inner-background: #FFFFFF;","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: derive(#FFFFFF, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":105,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: derive(#FFFFFF, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: primary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"Sharptail"},"content":"    /*-fx-background-color: rgba(255, 255, 255, 0.5);*/","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: secondary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"Sharptail"},"content":"    /*-fx-background-color: rgba(255, 255, 255, 0.7);*/","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: tertiary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: quinary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"Sharptail"},"content":"    -fx-background-radius: 20px;","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"Sharptail"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"Sharptail"},"content":".list-cell:filled:selected .label{","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"Sharptail"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"Sharptail"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":158,"author":{"gitId":"Sharptail"},"content":"     -fx-background-color: derive(#FFFFFF, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":162,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: primary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: derive(white, 10%);","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"Sharptail"},"content":"    -fx-border-width: 0px 0px 2px 0px;","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"Sharptail"},"content":"#commandBoxPlaceholder {","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"Sharptail"},"content":"    -fx-border-width: 2px 0px 2px 0px;","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"Sharptail"},"content":"#personList {","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: derive(white, 10%);","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"Sharptail"},"content":"    -fx-border-width: 0px 1px 0px 0px;","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"Sharptail"},"content":"#componentList {","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: derive(white, 10%);","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"Sharptail"},"content":"    -fx-border-width: 0px 0px 0px 1px;","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: derive(primary-color, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"Sharptail"},"content":"    -fx-background-radius: 0 0 10 10;","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"Sharptail"},"content":"    -fx-border-radius: 0 0 10 10;","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":190,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: derive(white, 10%);","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"Sharptail"},"content":"    -fx-border-width: 1px 1px 0px 1px;","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":194,"author":{"gitId":"Sharptail"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":203,"author":{"gitId":"Sharptail"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: derive(#FFFFFF, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: derive(#FFFFFF, 25%);","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: derive(#FFFFFF, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: derive(#FFFFFF, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":225,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: derive(#FFFFFF, 30%);","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: derive(#FFFFFF, 50%);","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"Sharptail"},"content":"    -fx-background-radius: 10 10 0 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"Sharptail"},"content":"    -fx-border-radius: 10 10 0 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"Sharptail"},"content":"    -fx-effect: innershadow(gaussian, primary-color, 10, 0, 0, 0);","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"Sharptail"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"Sharptail"},"content":".menu:hover {","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: secondary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"Sharptail"},"content":"    -fx-background-radius: 10px 0px 0px 0px;","lastModifiedDate":"2021-03-31"},{"lineNumber":257,"author":{"gitId":"Sharptail"},"content":"    -fx-border-radius: 10px 0px 0px 0px;","lastModifiedDate":"2021-03-31"},{"lineNumber":258,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-03-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"Sharptail"},"content":"  -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-03-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-03-31"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-03-31"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: derive(#FFFFFF, 25%);","lastModifiedDate":"2021-03-31"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: rgba(255, 255, 255, 0.7);","lastModifiedDate":"2021-03-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: quinary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":360,"author":{"gitId":"Sharptail"},"content":".component-tab-hbox {","lastModifiedDate":"2021-03-31"},{"lineNumber":361,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":362,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":363,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":364,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":365,"author":{"gitId":"Sharptail"},"content":".component-tab {","lastModifiedDate":"2021-03-31"},{"lineNumber":366,"author":{"gitId":"Sharptail"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-03-31"},{"lineNumber":367,"author":{"gitId":"Sharptail"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-31"},{"lineNumber":368,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":369,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":370,"author":{"gitId":"Sharptail"},"content":"    -fx-border-radius: 10px 10px 0px 0px;","lastModifiedDate":"2021-03-31"},{"lineNumber":371,"author":{"gitId":"Sharptail"},"content":"    -fx-background-radius: 10px 10px 0px 0px;","lastModifiedDate":"2021-03-31"},{"lineNumber":372,"author":{"gitId":"Sharptail"},"content":"    -fx-effect: innershadow(gaussian, primary-color, 10, 0, 0, 0);","lastModifiedDate":"2021-03-31"},{"lineNumber":373,"author":{"gitId":"Sharptail"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-31"},{"lineNumber":374,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":375,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":376,"author":{"gitId":"Sharptail"},"content":".component-tab:hover {","lastModifiedDate":"2021-03-31"},{"lineNumber":377,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: secondary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":378,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":379,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":380,"author":{"gitId":"Sharptail"},"content":".component-tab:selected {","lastModifiedDate":"2021-03-31"},{"lineNumber":381,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: quinary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":382,"author":{"gitId":"Sharptail"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":383,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":384,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":385,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":390,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":393,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":398,"author":{"gitId":"Sharptail"},"content":"    -fx-border-color: white;","lastModifiedDate":"2021-03-31"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":403,"author":{"gitId":"Sharptail"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-03-31"},{"lineNumber":404,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":406,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":407,"author":{"gitId":"Sharptail"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2021-03-31"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":410,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":411,"author":{"gitId":"Sharptail"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2021-03-31"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":413,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":415,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":418,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":420,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":427,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"Sharptail":116,"-":311}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"* {","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"    primary-color: #b4d3ff;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    secondary-color: #e3f0ff;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"    tertiary-color: #f9fbff;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    quaternary-color: #90b5fd;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    quinary-color: #506ca4;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    -fx-background: tertiary-color;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Sharptail":9,"-":19}},{"path":"src/main/resources/view/InventoryListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"\u003cHBox id\u003d\"inventoryCardPane\" fx:id\u003d\"inventoryCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"            \u003cLabel fx:id\u003d\"quantity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":33}},{"path":"src/main/resources/view/InventoryListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    \u003cListView fx:id\u003d\"inventoryListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"\u003cfx:root fx:id\u003d\"mainStage\" minHeight\u003d\"600\" minWidth\u003d\"700.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"JJIMY\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    \u003cScene fx:id\u003d\"mainScene\" fill\u003d\"#ffffff00\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"      \u003cVBox fx:id\u003d\"mainVBox\" styleClass\u003d\"main-v-box\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" nodeOrientation\u003d\"RIGHT_TO_LEFT\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"          \u003cMenu fx:id\u003d\"menuSettings\" mnemonicParsing\u003d\"false\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            \u003cMenuItem fx:id\u003d\"exitMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"                  \u003cInsets right\u003d\"-10.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"            \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"100.0\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"                  \u003cImageView fitHeight\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"logo-left\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"                     \u003cimage\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"                        \u003cImage url\u003d\"@../images/logo_left.png\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"                     \u003c/image\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"                  \u003cRegion maxHeight\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"                  \u003cImageView fitHeight\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"logo-center\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"                     \u003cimage\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"                        \u003cImage url\u003d\"@../images/logo_center.png\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"                     \u003c/image\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"                  \u003cRegion maxHeight\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"                  \u003cImageView fitHeight\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"logo-right\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"                     \u003cimage\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"                        \u003cImage url\u003d\"@../images/logo_right.png\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"                     \u003c/image\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"            \u003cHBox style\u003d\"-fx-background-color: white;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"                  \u003cVBox fx:id\u003d\"personList\" layoutX\u003d\"11.0\" layoutY\u003d\"11.0\" minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"                  \u003cVBox fx:id\u003d\"componentList\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" minWidth\u003d\"340.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"                        \u003cStackPane fx:id\u003d\"menuListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"                              \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"                           \u003c/padding\u003e\u003c/StackPane\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"                        \u003cStackPane fx:id\u003d\"inventoryListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"                              \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"                           \u003c/padding\u003e\u003c/StackPane\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"                        \u003cStackPane fx:id\u003d\"orderListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"                              \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"                           \u003c/padding\u003e\u003c/StackPane\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"                        \u003cHBox fx:id\u003d\"componentTabs\" alignment\u003d\"CENTER\" maxHeight\u003d\"50.0\" minHeight\u003d\"50.0\" prefHeight\u003d\"50.0\" styleClass\u003d\"component-tab-hbox\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":"                              \u003cToggleButton fx:id\u003d\"menuTab\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" styleClass\u003d\"component-tab\" text\u003d\"Menu\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"                                 \u003ctoggleGroup\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"                                    \u003cToggleGroup fx:id\u003d\"componentTabGroup\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"                                 \u003c/toggleGroup\u003e\u003c/ToggleButton\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"                              \u003cToggleButton fx:id\u003d\"orderTab\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" styleClass\u003d\"component-tab\" text\u003d\"Order\" toggleGroup\u003d\"$componentTabGroup\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"                              \u003cToggleButton fx:id\u003d\"inventoryTab\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" styleClass\u003d\"component-tab\" text\u003d\"Inventory\" toggleGroup\u003d\"$componentTabGroup\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"                           \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"Sharptail"},"content":"                              \u003cInsets /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"Sharptail"},"content":"                           \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"Sharptail"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"Sharptail"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"Sharptail"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"Sharptail"},"content":"            \u003cHBox fx:id\u003d\"statusbarPlaceholder\" alignment\u003d\"BOTTOM_RIGHT\"\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"Sharptail"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"                  \u003cImageView pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"Sharptail"},"content":"                     \u003cimage\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":113,"author":{"gitId":"Sharptail"},"content":"                        \u003cImage url\u003d\"@../images/resize.png\" /\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"Sharptail"},"content":"                     \u003c/image\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":115,"author":{"gitId":"Sharptail"},"content":"                     \u003cHBox.margin\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":116,"author":{"gitId":"Sharptail"},"content":"                        \u003cInsets bottom\u003d\"3.0\" left\u003d\"3.0\" right\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":117,"author":{"gitId":"Sharptail"},"content":"                     \u003c/HBox.margin\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":118,"author":{"gitId":"Sharptail"},"content":"                  \u003c/ImageView\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":119,"author":{"gitId":"Sharptail"},"content":"               \u003c/children\u003e\u003c/HBox\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Sharptail":92,"-":31}},{"path":"src/main/resources/view/MenuListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"\u003cHBox id\u003d\"menuCardPane\" fx:id\u003d\"menuCardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"dishName\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            \u003cLabel fx:id\u003d\"ingredients\" styleClass\u003d\"cell_small_label\" text\u003d\"ingredients\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            \u003cLabel fx:id\u003d\"price\" styleClass\u003d\"cell_small_label\" text\u003d\"price\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Sharptail":12,"IanCKW":20}},{"path":"src/main/resources/view/MenuListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    \u003cListView fx:id\u003d\"menuListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":8}},{"path":"src/main/resources/view/OrderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"\u003cHBox id\u003d\"orderCardPane\" fx:id\u003d\"orderCardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"            \u003cLabel fx:id\u003d\"customerName\" styleClass\u003d\"cell_big_label\" text\u003d\"customer\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            \u003cLabel fx:id\u003d\"dateTime\" text\u003d\"dateTime\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"                \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"status\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"         \u003cLabel fx:id\u003d\"dishes\" text\u003d\"dishes\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"         \u003cLabel fx:id\u003d\"totalPrice\" text\u003d\"totalPrice\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Sharptail":14,"IanCKW":20}},{"path":"src/main/resources/view/OrderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    \u003cListView fx:id\u003d\"orderListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"IanCKW":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"jamesleeht"},"content":"    \"tags\": [ \"friends\" ]","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":13,"jamesleeht":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ \"friends\" ]","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ \"friends\" ]","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    \"tags\" : [ ]","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":39,"jamesleeht":7}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"  \"personBookFilePath\" : \"addressbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"  \"dishBookFilePath\" : \"dishbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"  \"ingredientBookFilePath\" : \"ingredientbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"jamesleeht"},"content":"  \"orderBookFilePath\" : \"orderbook.json\"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":12,"jamesleeht":5}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"  \"personBookFilePath\" : \"addressbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"jamesleeht"},"content":"  \"dishBookFilePath\" : \"dishbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"  \"ingredientBookFilePath\" : \"ingredientbook.json\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"  \"orderBookFilePath\" : \"orderbook.json\"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":10,"jamesleeht":4}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"kangtinglee"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.CustomerParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.dish.JsonDishBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.ingredient.JsonIngredientBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.order.JsonOrderBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        JsonPersonBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"                new JsonPersonBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        JsonDishBookStorage dishBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"                new JsonDishBookStorage(temporaryFolder.resolve(\"dishbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        JsonIngredientBookStorage ingredientBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"                new JsonIngredientBookStorage(temporaryFolder.resolve(\"ingredientbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        JsonOrderBookStorage orderBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"                new JsonOrderBookStorage(temporaryFolder.resolve(\"orderbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, dishBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"                ingredientBookStorage, orderBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"kangtinglee"},"content":"        assertParseException(invalidCommand, String.format(MESSAGE_UNKNOWN_COMMAND, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"    public void execute_customerCommandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"        String deleteCommand \u003d \"customer delete 9\";","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"IanCKW"},"content":"        assertCommandException(deleteCommand, String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"IanCKW"},"content":"                Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"    public void execute_validCustomerCommand_success() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"        String listCommand \u003d CustomerParser.COMPONENT_WORD + \" \" + CustomerListCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(listCommand, CustomerListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"    public void execute_customerStorageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"        JsonPersonBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"                new JsonPersonBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, null, null, null, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"        String addCommand \u003d CustomerParser.COMPONENT_WORD + \" \" + CustomerAddCommand.COMMAND_WORD","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"                + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(model.getPersonBook(),","lastModifiedDate":"2021-04-11"},{"lineNumber":146,"author":{"gitId":"jamesleeht"},"content":"                model.getDishBook(),","lastModifiedDate":"2021-04-11"},{"lineNumber":147,"author":{"gitId":"jamesleeht"},"content":"                model.getIngredientBook(),","lastModifiedDate":"2021-04-11"},{"lineNumber":148,"author":{"gitId":"jamesleeht"},"content":"                model.getOrderBook(),","lastModifiedDate":"2021-04-11"},{"lineNumber":149,"author":{"gitId":"jamesleeht"},"content":"                new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"    private static class JsonPersonBookIoExceptionThrowingStub extends JsonPersonBookStorage {","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"        private JsonPersonBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"        public void saveBook(ReadOnlyBook\u003cPerson\u003e personBook, Path filePath) throws IOException {","lastModifiedDate":"2021-04-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kangtinglee":2,"Sharptail":11,"-":137,"IanCKW":2,"jamesleeht":27}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    public static final CustomerEditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    public static final CustomerEditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"        PersonBook expectedPersonBook \u003d new PersonBook(actualModel.getPersonBook());","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(expectedPersonBook, actualModel.getPersonBook());","lastModifiedDate":"2021-04-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"        final String[] splitName \u003d person.getName().split(\"\\\\s+\");","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"        model.updateFilteredPersonList(new PersonNameContainsWordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Sharptail":3,"-":120,"IanCKW":1,"jamesleeht":5}},{"path":"src/test/java/seedu/address/logic/commands/CustomerAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.customer.CustomerCommandUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommandIntegrationTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(model.getPersonBook(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerAddCommand(validPerson), model,","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"                String.format(CustomerAddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        Person personInList \u003d model.getPersonBook().getItemList().get(0);","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"guanyz"},"content":"        assertCommandFailure(new CustomerAddCommand(personInList), model, CustomerCommandUtil.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Sharptail":4,"-":39,"guanyz":2,"jamesleeht":2}},{"path":"src/test/java/seedu/address/logic/commands/CustomerAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"kangtinglee"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"guanyz"},"content":"import seedu.address.logic.commands.customer.CustomerCommandUtil;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.dish.Dish;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ingredient.Ingredient;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.order.Order;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CustomerAddCommand(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        CommandResult commandResult \u003d new CustomerAddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        assertEquals(String.format(CustomerAddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand addCommand \u003d new CustomerAddCommand(validPerson);","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"guanyz"},"content":"                CustomerCommandUtil.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand addAliceCommand \u003d new CustomerAddCommand(alice);","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand addBobCommand \u003d new CustomerAddCommand(bob);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand addAliceCommandCopy \u003d new CustomerAddCommand(alice);","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"        public Path getPersonBookFilePath() {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"        public void setPersonBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"        public void setPersonBook(ReadOnlyBook\u003cPerson\u003e newData) {","lastModifiedDate":"2021-04-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyBook\u003cPerson\u003e getPersonBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"kangtinglee"},"content":"        public Person getPersonByIndex(int i) {","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"jamesleeht"},"content":"        public void updateFilteredPersonList(Predicate\u003c? super Person\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"        public void setDishBook(ReadOnlyBook\u003cDish\u003e dishBook) {","lastModifiedDate":"2021-04-11"},{"lineNumber":166,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyBook\u003cDish\u003e getDishBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":171,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"        public boolean hasDish(Dish dish) {","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"guanyz"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"guanyz"},"content":"        public Dish getDishByIndex(int i) {","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"guanyz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"guanyz"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"guanyz"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"jamesleeht"},"content":"        public void deleteDish(Dish dish) {","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"jamesleeht"},"content":"        public void addDish(Dish dish) {","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"jamesleeht"},"content":"        public void setDish(Dish target, Dish editedDish) {","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"jamesleeht"},"content":"        public ObservableList\u003cDish\u003e getFilteredDishList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"jamesleeht"},"content":"        public void updateFilteredDishList(Predicate\u003c? super Dish\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":207,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":209,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":210,"author":{"gitId":"kangtinglee"},"content":"        public List\u003cDish\u003e getDishesByIngredients(Ingredient ingredient) {","lastModifiedDate":"2021-03-26"},{"lineNumber":211,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":212,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":213,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":214,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":215,"author":{"gitId":"kangtinglee"},"content":"        public Predicate\u003cDish\u003e getAvailableDishPredicate() {","lastModifiedDate":"2021-04-01"},{"lineNumber":216,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":217,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":218,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":219,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":220,"author":{"gitId":"kangtinglee"},"content":"        public boolean hasSufficientIngredients(Dish target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":221,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":222,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":223,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":224,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":225,"author":{"gitId":"kangtinglee"},"content":"        public boolean hasSufficientIngredients(Dish target, int quantity) {","lastModifiedDate":"2021-04-01"},{"lineNumber":226,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":227,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":228,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":229,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"jamesleeht"},"content":"        public void setIngredientBook(ReadOnlyBook\u003cIngredient\u003e ingredientBook) {","lastModifiedDate":"2021-04-11"},{"lineNumber":231,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyBook\u003cIngredient\u003e getIngredientBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":236,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":237,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":238,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":239,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":240,"author":{"gitId":"jamesleeht"},"content":"        public boolean hasIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":242,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"guanyz"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"guanyz"},"content":"        public Ingredient getIngredientByIndex(int i) {","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"guanyz"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":248,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":249,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":250,"author":{"gitId":"jamesleeht"},"content":"        public void deleteIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-14"},{"lineNumber":251,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":252,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":253,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":254,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":255,"author":{"gitId":"jamesleeht"},"content":"        public void addIngredient(Ingredient ingredient) {","lastModifiedDate":"2021-03-14"},{"lineNumber":256,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":257,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":258,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":259,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":260,"author":{"gitId":"jamesleeht"},"content":"        public void setIngredient(Ingredient target, Ingredient editedIngredient) {","lastModifiedDate":"2021-03-14"},{"lineNumber":261,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":262,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":263,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":264,"author":{"gitId":"Sharptail"},"content":"        @Override","lastModifiedDate":"2021-04-09"},{"lineNumber":265,"author":{"gitId":"Sharptail"},"content":"        public void decreaseIngredient(Ingredient target, int quantity) {","lastModifiedDate":"2021-04-09"},{"lineNumber":266,"author":{"gitId":"Sharptail"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-09"},{"lineNumber":267,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":268,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":269,"author":{"gitId":"Sharptail"},"content":"        @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":270,"author":{"gitId":"Sharptail"},"content":"        public void decreaseIngredientByOrder(Order order) {","lastModifiedDate":"2021-04-04"},{"lineNumber":271,"author":{"gitId":"Sharptail"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-04"},{"lineNumber":272,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":273,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":274,"author":{"gitId":"Sharptail"},"content":"        @Override","lastModifiedDate":"2021-04-09"},{"lineNumber":275,"author":{"gitId":"Sharptail"},"content":"        public void increaseIngredientByName(String name, int quantity) {","lastModifiedDate":"2021-04-09"},{"lineNumber":276,"author":{"gitId":"Sharptail"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-09"},{"lineNumber":277,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":278,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":279,"author":{"gitId":"Sharptail"},"content":"        @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":280,"author":{"gitId":"Sharptail"},"content":"        public void increaseIngredientByOrder(Order order) {","lastModifiedDate":"2021-04-04"},{"lineNumber":281,"author":{"gitId":"Sharptail"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-04"},{"lineNumber":282,"author":{"gitId":"Sharptail"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":283,"author":{"gitId":"Sharptail"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":284,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":285,"author":{"gitId":"jamesleeht"},"content":"        public ObservableList\u003cIngredient\u003e getFilteredIngredientList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":286,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":287,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":288,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":289,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":290,"author":{"gitId":"jamesleeht"},"content":"        public void updateFilteredIngredientList(Predicate\u003c? super Ingredient\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":295,"author":{"gitId":"jamesleeht"},"content":"        public void setOrderBook(ReadOnlyBook\u003cOrder\u003e orderBook) {","lastModifiedDate":"2021-04-11"},{"lineNumber":296,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":297,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":298,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":299,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":300,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyBook\u003cOrder\u003e getOrderBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":301,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":302,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":303,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":304,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":305,"author":{"gitId":"jamesleeht"},"content":"        public boolean hasOrder(Order order) {","lastModifiedDate":"2021-03-14"},{"lineNumber":306,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":307,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":308,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":309,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":310,"author":{"gitId":"jamesleeht"},"content":"        public void deleteOrder(Order order) {","lastModifiedDate":"2021-03-14"},{"lineNumber":311,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":312,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":313,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":314,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":315,"author":{"gitId":"kangtinglee"},"content":"        public void deleteOrders(List\u003cOrder\u003e orders) {","lastModifiedDate":"2021-03-26"},{"lineNumber":316,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":317,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":318,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":319,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":320,"author":{"gitId":"jamesleeht"},"content":"        public void addOrder(Order order) {","lastModifiedDate":"2021-03-14"},{"lineNumber":321,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":322,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":323,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":324,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":325,"author":{"gitId":"jamesleeht"},"content":"        public void setOrder(Order target, Order editedOrder) {","lastModifiedDate":"2021-03-14"},{"lineNumber":326,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":327,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":328,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":329,"author":{"gitId":"IanCKW"},"content":"        /**","lastModifiedDate":"2021-03-30"},{"lineNumber":330,"author":{"gitId":"IanCKW"},"content":"         * Returns an unmodifiable view of the filtered order list","lastModifiedDate":"2021-03-30"},{"lineNumber":331,"author":{"gitId":"IanCKW"},"content":"         */","lastModifiedDate":"2021-03-30"},{"lineNumber":332,"author":{"gitId":"IanCKW"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":333,"author":{"gitId":"IanCKW"},"content":"        public ObservableList\u003cOrder\u003e getFilteredOrderList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":334,"author":{"gitId":"IanCKW"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":336,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":337,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":338,"author":{"gitId":"kangtinglee"},"content":"        public List\u003cOrder\u003e getIncompleteOrdersContainingDish(Dish target) {","lastModifiedDate":"2021-03-31"},{"lineNumber":339,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":340,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":341,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":342,"author":{"gitId":"kangtinglee"},"content":"        /**","lastModifiedDate":"2021-04-11"},{"lineNumber":343,"author":{"gitId":"kangtinglee"},"content":"         * Returns a list of orders that contain a given dish","lastModifiedDate":"2021-04-11"},{"lineNumber":344,"author":{"gitId":"kangtinglee"},"content":"         *","lastModifiedDate":"2021-04-11"},{"lineNumber":345,"author":{"gitId":"kangtinglee"},"content":"         * @param target","lastModifiedDate":"2021-04-11"},{"lineNumber":346,"author":{"gitId":"kangtinglee"},"content":"         */","lastModifiedDate":"2021-04-11"},{"lineNumber":347,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":348,"author":{"gitId":"kangtinglee"},"content":"        public List\u003cOrder\u003e getOrdersContainingDish(Dish target) {","lastModifiedDate":"2021-04-11"},{"lineNumber":349,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-11"},{"lineNumber":350,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":351,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":352,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":353,"author":{"gitId":"kangtinglee"},"content":"        public List\u003cOrder\u003e getIncompleteOrders() {","lastModifiedDate":"2021-03-31"},{"lineNumber":354,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":355,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":356,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":357,"author":{"gitId":"jamesleeht"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":358,"author":{"gitId":"jamesleeht"},"content":"        public void updateFilteredOrderList(Predicate\u003c? super Order\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":359,"author":{"gitId":"jamesleeht"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":360,"author":{"gitId":"jamesleeht"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":361,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":362,"author":{"gitId":"IanCKW"},"content":"        /**","lastModifiedDate":"2021-04-01"},{"lineNumber":363,"author":{"gitId":"IanCKW"},"content":"         * Updates the filtered ingredient list by sorting it with {@code comparator}.","lastModifiedDate":"2021-04-01"},{"lineNumber":364,"author":{"gitId":"IanCKW"},"content":"         *","lastModifiedDate":"2021-04-01"},{"lineNumber":365,"author":{"gitId":"IanCKW"},"content":"         * @param comparator","lastModifiedDate":"2021-04-01"},{"lineNumber":366,"author":{"gitId":"IanCKW"},"content":"         * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-04-01"},{"lineNumber":367,"author":{"gitId":"IanCKW"},"content":"         */","lastModifiedDate":"2021-04-01"},{"lineNumber":368,"author":{"gitId":"IanCKW"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":369,"author":{"gitId":"IanCKW"},"content":"        public void updateFilteredOrderList(Comparator\u003cOrder\u003e comparator) {","lastModifiedDate":"2021-04-01"},{"lineNumber":370,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":371,"author":{"gitId":"IanCKW"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":372,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":373,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":374,"author":{"gitId":"kangtinglee"},"content":"        public List\u003cOrder\u003e getOrdersFromPerson(Person target) {","lastModifiedDate":"2021-03-26"},{"lineNumber":375,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":376,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":377,"author":{"gitId":"IanCKW"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":378,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":379,"author":{"gitId":"kangtinglee"},"content":"        public List\u003cOrder\u003e getIncompleteOrdersFromPerson(Person target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":380,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-01"},{"lineNumber":381,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":382,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":383,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":384,"author":{"gitId":"kangtinglee"},"content":"        public void cancelOrder(Order target) {","lastModifiedDate":"2021-03-31"},{"lineNumber":385,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":386,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":387,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":388,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":389,"author":{"gitId":"kangtinglee"},"content":"        public void cancelOrders(List\u003cOrder\u003e targets) {","lastModifiedDate":"2021-03-31"},{"lineNumber":390,"author":{"gitId":"kangtinglee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-31"},{"lineNumber":391,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":392,"author":{"gitId":"kangtinglee"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":393,"author":{"gitId":"kangtinglee"},"content":"        @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":394,"author":{"gitId":"kangtinglee"},"content":"        public boolean canFulfilOrder(Order target) {","lastModifiedDate":"2021-04-01"},{"lineNumber":395,"author":{"gitId":"kangtinglee"},"content":"            return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":396,"author":{"gitId":"kangtinglee"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":400,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":411,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":418,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":419,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":433,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":436,"author":{"gitId":"jamesleeht"},"content":"        public ReadOnlyBook\u003cPerson\u003e getPersonBook() {","lastModifiedDate":"2021-04-11"},{"lineNumber":437,"author":{"gitId":"jamesleeht"},"content":"            return new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":441,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kangtinglee":74,"Sharptail":30,"-":176,"guanyz":10,"IanCKW":21,"jamesleeht":130}},{"path":"src/test/java/seedu/address/logic/commands/CustomerClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerClearCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class CustomerClearCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerClearCommand(), model, CustomerClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        expectedModel.setPersonBook(new PersonBook());","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerClearCommand(), model, CustomerClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Sharptail":4,"-":27,"jamesleeht":2}},{"path":"src/test/java/seedu/address/logic/commands/CustomerDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"public class CustomerDeleteCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteCommand \u003d new CustomerDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerDeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPersonBook(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteCommand \u003d new CustomerDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"        assertCommandFailure(deleteCommand, model, String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"                Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteCommand \u003d new CustomerDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerDeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(model.getPersonBook(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPersonBook().getItemList().size());","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteCommand \u003d new CustomerDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"IanCKW"},"content":"        assertCommandFailure(deleteCommand, model, String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"IanCKW"},"content":"                Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteFirstCommand \u003d new CustomerDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteSecondCommand \u003d new CustomerDeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand deleteFirstCommandCopy \u003d new CustomerDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Sharptail":11,"-":94,"IanCKW":4,"jamesleeht":3}},{"path":"src/test/java/seedu/address/logic/commands/CustomerEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerClearCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"public class CustomerEditCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(model.getPersonBook()), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(model.getPersonBook()), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(CustomerEditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        Model expectedModel \u003d new ModelManager(new PersonBook(model.getPersonBook()), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"        assertCommandFailure(editCommand, model, CustomerEditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"        Person personInList \u003d model.getPersonBook().getItemList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Sharptail"},"content":"        assertCommandFailure(editCommand, model, CustomerEditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"IanCKW"},"content":"        assertCommandFailure(editCommand, model, String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"IanCKW"},"content":"                Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPersonBook().getItemList().size());","lastModifiedDate":"2021-04-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand editCommand \u003d new CustomerEditCommand(outOfBoundIndex,","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"IanCKW"},"content":"        assertCommandFailure(editCommand, model, String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"IanCKW"},"content":"                Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX, Messages.ITEM_PERSON));","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"Sharptail"},"content":"        final CustomerEditCommand standardCommand \u003d new CustomerEditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand commandWithSameValues \u003d new CustomerEditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"Sharptail"},"content":"        assertFalse(standardCommand.equals(new CustomerClearCommand()));","lastModifiedDate":"2021-03-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"Sharptail"},"content":"        assertFalse(standardCommand.equals(new CustomerEditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"Sharptail"},"content":"        assertFalse(standardCommand.equals(new CustomerEditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Sharptail":21,"-":129,"IanCKW":4,"jamesleeht":6}},{"path":"src/test/java/seedu/address/logic/commands/CustomerFindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"public class CustomerFindCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        PersonNameContainsWordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                new PersonNameContainsWordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        PersonNameContainsWordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                new PersonNameContainsWordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand findFirstCommand \u003d new CustomerFindCommand(firstPredicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand findSecondCommand \u003d new CustomerFindCommand(secondPredicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand findFirstCommandCopy \u003d new CustomerFindCommand(firstPredicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW, 0, Messages.ITEM_PERSONS);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"        PersonNameContainsWordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand command \u003d new CustomerFindCommand(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_ITEMS_LISTED_OVERVIEW, 3, Messages.ITEM_PERSONS);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        PersonNameContainsWordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand command \u003d new CustomerFindCommand(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"    private PersonNameContainsWordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"        return new PersonNameContainsWordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Sharptail":7,"-":65,"jamesleeht":12}},{"path":"src/test/java/seedu/address/logic/commands/CustomerListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"public class CustomerListCommandTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        expectedModel \u003d new ModelManager(model.getPersonBook(), new UserPrefs());","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerListCommand(), model, CustomerListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        assertCommandSuccess(new CustomerListCommand(), model, CustomerListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Sharptail":4,"-":35,"jamesleeht":1}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Sharptail":1,"-":57}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.Parser;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Sharptail":1,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/CustomerAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerAddCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"public class CustomerAddCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    private CustomerAddCommandParser parser \u003d new CustomerAddCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    //    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    //    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    //        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    //        // whitespace only preamble","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    //                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"jamesleeht"},"content":"    //        // multiple names - last name accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"jamesleeht"},"content":"    //                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"jamesleeht"},"content":"    //        // multiple phones - last phone accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"    //                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"    //        // multiple emails - last email accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    //                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"jamesleeht"},"content":"    //        // multiple addresses - last address accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    //                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"    //        // multiple tags - all accepted","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"    //        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"jamesleeht"},"content":"    //                .build();","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"    //                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new CustomerAddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"    //      }","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"                new CustomerAddCommand(expectedPerson));","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerAddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"jamesleeht"},"content":"    //    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"jamesleeht"},"content":"    //    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"jamesleeht"},"content":"    //        // invalid name","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"jamesleeht"},"content":"    //                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"jamesleeht"},"content":"    //        // invalid phone","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"jamesleeht"},"content":"    //                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"jamesleeht"},"content":"    //        // invalid email","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"    //                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"jamesleeht"},"content":"    //        // invalid address","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"    //                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"jamesleeht"},"content":"    //        // invalid tag","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"    //                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"jamesleeht"},"content":"    //        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"    //                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"jamesleeht"},"content":"    //        // non-empty preamble","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"jamesleeht"},"content":"    //                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"jamesleeht"},"content":"    //                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"jamesleeht"},"content":"    //    }","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Sharptail":6,"-":58,"IanCKW":12,"jamesleeht":61}},{"path":"src/test/java/seedu/address/logic/parser/CustomerDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerDeleteCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"public class CustomerDeleteCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    private CustomerDeleteCommandParser parser \u003d new CustomerDeleteCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        assertParseSuccess(parser, \"1\", new CustomerDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"                CustomerDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Sharptail":7,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/CustomerEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerEditCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"public class CustomerEditCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, CustomerEditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    private CustomerEditCommandParser parser \u003d new CustomerEditCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        assertParseFailure(parser, \"1\", CustomerEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"    //    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"    //    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"    //        // invalid phone followed by valid email","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"jamesleeht"},"content":"    //        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"    //        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"    //        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"jamesleeht"},"content":"    //        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"    //        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"IanCKW"},"content":"    //        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"IanCKW"},"content":"    //        + VALID_PHONE_AMY,","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"    //                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"    //    }","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"jamesleeht"},"content":"    //    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"jamesleeht"},"content":"    //    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-03-26"},{"lineNumber":167,"author":{"gitId":"jamesleeht"},"content":"    //        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-26"},{"lineNumber":168,"author":{"gitId":"jamesleeht"},"content":"    //        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-26"},{"lineNumber":169,"author":{"gitId":"jamesleeht"},"content":"    //                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-26"},{"lineNumber":170,"author":{"gitId":"jamesleeht"},"content":"    //                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"jamesleeht"},"content":"    //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-26"},{"lineNumber":173,"author":{"gitId":"IanCKW"},"content":"    //                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"IanCKW"},"content":"    //                VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"jamesleeht"},"content":"    //                .build();","lastModifiedDate":"2021-03-26"},{"lineNumber":176,"author":{"gitId":"jamesleeht"},"content":"    //        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-26"},{"lineNumber":178,"author":{"gitId":"jamesleeht"},"content":"    //        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"jamesleeht"},"content":"    //    }","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand expectedCommand \u003d new CustomerEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Sharptail":17,"-":147,"IanCKW":8,"jamesleeht":37}},{"path":"src/test/java/seedu/address/logic/parser/CustomerFindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.commands.customer.CustomerFindCommandParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"public class CustomerFindCommandParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    private CustomerFindCommandParser parser \u003d new CustomerFindCommandParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"                CustomerFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"                new CustomerFindCommand(new PersonNameContainsWordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        assertParseSuccess(parser, \" n/\\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Sharptail":7,"-":25,"jamesleeht":4}},{"path":"src/test/java/seedu/address/logic/parser/JJIMYParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerClearCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerDeleteCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerFindCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerListCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.parser.components.CustomerParser;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"public class JJIMYParserTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    private final JJIMYParser parser \u003d new JJIMYParser();","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_add() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        CustomerAddCommand command \u003d (CustomerAddCommand) parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        assertEquals(new CustomerAddCommand(person), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_clear() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerClearCommand.COMMAND_WORD)","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"                instanceof CustomerClearCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerClearCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"                instanceof CustomerClearCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_delete() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        CustomerDeleteCommand command \u003d (CustomerDeleteCommand) parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerDeleteCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"                        + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        assertEquals(new CustomerDeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_edit() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"        CustomerEditCommand command \u003d (CustomerEditCommand) parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerEditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"        assertEquals(new CustomerEditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_find() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"        CustomerFindCommand command \u003d (CustomerFindCommand) parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerFindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"                        + PersonUtil.getPersonFind(keywords));","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(new CustomerFindCommand(new PersonNameContainsWordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":"    public void customer_parseCommand_list() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerListCommand.COMMAND_WORD)","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"                instanceof CustomerListCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"        assertTrue(parser.parseCompo(","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"                CustomerParser.COMPONENT_WORD + \" \" + CustomerListCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"                instanceof CustomerListCommand);","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"Sharptail"},"content":"            -\u003e parser.parseCompo(\"\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"IanCKW"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_UNKNOWN_COMMAND, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-04-11"},{"lineNumber":112,"author":{"gitId":"IanCKW"},"content":"            -\u003e parser.parseCompo(\"unknownCommand\"));","lastModifiedDate":"2021-04-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Sharptail":45,"-":64,"IanCKW":3,"jamesleeht":2}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jamesleeht"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ITEMS;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"import seedu.address.model.person.PersonNameContainsWordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(new PersonBook(), new PersonBook(modelManager.getPersonBook()));","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setPersonBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setPersonBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPersonBookFilePath(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        modelManager.setPersonBookFilePath(path);","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(path, modelManager.getPersonBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"jamesleeht"},"content":"        PersonBook personBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"        PersonBook differentPersonBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"jamesleeht"},"content":"        modelManager \u003d new ModelManager(personBook, userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"jamesleeht"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(personBook, userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"jamesleeht"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPersonBook, userPrefs)));","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"jamesleeht"},"content":"        String[] keywords \u003d ALICE.getName().split(\"\\\\s+\");","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"jamesleeht"},"content":"        modelManager.updateFilteredPersonList(new PersonNameContainsWordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"jamesleeht"},"content":"        assertFalse(modelManager.equals(new ModelManager(personBook, userPrefs)));","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"jamesleeht"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_ITEMS);","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"jamesleeht"},"content":"        differentUserPrefs.setPersonBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"jamesleeht"},"content":"        assertFalse(modelManager.equals(new ModelManager(personBook, differentUserPrefs)));","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":113,"IanCKW":1,"jamesleeht":19}},{"path":"src/test/java/seedu/address/model/PersonBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"public class PersonBookTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"    private final PersonBook personBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(Collections.emptyList(), personBook.getItemList());","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e personBook.resetData(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"        PersonBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"        personBook.resetData(newData);","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(newData, personBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"jamesleeht"},"content":"        PersonBookStub newData \u003d new PersonBookStub(newPersons);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e personBook.resetData(newData));","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e personBook.hasPerson(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"        assertFalse(personBook.hasPerson(ALICE));","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        personBook.addPerson(ALICE);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        assertTrue(personBook.hasPerson(ALICE));","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        personBook.addPerson(ALICE);","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        assertTrue(personBook.hasPerson(editedAlice));","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e personBook.getItemList().remove(0));","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"jamesleeht"},"content":"    private static class PersonBookStub implements ReadOnlyBook\u003cPerson\u003e {","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"jamesleeht"},"content":"        PersonBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"jamesleeht"},"content":"        public ObservableList\u003cPerson\u003e getItemList() {","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":82,"jamesleeht":21}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPersonBookFilePath(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":20,"jamesleeht":1}},{"path":"src/test/java/seedu/address/storage/JsonPersonBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jamesleeht"},"content":"public class JsonPersonBookStorageTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    private java.util.Optional\u003cReadOnlyBook\u003cPerson\u003e\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"        return new JsonPersonBookStorage(Paths.get(filePath)).readBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"    //    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"    //    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"    //        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"    //    }","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"    //    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"jamesleeht"},"content":"    //    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"    //        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"IanCKW"},"content":"    //        readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"    //    }","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"        PersonBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        JsonPersonBookStorage jsonPersonBookStorage \u003d new JsonPersonBookStorage(filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"jamesleeht"},"content":"        jsonPersonBookStorage.saveBook(original, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyBook\u003cPerson\u003e readBack \u003d jsonPersonBookStorage.readBook(filePath).get();","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(original, new PersonBook(readBack));","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"        jsonPersonBookStorage.saveBook(original, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"jamesleeht"},"content":"        readBack \u003d jsonPersonBookStorage.readBook(filePath).get();","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(original, new PersonBook(readBack));","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"jamesleeht"},"content":"        jsonPersonBookStorage.saveBook(original); // file path not specified","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"jamesleeht"},"content":"        readBack \u003d jsonPersonBookStorage.readBook().get(); // file path not specified","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(original, new PersonBook(readBack));","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"jamesleeht"},"content":"    private void saveAddressBook(ReadOnlyBook\u003cPerson\u003e addressBook, String filePath) {","lastModifiedDate":"2021-04-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"jamesleeht"},"content":"            new JsonPersonBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"jamesleeht"},"content":"                    .saveBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"jamesleeht"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new PersonBook(), null));","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":81,"IanCKW":2,"jamesleeht":30}},{"path":"src/test/java/seedu/address/storage/JsonSerializablePersonBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonSerializablePersonBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"public class JsonSerializablePersonBookTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jamesleeht"},"content":"        JsonSerializablePersonBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"                JsonSerializablePersonBook.class).get();","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"jamesleeht"},"content":"        PersonBook personBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        PersonBook typicalPersonsPersonBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(personBookFromFile, typicalPersonsPersonBook);","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"    //    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"    //    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"    //        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"    //    }","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"    //","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"    //    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"    //    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"jamesleeht"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"    //        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"    //                dataFromFile::toModelType);","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    //    }","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":24,"IanCKW":2,"jamesleeht":22}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setPersonBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setDishBookFilePath(Paths.get(\"dishbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setIngredientBookFilePath(Paths.get(\"ingredientbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"jamesleeht"},"content":"        userPrefs.setOrderBookFilePath(Paths.get(\"orderbook.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"jamesleeht":5}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.ReadOnlyBook;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.dish.JsonDishBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.ingredient.JsonIngredientBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.order.JsonOrderBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.storage.person.JsonPersonBookStorage;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        JsonPersonBookStorage personBookStorage \u003d new JsonPersonBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        JsonDishBookStorage dishBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"                new JsonDishBookStorage(getTempFilePath(\"db\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        JsonIngredientBookStorage ingredientBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"                new JsonIngredientBookStorage(getTempFilePath(\"ib\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"jamesleeht"},"content":"        JsonOrderBookStorage orderBookStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"                new JsonOrderBookStorage(getTempFilePath(\"ob\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":40,"author":{"gitId":"jamesleeht"},"content":"        storageManager \u003d new StorageManager(personBookStorage, dishBookStorage,","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"jamesleeht"},"content":"                ingredientBookStorage, orderBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"jamesleeht"},"content":"        PersonBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"jamesleeht"},"content":"        storageManager.savePersonBook(original);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"jamesleeht"},"content":"        ReadOnlyBook\u003cPerson\u003e retrieved \u003d storageManager.readPersonBook().get();","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        assertEquals(original, new PersonBook(retrieved));","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"jamesleeht"},"content":"        assertNotNull(storageManager.getPersonBookFilePath());","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":59,"jamesleeht":21}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"jamesleeht"},"content":"    private PersonBook personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"jamesleeht"},"content":"        personBook \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    public AddressBookBuilder(PersonBook personBook) {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"        this.personBook \u003d personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"jamesleeht"},"content":"        personBook.addPerson(person);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"    public PersonBook build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        return personBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":26,"jamesleeht":8}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setName(name);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setPhone(phone);","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setEmail(email);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setAddress(address);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"jamesleeht"},"content":"        descriptor.setTags(Arrays.asList(tags));","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Sharptail":1,"-":72,"jamesleeht":6}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"jamesleeht"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"    private String name;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"jamesleeht"},"content":"    private String phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"jamesleeht"},"content":"    private String email;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"jamesleeht"},"content":"    private String address;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"jamesleeht"},"content":"    private List\u003cString\u003e tags;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"jamesleeht"},"content":"        name \u003d DEFAULT_NAME;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"jamesleeht"},"content":"        phone \u003d DEFAULT_PHONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"jamesleeht"},"content":"        email \u003d DEFAULT_EMAIL;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"jamesleeht"},"content":"        address \u003d DEFAULT_ADDRESS;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"        tags \u003d new ArrayList\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"jamesleeht"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"jamesleeht"},"content":"        this.tags \u003d SampleDataUtil.getTagList(tags);","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"jamesleeht"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"jamesleeht"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"jamesleeht"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":73,"jamesleeht":18}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"jamesleeht"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"jamesleeht"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerAddCommand;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import seedu.address.logic.commands.customer.CustomerEditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        return CustomerAddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"jamesleeht"},"content":"        sb.append(PREFIX_NAME + person.getName() + \" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"jamesleeht"},"content":"        sb.append(PREFIX_PHONE + person.getPhone() + \" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"jamesleeht"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail() + \" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"jamesleeht"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress() + \" \");","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"jamesleeht"},"content":"            s -\u003e sb.append(PREFIX_TAG + s + \" \")","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"jamesleeht"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"jamesleeht"},"content":"     * Returns the part of command string for find.","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"jamesleeht"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"jamesleeht"},"content":"    public static String getPersonFind(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"jamesleeht"},"content":"        return PREFIX_NAME + keywords.stream().collect(Collectors.joining(\" \"));","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"jamesleeht"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"jamesleeht"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"jamesleeht"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"jamesleeht"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"jamesleeht"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"jamesleeht"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"jamesleeht"},"content":"            List\u003cString\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"jamesleeht"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s).append(\" \"));","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Sharptail":3,"-":46,"jamesleeht":20}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"jamesleeht"},"content":"import seedu.address.model.person.PersonBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"jamesleeht"},"content":"    public static PersonBook getTypicalAddressBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"jamesleeht"},"content":"        PersonBook ab \u003d new PersonBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":73,"jamesleeht":3}}]
