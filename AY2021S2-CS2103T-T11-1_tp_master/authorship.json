[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# TutorBuddy"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-1/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2021S2-CS2103T-T11-1/tp/actions/workflows/gradle.yml)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"nowknowing"},"content":"###TutorBuddy "},{"lineNumber":8,"author":{"gitId":"nowknowing"},"content":"is an application made for independent tutors as a management tool to cut down on admin overheads, by graphically managing their student’s information with a Graphical User Interface (GUI). It allows for faster and more effective student management."},{"lineNumber":9,"author":{"gitId":"nowknowing"},"content":"* Find out more about the members working on the project **[here](docs/AboutUs.md)**."},{"lineNumber":10,"author":{"gitId":"nowknowing"},"content":"* This project is built upon AddressBook-Level3 project created by the **[SE-EDU initiative](https://se-education.org)**\u003cbr\u003e"},{"lineNumber":11,"author":{"gitId":"nowknowing"},"content":"  For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**"},{"lineNumber":12,"author":{"gitId":"nowknowing"},"content":""},{"lineNumber":13,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"**Acknowledgements**"},{"lineNumber":15,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":16,"author":{"gitId":"nowknowing"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [JUnit5](https://github.com/junit-team/junit5)."}],"authorContributionMap":{"enhao25":4,"nowknowing":7,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"### Low En Hao"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"enhao25"},"content":"\u003cimg src\u003d\"images/enhao25.png\" width\u003d\"200px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"enhao25"},"content":"[[github](https://github.com/enhao25)]"},{"lineNumber":17,"author":{"gitId":"enhao25"},"content":"[[portfolio](team/enhao25.md)]"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"* Role: Deliverables and deadlines / Scheduling and tracking"},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"* Responsibilities: Ensuring that the project is on track."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"### Wong Choon Wei"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"\u003cimg src\u003d\"images/yungweezy.png\" width\u003d\"200px\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"[[github](http://github.com/yungweezy)]"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"[[portfolio](team/yungweezy.md)]"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"* Role: Team Lead / Integration"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"* Responsibilities: Responsible for overall project coordination and integration."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"nowknowing"},"content":"### Sunaga Shion"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"nowknowing"},"content":"\u003cimg src\u003d\"images/nowknowing.png\" width\u003d\"200px\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"nowknowing"},"content":"[[github](http://github.com/nowknowing)] [[portfolio](team/nowknowing.md)]"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"nowknowing"},"content":"* Role: Testing"},{"lineNumber":39,"author":{"gitId":"nowknowing"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"samleewy"},"content":"### Samuel Lee"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"samleewy"},"content":"\u003cimg src\u003d\"images/samleewy.png\" width\u003d\"200px\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"samleewy"},"content":"[[github](http://github.com/samleewy)]"},{"lineNumber":46,"author":{"gitId":"samleewy"},"content":"[[portfolio](team/samleewy.md)]"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"samleewy"},"content":"* Role: Code Quality"},{"lineNumber":49,"author":{"gitId":"JonahhGohh"},"content":"* Responsibilities: Ensuring that coding standards are enforced in accordance with checkstyles."},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"JonahhGohh"},"content":"### Goh Jun Wei"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"JonahhGohh"},"content":"\u003cimg src\u003d\"images/jonahhgohh.png\" width\u003d\"200px\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"JonahhGohh"},"content":"[[github](http://github.com/jonahhgohh)]"},{"lineNumber":56,"author":{"gitId":"JonahhGohh"},"content":"[[portfolio](team/jonahhgohh.md)]"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"JonahhGohh"},"content":"* Role: Code Quality"},{"lineNumber":59,"author":{"gitId":"JonahhGohh"},"content":"* Responsibilities: Ensure that coding standards are enforced."}],"authorContributionMap":{"enhao25":6,"JonahhGohh":7,"samleewy":5,"nowknowing":5,"-":30,"yungweezy":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App."},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor."},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory."},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component."},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command."},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person)."},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences."},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data."},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history."},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo."},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book."},{"lineNumber":206,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement."},{"lineNumber":207,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage."},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself."},{"lineNumber":211,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct."},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Product scope"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"enhao25"},"content":"**Target user profile**: Independent Tutors"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"enhao25"},"content":"* has a need to manage a significant number of student contacts"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* can type fast"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":246,"author":{"gitId":"enhao25"},"content":"**Value proposition**: "},{"lineNumber":247,"author":{"gitId":"enhao25"},"content":"* Cut down admin overhead for independent tutors"},{"lineNumber":248,"author":{"gitId":"enhao25"},"content":"* All in one platform to manage their student’s information"},{"lineNumber":249,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"### User stories"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |"},{"lineNumber":257,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |"},{"lineNumber":258,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |"},{"lineNumber":259,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person               |                                                                        |"},{"lineNumber":260,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                | remove entries that I no longer need                                   |"},{"lineNumber":261,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name          | locate details of persons without having to go through the entire list |"},{"lineNumber":262,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |"},{"lineNumber":263,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name           | locate a person easily                                                 |"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"### Use cases"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"enhao25"},"content":"*(For all use cases, the **System** is the TutorBuddy Application, **Actor** is the user, and the **Precondition** is that the application has already been opened, unless otherwise specified)*"},{"lineNumber":270,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":271,"author":{"gitId":"enhao25"},"content":"**Use case: UC01 - Create a student profile**"},{"lineNumber":272,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":273,"author":{"gitId":"enhao25"},"content":"MSS:"},{"lineNumber":274,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":275,"author":{"gitId":"enhao25"},"content":"1. User enters the add student command, together with the student details."},{"lineNumber":276,"author":{"gitId":"enhao25"},"content":"2. TutorBuddy creates the profile in the background."},{"lineNumber":277,"author":{"gitId":"enhao25"},"content":"3. TutorBuddy displays the success message."},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"enhao25"},"content":"    Use case ends."},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"enhao25"},"content":"**Extensions:**"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"enhao25"},"content":"* 1a. TutorBuddy detects an error in the entered data."},{"lineNumber":284,"author":{"gitId":"enhao25"},"content":"    * 1a1. TutorBuddy displays an error message."},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"    Use case ends."},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"enhao25"},"content":"**Use case: UC02 - Delete a student profile**"},{"lineNumber":289,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":290,"author":{"gitId":"enhao25"},"content":"MSS:"},{"lineNumber":291,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":292,"author":{"gitId":"enhao25"},"content":"1. User enters the delete student command, along with the student’s name."},{"lineNumber":293,"author":{"gitId":"enhao25"},"content":"2. TutorBuddy verifies that the student profile exists."},{"lineNumber":294,"author":{"gitId":"enhao25"},"content":"3. TutorBuddy prompts the user to confirm the deletion."},{"lineNumber":295,"author":{"gitId":"enhao25"},"content":"4. User confirms the deletion."},{"lineNumber":296,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":297,"author":{"gitId":"enhao25"},"content":"   Use case ends."},{"lineNumber":298,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":299,"author":{"gitId":"enhao25"},"content":"**Extensions:**"},{"lineNumber":300,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":301,"author":{"gitId":"enhao25"},"content":"* 2a. TutorBuddy detects an error in the entered command."},{"lineNumber":302,"author":{"gitId":"enhao25"},"content":"    * 2a1. TutorBuddy displays error messages to the user."},{"lineNumber":303,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":304,"author":{"gitId":"enhao25"},"content":"  Use case ends."},{"lineNumber":305,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":306,"author":{"gitId":"enhao25"},"content":"* 3a. TutorBuddy detects that the user does not exist."},{"lineNumber":307,"author":{"gitId":"enhao25"},"content":"    * 3a1. TutorBuddy displays an error message for unknown student profiles."},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"enhao25"},"content":"  Use case ends."},{"lineNumber":310,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":311,"author":{"gitId":"enhao25"},"content":"* 4a. User cancels the confirmation of deletion."},{"lineNumber":312,"author":{"gitId":"enhao25"},"content":"    * 4a1. Student profile is not created; the student is returned to the home page."},{"lineNumber":313,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":314,"author":{"gitId":"enhao25"},"content":"  Use case ends."},{"lineNumber":315,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":316,"author":{"gitId":"enhao25"},"content":"**Use case: UC03 - Find a student’s profile**"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"enhao25"},"content":"MSS:"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"enhao25"},"content":"1. User enters the find student command, along with a keyword from the student’s name."},{"lineNumber":321,"author":{"gitId":"enhao25"},"content":"2. TutorBuddy displays all students’ profiles matching the keyword if any."},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"   Use case ends."},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"enhao25"},"content":"**Extensions:**"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"enhao25"},"content":"* 1a. TutorBuddy detects empty keyword field"},{"lineNumber":328,"author":{"gitId":"enhao25"},"content":"    * 1a1. TutorBuddy displays an error message for no keyword specified."},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"  Use case ends."},{"lineNumber":331,"author":{"gitId":"-"},"content":""},{"lineNumber":332,"author":{"gitId":"enhao25"},"content":"**Use case: UC04 - Create a session**"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"enhao25"},"content":"**Preconditions: Student profile linked to session has been created.**"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"enhao25"},"content":"MSS:"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"enhao25"},"content":"1. User enters the add session command, together with the session details."},{"lineNumber":339,"author":{"gitId":"enhao25"},"content":"2. TutorBuddy creates the session."},{"lineNumber":340,"author":{"gitId":"enhao25"},"content":"3. TutorBuddy displays a success message."},{"lineNumber":341,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":342,"author":{"gitId":"enhao25"},"content":"   Use case ends."},{"lineNumber":343,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":344,"author":{"gitId":"enhao25"},"content":"**Extensions:**"},{"lineNumber":345,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":346,"author":{"gitId":"enhao25"},"content":"* 1a. TutorBuddy detects an error in the entered data."},{"lineNumber":347,"author":{"gitId":"enhao25"},"content":"    * 1a1. TutorBuddy prompts an error and requests for the correct data."},{"lineNumber":348,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":349,"author":{"gitId":"enhao25"},"content":"  Use case ends."},{"lineNumber":350,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":351,"author":{"gitId":"enhao25"},"content":"* 1b. TutorBuddy detects another session that the user has in the same timeframe."},{"lineNumber":352,"author":{"gitId":"enhao25"},"content":"    * 1b1. TutorBuddy prompts an error and requests for the correct data."},{"lineNumber":353,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":354,"author":{"gitId":"enhao25"},"content":"  Use case ends."},{"lineNumber":355,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":356,"author":{"gitId":"enhao25"},"content":"**Use case: UC05 -  Getting the emails from the application**"},{"lineNumber":357,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":358,"author":{"gitId":"enhao25"},"content":"MSS:"},{"lineNumber":359,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":360,"author":{"gitId":"enhao25"},"content":"1. User enters the command to get the email from TutorBuddy."},{"lineNumber":361,"author":{"gitId":"enhao25"},"content":"2. TutorBuddy returns a list of all the email addresses to the user."},{"lineNumber":362,"author":{"gitId":"enhao25"},"content":"3. User copies the email address given."},{"lineNumber":363,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":364,"author":{"gitId":"enhao25"},"content":"   Use case ends."},{"lineNumber":365,"author":{"gitId":"-"},"content":""},{"lineNumber":366,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"### Non-Functional Requirements"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed."},{"lineNumber":371,"author":{"gitId":"enhao25"},"content":"2. The user should have enough space on their computer to ensure that data will be stored in the application without errors."},{"lineNumber":372,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"### Glossary"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X"},{"lineNumber":378,"author":{"gitId":"enhao25"},"content":"* CLI: Command Line Interface where users can interact with their OS system."},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"},{"lineNumber":387,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing."},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"### Launch and shutdown"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"-"},"content":"1. Initial launch"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"1. Saving window preferences"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"},{"lineNumber":404,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained."},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"### Deleting a person"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list."},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      Expected: Similar to previous."},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"### Saving data"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"}],"authorContributionMap":{"enhao25":86,"-":345}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"samleewy"},"content":"# TutorBuddy"},{"lineNumber":6,"author":{"gitId":"samleewy"},"content":"TutorBuddy is an application made for independent tutors as a management tool to cut down on admin overheads, "},{"lineNumber":7,"author":{"gitId":"samleewy"},"content":"by graphically managing their student’s information with a Graphical User Interface (GUI)."},{"lineNumber":8,"author":{"gitId":"samleewy"},"content":"It allows for faster and more effective student management."},{"lineNumber":9,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":10,"author":{"gitId":"samleewy"},"content":"**Table of Contents**"},{"lineNumber":11,"author":{"gitId":"samleewy"},"content":"* [Quick start](#quick-start)"},{"lineNumber":12,"author":{"gitId":"samleewy"},"content":"* [Features](#features)"},{"lineNumber":13,"author":{"gitId":"samleewy"},"content":"    * [Listing all students: `list student`](#listing-all-students-list-student)"},{"lineNumber":14,"author":{"gitId":"samleewy"},"content":"    * [Locating student profile by name: `find student`](#locating-student-profile-by-name-find-student)"},{"lineNumber":15,"author":{"gitId":"samleewy"},"content":"    * [Adding a student: `add student`](#adding-a-student-add-student)"},{"lineNumber":16,"author":{"gitId":"samleewy"},"content":"    * [Listing all tuition sessions: `list session`](#listing-all-tuition-sessions-list-session)"},{"lineNumber":17,"author":{"gitId":"samleewy"},"content":"    * [Locating tuition session by student name / date: `find session`](#locating-tuition-session-by-student-name-/-date-find-session)"},{"lineNumber":18,"author":{"gitId":"samleewy"},"content":"    * [Adding a tuition session: `add session`](#adding-a-tuition-session-add-session)"},{"lineNumber":19,"author":{"gitId":"samleewy"},"content":"    * [Deleting a tuition session: `delete session`](#deleting-a-tuition-session-delete-session)"},{"lineNumber":20,"author":{"gitId":"samleewy"},"content":"    * [Exit the program: `exit`](#exit-the-program-exit)"},{"lineNumber":21,"author":{"gitId":"samleewy"},"content":"* [FAQ](#faq)"},{"lineNumber":22,"author":{"gitId":"samleewy"},"content":"* [Command Summary](#command-summary)"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Quick start"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"samleewy"},"content":"2. Download the latest `TutorBuddy.jar` from [here](#)."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"samleewy"},"content":"3. Copy the file to the folder you want to use as the home folder for your TutorBuddy application."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"samleewy"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data. \u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"samleewy"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`list student`** and pressing Enter will open the list of all students.\u003cbr\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   "},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Some example commands you can try:"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   "},{"lineNumber":41,"author":{"gitId":"samleewy"},"content":"   **Students**"},{"lineNumber":42,"author":{"gitId":"samleewy"},"content":"   * `list student`: List all students"},{"lineNumber":43,"author":{"gitId":"samleewy"},"content":"   * `find student James`: Finds and lists all students that have the name **James**"},{"lineNumber":44,"author":{"gitId":"samleewy"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 a/99999999 r/Mother`: Adds a student John Doe to the Tutor Buddy application"},{"lineNumber":45,"author":{"gitId":"samleewy"},"content":"   * `delete student 3`: Deletes the 3rd student in the student list"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   "},{"lineNumber":47,"author":{"gitId":"samleewy"},"content":"   **Tuition Session**"},{"lineNumber":48,"author":{"gitId":"samleewy"},"content":"   * `list session`: List all tuition sessions"},{"lineNumber":49,"author":{"gitId":"samleewy"},"content":"   * `find session James`: Finds and lists all tuition sessions that James have"},{"lineNumber":50,"author":{"gitId":"samleewy"},"content":"   * `add session n/John Doe d/14-02-2021 t/1300 s/Biology f/40`: Adds a tuition session for John Doe happening on 14-02-2021"},{"lineNumber":51,"author":{"gitId":"samleewy"},"content":"   * `delete session 1`: Deletes the 1st tuition session in the tuition session list"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   "},{"lineNumber":53,"author":{"gitId":"samleewy"},"content":"   **General**"},{"lineNumber":54,"author":{"gitId":"samleewy"},"content":"   * `exit`: Exits the application"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"samleewy"},"content":"6. Refer to the [Features](#features) below for details of each command."},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"samleewy"},"content":"### Listing all students: `list student`"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"samleewy"},"content":"Shows a list of all students in the TutorBuddy"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"samleewy"},"content":"Format: `list student` \u003cbr\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"samleewy"},"content":"### Locating student profile by name: `find student`"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"samleewy"},"content":"Finds students that matches the keyword given"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"samleewy"},"content":"Format: `find student KEYWORD`"},{"lineNumber":73,"author":{"gitId":"samleewy"},"content":"* The search will be case-insensitive. e.g. searching “stonks” will match “STONKS”."},{"lineNumber":74,"author":{"gitId":"samleewy"},"content":"* As long as the keyword matches the name of the student, it will be regarded as a match. For example, if a person’s name is “John Lee”, searching “John” will be sufficient."},{"lineNumber":75,"author":{"gitId":"samleewy"},"content":"* Only the student’s name will be searched."},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"samleewy"},"content":"Example:"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"samleewy"},"content":"\\# | Student Name"},{"lineNumber":80,"author":{"gitId":"samleewy"},"content":"---- |---------"},{"lineNumber":81,"author":{"gitId":"samleewy"},"content":"1 | John Lee"},{"lineNumber":82,"author":{"gitId":"samleewy"},"content":"2 | Johnz Tan"},{"lineNumber":83,"author":{"gitId":"samleewy"},"content":"3 | Jon Koh"},{"lineNumber":84,"author":{"gitId":"samleewy"},"content":"4 | Samuel Lee"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"samleewy"},"content":"* `find student John` returns John Lee"},{"lineNumber":87,"author":{"gitId":"samleewy"},"content":"* `find student Sam` returns nothing"},{"lineNumber":88,"author":{"gitId":"samleewy"},"content":"* `find student Lee` returns \"John Lee\" and \"Samuel Lee\""},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"samleewy"},"content":"### Adding a student: `add student`"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"samleewy"},"content":"Adds a student to the TutorBuddy"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"samleewy"},"content":"Format: `add student n/NAME p/STUDENT_PHONE_NUMBER e/EMAIL a/ADDRESS m/PARENT_PHONE_NUMBER r/RELATIONSHIP_WITH_PARENT` \u003cbr\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"samleewy"},"content":"Examples:"},{"lineNumber":97,"author":{"gitId":"samleewy"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 a/99999999 r/Mother`"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"samleewy"},"content":"### Deleting a student: `delete student`"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"samleewy"},"content":"Deletes the specified student from TutorBuddy"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"samleewy"},"content":"Format: `delete student STUDENT_NAME` \u003cbr\u003e"},{"lineNumber":104,"author":{"gitId":"samleewy"},"content":"* Deletes the student with the specified name"},{"lineNumber":105,"author":{"gitId":"samleewy"},"content":"* `STUDENT_NAME` must have an exact match to the name in the student profile"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":108,"author":{"gitId":"samleewy"},"content":"* `list student` followed by `delete 2` deletes the 2nd person in the address book."},{"lineNumber":109,"author":{"gitId":"samleewy"},"content":"* `find student Betsy` followed by `delete 1` deletes the 1st person in the results of the find student command."},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"samleewy"},"content":"### Listing all tuition sessions: `list session`"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"samleewy"},"content":"Shows a list of all tuition sessions in TutorBuddy"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"samleewy"},"content":"Format: `list session`"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"samleewy"},"content":"### Locating tuition session by student name / date: `find session`"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"samleewy"},"content":"Find tuition sessions that match the keyword given"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"samleewy"},"content":"Format: `find session KEYWORD`"},{"lineNumber":122,"author":{"gitId":"samleewy"},"content":"* The search will be case-insensitive. e.g. searching “stonks” will match “STONKS”"},{"lineNumber":123,"author":{"gitId":"samleewy"},"content":"* For student names:"},{"lineNumber":124,"author":{"gitId":"samleewy"},"content":"    * Any word that a student’s name contains will be matched. For example, if a session student’s name is “moon”, searching “moo” will match it"},{"lineNumber":125,"author":{"gitId":"samleewy"},"content":"* For dates:"},{"lineNumber":126,"author":{"gitId":"samleewy"},"content":"    * Only the exact date in the format (DD-MM-YYYY) will be matched."},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"samleewy"},"content":"Example:\u003cbr\u003e"},{"lineNumber":129,"author":{"gitId":"samleewy"},"content":"The command `list session` will show the following:"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"samleewy"},"content":"\\# | Sessions"},{"lineNumber":132,"author":{"gitId":"samleewy"},"content":"---- |---------"},{"lineNumber":133,"author":{"gitId":"samleewy"},"content":"1 | John Lee\u003cbr\u003e15/2/2021 13:00\u003cbr\u003e2h $60/h\u003cbr\u003eComputer Science"},{"lineNumber":134,"author":{"gitId":"samleewy"},"content":"2 | Johnz Lee\u003cbr\u003e16/2/2021 14:00\u003cbr\u003e1.5h $30/h\u003cbr\u003eMath"},{"lineNumber":135,"author":{"gitId":"samleewy"},"content":"3 | John Dam\u003cbr\u003e18/2/2021 15:00\u003cbr\u003e2h $0.10/h\u003cbr\u003eSoftware Engineering"},{"lineNumber":136,"author":{"gitId":"samleewy"},"content":"4 | Sammuel Bruce Lee\u003cbr\u003e19/2/2021 18:00\u003cbr\u003e2h $30/h\u003cbr\u003eWing Chun"},{"lineNumber":137,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":138,"author":{"gitId":"samleewy"},"content":"* `find session John` returns all John in TutorBuddy"},{"lineNumber":139,"author":{"gitId":"samleewy"},"content":"* `find session Jo` returns all John in TutorBuddy"},{"lineNumber":140,"author":{"gitId":"samleewy"},"content":"* `find session John Lee` returns all John Lee in TutorBuddy"},{"lineNumber":141,"author":{"gitId":"samleewy"},"content":"* `find session Zach` returns nothing"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"samleewy"},"content":"### Adding a tuition session: `add session`"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"samleewy"},"content":"Adds a tuition session to the TutorBuddy"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"samleewy"},"content":"Format: `add session n/STUDENT_NAME d/DATE t/TIME l/LENGTH_OF_SESSION s/SUBJECT f/FEE`"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"samleewy"},"content":"* `STUDENT_NAME` should match the exact student’s name in TutorBuddy"},{"lineNumber":150,"author":{"gitId":"samleewy"},"content":"* `DATE` should be in DD-MM-YYYY format"},{"lineNumber":151,"author":{"gitId":"samleewy"},"content":"* `TIME` should be in 24-hr format"},{"lineNumber":152,"author":{"gitId":"samleewy"},"content":"* `LENGTH_OF_SESSION` should be in hours"},{"lineNumber":153,"author":{"gitId":"samleewy"},"content":"* `FEE` should be the tuition fee/hr"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":156,"author":{"gitId":"samleewy"},"content":"* `add session n/John Doe d/14-02-2021 t/1800 l/2 s/Biology f/40`"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"samleewy"},"content":"### Deleting a tuition session: `delete session`"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"samleewy"},"content":"Deletes the specified tuition session from the TutorBuddy"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"samleewy"},"content":"Format: `delete session INDEX`"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"samleewy"},"content":"* Deletes the tuition session at the specified INDEX"},{"lineNumber":165,"author":{"gitId":"samleewy"},"content":"* The index refers to the index number shown in the displayed session list"},{"lineNumber":166,"author":{"gitId":"samleewy"},"content":"* The index must be a positive integer 1, 2, 3, …​"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":169,"author":{"gitId":"samleewy"},"content":"* `list session` followed by `delete 2` deletes the 2nd session in the TutorBuddy"},{"lineNumber":170,"author":{"gitId":"samleewy"},"content":"* `find session Betsy` followed by `delete 1` deletes the 1st session in the results of the find session command"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"samleewy"},"content":"### Exit the program: `exit`"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"samleewy"},"content":"Exits the program"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"Format: `exit`"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"},{"lineNumber":183,"author":{"gitId":"samleewy"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TutorBuddy home folder."},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"## Command summary"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"samleewy"},"content":"**Students**"},{"lineNumber":190,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":191,"author":{"gitId":"samleewy"},"content":"Action | Format, Examples"},{"lineNumber":192,"author":{"gitId":"samleewy"},"content":"--------|------------------"},{"lineNumber":193,"author":{"gitId":"samleewy"},"content":"**List** | `list student`"},{"lineNumber":194,"author":{"gitId":"samleewy"},"content":"**Find** | `find student KEYWORD`\u003cbr\u003e\u003cbr\u003ee.g. `find student John`"},{"lineNumber":195,"author":{"gitId":"samleewy"},"content":"**Add** | `add student n/NAME p/STUDENT_PHONE_NUMBER e/EMAIL a/ADDRESS m/PARENT_PHONE_NUMBER r/RELATIONSHIP_WITH_PARENT`\u003cbr\u003e\u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 a/99999999 r/Mother `"},{"lineNumber":196,"author":{"gitId":"samleewy"},"content":"**Delete** | `delete student INDEX`\u003cbr\u003e\u003cbr\u003ee.g. `delete student 3`"},{"lineNumber":197,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":198,"author":{"gitId":"samleewy"},"content":"**Tuition Session**"},{"lineNumber":199,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"Action | Format, Examples"},{"lineNumber":201,"author":{"gitId":"-"},"content":"--------|------------------"},{"lineNumber":202,"author":{"gitId":"samleewy"},"content":"**List** | `list session`"},{"lineNumber":203,"author":{"gitId":"samleewy"},"content":"**Find** | `find student KEYWORD`\u003cbr\u003e\u003cbr\u003ee.g. `find session John`"},{"lineNumber":204,"author":{"gitId":"samleewy"},"content":"**Add** | `add session n/STUDENT_NAME d/DATE t/TIME l/LENGTH_OF_SESSION s/SUBJECT f/FEE`\u003cbr\u003e\u003cbr\u003e e.g., `add session n/John Doe d/14-02-2021 t/1800 l/2 s/Biology f/40`"},{"lineNumber":205,"author":{"gitId":"samleewy"},"content":"**Delete** | `delete session INDEX`\u003cbr\u003e\u003cbr\u003ee.g. `delete session 3`"}],"authorContributionMap":{"samleewy":125,"-":80}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: AddressBook Level-3"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface)."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start)."},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start."},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"enhao25"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)."},{"lineNumber":20,"author":{"gitId":"enhao25"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."}],"authorContributionMap":{"enhao25":2,"-":18}},{"path":"docs/team/enhao25.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":2,"author":{"gitId":"enhao25"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"enhao25"},"content":"title: En Hao\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"enhao25"},"content":"---"},{"lineNumber":5,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":6,"author":{"gitId":"enhao25"},"content":"## Project: AddressBook Level 3"},{"lineNumber":7,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":8,"author":{"gitId":"enhao25"},"content":"TutorBuddy - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":9,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":10,"author":{"gitId":"enhao25"},"content":"Given below are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"enhao25"},"content":""},{"lineNumber":12,"author":{"gitId":"enhao25"},"content":"* **Code contributed**: [RepoSense link]()"}],"authorContributionMap":{"enhao25":12}},{"path":"docs/team/jonahhgohh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JonahhGohh"},"content":"---"},{"lineNumber":2,"author":{"gitId":"JonahhGohh"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"JonahhGohh"},"content":"title: Jun Wei\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"JonahhGohh"},"content":"---"},{"lineNumber":5,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":6,"author":{"gitId":"JonahhGohh"},"content":"## Project: AddressBook Level 3"},{"lineNumber":7,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":8,"author":{"gitId":"JonahhGohh"},"content":"TutorBuddy - An extension of AB3 used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":9,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":10,"author":{"gitId":"JonahhGohh"},"content":"Given below are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"JonahhGohh"},"content":""},{"lineNumber":12,"author":{"gitId":"JonahhGohh"},"content":"* **Code contributed**: [RepoSense link]()"}],"authorContributionMap":{"JonahhGohh":12}},{"path":"docs/team/nowknowing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nowknowing"},"content":"---"},{"lineNumber":2,"author":{"gitId":"nowknowing"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"nowknowing"},"content":"title: Shion\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"nowknowing"},"content":"---"},{"lineNumber":5,"author":{"gitId":"nowknowing"},"content":""},{"lineNumber":6,"author":{"gitId":"nowknowing"},"content":"## Project: AddressBook Level 3"},{"lineNumber":7,"author":{"gitId":"nowknowing"},"content":""},{"lineNumber":8,"author":{"gitId":"nowknowing"},"content":"TutorBuddy - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":9,"author":{"gitId":"nowknowing"},"content":""},{"lineNumber":10,"author":{"gitId":"nowknowing"},"content":"Given below are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"nowknowing"},"content":""},{"lineNumber":12,"author":{"gitId":"nowknowing"},"content":"* **Code contributed**: [RepoSense link]()"}],"authorContributionMap":{"nowknowing":12}},{"path":"docs/team/samleewy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samleewy"},"content":"---"},{"lineNumber":2,"author":{"gitId":"samleewy"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"samleewy"},"content":"title: Samuel\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"samleewy"},"content":"---"},{"lineNumber":5,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":6,"author":{"gitId":"samleewy"},"content":"## Project: AddressBook Level 3"},{"lineNumber":7,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":8,"author":{"gitId":"samleewy"},"content":"TutorBuddy - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":9,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":10,"author":{"gitId":"samleewy"},"content":"Given below are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":12,"author":{"gitId":"samleewy"},"content":"* **Code contributed**: [RepoSense link]()"},{"lineNumber":13,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":14,"author":{"gitId":"samleewy"},"content":"## Project: ShariotExplorer by sam"},{"lineNumber":15,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":16,"author":{"gitId":"samleewy"},"content":"Shariot provides A-A car-sharing services in Singapore."},{"lineNumber":17,"author":{"gitId":"samleewy"},"content":"Shariot Explorer is a personal project (with no affiliation with Shariot) that was developed to help Shariot users view all the vehicles available at a glance."},{"lineNumber":18,"author":{"gitId":"samleewy"},"content":"At time of writing, it is impossible for Shariot users to view all the vehicles being offered, therefore, this website provides a convenient way to view the cars available, and their location."},{"lineNumber":19,"author":{"gitId":"samleewy"},"content":"It also allows users to sort/filter the vehicles by their location region, and even find the nearest Shariot location near them!"},{"lineNumber":20,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":21,"author":{"gitId":"samleewy"},"content":"Shariot was launched on Christmas Eve (24 December 2020) and gained close to 800 views over the following two days. It is currently being maintained for further exciting features!"},{"lineNumber":22,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":23,"author":{"gitId":"samleewy"},"content":"[ShariotExplorer by sam](http://www.samleewy.com/shariot)"},{"lineNumber":24,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":25,"author":{"gitId":"samleewy"},"content":"## Project: NUS Carparks"},{"lineNumber":26,"author":{"gitId":"samleewy"},"content":"NUS Carparks was a project developed under NUS Orbital (CP2106) Programme."},{"lineNumber":27,"author":{"gitId":"samleewy"},"content":"As someone who drives to school occasionally, I found it difficult to locate carparks that were near my destination."},{"lineNumber":28,"author":{"gitId":"samleewy"},"content":"Therefore, I came up with the idea of NUS Carparks."},{"lineNumber":29,"author":{"gitId":"samleewy"},"content":"NUS Carparks allows you to find the nearest carpark to your building with just a simple search."},{"lineNumber":30,"author":{"gitId":"samleewy"},"content":"It also shows you useful analytics of the carpark, such as crowd levels, so you could plan your trip and find a parking lot!"},{"lineNumber":31,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":32,"author":{"gitId":"samleewy"},"content":"Together with Teck Heng, we developed it under the NUS Orbital Programme, which is a summer self-directed and independent work course."},{"lineNumber":33,"author":{"gitId":"samleewy"},"content":"I handled the Telegram Bot and Web Application while Teck Heng handled the analytics. Do feel free to give it a try!"},{"lineNumber":34,"author":{"gitId":"samleewy"},"content":""},{"lineNumber":35,"author":{"gitId":"samleewy"},"content":"[NUS Carparks](http://www.samleewy.com/nuscp)"}],"authorContributionMap":{"samleewy":35}},{"path":"docs/team/yungweezy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"---"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"title: Choon Wei\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"---"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"## Project: AddressBook Level 3"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"TutorBuddy - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"Given below are my contributions to the project."},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"* **Code contributed**: [RepoSense link]()"}],"authorContributionMap":{"yungweezy":12}}]
